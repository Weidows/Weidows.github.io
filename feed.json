{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/python/code/MM-Detection/",
            "url": "https://weidows.github.io/post/python/code/MM-Detection/",
            "title": "🐳MM-Detection-Colab",
            "date_published": "2022-06-07T09:06:50.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:11:24\n * @FilePath: \\Blog-private\\scaffolds\\post.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"序-3\">序</h2>\n<ul>\n<li>\n<p>Colab 平台对于 <code>轻量级/边缘计算</code> 比较方便, 尤其是对这种教程性质的 notebook, 分享和运行都开箱即用</p>\n</li>\n<li>\n<p>但另一方面:</p>\n<p><code>因</code>: 免费版的 Colab 所给的硬件资源不是很稳定, 用太久的话会分不到 GPU, 虽然给的 GPU 肯定是比自己的开发机强很多, 但是跑大型项目肯定带不动 (而且 Colab 单次运行最多持续 6h, 一段时间没动作的话会断连, 断开后再过一阵 runtime 会被重置)</p>\n</li>\n<li>\n<p><code>果</code>: 可以用它来学习下怎么搭环境以及一些小测试</p>\n<p>毕竟生产服务器申请不易 / 环境也不能乱动</p>\n<p>受系统和网络限制, 在开发机搭环境并不理想</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"装环境-2\">装环境</h2>\n<blockquote>\n<p>从安装到放弃到爬出坑 :( <br>\n跟着这几篇装的环境:<sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup><sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup>, 有借鉴意义但是指导不明确 <br>\n个人先跟着官方出的视频教程和 openbayes 上的 notebook 试了试水, 很深 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup>; 最后找到一个源库 tutorial-fork 的 colab-notebook <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup> \\</p>\n</blockquote>\n<p>预先装上 cuda, cudnn (colab自带)</p>\n<p>依赖链: <code>cuda -&gt; pytorch -&gt; mmcv-full -&gt; mmdet</code></p>\n<p>每一步依赖前面环境的版本, 即使后面能装上也可能不适配, 任何一步有问题都 can’t-run</p>\n<p><img src=\"https://www.helloimg.com/images/2022/06/06/ZtZpOm.png\" alt=\"\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ====================可选, colab并不自带conda=====================</span></span><br><span class=\"line\">!conda create -n openmmlab -y</span><br><span class=\"line\">!conda activate openmmlab</span><br><span class=\"line\">!conda init</span><br></pre></td></tr></table></figure>\n<pre><code>/bin/bash: conda: command not found\n/bin/bash: conda: command not found\n/bin/bash: conda: command not found\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ================== 一键装好环境 =======================</span></span><br><span class=\"line\"><span class=\"comment\"># 如果这里有问题可以重启一下内核: 代码执行程序 -&gt; 重新启动代码执行程序</span></span><br><span class=\"line\"></span><br><span class=\"line\">!python -m pip install --upgrade pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意对应机子配置: https://pytorch.org/</span></span><br><span class=\"line\"><span class=\"comment\"># install dependencies: (use cu111 because colab has CUDA 11.1)</span></span><br><span class=\"line\">%pip install torch==<span class=\"number\">1.9</span><span class=\"number\">.0</span>+cu111 torchvision==<span class=\"number\">0.10</span><span class=\"number\">.0</span>+cu111 -f https://download.pytorch.org/whl/torch_stable.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># windows 平台不用装了, 一定会卡在这</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/open-mmlab/mmcv/blob/master/README_zh-CN.md</span></span><br><span class=\"line\">%pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu111/torch1<span class=\"number\">.9</span><span class=\"number\">.0</span>/index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 与pip/conda同级的专门给mm-lab用的包管理器, 报错率很高</span></span><br><span class=\"line\">%pip install openmim</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 依赖 mmcv, 如果用mim装的话大概率有问题</span></span><br><span class=\"line\">%pip install mmsegmentation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后面要用到源码库的 config, 可选用源库安装</span></span><br><span class=\"line\">%pip install mmdet</span><br><span class=\"line\"><span class=\"comment\"># !rm -rf /content/mmdetection</span></span><br><span class=\"line\">!git clone https://github.com/<span class=\"built_in\">open</span>-mmlab/mmdetection.git</span><br><span class=\"line\">%cd mmdetection</span><br><span class=\"line\"><span class=\"comment\"># %pip install -e .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后续当前路径为 /content/mmdetection</span></span><br></pre></td></tr></table></figure>\n<pre><code>Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nRequirement already satisfied: pip in /usr/local/lib/python3.7/dist-packages (21.1.3)\nCollecting pip\n  Downloading pip-22.1.2-py3-none-any.whl (2.1 MB)\n\u001b[K     |████████████████████████████████| 2.1 MB 4.8 MB/s \n\u001b[?25hInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 21.1.3\n    Uninstalling pip-21.1.3:\n      Successfully uninstalled pip-21.1.3\nSuccessfully installed pip-22.1.2\nLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nLooking in links: https://download.pytorch.org/whl/torch_stable.html\nCollecting torch==1.9.0+cu111\n  Downloading https://download.pytorch.org/whl/cu111/torch-1.9.0%2Bcu111-cp37-cp37m-linux_x86_64.whl (2041.3 MB)\n\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m2.0/2.0 GB\u001b[0m \u001b[31m81.2 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0mtcmalloc: large alloc 2041348096 bytes == 0x2a2a000 @  0x7fdbaca001e7 0x4a3940 0x4a39cc 0x592b76 0x4df71e 0x59afff 0x515655 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x593dd7 0x511e2c 0x549576 0x593fce 0x548ae9 0x5127f1 0x549576 0x593fce 0x511e2c\n\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m2.0/2.0 GB\u001b[0m \u001b[31m88.6 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0mtcmalloc: large alloc 2551685120 bytes == 0x7c4f2000 @  0x7fdbaca01615 0x592b76 0x4df71e 0x59afff 0x515655 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x593dd7 0x511e2c 0x549576 0x593fce 0x548ae9 0x5127f1 0x549576 0x593fce 0x511e2c 0x549576 0x593fce\ntcmalloc: large alloc 2041348096 bytes == 0x2a2a000 @  0x7fdbaca001e7 0x4a3940 0x5b438c 0x5b46f7 0x59afff 0x515655 0x549576 0x593fce 0x511e2c 0x549576 0x593fce 0x511e2c 0x549576 0x4bcb19 0x59c019 0x595ef6 0x5fbece 0x594b72 0x548cc1 0x51566f 0x593dd7 0x548ae9 0x51566f 0x549576 0x593fce 0x548ae9 0x51566f 0x549576 0x593fce 0x548ae9 0x5127f1\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.0/2.0 GB\u001b[0m \u001b[31m858.4 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting torchvision==0.10.0+cu111\n  Downloading https://download.pytorch.org/whl/cu111/torchvision-0.10.0%2Bcu111-cp37-cp37m-linux_x86_64.whl (23.2 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m23.2/23.2 MB\u001b[0m \u001b[31m38.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch==1.9.0+cu111) (4.2.0)\nRequirement already satisfied: pillow&gt;=5.3.0 in /usr/local/lib/python3.7/dist-packages (from torchvision==0.10.0+cu111) (7.1.2)\nRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from torchvision==0.10.0+cu111) (1.21.6)\nInstalling collected packages: torch, torchvision\n  Attempting uninstall: torch\n    Found existing installation: torch 1.11.0+cu113\n    Uninstalling torch-1.11.0+cu113:\n      Successfully uninstalled torch-1.11.0+cu113\n  Attempting uninstall: torchvision\n    Found existing installation: torchvision 0.12.0+cu113\n    Uninstalling torchvision-0.12.0+cu113:\n      Successfully uninstalled torchvision-0.12.0+cu113\n\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\ntorchtext 0.12.0 requires torch==1.11.0, but you have torch 1.9.0+cu111 which is incompatible.\ntorchaudio 0.11.0+cu113 requires torch==1.11.0, but you have torch 1.9.0+cu111 which is incompatible.\u001b[0m\u001b[31m\n\u001b[0mSuccessfully installed torch-1.9.0+cu111 torchvision-0.10.0+cu111\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nLooking in links: https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html\nCollecting mmcv-full\n  Downloading https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/mmcv_full-1.5.2-cp37-cp37m-manylinux1_x86_64.whl (45.6 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.6/45.6 MB\u001b[0m \u001b[31m7.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting addict\n  Downloading addict-2.4.0-py3-none-any.whl (3.8 kB)\nRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from mmcv-full) (21.3)\nRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from mmcv-full) (1.21.6)\nCollecting yapf\n  Downloading yapf-0.32.0-py2.py3-none-any.whl (190 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m190.2/190.2 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from mmcv-full) (3.13)\nRequirement already satisfied: opencv-python&gt;=3 in /usr/local/lib/python3.7/dist-packages (from mmcv-full) (4.1.2.30)\nRequirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from mmcv-full) (7.1.2)\nRequirement already satisfied: pyparsing!=3.0.5,&gt;=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging-&gt;mmcv-full) (3.0.9)\nInstalling collected packages: yapf, addict, mmcv-full\nSuccessfully installed addict-2.4.0 mmcv-full-1.5.2 yapf-0.32.0\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting openmim\n  Downloading openmim-0.1.5.tar.gz (35 kB)\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\nRequirement already satisfied: Click==7.1.2 in /usr/local/lib/python3.7/dist-packages (from openmim) (7.1.2)\nCollecting colorama\n  Downloading colorama-0.4.4-py2.py3-none-any.whl (16 kB)\nRequirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from openmim) (2.23.0)\nCollecting model-index\n  Downloading model_index-0.1.11-py3-none-any.whl (34 kB)\nRequirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from openmim) (1.3.5)\nRequirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from openmim) (0.8.9)\nRequirement already satisfied: markdown in /usr/local/lib/python3.7/dist-packages (from model-index-&gt;openmim) (3.3.7)\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from model-index-&gt;openmim) (3.13)\nCollecting ordered-set\n  Downloading ordered_set-4.1.0-py3-none-any.whl (7.6 kB)\nRequirement already satisfied: python-dateutil&gt;=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas-&gt;openmim) (2.8.2)\nRequirement already satisfied: numpy&gt;=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas-&gt;openmim) (1.21.6)\nRequirement already satisfied: pytz&gt;=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas-&gt;openmim) (2022.1)\nRequirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests-&gt;openmim) (2022.5.18.1)\nRequirement already satisfied: idna&lt;3,&gt;=2.5 in /usr/local/lib/python3.7/dist-packages (from requests-&gt;openmim) (2.10)\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests-&gt;openmim) (1.24.3)\nRequirement already satisfied: chardet&lt;4,&gt;=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests-&gt;openmim) (3.0.4)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil&gt;=2.7.3-&gt;pandas-&gt;openmim) (1.15.0)\nRequirement already satisfied: importlib-metadata&gt;=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown-&gt;model-index-&gt;openmim) (4.11.4)\nRequirement already satisfied: typing-extensions&gt;=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata&gt;=4.4-&gt;markdown-&gt;model-index-&gt;openmim) (4.2.0)\nRequirement already satisfied: zipp&gt;=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata&gt;=4.4-&gt;markdown-&gt;model-index-&gt;openmim) (3.8.0)\nBuilding wheels for collected packages: openmim\n  Building wheel for openmim (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Created wheel for openmim: filename=openmim-0.1.5-py2.py3-none-any.whl size=42503 sha256=a20baa555947a826ad1fb5c6b5c7282eb538ed92cf4e3dfec2f7eb3044005554\n  Stored in directory: /root/.cache/pip/wheels/16/8b/e1/bdebbbc687aa50224a5ce46fe97a040a0c59f92b34bfc750b6\nSuccessfully built openmim\nInstalling collected packages: ordered-set, colorama, model-index, openmim\nSuccessfully installed colorama-0.4.4 model-index-0.1.11 openmim-0.1.5 ordered-set-4.1.0\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting mmsegmentation\n  Downloading mmsegmentation-0.25.0-py3-none-any.whl (804 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m805.0/805.0 kB\u001b[0m \u001b[31m14.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: prettytable in /usr/local/lib/python3.7/dist-packages (from mmsegmentation) (3.3.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from mmsegmentation) (21.3)\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from mmsegmentation) (3.2.2)\nRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from mmsegmentation) (1.21.6)\nCollecting mmcls&gt;=0.20.1\n  Downloading mmcls-0.23.1-py2.py3-none-any.whl (577 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m577.3/577.3 kB\u001b[0m \u001b[31m53.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmsegmentation) (1.4.2)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmsegmentation) (0.11.0)\nRequirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmsegmentation) (3.0.9)\nRequirement already satisfied: python-dateutil&gt;=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmsegmentation) (2.8.2)\nRequirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prettytable-&gt;mmsegmentation) (0.2.5)\nRequirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from prettytable-&gt;mmsegmentation) (4.11.4)\nRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver&gt;=1.0.1-&gt;matplotlib-&gt;mmsegmentation) (4.2.0)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil&gt;=2.1-&gt;matplotlib-&gt;mmsegmentation) (1.15.0)\nRequirement already satisfied: zipp&gt;=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata-&gt;prettytable-&gt;mmsegmentation) (3.8.0)\nInstalling collected packages: mmcls, mmsegmentation\nSuccessfully installed mmcls-0.23.1 mmsegmentation-0.25.0\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n\u001b[0mLooking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\nCollecting mmdet\n  Downloading mmdet-2.25.0-py3-none-any.whl (1.4 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.4/1.4 MB\u001b[0m \u001b[31m21.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from mmdet) (3.2.2)\nRequirement already satisfied: pycocotools in /usr/local/lib/python3.7/dist-packages (from mmdet) (2.0.4)\nRequirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from mmdet) (1.15.0)\nCollecting terminaltables\n  Downloading terminaltables-3.1.10-py2.py3-none-any.whl (15 kB)\nRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from mmdet) (1.21.6)\nRequirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmdet) (3.0.9)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmdet) (1.4.2)\nRequirement already satisfied: python-dateutil&gt;=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmdet) (2.8.2)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib-&gt;mmdet) (0.11.0)\nRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver&gt;=1.0.1-&gt;matplotlib-&gt;mmdet) (4.2.0)\nInstalling collected packages: terminaltables, mmdet\nSuccessfully installed mmdet-2.25.0 terminaltables-3.1.10\n\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n\u001b[0mCloning into 'mmdetection'...\nremote: Enumerating objects: 24927, done.\u001b[K\nremote: Counting objects: 100% (11/11), done.\u001b[K\nremote: Compressing objects: 100% (10/10), done.\u001b[K\nremote: Total 24927 (delta 2), reused 8 (delta 1), pack-reused 24916\u001b[K\nReceiving objects: 100% (24927/24927), 37.75 MiB | 31.35 MiB/s, done.\nResolving deltas: 100% (17469/17469), done.\n/content/mmdetection\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 验证安装</span></span><br><span class=\"line\">!nvcc -V</span><br><span class=\"line\">!pip <span class=\"built_in\">list</span> | grep mm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> mmcv <span class=\"keyword\">import</span> collect_env</span><br><span class=\"line\">collect_env()</span><br></pre></td></tr></table></figure>\n<pre><code>nvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2020 NVIDIA Corporation\nBuilt on Mon_Oct_12_20:09:46_PDT_2020\nCuda compilation tools, release 11.1, V11.1.105\nBuild cuda_11.1.TC455_06.29190527_0\ncommunity                     1.0.0b1\ngoogleapis-common-protos      1.56.2\nmmcls                         0.23.1\nmmcv-full                     1.5.2\nmmdet                         2.25.0\nmmsegmentation                0.25.0\npyviz-comms                   2.2.0\nsnowballstemmer               2.2.0\ntorchsummary                  1.5.1\n\n\n\n\n\n&#123;'CUDA available': True,\n 'CUDA_HOME': '/usr/local/cuda',\n 'GCC': 'x86_64-linux-gnu-gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0',\n 'GPU 0': 'Tesla T4',\n 'MMCV': '1.5.2',\n 'MMCV CUDA Compiler': '11.1',\n 'MMCV Compiler': 'GCC 7.3',\n 'NVCC': 'Cuda compilation tools, release 11.1, V11.1.105',\n 'OpenCV': '4.1.2',\n 'PyTorch': '1.9.0+cu111',\n 'PyTorch compiling details': 'PyTorch built with:\\n  - GCC 7.3\\n  - C++ Version: 201402\\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\\n  - NNPACK is enabled\\n  - CPU capability usage: AVX2\\n  - CUDA Runtime 11.1\\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\\n  - CuDNN 8.0.5\\n  - Magma 2.5.2\\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \\n',\n 'Python': '3.7.13 (default, Apr 24 2022, 01:04:09) [GCC 7.5.0]',\n 'TorchVision': '0.10.0+cu111',\n 'sys.platform': 'linux'&#125;\n</code></pre>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"测试-5\">测试</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mim 也可以用来search/download,不过 doc 在捉迷藏..不知道怎么用</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/open-mmlab/mmdetection/tree/master/configs/mask_rcnn</span></span><br><span class=\"line\"><span class=\"comment\"># 跟教程一样的命令...失效了?</span></span><br><span class=\"line\"><span class=\"comment\"># !mim search mmdet --model &#x27;mask r-cnn&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># !mim download mmdet --config mask_rcnn_r50_fpn_2x_coco --dest ./_model</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载并分别测试下面两个 pre-trained model-checkpoints</span></span><br><span class=\"line\">!mkdir checkpoints</span><br><span class=\"line\">!wget -c https://download.openmmlab.com/mmdetection/v2<span class=\"number\">.0</span>/mask_rcnn/mask_rcnn_r50_fpn_2x_coco/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-<span class=\"number\">0.392</span>__segm_mAP-<span class=\"number\">0.354_20200505_003907</span>-3e542a40.pth \\</span><br><span class=\"line\">      -O checkpoints/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-<span class=\"number\">0.392</span>__segm_mAP-<span class=\"number\">0.354_20200505_003907</span>-3e542a40.pth</span><br><span class=\"line\">!wget -c https://download.openmmlab.com/mmdetection/v2<span class=\"number\">.0</span>/faster_rcnn/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth \\</span><br><span class=\"line\">      -O checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>--2022-06-07 15:03:24--  https://download.openmmlab.com/mmdetection/v2.0/mask_rcnn/mask_rcnn_r50_fpn_2x_coco/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth\nResolving download.openmmlab.com (download.openmmlab.com)... 47.252.96.28\nConnecting to download.openmmlab.com (download.openmmlab.com)|47.252.96.28|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 177866862 (170M) [application/octet-stream]\nSaving to: ‘checkpoints/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth’\n\ncheckpoints/mask_rc 100%[===================&gt;] 169.63M  8.23MB/s    in 22s     \n\n2022-06-07 15:03:47 (7.65 MB/s) - ‘checkpoints/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth’ saved [177866862/177866862]\n\n--2022-06-07 15:03:48--  https://download.openmmlab.com/mmdetection/v2.0/faster_rcnn/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth\nResolving download.openmmlab.com (download.openmmlab.com)... 47.252.96.28\nConnecting to download.openmmlab.com (download.openmmlab.com)|47.252.96.28|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 167291982 (160M) [application/octet-stream]\nSaving to: ‘checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth’\n\ncheckpoints/faster_ 100%[===================&gt;] 159.54M  9.11MB/s    in 18s     \n\n2022-06-07 15:04:06 (9.04 MB/s) - ‘checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth’ saved [167291982/167291982]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> mmdet.apis <span class=\"keyword\">import</span> init_detector, inference_detector, show_result_pyplot</span><br><span class=\"line\"></span><br><span class=\"line\">config = <span class=\"string\">&#x27;configs/mask_rcnn/mask_rcnn_r50_fpn_2x_coco.py&#x27;</span></span><br><span class=\"line\">checkpoint = <span class=\"string\">&#x27;checkpoints/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 CPU 上需要设置 device=&#x27;cpu&#x27; ; GPU 上设置 device=&#x27;cuda:0&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 使用 mmdetection 源库自带的 demo/demo.jpg</span></span><br><span class=\"line\">model = init_detector(config, checkpoint, device=<span class=\"string\">&#x27;cuda:0&#x27;</span>) </span><br><span class=\"line\">result = inference_detector(model, <span class=\"string\">&#x27;demo/demo.jpg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">show_result_pyplot(model, <span class=\"string\">&#x27;demo/demo.jpg&#x27;</span>, result)</span><br></pre></td></tr></table></figure>\n<pre><code>load checkpoint from local path: checkpoints/mask_rcnn_r50_fpn_2x_coco_bbox_mAP-0.392__segm_mAP-0.354_20200505_003907-3e542a40.pth\n\n\n/content/mmdetection/mmdet/datasets/utils.py:70: UserWarning: &quot;ImageToTensor&quot; pipeline is replaced by &quot;DefaultFormatBundle&quot; for batch inference. It is recommended to manually replace it in the test data pipeline in your config file.\n  'data pipeline in your config file.', UserWarning)\n/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)\n  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)\n</code></pre>\n<p><img src=\"MM-Detection_files/MM-Detection_7_2.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> mmcv</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmcv.runner <span class=\"keyword\">import</span> load_checkpoint</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.apis <span class=\"keyword\">import</span> inference_detector, show_result_pyplot</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.models <span class=\"keyword\">import</span> build_detector</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Choose to use a config and initialize the detector</span></span><br><span class=\"line\">config = <span class=\"string\">&#x27;configs/faster_rcnn/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco.py&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># Setup a checkpoint file to load</span></span><br><span class=\"line\">checkpoint = <span class=\"string\">&#x27;checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the device to be used for evaluation</span></span><br><span class=\"line\">device=<span class=\"string\">&#x27;cuda:0&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Load the config</span></span><br><span class=\"line\">config = mmcv.Config.fromfile(config)</span><br><span class=\"line\"><span class=\"comment\"># Set pretrained to be None since we do not need pretrained model here</span></span><br><span class=\"line\">config.model.pretrained = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Initialize the detector</span></span><br><span class=\"line\">model = build_detector(config.model)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Load checkpoint</span></span><br><span class=\"line\">checkpoint = load_checkpoint(model, checkpoint, map_location=device)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set the classes of models for inference</span></span><br><span class=\"line\">model.CLASSES = checkpoint[<span class=\"string\">&#x27;meta&#x27;</span>][<span class=\"string\">&#x27;CLASSES&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># We need to set the model&#x27;s cfg for inference</span></span><br><span class=\"line\">model.cfg = config</span><br><span class=\"line\"><span class=\"comment\"># Convert the model to GPU</span></span><br><span class=\"line\">model.to(device)</span><br><span class=\"line\"><span class=\"comment\"># Convert the model into evaluation mode</span></span><br><span class=\"line\">model.<span class=\"built_in\">eval</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Use the detector to do inference</span></span><br><span class=\"line\">img = <span class=\"string\">&#x27;demo/demo.jpg&#x27;</span></span><br><span class=\"line\">result = inference_detector(model, img)</span><br><span class=\"line\"><span class=\"comment\"># Let&#x27;s plot the result</span></span><br><span class=\"line\">show_result_pyplot(model, img, result, score_thr=<span class=\"number\">0.3</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>load checkpoint from local path: checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth\n\n\n/content/mmdetection/mmdet/datasets/utils.py:70: UserWarning: &quot;ImageToTensor&quot; pipeline is replaced by &quot;DefaultFormatBundle&quot; for batch inference. It is recommended to manually replace it in the test data pipeline in your config file.\n  'data pipeline in your config file.', UserWarning)\n/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /pytorch/c10/core/TensorImpl.h:1156.)\n  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)\n</code></pre>\n<p><img src=\"MM-Detection_files/MM-Detection_8_2.png\" alt=\"png\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Custom-training\">Custom-training</h2>\n<ol>\n<li>\n<p>选择+下载预训练模型和数据集</p>\n<p>参数解释: <code>mask_rcnn_r50_fpn_2x_coco</code></p>\n<p>mask_rcnn 中不同的 backbone (主干网络)</p>\n<p>r50: 50层ResNet</p>\n<p>fpn: 特征金字塔</p>\n<p>2x: learning rate schedule</p>\n</li>\n<li>\n<p>定义数据集类 + config</p>\n</li>\n<li>\n<p>调用 API 训练 + 评估</p>\n</li>\n<li>\n<p>用训练好的模型推理测试</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pre-trained model 在上面下载好了, 这里只下载数据集</span></span><br><span class=\"line\">!wget https://download.openmmlab.com/mmdetection/data/kitti_tiny.<span class=\"built_in\">zip</span></span><br><span class=\"line\">!unzip kitti_tiny.<span class=\"built_in\">zip</span> &gt; /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Let&#x27;s take a look at the dataset image</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> mmcv</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = mmcv.imread(<span class=\"string\">&#x27;kitti_tiny/training/image_2/000073.jpeg&#x27;</span>)</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">plt.imshow(mmcv.bgr2rgb(img))</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>--2022-06-07 15:40:35--  https://download.openmmlab.com/mmdetection/data/kitti_tiny.zip\nResolving download.openmmlab.com (download.openmmlab.com)... 47.252.96.28\nConnecting to download.openmmlab.com (download.openmmlab.com)|47.252.96.28|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 6918271 (6.6M) [application/zip]\nSaving to: ‘kitti_tiny.zip’\n\nkitti_tiny.zip      100%[===================&gt;]   6.60M  8.72MB/s    in 0.8s    \n\n2022-06-07 15:40:37 (8.72 MB/s) - ‘kitti_tiny.zip’ saved [6918271/6918271]\n</code></pre>\n<p><img src=\"MM-Detection_files/MM-Detection_10_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自定义数据集格式 &#x27;KittiTinyDataset&#x27; 并注册到 mmdet</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> copy</span><br><span class=\"line\"><span class=\"keyword\">import</span> os.path <span class=\"keyword\">as</span> osp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> mmcv</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.datasets.builder <span class=\"keyword\">import</span> DATASETS</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.datasets.custom <span class=\"keyword\">import</span> CustomDataset</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@DATASETS.register_module()</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">KittiTinyDataset</span>(<span class=\"title class_ inherited__\">CustomDataset</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    CLASSES = (<span class=\"string\">&#x27;Car&#x27;</span>, <span class=\"string\">&#x27;Pedestrian&#x27;</span>, <span class=\"string\">&#x27;Cyclist&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">load_annotations</span>(<span class=\"params\">self, ann_file</span>):</span><br><span class=\"line\">        cat2label = &#123;k: i <span class=\"keyword\">for</span> i, k <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(self.CLASSES)&#125;</span><br><span class=\"line\">        <span class=\"comment\"># load image list from file</span></span><br><span class=\"line\">        image_list = mmcv.list_from_file(self.ann_file)</span><br><span class=\"line\">    </span><br><span class=\"line\">        data_infos = []</span><br><span class=\"line\">        <span class=\"comment\"># convert annotations to middle format</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> image_id <span class=\"keyword\">in</span> image_list:</span><br><span class=\"line\">            filename = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;self.img_prefix&#125;</span>/<span class=\"subst\">&#123;image_id&#125;</span>.jpeg&#x27;</span></span><br><span class=\"line\">            image = mmcv.imread(filename)</span><br><span class=\"line\">            height, width = image.shape[:<span class=\"number\">2</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">            data_info = <span class=\"built_in\">dict</span>(filename=<span class=\"string\">f&#x27;<span class=\"subst\">&#123;image_id&#125;</span>.jpeg&#x27;</span>, width=width, height=height)</span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\"># load annotations</span></span><br><span class=\"line\">            label_prefix = self.img_prefix.replace(<span class=\"string\">&#x27;image_2&#x27;</span>, <span class=\"string\">&#x27;label_2&#x27;</span>)</span><br><span class=\"line\">            lines = mmcv.list_from_file(osp.join(label_prefix, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;image_id&#125;</span>.txt&#x27;</span>))</span><br><span class=\"line\">    </span><br><span class=\"line\">            content = [line.strip().split(<span class=\"string\">&#x27; &#x27;</span>) <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> lines]</span><br><span class=\"line\">            bbox_names = [x[<span class=\"number\">0</span>] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> content]</span><br><span class=\"line\">            bboxes = [[<span class=\"built_in\">float</span>(info) <span class=\"keyword\">for</span> info <span class=\"keyword\">in</span> x[<span class=\"number\">4</span>:<span class=\"number\">8</span>]] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> content]</span><br><span class=\"line\">    </span><br><span class=\"line\">            gt_bboxes = []</span><br><span class=\"line\">            gt_labels = []</span><br><span class=\"line\">            gt_bboxes_ignore = []</span><br><span class=\"line\">            gt_labels_ignore = []</span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\"># filter &#x27;DontCare&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> bbox_name, bbox <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(bbox_names, bboxes):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> bbox_name <span class=\"keyword\">in</span> cat2label:</span><br><span class=\"line\">                    gt_labels.append(cat2label[bbox_name])</span><br><span class=\"line\">                    gt_bboxes.append(bbox)</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    gt_labels_ignore.append(-<span class=\"number\">1</span>)</span><br><span class=\"line\">                    gt_bboxes_ignore.append(bbox)</span><br><span class=\"line\"></span><br><span class=\"line\">            data_anno = <span class=\"built_in\">dict</span>(</span><br><span class=\"line\">                bboxes=np.array(gt_bboxes, dtype=np.float32).reshape(-<span class=\"number\">1</span>, <span class=\"number\">4</span>),</span><br><span class=\"line\">                labels=np.array(gt_labels, dtype=np.long),</span><br><span class=\"line\">                bboxes_ignore=np.array(gt_bboxes_ignore,</span><br><span class=\"line\">                                       dtype=np.float32).reshape(-<span class=\"number\">1</span>, <span class=\"number\">4</span>),</span><br><span class=\"line\">                labels_ignore=np.array(gt_labels_ignore, dtype=np.long))</span><br><span class=\"line\"></span><br><span class=\"line\">            data_info.update(ann=data_anno)</span><br><span class=\"line\">            data_infos.append(data_info)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> data_infos</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mmdet 配置</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> mmcv <span class=\"keyword\">import</span> Config</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.apis <span class=\"keyword\">import</span> set_random_seed</span><br><span class=\"line\"></span><br><span class=\"line\">cfg = Config.fromfile(<span class=\"string\">&#x27;configs/faster_rcnn/faster_rcnn_r50_caffe_fpn_mstrain_1x_coco.py&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># If we need to finetune a model based on a pre-trained detector, we need to use load_from to set the path of checkpoints.</span></span><br><span class=\"line\">cfg.load_from = <span class=\"string\">&#x27;checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Modify dataset type and path</span></span><br><span class=\"line\">cfg.dataset_type = <span class=\"string\">&#x27;KittiTinyDataset&#x27;</span></span><br><span class=\"line\">cfg.data_root = <span class=\"string\">&#x27;kitti_tiny/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cfg.data.test.<span class=\"built_in\">type</span> = <span class=\"string\">&#x27;KittiTinyDataset&#x27;</span></span><br><span class=\"line\">cfg.data.test.data_root = <span class=\"string\">&#x27;kitti_tiny/&#x27;</span></span><br><span class=\"line\">cfg.data.test.ann_file = <span class=\"string\">&#x27;train.txt&#x27;</span></span><br><span class=\"line\">cfg.data.test.img_prefix = <span class=\"string\">&#x27;training/image_2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cfg.data.train.<span class=\"built_in\">type</span> = <span class=\"string\">&#x27;KittiTinyDataset&#x27;</span></span><br><span class=\"line\">cfg.data.train.data_root = <span class=\"string\">&#x27;kitti_tiny/&#x27;</span></span><br><span class=\"line\">cfg.data.train.ann_file = <span class=\"string\">&#x27;train.txt&#x27;</span></span><br><span class=\"line\">cfg.data.train.img_prefix = <span class=\"string\">&#x27;training/image_2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cfg.data.val.<span class=\"built_in\">type</span> = <span class=\"string\">&#x27;KittiTinyDataset&#x27;</span></span><br><span class=\"line\">cfg.data.val.data_root = <span class=\"string\">&#x27;kitti_tiny/&#x27;</span></span><br><span class=\"line\">cfg.data.val.ann_file = <span class=\"string\">&#x27;val.txt&#x27;</span></span><br><span class=\"line\">cfg.data.val.img_prefix = <span class=\"string\">&#x27;training/image_2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># modify num classes of the model in box head</span></span><br><span class=\"line\">cfg.model.roi_head.bbox_head.num_classes = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set up working dir to save files and logs.</span></span><br><span class=\"line\">cfg.work_dir = <span class=\"string\">&#x27;./tutorial_exps&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The original learning rate (LR) is set for 8-GPU training.</span></span><br><span class=\"line\"><span class=\"comment\"># We divide it by 8 since we only use one GPU.</span></span><br><span class=\"line\">cfg.optimizer.lr = <span class=\"number\">0.02</span> / <span class=\"number\">8</span></span><br><span class=\"line\">cfg.lr_config.warmup = <span class=\"literal\">None</span></span><br><span class=\"line\">cfg.log_config.interval = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Change the evaluation metric since we use customized dataset.</span></span><br><span class=\"line\">cfg.evaluation.metric = <span class=\"string\">&#x27;mAP&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># We can set the evaluation interval to reduce the evaluation times</span></span><br><span class=\"line\">cfg.evaluation.interval = <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"comment\"># We can set the checkpoint saving interval to reduce the storage cost</span></span><br><span class=\"line\">cfg.checkpoint_config.interval = <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set seed thus the results are more reproducible</span></span><br><span class=\"line\">cfg.seed = <span class=\"number\">0</span></span><br><span class=\"line\">set_random_seed(<span class=\"number\">0</span>, deterministic=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cfg.device=<span class=\"string\">&#x27;cuda&#x27;</span></span><br><span class=\"line\">cfg.gpu_ids = <span class=\"built_in\">range</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can also use tensorboard to log the training process</span></span><br><span class=\"line\">cfg.log_config.hooks = [</span><br><span class=\"line\">    <span class=\"built_in\">dict</span>(<span class=\"built_in\">type</span>=<span class=\"string\">&#x27;TextLoggerHook&#x27;</span>),</span><br><span class=\"line\">    <span class=\"built_in\">dict</span>(<span class=\"built_in\">type</span>=<span class=\"string\">&#x27;TensorboardLoggerHook&#x27;</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># We can initialize the logger for training and have a look at the final config used for training</span></span><br><span class=\"line\"><span class=\"comment\"># print(f&#x27;Config:\\n&#123;cfg.pretty_text&#125;&#x27;)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Train a new detector</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.datasets <span class=\"keyword\">import</span> build_dataset</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.models <span class=\"keyword\">import</span> build_detector</span><br><span class=\"line\"><span class=\"keyword\">from</span> mmdet.apis <span class=\"keyword\">import</span> train_detector</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Build dataset</span></span><br><span class=\"line\">datasets = [build_dataset(cfg.data.train)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Build the detector</span></span><br><span class=\"line\">model = build_detector(cfg.model)</span><br><span class=\"line\"><span class=\"comment\">#  build_detector( cfg.model, train_cfg=cfg.get(&#x27;train_cfg&#x27;), test_cfg=cfg.get(&#x27;test_cfg&#x27;))</span></span><br><span class=\"line\"><span class=\"comment\"># Add an attribute for visualization convenience</span></span><br><span class=\"line\">model.CLASSES = datasets[<span class=\"number\">0</span>].CLASSES</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create work_dir</span></span><br><span class=\"line\">mmcv.mkdir_or_exist(osp.abspath(cfg.work_dir))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 报错:AttributeError: &#x27;ConfigDict&#x27; object has no attribute &#x27;device&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/open-mmlab/mmdetection/issues/7901</span></span><br><span class=\"line\"><span class=\"comment\"># 在上面 cfg 添加了 cfg.device=&#x27;cuda&#x27;</span></span><br><span class=\"line\">train_detector(model, datasets, cfg, distributed=<span class=\"literal\">False</span>, validate=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:54: DeprecationWarning: `np.long` is a deprecated alias for `np.compat.long`. To silence this warning, use `np.compat.long` by itself. In the likely event your code does not need to work on Python 2 you can use the builtin `int` for which `np.compat.long` is itself an alias. Doing this will not modify any behaviour and is safe. When replacing `np.long`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nDeprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:57: DeprecationWarning: `np.long` is a deprecated alias for `np.compat.long`. To silence this warning, use `np.compat.long` by itself. In the likely event your code does not need to work on Python 2 you can use the builtin `int` for which `np.compat.long` is itself an alias. Doing this will not modify any behaviour and is safe. When replacing `np.long`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\nDeprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n/content/mmdetection/mmdet/datasets/custom.py:180: UserWarning: CustomDataset does not support filtering empty gt images.\n  'CustomDataset does not support filtering empty gt images.')\n2022-06-07 16:41:00,736 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.\n2022-06-07 16:41:00,899 - mmdet - INFO - load checkpoint from local path: checkpoints/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_20210526_095054-1f77628b.pth\n2022-06-07 16:41:01,026 - mmdet - WARNING - The model and loaded state dict do not match exactly\n\nsize mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([4, 1024]).\nsize mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([4]).\nsize mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([12, 1024]).\nsize mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([12]).\n2022-06-07 16:41:01,035 - mmdet - INFO - Start running, host: root@7a73f7b358c4, work_dir: /content/mmdetection/tutorial_exps\n2022-06-07 16:41:01,037 - mmdet - INFO - Hooks will be executed in the following order:\nbefore_run:\n(VERY_HIGH   ) StepLrUpdaterHook                  \n(NORMAL      ) CheckpointHook                     \n(LOW         ) EvalHook                           \n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nbefore_train_epoch:\n(VERY_HIGH   ) StepLrUpdaterHook                  \n(NORMAL      ) NumClassCheckHook                  \n(LOW         ) IterTimerHook                      \n(LOW         ) EvalHook                           \n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nbefore_train_iter:\n(VERY_HIGH   ) StepLrUpdaterHook                  \n(LOW         ) IterTimerHook                      \n(LOW         ) EvalHook                           \n -------------------- \nafter_train_iter:\n(ABOVE_NORMAL) OptimizerHook                      \n(NORMAL      ) CheckpointHook                     \n(LOW         ) IterTimerHook                      \n(LOW         ) EvalHook                           \n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nafter_train_epoch:\n(NORMAL      ) CheckpointHook                     \n(LOW         ) EvalHook                           \n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nbefore_val_epoch:\n(NORMAL      ) NumClassCheckHook                  \n(LOW         ) IterTimerHook                      \n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nbefore_val_iter:\n(LOW         ) IterTimerHook                      \n -------------------- \nafter_val_iter:\n(LOW         ) IterTimerHook                      \n -------------------- \nafter_val_epoch:\n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \nafter_run:\n(VERY_LOW    ) TextLoggerHook                     \n(VERY_LOW    ) TensorboardLoggerHook              \n -------------------- \n2022-06-07 16:41:01,038 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs\n2022-06-07 16:41:01,040 - mmdet - INFO - Checkpoints will be saved to /content/mmdetection/tutorial_exps by HardDiskBackend.\n2022-06-07 16:41:17,697 - mmdet - INFO - Epoch [1][10/25]\tlr: 2.500e-03, eta: 0:04:25, time: 0.914, data_time: 0.236, memory: 2790, loss_rpn_cls: 0.0267, loss_rpn_bbox: 0.0173, loss_cls: 0.5377, acc: 81.6211, loss_bbox: 0.3947, loss: 0.9764\n2022-06-07 16:41:21,039 - mmdet - INFO - Epoch [1][20/25]\tlr: 2.500e-03, eta: 0:02:54, time: 0.334, data_time: 0.023, memory: 2790, loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0119, loss_cls: 0.1753, acc: 93.4570, loss_bbox: 0.3254, loss: 0.5275\n2022-06-07 16:41:28,575 - mmdet - INFO - Epoch [2][10/25]\tlr: 2.500e-03, eta: 0:02:16, time: 0.558, data_time: 0.232, memory: 2790, loss_rpn_cls: 0.0167, loss_rpn_bbox: 0.0138, loss_cls: 0.1519, acc: 94.7656, loss_bbox: 0.2673, loss: 0.4497\n2022-06-07 16:41:31,944 - mmdet - INFO - Epoch [2][20/25]\tlr: 2.500e-03, eta: 0:02:01, time: 0.337, data_time: 0.023, memory: 2790, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0127, loss_cls: 0.1325, acc: 94.9316, loss_bbox: 0.2084, loss: 0.3664\n2022-06-07 16:41:39,445 - mmdet - INFO - Epoch [3][10/25]\tlr: 2.500e-03, eta: 0:01:48, time: 0.569, data_time: 0.236, memory: 2790, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0102, loss_cls: 0.0972, acc: 96.2500, loss_bbox: 0.1600, loss: 0.2733\n2022-06-07 16:41:42,958 - mmdet - INFO - Epoch [3][20/25]\tlr: 2.500e-03, eta: 0:01:40, time: 0.349, data_time: 0.024, memory: 2790, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0133, loss_cls: 0.1474, acc: 94.4336, loss_bbox: 0.2652, loss: 0.4346\n2022-06-07 16:41:50,449 - mmdet - INFO - Epoch [4][10/25]\tlr: 2.500e-03, eta: 0:01:31, time: 0.562, data_time: 0.231, memory: 2790, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0134, loss_cls: 0.1168, acc: 95.5566, loss_bbox: 0.2201, loss: 0.3567\n2022-06-07 16:41:53,973 - mmdet - INFO - Epoch [4][20/25]\tlr: 2.500e-03, eta: 0:01:25, time: 0.353, data_time: 0.027, memory: 2790, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0117, loss_cls: 0.1179, acc: 95.5566, loss_bbox: 0.2133, loss: 0.3464\n2022-06-07 16:42:01,892 - mmdet - INFO - Epoch [5][10/25]\tlr: 2.500e-03, eta: 0:01:18, time: 0.595, data_time: 0.237, memory: 2790, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0092, loss_cls: 0.1003, acc: 96.2695, loss_bbox: 0.2087, loss: 0.3223\n2022-06-07 16:42:05,430 - mmdet - INFO - Epoch [5][20/25]\tlr: 2.500e-03, eta: 0:01:13, time: 0.352, data_time: 0.024, memory: 2790, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0107, loss_cls: 0.0903, acc: 96.7090, loss_bbox: 0.1845, loss: 0.2892\n2022-06-07 16:42:12,992 - mmdet - INFO - Epoch [6][10/25]\tlr: 2.500e-03, eta: 0:01:07, time: 0.567, data_time: 0.232, memory: 2790, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0082, loss_cls: 0.0786, acc: 97.1777, loss_bbox: 0.1799, loss: 0.2685\n2022-06-07 16:42:16,595 - mmdet - INFO - Epoch [6][20/25]\tlr: 2.500e-03, eta: 0:01:02, time: 0.363, data_time: 0.027, memory: 2790, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0100, loss_cls: 0.0891, acc: 96.5332, loss_bbox: 0.1856, loss: 0.2876\n2022-06-07 16:42:24,486 - mmdet - INFO - Epoch [7][10/25]\tlr: 2.500e-03, eta: 0:00:56, time: 0.591, data_time: 0.238, memory: 2790, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0096, loss_cls: 0.0904, acc: 96.6113, loss_bbox: 0.1740, loss: 0.2783\n2022-06-07 16:42:28,147 - mmdet - INFO - Epoch [7][20/25]\tlr: 2.500e-03, eta: 0:00:52, time: 0.364, data_time: 0.023, memory: 2790, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0116, loss_cls: 0.0926, acc: 96.1816, loss_bbox: 0.1774, loss: 0.2835\n2022-06-07 16:42:35,802 - mmdet - INFO - Epoch [8][10/25]\tlr: 2.500e-03, eta: 0:00:45, time: 0.572, data_time: 0.232, memory: 2790, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0091, loss_cls: 0.0777, acc: 96.8262, loss_bbox: 0.1420, loss: 0.2314\n2022-06-07 16:42:39,346 - mmdet - INFO - Epoch [8][20/25]\tlr: 2.500e-03, eta: 0:00:41, time: 0.354, data_time: 0.025, memory: 2790, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0082, loss_cls: 0.0777, acc: 97.2168, loss_bbox: 0.1590, loss: 0.2485\n2022-06-07 16:42:46,922 - mmdet - INFO - Epoch [9][10/25]\tlr: 2.500e-04, eta: 0:00:35, time: 0.565, data_time: 0.232, memory: 2790, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0082, loss_cls: 0.0658, acc: 97.4902, loss_bbox: 0.1351, loss: 0.2116\n2022-06-07 16:42:50,443 - mmdet - INFO - Epoch [9][20/25]\tlr: 2.500e-04, eta: 0:00:31, time: 0.352, data_time: 0.024, memory: 2790, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0066, loss_cls: 0.0571, acc: 97.8418, loss_bbox: 0.1133, loss: 0.1783\n2022-06-07 16:42:58,001 - mmdet - INFO - Epoch [10][10/25]\tlr: 2.500e-04, eta: 0:00:25, time: 0.567, data_time: 0.233, memory: 2790, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0081, loss_cls: 0.0678, acc: 97.3926, loss_bbox: 0.1332, loss: 0.2125\n2022-06-07 16:43:01,493 - mmdet - INFO - Epoch [10][20/25]\tlr: 2.500e-04, eta: 0:00:21, time: 0.350, data_time: 0.023, memory: 2790, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0059, loss_cls: 0.0594, acc: 97.6758, loss_bbox: 0.1294, loss: 0.1955\n2022-06-07 16:43:09,042 - mmdet - INFO - Epoch [11][10/25]\tlr: 2.500e-04, eta: 0:00:15, time: 0.567, data_time: 0.234, memory: 2790, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0069, loss_cls: 0.0638, acc: 97.6270, loss_bbox: 0.1217, loss: 0.1932\n2022-06-07 16:43:12,554 - mmdet - INFO - Epoch [11][20/25]\tlr: 2.500e-04, eta: 0:00:11, time: 0.351, data_time: 0.023, memory: 2790, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0073, loss_cls: 0.0571, acc: 97.8711, loss_bbox: 0.1212, loss: 0.1869\n2022-06-07 16:43:20,107 - mmdet - INFO - Epoch [12][10/25]\tlr: 2.500e-05, eta: 0:00:05, time: 0.567, data_time: 0.232, memory: 2790, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0061, loss_cls: 0.0563, acc: 97.9199, loss_bbox: 0.1246, loss: 0.1887\n2022-06-07 16:43:23,598 - mmdet - INFO - Epoch [12][20/25]\tlr: 2.500e-05, eta: 0:00:01, time: 0.349, data_time: 0.024, memory: 2790, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0048, loss_cls: 0.0511, acc: 97.9297, loss_bbox: 0.0946, loss: 0.1520\n2022-06-07 16:43:25,323 - mmdet - INFO - Saving checkpoint at 12 epochs\n\n\n[&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;] 25/25, 9.8 task/s, elapsed: 3s, ETA:     0s\n---------------iou_thr: 0.5---------------\n\n\n2022-06-07 16:43:30,260 - mmdet - INFO - \n+------------+-----+------+--------+-------+\n| class      | gts | dets | recall | ap    |\n+------------+-----+------+--------+-------+\n| Car        | 62  | 133  | 0.984  | 0.888 |\n| Pedestrian | 13  | 40   | 0.846  | 0.768 |\n| Cyclist    | 7   | 50   | 0.571  | 0.114 |\n+------------+-----+------+--------+-------+\n| mAP        |     |      |        | 0.590 |\n+------------+-----+------+--------+-------+\n2022-06-07 16:43:30,268 - mmdet - INFO - Epoch(val) [12][25]\tAP50: 0.5900, mAP: 0.5899\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># load tensorboard in colab</span></span><br><span class=\"line\">%load_ext tensorboard</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># see curves in tensorboard</span></span><br><span class=\"line\">%tensorboard --logdir ./tutorial_exps</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;IPython.core.display.Javascript object&gt;\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img = mmcv.imread(<span class=\"string\">&#x27;kitti_tiny/training/image_2/000068.jpeg&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model.cfg = cfg</span><br><span class=\"line\">result = inference_detector(model, img)</span><br><span class=\"line\">show_result_pyplot(model, img, result)</span><br></pre></td></tr></table></figure>\n<p><img src=\"MM-Detection_files/MM-Detection_15_0.png\" alt=\"png\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-37\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://openbayes.com/console/wrh/containers/t93t3LTXlgU\">https://openbayes.com/console/wrh/containers/t93t3LTXlgU</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://zhuanlan.zhihu.com/p/163645165\">MMDetection 2.3 安装教程</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html#mmdetection\">https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html#mmdetection</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://colab.research.google.com/github/ZwwWayne/mmdetection/blob/update-colab/demo/MMDet_Tutorial.ipynb#scrollTo=8M5KUnX7Np3h\">https://colab.research.google.com/github/ZwwWayne/mmdetection/blob/update-colab/demo/MMDet_Tutorial.ipynb#scrollTo=8M5KUnX7Np3h</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "深度学习",
                "colab",
                "mmdetection"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/%E6%9D%82/",
            "url": "https://weidows.github.io/post/python/%E6%9D%82/",
            "title": "😑python-mess-code",
            "date_published": "2022-04-22T08:22:34.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:11:24\n * @FilePath: \\Blog-private\\scaffolds\\post.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"basic\">basic</h2>\n<h3 id=\"static-method\">static-method</h3>\n<p>python 中并没有像是 Java 里的 static 关键字,取代的是 <code>@classmethod</code> 和 <code>@staticmethod</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;A&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 至少有一个隐式形参 (本类 cls 对象), 可以访问类属性</span></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">a</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(cls.name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 无形参, 也就是说拿不到类属性</span></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">b</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A.a()</span><br><span class=\"line\">A.b()</span><br></pre></td></tr></table></figure>\n<pre><code>A\nb\n</code></pre>\n<h3 id=\"multi-condition\">multi-condition</h3>\n<p>if(a||b)当 a 为真时，还会对 b 求值吗?</p>\n<blockquote>\n<p>不会</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">name, t</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;calculating: &quot;</span>, name, <span class=\"string\">&quot;seconds needs: &quot;</span>, t)</span><br><span class=\"line\">    time.sleep(t)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (calculate(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">2</span>) <span class=\"keyword\">or</span> calculate(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">2</span>)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Done&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>calculating:  A seconds needs:  2\nDone\n</code></pre>\n<h2 id=\"modules\">modules</h2>\n<h3 id=\"base64\">base64</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">username = <span class=\"string\">&#x27;Weidows&#x27;</span></span><br><span class=\"line\">password = <span class=\"string\">&#x27;123456&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">encode = base64.b64encode((username + <span class=\"string\">&quot;:&quot;</span> + password).encode())</span><br><span class=\"line\"><span class=\"comment\"># Basic V2VpZG93czoxMjM0NTY==</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;Authorization&quot;</span>: <span class=\"string\">&quot;Basic &quot;</span> + encode.decode()&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(headers)</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;'Authorization': 'Basic V2VpZG93czoxMjM0NTY='&#125;\n</code></pre>\n<h3 id=\"多线程-进程\">多线程-进程</h3>\n<blockquote>\n<p>Python 多线程不能利用 CPU 多核优势，IO 密集型可用多线程，CPU 密集型适合用多进程 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n</blockquote>\n<p>也就是说只有 IO 密集型任务适用多线程,其他情况: <code>多进程 &gt; 不用 &gt; 多线程</code>, API 区别如下:<sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/02/R9zQZh.png\" alt=\"R9zQZh.png\"></p>\n<p>虽然但是,很多情况下涉及到资源共享, 多进程处理起来比较麻烦,还是多线程舒服.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> concurrent.futures <span class=\"keyword\">import</span> ThreadPoolExecutor</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> multiprocessing</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">multi_num = multiprocessing.cpu_count() * <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">counter</span>(<span class=\"params\">num</span>):</span><br><span class=\"line\">    time.sleep(num)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(threading.currentThread().name, num, end=<span class=\"string\">&#x27;\\t&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor(max_workers=multi_num) <span class=\"keyword\">as</span> thread_pool:</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        thread_pool.<span class=\"built_in\">map</span>(counter, <span class=\"built_in\">range</span>(<span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 等待任务执行完再跳回 main</span></span><br><span class=\"line\">        thread_pool.shutdown(wait=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;多线程: &quot;</span>, time.time() - start)</span><br></pre></td></tr></table></figure>\n<pre><code>ThreadPoolExecutor-0_0 0\tThreadPoolExecutor-0_1 1\tThreadPoolExecutor-0_0 2\tThreadPoolExecutor-0_2 3\tThreadPoolExecutor-0_3 4\tThreadPoolExecutor-0_4 5\tThreadPoolExecutor-0_5 6\tThreadPoolExecutor-0_6 7\tThreadPoolExecutor-0_7 8\tThreadPoolExecutor-0_8 9\t多线程:  9.009207010269165\n</code></pre>\n<h2 id=\"opengl\">opengl</h2>\n<h3 id=\"彩色三角形\">彩色三角形</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># quidam_01.py 三维空间的世界坐标系和三角形</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>():</span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glBegin(GL_LINES)  <span class=\"comment\"># 开始绘制线段（世界坐标系）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以红色绘制x轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为红色不透明</span></span><br><span class=\"line\">    glVertex3f(-<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置x轴顶点（x轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置x轴顶点（x轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以绿色绘制y轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为绿色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置y轴顶点（y轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置y轴顶点（y轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以蓝色绘制z轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为蓝色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, -<span class=\"number\">0.8</span>)  <span class=\"comment\"># 设置z轴顶点（z轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.8</span>)  <span class=\"comment\"># 设置z轴顶点（z轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glEnd()  <span class=\"comment\"># 结束绘制线段</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glBegin(GL_TRIANGLES)  <span class=\"comment\"># 开始绘制三角形（z轴负半区）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glColor4f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为红色不透明</span></span><br><span class=\"line\">    glVertex3f(-<span class=\"number\">0.5</span>, -<span class=\"number\">0.366</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为绿色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.5</span>, -<span class=\"number\">0.366</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为蓝色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.5</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glEnd()  <span class=\"comment\"># 结束绘制三角形</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glFlush()  <span class=\"comment\"># 清空缓冲区，将指令送往硬件立即执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    glutInit()  <span class=\"comment\"># 1. 初始化glut库</span></span><br><span class=\"line\">    glutCreateWindow(<span class=\"string\">&#x27;Quidam Of OpenGL&#x27;</span>)  <span class=\"comment\"># 2. 创建glut窗口</span></span><br><span class=\"line\">    glutDisplayFunc(draw)  <span class=\"comment\"># 3. 注册回调函数draw()</span></span><br><span class=\"line\">    glutMainLoop()  <span class=\"comment\"># 4. 进入glut主循环</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"点线抛物线\">点线抛物线</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init</span>():</span><br><span class=\"line\">    glClearColor(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)</span><br><span class=\"line\">    gluOrtho2D(-<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">plotfunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glColor3f(<span class=\"number\">1.0</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.6</span>)</span><br><span class=\"line\">    glPointSize(<span class=\"number\">3.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    glBegin(GL_POINTS)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> arange(-<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">0.1</span>):  <span class=\"comment\">#from -5.0 to 5.0 plus 0.1 every time</span></span><br><span class=\"line\">        y = x * x</span><br><span class=\"line\">        glVertex2f(x, y)</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    glutInit(sys.argv)</span><br><span class=\"line\">    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)</span><br><span class=\"line\">    glutInitWindowPosition(<span class=\"number\">50</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">    glutCreateWindow(<span class=\"string\">&quot;Function Plotter&quot;</span>)</span><br><span class=\"line\">    glutDisplayFunc(plotfunc)</span><br><span class=\"line\"></span><br><span class=\"line\">    init()</span><br><span class=\"line\">    glutMainLoop()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"转动时钟\">转动时钟</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">h = <span class=\"number\">0</span></span><br><span class=\"line\">m = <span class=\"number\">0</span></span><br><span class=\"line\">s = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Draw</span>():</span><br><span class=\"line\">    PI = <span class=\"number\">3.1415926</span></span><br><span class=\"line\">    R = <span class=\"number\">0.5</span></span><br><span class=\"line\">    TR = R - <span class=\"number\">0.05</span></span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">5</span>)</span><br><span class=\"line\">    glBegin(GL_LINE_LOOP)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glVertex2f(R * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i),</span><br><span class=\"line\">                   R * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glBegin(GL_LINES)</span><br><span class=\"line\">        glVertex2f(TR * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i),</span><br><span class=\"line\">                   TR * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i))</span><br><span class=\"line\">        glVertex2f(R * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i),</span><br><span class=\"line\">                   R * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i))</span><br><span class=\"line\">        glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    h_Length = <span class=\"number\">0.2</span></span><br><span class=\"line\">    m_Length = <span class=\"number\">0.3</span></span><br><span class=\"line\">    s_Length = <span class=\"number\">0.4</span></span><br><span class=\"line\">    count = <span class=\"number\">60.0</span></span><br><span class=\"line\">    s_Angle = s / count</span><br><span class=\"line\">    count *= <span class=\"number\">60</span></span><br><span class=\"line\">    m_Angle = (m * <span class=\"number\">60</span> + s) / count</span><br><span class=\"line\">    count *= <span class=\"number\">12</span></span><br><span class=\"line\">    h_Angle = (h * <span class=\"number\">60</span> * <span class=\"number\">60</span> + m * <span class=\"number\">60</span> + s) / count</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(s_Length * math.sin(<span class=\"number\">2</span> * PI * s_Angle),</span><br><span class=\"line\">               s_Length * math.cos(<span class=\"number\">2</span> * PI * s_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">5</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(h_Length * math.sin(<span class=\"number\">2</span> * PI * h_Angle),</span><br><span class=\"line\">               h_Length * math.cos(<span class=\"number\">2</span> * PI * h_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">3</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(m_Length * math.sin(<span class=\"number\">2</span> * PI * m_Angle),</span><br><span class=\"line\">               m_Length * math.cos(<span class=\"number\">2</span> * PI * m_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\">    glBegin(GL_POLYGON)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">0.03</span> * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i),</span><br><span class=\"line\">                   <span class=\"number\">0.03</span> * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Update</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> h, m, s</span><br><span class=\"line\">    t = time.localtime(time.time())</span><br><span class=\"line\">    h = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%H&#x27;</span>, t))</span><br><span class=\"line\">    m = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%M&#x27;</span>, t))</span><br><span class=\"line\">    s = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%S&#x27;</span>, t))</span><br><span class=\"line\">    glutPostRedisplay()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">&quot;My clock&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(Draw)</span><br><span class=\"line\">glutIdleFunc(Update)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hello-World-pyglet\">Hello-World-pyglet</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pyglet</span><br><span class=\"line\"></span><br><span class=\"line\">window = pyglet.window.Window()</span><br><span class=\"line\"></span><br><span class=\"line\">label = pyglet.text.Label(<span class=\"string\">&#x27;Hello, world&#x27;</span>,</span><br><span class=\"line\">                          font_name=<span class=\"string\">&#x27;Times New Roman&#x27;</span>,</span><br><span class=\"line\">                          font_size=<span class=\"number\">36</span>,</span><br><span class=\"line\">                          x=window.width // <span class=\"number\">2</span>,</span><br><span class=\"line\">                          y=window.height // <span class=\"number\">2</span>,</span><br><span class=\"line\">                          anchor_x=<span class=\"string\">&#x27;center&#x27;</span>,</span><br><span class=\"line\">                          anchor_y=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@window.event</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">on_draw</span>():</span><br><span class=\"line\">    window.clear()</span><br><span class=\"line\">    label.draw()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pyglet.app.run()</span><br></pre></td></tr></table></figure>\n<h3 id=\"茶壶\">茶壶</h3>\n<h4 id=\"动态\">动态</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    <span class=\"comment\">#清楚之前画面</span></span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glRotatef(<span class=\"number\">0.1</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>)  <span class=\"comment\">#(角度,x,y,z)</span></span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"comment\">#刷新显示</span></span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用glut初始化OpenGL</span></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\"><span class=\"comment\">#显示模式:GLUT_SINGLE无缓冲直接显示|GLUT_RGBA采用RGB(A非alpha)</span></span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\"><span class=\"comment\">#窗口位置及大小-生成</span></span><br><span class=\"line\">glutInitWindowPosition(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;first&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#调用函数绘制图像</span></span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutIdleFunc(drawFunc)</span><br><span class=\"line\"><span class=\"comment\">#主循环</span></span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h4 id=\"静态\">静态</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    <span class=\"comment\"># 设置为红色</span></span><br><span class=\"line\">    glColor3f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数为b类型而不是string</span></span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;Teapot&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据分析\">数据分析</h2>\n<h3 id=\"numpy\">numpy</h3>\n<h4 id=\"newaxis\">newaxis</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">A = np.array([[<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(A)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;A.shape: &quot;</span>, A.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># new 一个一维数组,然后把 A 整个怼进去</span></span><br><span class=\"line\">B = A[np.newaxis, :]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(B)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;B.shape: &quot;</span>, B.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">C = A[:, np.newaxis]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(C)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;C.shape: &quot;</span>, C.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把每个第二维第四位的元素怼进一个新数组,把原第二位替换为此新数组</span></span><br><span class=\"line\">D = A[:, np.newaxis, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(D)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;D.shape: &quot;</span>, D.shape)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[2 0 2 1]\n [2 0 2 2]]\nA.shape:  (2, 4)\n[[[2 0 2 1]\n  [2 0 2 2]]]\nB.shape:  (1, 2, 4)\n[[[2 0 2 1]]\n\n [[2 0 2 2]]]\nC.shape:  (2, 1, 4)\n[[1]\n [2]]\nD.shape:  (2, 1)\n</code></pre>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-11\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://stackoverflow.com/questions/29241056/how-does-numpy-newaxis-work-and-when-to-use-it\">How does numpy.newaxis work and when to use it?</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://blog.csdn.net/gzmgzm_ming/article/details/81783450\">Python threadpool与multiprocessing</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.bilibili.com/video/BV1yp4y1679u\">Python并发实战，怎样使用多进程multiprocessing加速程序运行</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "python",
                "opengl",
                "多线程",
                "人工智能"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/code/DL/",
            "url": "https://weidows.github.io/post/python/code/DL/",
            "title": "👩‍❤️‍💋‍👨Code-4-Deep-Learning",
            "date_published": "2022-04-20T16:26:11.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:11:24\n * @FilePath: \\Blog-private\\scaffolds\\post.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"序\">序</h2>\n<p>此文为其他文章的代码部分:</p>\n<blockquote>\n<p><a href=\"../../AI/DL\">⚡再啃-Deep-Learning</a></p>\n</blockquote>\n<p>也提供了 notebook 形式: <a href=\"https://github.com/Weidows-projects/public-post/blob/main/notebook/DL/DL.ipynb\">代码地址</a></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"神经网络\">神经网络</h2>\n<h3 id=\"感知器\">感知器</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">AND</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.7</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2</span><br><span class=\"line\">    <span class=\"keyword\">if</span> tmp &lt;= theta:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">OR</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.2</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2</span><br><span class=\"line\">    <span class=\"keyword\">if</span> tmp &lt;= theta:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 非门只取一个输入,另一个不管</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">NOT</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2 + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 异或门是非线性运算, 需要多层感知器组合</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">XOR</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 异或门 = (与非门 与 或门)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> AND(OR(x1, x2), <span class=\"keyword\">not</span> AND(x1, x2))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(AND(<span class=\"number\">0</span>, <span class=\"number\">1</span>), AND(<span class=\"number\">1</span>, <span class=\"number\">1</span>), OR(<span class=\"number\">0</span>, <span class=\"number\">1</span>), OR(<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(NOT(<span class=\"number\">0</span>, <span class=\"number\">1</span>), NOT(<span class=\"number\">1</span>, <span class=\"number\">1</span>), NOT(<span class=\"number\">0</span>, <span class=\"number\">0</span>), NOT(<span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(XOR(<span class=\"number\">0</span>, <span class=\"number\">1</span>), XOR(<span class=\"number\">1</span>, <span class=\"number\">1</span>), XOR(<span class=\"number\">0</span>, <span class=\"number\">0</span>), XOR(<span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>0 1 1 0\n1 0 1 0\n1 0 0 1\n</code></pre>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-35\">借物表</h2>\n<p>暂无…</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "python",
                "人工智能",
                "深度学习"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/AI/DL/",
            "url": "https://weidows.github.io/post/python/AI/DL/",
            "title": "⚡再啃-Deep-Learning",
            "date_published": "2022-04-20T16:07:12.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-06-14 21:06:14\n * @FilePath: \\Blog-private\\source\\_posts\\python\\AI\\DL.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>再啃-Deep-Learning\n<ul>\n<li>深度学习\n<ul>\n<li>一个好的表示学习策略必须具备一定的深度</li>\n<li>特征\n<ul>\n<li>像是宰鱼要分多步,每步使用不同方式/工具</li>\n<li>通常从底层特征开始经过多步非线性转换才能得到好的高层语义表示</li>\n</ul>\n</li>\n<li>特点\n<ul>\n<li>增加特征重用性,指数级增加表示能力</li>\n</ul>\n</li>\n<li><a href=\"https://www.helloimg.com/images/2022/03/10/RCdJ0c.png\">表示学习与深度学习关系</a></li>\n<li>关键问题: 贡献度分配\n<ul>\n<li>不同组件/参数对系统输出结果的影响权重</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>神经网路\n<ul>\n<li>人工神经网络\n<ul>\n<li>由大量神经元及它们之间的有向连接构成</li>\n<li>三方面\n<ul>\n<li>神经元/感知器</li>\n<li>网络的拓扑结构\n<ul>\n<li>LeNet</li>\n<li>AlexNet</li>\n<li>VGGNet</li>\n<li>ResNet</li>\n</ul>\n</li>\n<li>学习算法</li>\n</ul>\n</li>\n<li><a href=\"https://www.helloimg.com/images/2022/03/19/Rat37q.png\">分类</a>\n<ul>\n<li>单类网络\n<ul>\n<li>前馈网络</li>\n<li>记忆网络</li>\n<li>图网络</li>\n</ul>\n</li>\n<li>复合型网络</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>贡献度分配问题\n<ul>\n<li>不同 component 或 param 对最终系统输出结果的贡献</li>\n<li>利用偏导数求解贡献度</li>\n</ul>\n</li>\n<li>发展史\n<ul>\n<li>模型提出</li>\n<li>冰河期</li>\n<li>反向传播算法引起的复兴</li>\n<li>流行度降低</li>\n<li>深度学习崛起</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>MMDetection\n<ul>\n<li>图像分类\n<ul>\n<li>模型发展\n<ul>\n<li>LeNet-5 (1998)</li>\n<li>AlexNet (2012)</li>\n<li>VGGNet (2014)</li>\n<li>GoogleNet (2014)</li>\n<li>ResNet (2015)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>模型训练\n<ul>\n<li>配置文件\n<ul>\n<li>模型结构\n<ul>\n<li>模型有几层</li>\n<li>每层多少通道数</li>\n</ul>\n</li>\n<li>数据集\n<ul>\n<li>数据集划分\n<ul>\n<li>常用的有 COCO 格式, <code>annotation/test.json -&gt; test/images</code></li>\n</ul>\n</li>\n<li>数据文件路径</li>\n<li>数据增强策略</li>\n</ul>\n</li>\n<li>训练策略\n<ul>\n<li>梯度下降算法</li>\n<li>学习率参数</li>\n<li>batch_size</li>\n<li>训练总轮次</li>\n<li>学习率变化策略</li>\n</ul>\n</li>\n<li>runtime / 运行时\n<ul>\n<li>GPU</li>\n<li>分布式环境配置</li>\n</ul>\n</li>\n<li>一些辅助功能\n<ul>\n<li>打印日志</li>\n<li>checkpoint / 定时保存</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>MMDetection3D</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>由于 DL 是 ML 的子问题, 所以此篇着重写 <a href=\"../ML\">🥵 硬啃-Machine-Learning</a> 里面涉及甚少的 (解耦) <br>\n有一些 (比如损失函数, 梯度下降) 隶属于 ML &gt; DL ,所以堆在了 ML 里面</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>本篇所用到的代码在这: <br>\n<a href=\"../../code/DL\">👩‍❤️‍💋‍👨Code-4-Deep-Learning</a> <br>\n<a href=\"../../code/MM-Detection\">🐳MM-Detection-Colab</a></li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"ML-2-DL\">ML-2-DL</h2>\n<ul>\n<li>\n<p>简单解释 DL 到底在做什么?</p>\n<p>传统 ML 就像是在教小学生如何通过一系列<code>固定公式</code>搞出来一个结果,在公式不太复杂/运算量不太大时, 教起来还好</p>\n<p>那怎么教一个小学生高数题呢? 也是可以让他死记硬背公式的,但是效果并不好</p>\n<p>DL 就像是在教他转换思想 (函数,导数,积分…), 遇到题目后,具体套什么公式, 由小学生自己找到</p>\n</li>\n</ul>\n<p>DL 不像 ML 一样泛泛, 对每种任务有针对性的设计</p>\n<hr>\n<div class=\"tabs\" id=\"优点\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#优点-1\">优点</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#优点-2\">缺点</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"优点-1\"><p>就像上面提到的, 传统 ML 需要人教给机器特征工程 (固定公式), 模型越复杂, 人的提取方法和特征结果会越差</p>\n<p>DL 对特征的处理方法/结果要优于人类 (比如深层次人类无法察觉的特征关系)</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"优点-2\"><p>DL 模型的能力是 (人类传授的基本功 + 题海战术) 得来的;</p>\n<ol>\n<li>刷题少时反不如套公式</li>\n<li>基本功构建成本高</li>\n<li>可解释性差 (虽然基本功是你教的,但你不知道机器是用的什么歪门邪道的心法)</li>\n</ol><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"神经网路\">神经网路</h2>\n<p>大多知名的模型都是属于 <code>深度神经网络</code> 的, 比如 CNN, RNN, GAN …</p>\n<h3 id=\"神经元-感知器\">神经元-感知器</h3>\n<ul>\n<li>\n<p>感知器就是一个神经元, 神经网络的组成单元, 可自学习为回归/分类器</p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/10/RC0tEP.png\" alt=\"\"></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mn>1</mn><mo>⋅</mo><mi>x</mi><mn>1</mn><mo>+</mo><mi>w</mi><mn>2</mn><mo>⋅</mo><mi>x</mi><mn>2</mn><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = f(w1 \\cdot x1 + w2 \\cdot x2 + b)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>当调整 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 时,可以得到不同的变体逻辑运算(比如与或非);</p>\n<p>给定训练数据集, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 可以通过学习自动调整</p>\n<hr>\n</li>\n<li>\n<p>学习规则核心思想: <code>错误驱动</code></p>\n<ol>\n<li>权值初始化</li>\n<li>输入样本对</li>\n<li>计算输出</li>\n<li>根据感知器学习规则调整权值</li>\n<li>返回到步骤 2. 输入下一对样本,周而复始直到对所有样本,感知器的实际输出与期望输出相等</li>\n</ol>\n<hr>\n</li>\n<li>\n<details>\n  <summary> 例题 </summary>\n<hr>\n<p><img src=\"https://www.helloimg.com/images/2022/03/19/Raxa9S.png\" alt=\"\"></p>\n<ol>\n<li>初始化向量</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup><mo>⇒</mo><msup><mi>W</mi><mi>T</mi></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">W(0) = (0.5,1,-1,0)^T \\rArr W^T(0) = (0.5,1,-1,0)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ol start=\"2\">\n<li>输入样本</li>\n<li>计算输出</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>W</mi><mi>T</mi></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><msup><mi>X</mi><mn>1</mn></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup><mo>=</mo><mn>2.5</mn></mrow><annotation encoding=\"application/x-tex\">W^T(0)X^1 = (0.5,1,-1,0) \\cdot (-1,1,-2,0)^T = 2.5\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1413em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2.5</span></span></span></span></span></p>\n<ol start=\"4\">\n<li>调整权值,这里使用上面<a href=\"#%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0\">#激活函数</a>的阶跃函数例子</li>\n</ol>\n<p>权向量第一个分量也就是 0.5 为阈值</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><msup><mi>o</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">(</mo><msup><mi>W</mi><mi>T</mi></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><msup><mi>X</mi><mn>1</mn></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2.5</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>η</mi><mrow><mo fence=\"true\">[</mo><msup><mi>d</mi><mn>1</mn></msup><mo>−</mo><msup><mi>o</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><msup><mi>X</mi><mn>1</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup><mo>+</mo><mn>0.1</mn><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mrow><mn mathvariant=\"bold\">0.7</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0.8</mn><mo separator=\"true\">,</mo><mo>−</mo><mn mathvariant=\"bold\">0.6</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0</mn><msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"bold\">T</mi></msup></mrow></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>η</mi><mrow><mo fence=\"true\">[</mo><msup><mi>d</mi><mn>2</mn></msup><mo>−</mo><msup><mi>o</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><msup><mi>X</mi><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.7</mn><mo separator=\"true\">,</mo><mn>0.8</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>0.6</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup><mo>+</mo><mn>0.1</mn><mo stretchy=\"false\">[</mo><mo>−</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1.5</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>0.5</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mrow><mn mathvariant=\"bold\">0.7</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0.8</mn><mo separator=\"true\">,</mo><mo>−</mo><mn mathvariant=\"bold\">0.6</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0</mn><msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"bold\">T</mi></msup></mrow></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>W</mi><mo stretchy=\"false\">(</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>W</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>η</mi><mrow><mo fence=\"true\">[</mo><msup><mi>d</mi><mn>3</mn></msup><mo>−</mo><msup><mi>o</mi><mn>3</mn></msup><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><msup><mi>X</mi><mn>3</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>0.7</mn><mo separator=\"true\">,</mo><mn>0.8</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>0.6</mn><mo separator=\"true\">,</mo><mn>0</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup><mo>+</mo><mn>0.1</mn><mo stretchy=\"false\">[</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>0.5</mn><msup><mo stretchy=\"false\">)</mo><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence=\"true\">(</mo><mrow><mn mathvariant=\"bold\">0.5</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0.6</mn><mo separator=\"true\">,</mo><mo>−</mo><mn mathvariant=\"bold\">0.4</mn><mo separator=\"true\">,</mo><mn mathvariant=\"bold\">0.1</mn><msup><mo stretchy=\"false\">)</mo><mi mathvariant=\"bold\">T</mi></msup></mrow></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  o^1(0) &amp;= sgn(W^T(0)X^1) \\\\\n  &amp;= sgn(2.5) = 1\n\n    \\\\ \\ \\\\\n\n    W(1) &amp;=W(0) + \\eta \\left[d^{1}-o^{1}(0)\\right] X^{1} \\\\\n  &amp;= (0.5,1,-1,0)^{T} + 0.1 (- 1- 1)(-1,1,-2,0)^{T} \\\\\n  &amp;= \\left(\\mathbf{0.7,0.8,-0.6,0)^{T}}\\right.\n\n    \\\\ \\ \\\\\n\n    W(2) &amp;=W(1) + \\eta \\left[d^{2}-o^{2}(1)\\right] X^{2} \\\\\n  &amp;= (0.7,0.8,-0.6,0)^{T} + 0.1 [- 1-(- 1)](-1,0,1.5,-0.5)^{T} \\\\\n  &amp;= \\left(\\mathbf{0.7,0.8,-0.6,0)^{T}}\\right.\n\n    \\\\ \\ \\\\\n\n    W(3) &amp;=W(2) + \\eta \\left[d^{3}-o^{3}(2)\\right] X^{3} \\\\\n  &amp;= (0.7,0.8,-0.6,0)^{T} + 0.1 [1-(- 1)](-1,-1,1,0.5)^{T} \\\\\n  &amp;= \\left(\\mathbf{0.5,0.6,-0.4,0.1)^{T}}\\right.\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:21.4375em;vertical-align:-10.4687em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.9687em;\"><span style=\"top:-13.0774em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span><span style=\"top:-11.5774em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-10.0774em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-8.5533em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-7.002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.4487em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.9487em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-2.4246em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.8733em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.68em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:2.18em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:3.7041em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span><span style=\"top:5.2555em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:6.8087em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.4687em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.9687em;\"><span style=\"top:-13.0774em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-11.5774em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\">2.5</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-8.5533em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-7.002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.1</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-5.4487em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathbf\">0.7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0.8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord mathbf\">0.6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8933em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">T</span></span></span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.4246em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-0.8733em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0.8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">0.6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.1</span><span class=\"mopen\">[</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)]</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">0.5</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:0.68em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathbf\">0.7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0.8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord mathbf\">0.6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8933em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">T</span></span></span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:3.7041em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:5.2555em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0.7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0.8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">0.6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.1</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)]</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0.5</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:6.8087em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathbf\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0.6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">−</span><span class=\"mord mathbf\">0.4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbf\">0.1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8933em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbf mtight\">T</span></span></span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.4687em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ol start=\"5\">\n<li>返回 2. 直到</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>d</mi><mi>P</mi></msup><mo>−</mo><msup><mi>o</mi><mi>P</mi></msup><mo>=</mo><mn>0</mn><mspace width=\"2em\"/><mo stretchy=\"false\">(</mo><mi>p</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d^{P} - o^{P} = 0 \\qquad (p = 1,2,3)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9747em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8913em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span></span></p>\n</details>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"前馈神经网络\">前馈神经网络</h3>\n<p>把若干个感知器叠几层, 形成单向类网状结构, 称为多层前馈神经网络 (Multi-layer Feedforward Neural Networks), <code>前馈</code> 是指前一层输出作为后一层输入</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/06/R0fC7h.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>每个箭头直线代表一个 “向量”:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msubsup><mi>w</mi><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><mi>k</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">w ^{k}  _{a \\ b}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1461em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mspace mtight\"><span class=\"mtight\"> </span></span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>k: 权重</p>\n<p>a: 前一层第 a 个神经元</p>\n<p>b: 后一层第 b 个神经元</p>\n<hr>\n</li>\n<li>\n<p>同一层感知器之间不相连, 与前后两层全相连, 为<code>全连接神经网络</code> (fully-connected neural network)</p>\n<p>这种网络有硬性缺点:</p>\n<ol>\n<li>丢失数据的空间信息 (比如 3d 图像会展开为向量)</li>\n<li>参数量太多,难训</li>\n<li>层级浅, 大量参数易过拟合</li>\n</ol>\n<p>后面 CNN 对此缺点做了优化</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"反向传播\">反向传播</h3>\n<ul>\n<li>\n<p>反向传播/误差反向传播 (Backpropagation algorithm), 根据输出层输出值来反向调整隐藏层权重的一种方法</p>\n<ul>\n<li>\n<p>我们常用 <code>梯度下降方法</code> 来更新权重, 梯度下降应用于有明确求导/可求出误差的情况</p>\n</li>\n<li>\n<p>但是对于含有多个隐藏层的神经网络, 隐藏层求不出误差, 只有输出层有</p>\n</li>\n<li>\n<p>反向传播就是一个把输出层误差反向传播到隐藏层的过程</p>\n</li>\n</ul>\n</li>\n<li>\n<p>图解 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/07/RNeqlm.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/07/RNexIh.png\" alt=\"\"></p>\n<p>实现原理就是求偏导</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/08/RNeWuu.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"卷积神经网络-CNN\">卷积神经网络-CNN</h3>\n<p>卷积神经网络(Convolutional Neural Network，CNN), 视觉领域难以撼动的老大</p>\n<h4 id=\"what\">what</h4>\n<p>对于一个 .mp3 的音乐 (频域记录, .wav 是时域记录), 某一时间点的音波可以<code>假定认为</code>是多个函数交杂而成的</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>h</mi><mtext>耳机音效</mtext></msub><mrow><mo fence=\"true\">[</mo><msub><mi>f</mi><mtext>人声</mtext></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>∗</mo><msub><mi>g</mi><mtext>乐器</mtext></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>∗</mo><msub><mi>i</mi><mtext>响度</mtext></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y = h_{耳机音效} \\left[ f_{人声}(t) * g_{乐器}(t) \\right] * i_{响度}(t)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">耳机音效</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">人声</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">乐器</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">响度</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>某一时间点的音波,就是这一堆函数的<code>卷积</code>, 简单来说就是在某个维度上 <code>加权 + 叠加</code></p>\n<hr>\n<h4 id=\"结构\">结构</h4>\n<p><img src=\"https://www.helloimg.com/images/2022/05/18/RytYZQ.png\" alt=\"\"><div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph TB\n  输入层 --&gt;\n  卷积层(卷积层 Convolutional-layer) --&gt;\n  激活层(激活&#x2F;ReLU层 Activation-layer) --&gt;\n  池化层(池化&#x2F;子采样&#x2F;下采样层 Pooling-layer) --&gt;\n  全连接网络(全连接网络 fully-connected-layer) --&gt;\n  输出层\n  </pre></div></p>\n<ol>\n<li>卷积层: 就像是多个科目 (卷积核) 的老师给出试卷, 让&quot;输入&quot;做答</li>\n<li>激活层: 不同科目老师判卷,得出有没有及格,及格的话计多少分</li>\n<li>池化层: 成绩取最大值或者平均值, 减少计算量</li>\n<li>全连接层: 年级排名</li>\n<li>输出层: 是否获奖(二分类) / 排名前百分之几十(多分类)</li>\n</ol>\n<hr>\n<h4 id=\"卷积层\">卷积层</h4>\n<p><img src=\"https://www.helloimg.com/images/2022/05/09/RNJpTz.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4FoP.png\" alt=\"\"></p>\n<p>可以直观看出, 其作用为 <code>降维</code> 和 <code>提取特征</code></p>\n<hr>\n<h4 id=\"激活层\">激活层</h4>\n<blockquote>\n<p>将输入信号的总和转换为输出信号的函数被称为激活函数</p>\n</blockquote>\n<ul>\n<li>\n<p>如下为一种简单实现: 阶跃函数:</p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/18/RaxGG1.png\" alt=\"RaxGG1.png\"></p>\n<p>其阈值是可以改变的:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.36em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>x</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">sgn(x) =\n\\begin{cases}\n  1 &amp; if \\ x &gt; 0 \\\\\n  0 &amp; if \\ x = 0 \\\\\n  -1 &amp; if \\ x &lt; 0\n\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.91em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35em;\"><span style=\"top:-2.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.192em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.316em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style=\"top:-4.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.85em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-1.53em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.91em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>还有很多其他的激活函数, 用途各异, 详见<sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<p>sigmoid 函数</p>\n<p>tanh 双曲正切函数</p>\n<p>ReLU (Rectified Linear Units, 修正线性单元, CNN 常用)</p>\n<p>…</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"池化层\">池化层</h4>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4PS6.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4apn.png\" alt=\"\"></p>\n<p>一方面, 缩小分辨率降低运算量, 一方面扩大神经元的<code>感受野</code> (特征捕获范围)</p>\n<p>也就使得层次越深, 单位神经元在有损条件下捕获特征/语义信息的范围越大</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"MMDetection\">MMDetection</h2>\n<blockquote>\n<p>参考课程 <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup> <br>\n<img src=\"https://www.helloimg.com/images/2022/05/14/R7twWM.png\" alt=\"\"></p>\n</blockquote>\n<h3 id=\"图像分类\">图像分类</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4Xmz.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"目标检测\">目标检测</h3>\n<h4 id=\"第一阶段-问题与方案\">第一阶段-问题与方案</h4>\n<h5 id=\"图像分割\">图像分割</h5>\n<p>等大窗口 -&gt; 滑动窗口 -&gt; 多尺度滑窗 -&gt; 图像金字塔</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/20/ZBmvYY.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/21/ZCV790.png\" alt=\"\"></p>\n<h5 id=\"区域提议\">区域提议</h5>\n<p>但上面设计需要做的分类数太多,难以满足实时性, 可以先用 <code>区域提议 Region Proposal</code> 提取出可能包含物体的区域</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/21/ZCYq6P.png\" alt=\"\"></p>\n<h5 id=\"非极大值抑制\">非极大值抑制</h5>\n<p><img src=\"https://www.helloimg.com/images/2022/05/21/ZCYER6.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"第二阶段-优化算法\">第二阶段-优化算法</h4>\n<h5 id=\"共享特征与-RoI-Pooling\">共享特征与-RoI-Pooling</h5>\n<p>对于每个提议框 -&gt; CNN 前传, 有大量重叠提议框(重复的卷积运算), 所以改进为: <code>全图单次 CNN 前传 -&gt; 全图特征图 -&gt; 根据提议框裁剪预测</code></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/27/Z1PBTb.png\" alt=\"\"></p>\n<h5 id=\"RPN-区域提议网络\">RPN-区域提议网络</h5>\n<p>Region Proposal Network</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/27/Z1PLwn.png\" alt=\"\"></p>\n<h5 id=\"FPN-特征金字塔网络\">FPN-特征金字塔网络</h5>\n<p><img src=\"https://www.helloimg.com/images/2022/05/27/Z1a3Gh.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"Faster-RCNN\">Faster-RCNN</h4>\n<p><code>Faster - Region proposal - CNN</code> 一个很经典的例子, 应用上面的优化算法网络 <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<blockquote>\n<p><img src=\"https://www.helloimg.com/images/2022/05/27/Z1Pnqz.png\" alt=\"\"> &gt; <img src=\"https://www.helloimg.com/images/2022/05/27/Z1aeNq.png\" alt=\"\"> &gt; <img src=\"https://www.helloimg.com/images/2022/06/11/ZLwNpK.png\" alt=\"\"></p>\n</blockquote>\n<hr>\n<h4 id=\"目标检测划分\">目标检测划分</h4>\n<p>可以通过下面三种形式划分 <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup></p>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>目标检测划分\n<ul>\n<li>stage\n<ul>\n<li>one-stage (单阶段)\n<ul>\n<li>RetinaNet</li>\n<li>YOLO</li>\n<li>FCOS</li>\n<li>RepPoints</li>\n</ul>\n</li>\n<li>two-stage (双阶段)\n<ul>\n<li>FasterRCNN</li>\n<li>CascadeRCNN</li>\n<li>LibraRCNN</li>\n<li>TridentNet</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>anchor (锚框)\n<ul>\n<li>anchor-based\n<ul>\n<li>FasterRCNN</li>\n<li>YOLO</li>\n</ul>\n</li>\n<li>anchor-free\n<ul>\n<li>FCOS</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>transformer\n<ul>\n<li>DETR</li>\n<li>Deformable DETR</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<div class=\"tabs\" id=\"双阶段\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#双阶段-1\">单阶段</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#双阶段-2\">双阶段</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#双阶段-3\">无锚框算法</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"双阶段-1\"><p><img src=\"https://www.helloimg.com/images/2022/05/30/ZeIeWv.png\" alt=\"\"></p>\n<p>单阶段最常用的就是 YOLO (You Only Look Once), 每代都会有设计更新和优化,如下为 v3 设计</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/30/ZeImDX.png\" alt=\"\"></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"双阶段-2\"><p>上面介绍的都是双阶段算法,与单阶段区别主要在于<code>是否有区域提议阶段</code>, 单阶段算法只通过不同尺寸的锚框(检测头)进行物体预测</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/27/Z1aqjr.png\" alt=\"\"></p>\n<p>具体来看,与上面网络结合:</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/30/ZeDKUA.png\" alt=\"\"></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"双阶段-3\"><p>另一类分支, 有锚框的话会有大量超参使模型复杂度上升, 无锚框的话性能又会下降</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"模型构建流程\">模型构建流程</h3>\n<p>现阶段 AI 领域把很多算法模块化了, 提出的新算法大多也是对某一功能模块的改进, 构建一个大型模型可以像是装高达一样挑选合适的算法/网络模块进行组合.</p>\n<p>mmdet 就是蛮复杂的, 抽象成了多个功能模块 <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup>, 每个功能模块又有多个实现算法.</p>\n<p><img src=\"https://www.helloimg.com/images/2022/06/11/ZLwyeM.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/06/11/ZL05TP.png\" alt=\"\"></p>\n<div class=\"tabs\" id=\"backbone\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#backbone-1\">backbone</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#backbone-2\">neck</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#backbone-3\">enhance</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#backbone-4\">head</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#backbone-5\">BBox</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#backbone-6\">tricks</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"backbone-1\"><p>backbone (主干网络) 经常会在预训练模型选取时看到, 作用为<code>特征提取</code>, 常见的比如 50 层 ResNet -&gt; R-50</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"backbone-2\"><p>neck 是对 backbone 提取的特征进行融合/增强, 然后传给 head. 常见的 neck 为 FPN (特征金字塔网络)</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"backbone-3\"><blockquote>\n<p>enhance 是即插即用、能够对特征进行增强的模块</p>\n</blockquote><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"backbone-4\"><p>Head 检测头模块是对模型性能影响最显著的地方, 有框坐标回归和目标分类两个分支</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"backbone-5\"><p>Bonding Box 是检测头模块的一个分支, 它的作用是对检测结果进行回归, 得到框坐标<br>\n功能模块有 BBox 分配 (进行正负样本定义或者正负样本分配),采样,编解码,后处理, 以及对应的 loss</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"backbone-6\"><p>tricks 就是训练/测试的技巧/配置, 大部分的调参工作就是在调整这部分, 比如 batch, Lr, 数据增强等…</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"模型训练\">模型训练</h3>\n<p>MMDetection 基本结构: <code>依赖 + [模型] + 数据集 + 配置文件 -&gt; Trainable</code></p>\n<h4 id=\"dataset-COCO\">dataset-COCO</h4>\n<p>数据集分很多格式, 常见的比如 COCO:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataset_type = <span class=\"string\">&#x27;CocoDataset&#x27;</span></span><br><span class=\"line\">data_root = <span class=\"string\">&#x27;data/coco/&#x27;</span></span><br><span class=\"line\">data = <span class=\"built_in\">dict</span>(</span><br><span class=\"line\">  samples_per_gpu=<span class=\"number\">2</span>,</span><br><span class=\"line\">  workers_per_gpu=<span class=\"number\">2</span>,</span><br><span class=\"line\">  train=<span class=\"built_in\">dict</span>(</span><br><span class=\"line\">    <span class=\"built_in\">type</span>=dataset_type,</span><br><span class=\"line\">    ann_file=data_root + <span class=\"string\">&#x27;annotations/instances_train2017.json&#x27;</span>,</span><br><span class=\"line\">    img_prefix=data_root + <span class=\"string\">&#x27;train2017/&#x27;</span>,</span><br><span class=\"line\">    pipeline=train_pipeline),</span><br><span class=\"line\">  val=<span class=\"built_in\">dict</span>(</span><br><span class=\"line\">    <span class=\"built_in\">type</span>=dataset_type,</span><br><span class=\"line\">    ann_file=data_root + <span class=\"string\">&#x27;annotations/instances_val2017.json&#x27;</span>,</span><br><span class=\"line\">    img_prefix=data_root + <span class=\"string\">&#x27;val2017/&#x27;</span>,</span><br><span class=\"line\">    pipeline=test_pipeline),</span><br><span class=\"line\">  test=<span class=\"built_in\">dict</span>(</span><br><span class=\"line\">    <span class=\"built_in\">type</span>=dataset_type,</span><br><span class=\"line\">    ann_file=data_root + <span class=\"string\">&#x27;annotations/instances_val2017.json&#x27;</span>,</span><br><span class=\"line\">    img_prefix=data_root + <span class=\"string\">&#x27;val2017/&#x27;</span>,</span><br><span class=\"line\">    pipeline=test_pipeline)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"pipeline\">pipeline</h4>\n<p><img src=\"https://www.helloimg.com/images/2022/05/30/Zezw9E.png\" alt=\"\"></p>\n<h4 id=\"Lr-Scheduler\">Lr-Scheduler</h4>\n<p>Learning Rate Scheduler 学习率策略, 常见模型中标注的 <code>1x 2x</code></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/30/Ze7rmt.png\" alt=\"\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"MMDetection3D\">MMDetection3D</h2>\n<p>入门一个技术, 需要大致概览一下, 正巧 MM-Lab 应时发布了教程 <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<p>MMDetection3D 依赖于 MMDetection 和 MMSegmentation, 适用于检测和分割 3D 场景下的物体</p>\n<p><img src=\"https://www.helloimg.com/images/2022/06/11/ZLvvN9.png\" alt=\"\"></p>\n<p>点云 (point cloud) 数据是通过传感器获取的物体分布场景, 单目 3D 检测</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-33\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://mp.weixin.qq.com/s/Um8wAtdxPcVN8ACiVtSgFg\">42 个激活函数的全面总结</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://discover304.top/2021/11/30/2021q4/107-1-dl-back/\">【深度学习】基础 叁：反向传播算法</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.bilibili.com/video/BV1ou411k7fD\">4 小时入门深度学习+实操 MMDetection 第一课</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://zhuanlan.zhihu.com/p/478307528\">带你玩转 3D 检测和分割（一）：MMDetection3D 整体框架介绍</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://zhuanlan.zhihu.com/p/31426458\">一文读懂 Faster RCNN</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://zhuanlan.zhihu.com/p/337375549\">轻松掌握 MMDetection 整体构建流程(一)</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "人工智能",
                "深度学习",
                "doing"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/AI/ML/",
            "url": "https://weidows.github.io/post/python/AI/ML/",
            "title": "🥵硬啃-Machine-Learning",
            "date_published": "2022-04-20T12:21:09.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-06-14 21:16:45\n * @FilePath: \\Blog-private\\source\\_posts\\python\\AI\\ML.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>机器学习\n<ul>\n<li><a href=\"#%E4%BD%95%E4%B8%BA%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\">何为机器学习</a></li>\n<li><a href=\"#%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F\">学习方式</a>\n<ul>\n<li>深度学习</li>\n<li>监督\n<ul>\n<li>监督学习</li>\n<li>无监督学习</li>\n</ul>\n</li>\n<li>强化学习</li>\n</ul>\n</li>\n<li>一般流程\n<ul>\n<li>1.原始数据</li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86\">2.数据预处理</a>\n<ul>\n<li>问题\n<ul>\n<li>完整性</li>\n<li>噪声</li>\n<li>是否匹配</li>\n<li>重复</li>\n<li>连续/离散</li>\n<li>样本分布是否平衡</li>\n</ul>\n</li>\n<li>方法\n<ul>\n<li>标准化/均值移除</li>\n<li>范围缩放</li>\n<li>归一化</li>\n<li>二值化</li>\n<li>独热编码</li>\n<li>标签编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>3.特征处理\n<ul>\n<li>特征提取\n<ul>\n<li>原始特征的线性组合获取新特征</li>\n</ul>\n</li>\n<li>特征转换\n<ul>\n<li>升维</li>\n<li>降维</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>4.训练模型</li>\n<li>5.预测</li>\n<li>6.参数调整</li>\n<li>7.模型评估与优化\n<ul>\n<li><a href=\"#%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95\">评估方法</a></li>\n<li>优化方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E9%97%AE%E9%A2%98\">基本问题</a>\n<ul>\n<li>回归问题</li>\n<li>分类问题</li>\n<li>聚类问题</li>\n<li>降维问题</li>\n<li>强化问题</li>\n</ul>\n</li>\n<li>三要素\n<ul>\n<li>模型\n<ul>\n<li>线性方法</li>\n<li>非线性方法/广义线性方法</li>\n</ul>\n</li>\n<li><a href=\"#%E8%B6%85%E5%8F%82%E7%9A%84%E5%AD%A6%E4%B9%A0-%E6%9B%B4%E6%96%B0\">超参的学习-更新</a>\n<ul>\n<li>损失函数</li>\n<li>期望风险\n<ul>\n<li>期望风险未知,通过经验风险近似</li>\n<li>机器学习问题 -&gt; 经验风险最小化问题</li>\n</ul>\n</li>\n<li>过-欠拟合及处理</li>\n<li>参数学习\n<ul>\n<li>经验风险最小化(最小二乘法)</li>\n<li>结构风险最小化(岭回归)</li>\n<li>最大似然估计</li>\n<li>最大后验估计</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95\">优化算法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"代码\">代码</h2>\n<blockquote>\n<p>本篇所用到的代码在这: <a href=\"../../code/ML\">👀Code-4-Machine-Learning</a></p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"何为机器学习\">何为机器学习</h2>\n<ul>\n<li>\n<p>随机取市场上一些芒果样本为训练数据,教给机器怎么判断好坏</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>品质</mtext><mo>=</mo><mi>f</mi><mi>u</mi><mi>n</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mtext>特征</mtext><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">品质 = func([特征])\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">品质</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">([</span><span class=\"mord cjk_fallback\">特征</span><span class=\"mclose\">])</span></span></span></span></span></p>\n<p><code>输入为特征</code>: [颜色, 大小, 形状, 产地, 品牌]</p>\n<p><code>输出为品质</code>: [好, 坏]</p>\n<hr>\n</li>\n</ul>\n<p>训练模型时, 输入输出都告诉它, 让它自动学会建立 <code>特征&lt;-&gt;品质</code> 之间的关系</p>\n<p>下次买芒果时可以根据要购买芒果的特征,使用此模型预测芒果的品质</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"学习方式\">学习方式</h2>\n<h3 id=\"区分有-无监督学习\">区分有-无监督学习</h3>\n<p>三方面区别: <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup>, 也有混合形式的半监督学习</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">监督学习(supervised)</th>\n<th style=\"text-align:center\">无监督学习(self-supervised)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">训练数据</td>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mtext>样本</mtext></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mtext>标签</mtext></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_{样本}, y_{标签})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">样本</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">标签</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mtext>样本</mtext></msub></mrow><annotation encoding=\"application/x-tex\">x_{样本}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">样本</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">学习目标</td>\n<td style=\"text-align:center\">映射关系 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>⇒</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x \\rArr y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></td>\n<td style=\"text-align:center\">x 的内在结构</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">适用场景</td>\n<td style=\"text-align:center\">分割/检测/回归(标签连续)/分类(离散)</td>\n<td style=\"text-align:center\">聚类、特征学习或密度估计</td>\n</tr>\n</tbody>\n</table>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"强化学习-RL\">强化学习-RL</h3>\n<ul>\n<li>\n<p>Reinforcement Learning:</p>\n<p>我们不清楚如何标记样本/无法说明什么样本数据特征是更好的,但是可以指明什么是好的终点</p>\n<p>比如围棋,没啥可标记的数据, 也很难说明哪一步更好,只能指明<code>快点赢</code>为最终结果</p>\n<p>对不同决策结果进行赏罚,使结果趋近期望结果</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据预处理\">数据预处理</h2>\n<h3 id=\"均值移除\">均值移除</h3>\n<p>把一组数据的<code>均值和标准差</code>由 <code>x, y -&gt; 0, 1</code></p>\n<p>例如有一组数据 sample = [a,b,c]</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>均值</mtext><mi>m</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow><mn>3</mn></mfrac><mo>=</mo><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>标准差</mtext><mi>s</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mn>3</mn></mfrac></msqrt><mo>=</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>令</mtext><mi>s</mi><mi>t</mi><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>c</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>数据标准化后</mtext><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><mn>3</mn></mfrac><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mn>3</mn><mi>s</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mfrac><mrow><mo stretchy=\"false\">(</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mn>3</mn></mfrac></msqrt><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  均值 m\n  &amp;= \\frac{a+b+c}{3} = x\n\n  \\\\ \\ \\\\\n\n  标准差 s\n  &amp;= \\sqrt{\\frac{(a-m)^2 + (b-m)^2 + (c-m)^2}{3}} = y\n\n  \\\\ \\ \\\\\n\n  令std\\_sample\n  &amp;= [a&#x27;,b&#x27;,c&#x27;]\n  \\\\ &amp;= [ \\frac{a - m}{s} , \\frac{b - m}{s} , \\frac{c - m}{s} ]\n\n  \\\\ \\ \\\\\n\n  数据标准化后 m&#x27;\n  &amp;= \\frac{a&#x27; + b&#x27; + c&#x27; }{3} = \\frac{(a-m) + (b -m) + (c - m) }{3s} = 0\n\n  \\\\ \\ \\\\\n\n  s&#x27;\n  &amp;= \\sqrt{\\frac{(a&#x27;-m&#x27;)^2 + (b&#x27;-m&#x27;)^2 + (c&#x27;-m&#x27;)^2}{3}} = 1\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:20.1098em;vertical-align:-9.8049em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.3049em;\"><span style=\"top:-12.6378em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">均值</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-10.8118em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-8.4474em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">标准差</span><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-6.5718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-5.0718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">令</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord mathnormal\">e</span></span></span><span style=\"top:-3.0404em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.2144em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:0.8745em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">数据标准化后</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:2.7005em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:5.0649em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.8049em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.3049em;\"><span style=\"top:-12.6378em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-8.4474em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7044em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6644em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7356em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-5.0718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.0404em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:0.8745em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:5.0649em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7044em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6644em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7356em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.8049em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"范围缩放\">范围缩放</h3>\n<p>对于 sample = [a,b,c] , min=a, max=c</p>\n<ol>\n<li>\n<p>兜底,让 min=0</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><msup><mi>e</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">[</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo><mo>=</mo><mo stretchy=\"false\">[</mo><mi>a</mi><mo>−</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>c</mi><mo>−</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">sample&#x27; = [a&#x27; , b&#x27; , c&#x27; ] = [a-a, b-a, c-a]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">]</span></span></span></span></span></p>\n</li>\n<li>\n<p>缩放,把范围控制在 [0,1]</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><msup><mi>e</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo separator=\"true\">,</mo><mfrac><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo separator=\"true\">,</mo><mfrac><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nsample&#x27;&#x27; &amp;= [\\frac{a&#x27;}{c&#x27;}, \\frac{b&#x27;}{c&#x27;}, \\frac{c&#x27;}{c&#x27;} ]\n\\\\ &amp;= [\\frac{a-a}{c-a}, \\frac{b-a}{c-a}, \\frac{c-a}{c-a} ]\n\\\\ &amp;= [0, \\frac{b-a}{c-a}, 1 ]\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.2964em;vertical-align:-3.3982em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8982em;\"><span style=\"top:-5.8982em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.5408em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.1em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3982em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8982em;\"><span style=\"top:-5.8982em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.5408em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-1.1em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3982em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"归一化\">归一化</h3>\n<p>转化后的数据在 [0,1] , 反应某数据在当前行所占比重</p>\n<p>例:对于 sample 某 row 中的值 a</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mfrac><mi>a</mi><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>o</mi><mi>w</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">∣</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">a&#x27; = \\frac{a}{\\sum_{i=1}^n |row[i]|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1016em;vertical-align:-0.994em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.3057em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"二值化\">二值化</h3>\n<p>设置阈值,大于阈值的设为 1,小于阈值的设为 0</p>\n<p>没啥可说的…不举例了</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"OneHot-独热编码\">OneHot-独热编码</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>男</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>足球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>女</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>篮球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>20</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>男</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>桌球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>30</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>女</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>网球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\n  男 &amp; 足球 &amp; 10\\\\\n  女 &amp; 篮球 &amp; 20\\\\\n  男 &amp; 桌球 &amp; 30\\\\\n  女 &amp; 网球 &amp; 10\\\\\n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8001em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">男</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">女</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">男</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">女</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">足球</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">篮球</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">桌球</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">网球</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">20</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">30</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>对于离散数据的分类任务, 我们常需要做<code>特征数字化</code>: <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<p>对于某一列数据中有 n 种类型, 就用 n 位编码表示,不同类型使用不同激活位,如下:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1000</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>01</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0100</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>010</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0010</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>001</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>01</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0001</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\n  10 &amp; 1000 &amp; 100\\\\\n  01 &amp; 0100 &amp; 010\\\\\n  10 &amp; 0010 &amp; 001\\\\\n  01 &amp; 0001 &amp; 100\\\\\n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8001em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">01</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">01</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1000</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0100</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0010</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0001</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">100</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">010</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">001</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">100</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>关于为什么这么做? 直接[0,0,0], [0,1,2] 这种表示不行吗?</p>\n<p>上面 row1 和 row3 都是男, 问题在于我们无法单纯通过 1 和 3 这俩数字来判断他俩是否是同一类型的</p>\n<p>对于编码后的,想找’男’这个类型,只需要查找第一位是’1’的数据</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"标签编码\">标签编码</h3>\n<p>可以理解为上面独热编码的子步骤,一言以蔽之:</p>\n<p>[红,黄,蓝,黄] -&gt; [1,2,3,2]</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"评估方法\">评估方法</h2>\n<ul>\n<li>\n<p>平均绝对误差</p>\n</li>\n<li>\n<p>均方误差</p>\n</li>\n<li>\n<p>中位数绝对误差</p>\n</li>\n<li>\n<p>R2 决定系数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>令</mtext><msub><mi>y</mi><mi>i</mi></msub><mtext>表示真实值</mtext><mo separator=\"true\">,</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mtext>表示预测值</mtext><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><mtext>为平均值</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>回归平方和</mtext><mi>S</mi><mi>S</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>残差平方和</mtext><mi>S</mi><mi>S</mi><mi>E</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>总离差平方和</mtext><mi>S</mi><mi>S</mi><mi>T</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>S</mi><mi>S</mi><mi>R</mi><mo>+</mo><mi>S</mi><mi>S</mi><mi>E</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>R</mi><mn>2</mn><mtext>决定系数</mtext><mo>:</mo><msup><mi>R</mi><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><mrow><mi>S</mi><mi>S</mi><mi>T</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">令 y_i 表示真实值, \\hat y_i 表示预测值, \\overline y 为平均值\n\n\\\\ \\ \\\\\n\n\\begin{aligned}\n  回归平方和 SSR\n  &amp;= \\sum_{i=1}^n (\\hat y_i - \\overline y)^2 \\\\\n\n  残差平方和 SSE\n  &amp;= \\sum_{i=1}^n (y_i - \\hat y_i)^2 \\\\\n\n  总离差平方和 SST\n  &amp;= SSR + SSE \\\\\n  &amp;= \\sum_{i=1}^n (y_i - \\overline y)^2\n\n  \\\\ \\ \\\\\n\n  R2决定系数: R^2\n  &amp;= 1 - \\frac{SSE}{SST}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表示真实值</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表示预测值</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mord cjk_fallback\">为平均值</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:15.0335em;vertical-align:-7.2668em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.7668em;\"><span style=\"top:-9.7668em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">回归平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">SSR</span></span></span><span style=\"top:-6.5377em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">残差平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span><span style=\"top:-4.12em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">总离差平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">SST</span></span></span><span style=\"top:-1.8086em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.609em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:2.6294em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">决定系数</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.2668em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.7668em;\"><span style=\"top:-9.7668em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-6.5377em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-4.12em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">SSR</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span><span style=\"top:-1.8086em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:2.6294em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">SST</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.2668em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"基本问题\">基本问题</h2>\n<ul>\n<li>\n<p>回归-分类问题</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/08/RsMidr.png\" alt=\"\"></p>\n<p>回归: 输出连续, 例如预测房价股价</p>\n<p>分类: 输出离散, 例如产品质量好坏检测,手写体识别</p>\n</li>\n<li>\n<p>聚类: 把输入数据相似度高的堆一起</p>\n<p>例如把各种水果照片聚类出来,分出品种</p>\n<p>对于购物网站, 可以根据用户对商品的喜好度, 搞出<code>推荐算法</code></p>\n</li>\n<li>\n<p>降维问题</p>\n</li>\n</ul>\n<blockquote>\n<p>借个图 <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup> &gt; <img src=\"https://www.helloimg.com/images/2022/04/26/RlX7Tb.png\" alt=\"\"></p>\n</blockquote>\n<hr>\n<h3 id=\"回归问题\">回归问题</h3>\n<h4 id=\"线性回归\">线性回归</h4>\n<p>对于输入的属性 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x=(x_1,x_2,x_3...x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,输出 y 为:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>+</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo stretchy=\"false\">(</mo><mtext>多项式形式</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo stretchy=\"false\">(</mo><mtext>向量形式</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  y\n  &amp;= w_1 x_1 + w_2 x_2 + ... w_n x_n + b &amp; (多项式形式) \\\\\n  &amp;= w^T x + b &amp; (向量形式)\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.0513em;vertical-align:-1.2757em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">多项式形式</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">向量形式</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中 权重 w 与 b 是通过学习后模型确定的</p>\n<p>学习: 寻找最小的损失函数 loss -&gt; 最优线性模型</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"多项式回归\">多项式回归</h4>\n<p>从几何角度理解就是把直线变成了曲线</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msup><mi>x</mi><mi>i</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  y\n  &amp;= w_0 + w_1 x + w_2 x^2 + ... w_n x^n \\\\\n  &amp;= \\sum_{i=1}^{n} w_i x^i\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.7532em;vertical-align:-2.1266em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6266em;\"><span style=\"top:-5.4139em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.1025em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1266em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6266em;\"><span style=\"top:-5.4139em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1025em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1266em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"Lasso-岭回归\">Lasso-岭回归</h4>\n<p>Lasso 和 岭 这两种都是在线性回归基础上对损失函数正则化的回归算法, 降低了偏差大的样本权重, <code>防止过拟合</code></p>\n<ul>\n<li>\n<p>Lasso (Least absolute shrinkage and selection operator, 最小绝对值收敛和选择算法/套索算法), 使用 L1 正则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{2} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n+ \\lambda ||w||_1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n</li>\n<li>\n<p>岭回归 (Ridge regression), 用 L2 正则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{2} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n+ \\lambda ||w||_2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"决策树-随机森林\">决策树-随机森林</h3>\n<p>decision tree, 决策树可用于 classification + regression; 学习决策树需要用到<a href=\"../../experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF#%E4%BF%A1%E6%81%AF%E7%86%B5-%E5%A6%82%E4%BD%95%E5%BA%A6%E9%87%8F%E4%BF%A1%E6%81%AF\">信息论知识</a> 参考课程: <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<h4 id=\"简化概念\">简化概念</h4>\n<ul>\n<li>\n<p>CART 决策树选择算法</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/11/RtsbJ9.png\" alt=\"\"></p>\n</li>\n<li>\n<p>随机森林</p>\n<p>不同的特征选择方式产生不同的决策树,组在一起就是随机森林</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/11/RtsWMP.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"分类-2\">分类</h4>\n<ul>\n<li>\n<p>我们想对一组 iris 数据做花种分类</p>\n<p>有 setosa,versicolor,virginica 三类</p>\n<p>鉴于 2d 展示图易观察,我们只取前两列 (花萼长度,宽度) 作为输入,最后一列作为输出,训练模型</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">4</span>.<span class=\"number\">8</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">3</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">3</span>.<span class=\"number\">8</span>,<span class=\"number\">1</span>.<span class=\"number\">6</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">4</span>.<span class=\"number\">6</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">0</span>,<span class=\"number\">3</span>.<span class=\"number\">3</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">7</span>.<span class=\"number\">0</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">4</span>.<span class=\"number\">7</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">4</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">4</span>.<span class=\"number\">5</span>,<span class=\"number\">1</span>.<span class=\"number\">5</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">2</span>,<span class=\"number\">2</span>.<span class=\"number\">9</span>,<span class=\"number\">4</span>.<span class=\"number\">3</span>,<span class=\"number\">1</span>.<span class=\"number\">3</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">2</span>.<span class=\"number\">5</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">1</span>.<span class=\"number\">1</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">7</span>,<span class=\"number\">2</span>.<span class=\"number\">8</span>,<span class=\"number\">4</span>.<span class=\"number\">1</span>,<span class=\"number\">1</span>.<span class=\"number\">3</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">8</span>,<span class=\"number\">2</span>.<span class=\"number\">7</span>,<span class=\"number\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">1</span>.<span class=\"number\">9</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">7</span>.<span class=\"number\">1</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">5</span>.<span class=\"number\">9</span>,<span class=\"number\">2</span>.<span class=\"number\">1</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">3</span>,<span class=\"number\">2</span>.<span class=\"number\">9</span>,<span class=\"number\">5</span>.<span class=\"number\">6</span>,<span class=\"number\">1</span>.<span class=\"number\">8</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">5</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">5</span>.<span class=\"number\">8</span>,<span class=\"number\">2</span>.<span class=\"number\">2</span>,Iris-virginica</span><br></pre></td></tr></table></figure>\n<p>下图为训练数据(点) 和 测试数据(星) 的分布</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4evt0.png\" alt=\"\"></p>\n<p>模型的决策树如下 (颜色表示类别, 颜色深度表示确定程度)</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4edC5.png\" alt=\"\"></p>\n<hr>\n</li>\n<li>\n<p>下面来分析一下决策树如何分类的:</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4eQqc.png\" alt=\"\"></p>\n<p>根节点选取了 105 个输入, 其中最多的是 virginica 37 个, class=virginica</p>\n<p>暂且不看每个节点的熵 entropy 是怎么计算的,看一下比较:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>H</mi><mtext>差</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><msub><mo stretchy=\"false\">)</mo><mtext>根节点熵</mtext></msub><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><msub><mo stretchy=\"false\">)</mo><mtext>子节点条件熵和</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1.58</mn><msub><mn>2</mn><mtext>根节点熵</mtext></msub><mo>−</mo><msub><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mn>33</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>1</mn></mrow><mn>105</mn></mfrac><mo>⋅</mo><mn>0.657</mn><mo>+</mo><mfrac><mrow><mn>3</mn><mo>+</mo><mn>28</mn><mo>+</mo><mn>36</mn></mrow><mn>105</mn></mfrac><mo>⋅</mo><mn>1.208</mn><mo fence=\"true\">)</mo></mrow><mtext>子节点条件熵和</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.573</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  H_差\n  &amp;= H(X)_{根节点熵} - H(X|Y)_{子节点条件熵和} \\\\\n  &amp;= 1.582_{根节点熵} - \\left( \\frac{33+4+1}{105} \\cdot 0.657 + \\frac{3+28+36}{105} \\cdot 1.208 \\right)_{子节点条件熵和} \\\\\n  &amp;= 0.573\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.7497em;vertical-align:-2.6249em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1249em;\"><span style=\"top:-5.7349em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">差</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6249em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4851em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6249em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1249em;\"><span style=\"top:-5.7349em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">根节点熵</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">子节点条件熵和</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6249em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1.58</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">根节点熵</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">105</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">33</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.657</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">105</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">28</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">36</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1.208</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.5214em;\"><span style=\"top:-1.7003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">子节点条件熵和</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.4851em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.573</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6249em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>决策树就是通过一层层的 <code>条件 Y</code> (如 sepal lenth &lt;= 5.45) 来减小熵,增大确定性来解决分类确定度问题</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4tSlC.png\" alt=\"\"></p>\n<p>最后的叶子节点的熵会趋近于 0 (非常确定) 和 1 (非常不确定) 的两点分布</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"信息增益\">信息增益</h4>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>杜撰一个概念</mtext><mo>:</mo><mtext>信息增益</mtext><mi>g</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">杜撰一个概念: 信息增益 gain(X,Y) = H(X) - H(X|Y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">杜撰一个概念</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">信息增益</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ain</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>\n<p>通过上面分类的例子可知, <code>gain(X,Y)</code> 就是熵下降/确定度增加的关键</p>\n<p>回过头来,条件 Y (如 sepal lenth &lt;= 5.45) 是怎么选取的?</p>\n<p>遍历特征组和取值区间,找到 max( gain(X,Y) ),即为熵下降最多的条件;</p>\n<p>(当然也需要考虑到类似贪心-DP 的区别, 全是贪心的话会让模型单一化, 所以很多时候需要<code>随机筛掉一部分条件</code>来使得条件<code>较优</code>而不是<code>最优</code>)</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"深度与过拟合\">深度与过拟合</h4>\n<p>深度增加虽然能降低训练集错误率,但泛化能力会减弱-&gt;过拟合</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4453D.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"随机森林\">随机森林</h4>\n<ul>\n<li>\n<p>自动聚合-BootStrap</p>\n<p>对训练数据集进行多次有放回的随机采样 (有的样本可能从未采样,有的可能采样多次) -&gt; 随机森林 [DT1, DT2… DTn]</p>\n</li>\n<li>\n<p>如何 roll 出来数据集中部分随机数据? (比如取 80%)</p>\n<ol>\n<li>\n<p>for i in dataset</p>\n</li>\n<li>\n<p>if Math.random() &lt; 0.8: random_set.append(i)</p>\n</li>\n</ol>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"分类问题\">分类问题</h3>\n<p>从思想和实现角度看, 有下面很多种分类</p>\n<ul>\n<li>线性模型 (Linear Models)\n<ul>\n<li>逻辑回归 (Logistic Regression)</li>\n</ul>\n</li>\n<li>朴素贝叶斯 (Naive Bayes)</li>\n<li>决策树 (Decision Trees)</li>\n<li>支持向量机 (Support Vector Machines)</li>\n<li>随机梯度下降 (Stochastic Gradient Descent)</li>\n<li>最近邻 (Nearest Neighbors)</li>\n<li>高斯过程 (Gaussian Processes)</li>\n<li>集成方法/投票分类器 (Ensemble methods / voting classifier)</li>\n<li>多类别多输出 / 多类别多标签分类 (Multiclass and multioutput algorithms / multiclass and multilabel classification)</li>\n</ul>\n<hr>\n<h4 id=\"逻辑回归\">逻辑回归</h4>\n<p>虽然叫回归,但其实是<code>二分类模型</code>,是在线性回归输出基础上使用 Sigmoid/逻辑函数,将线性回归输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty,\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 映射到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>线性回归</mtext><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>逻辑回归</mtext><msup><mi>y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>y</mi></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  线性回归 y\n  &amp;= w^Tx + b \\\\\n  &amp;= w_1x_1 + w_2x_2 + w_3x_3 + ... +  b\n\n  \\\\ \\ \\\\\n  逻辑回归 y&#x27;\n  &amp;= Sigmoid(y) \\\\\n  &amp;= \\frac{1}{1 + e^{-y}}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.4421em;vertical-align:-3.9711em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.4711em;\"><span style=\"top:-6.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">线性回归</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-5.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-2.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">逻辑回归</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-0.4197em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9711em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.4711em;\"><span style=\"top:-6.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-5.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.4197em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6973em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9711em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>逻辑回归也是可以做多分类的, 原理就是多个二分类叠加起来</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"支持向量机-SVM\">支持向量机-SVM</h4>\n<h5 id=\"target\">target</h5>\n<p>SVM 目标就是找到如下红色实线 (与线两边样本点距离最大的线)</p>\n<p>两条虚线上的点叫做 <code>support vector / 支持向量</code>, 通过支持向量构造出的分类器就是 <code>支持向量机 SVM</code></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/15/RSmQRP.png\" alt=\"\"></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>如有直线</mtext><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>10</mn><mo>=</mo><mn>0</mn><mtext>可转换为向量形式</mtext><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>5</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">如有直线 2x_1 + 5x_2 - 10 = 0 可转换为向量形式 \\\\\n\\vec{w} = (2,5) \\\\\n\\vec{x} = (x_1,x_2) \\\\\n\\vec{w} \\cdot \\vec{x} + b = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord cjk_fallback\">如有直线</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">可转换为向量形式</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<hr>\n<h5 id=\"线性可分-不可分\">线性可分-不可分</h5>\n<p>如上面的图示, 样本可被直线/超平面分开 (线性可分), 支持向量所在两虚线之间没有其他向量,即为 <code>线性可分 SVM</code></p>\n<p>如果两虚线间存在样本, 即为 <code>线性 SVM</code>; 如果样本无法被直线/超平面分开 (线性不可分), 即为 <code>非线性 SVM</code></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/15/Riakiv.png\" alt=\"\"></p>\n<p>对于线性不可分问题,可通过 <code>核函数</code> 进行特征变换来 <code>升维</code></p>\n<hr>\n<h5 id=\"核函数\">核函数</h5>\n<p>常用的有为 1 和 3, 多项式核函数用处较少</p>\n<ol>\n<li>\n<p>线性核函数 Linear</p>\n<p>不做升维,直接找直线/超平面; 类似美国地图,分割直来直去的</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/16/RiXoc0.png\" alt=\"\"></p>\n</li>\n<li>\n<p>多项式核函数 poly (Polynomial Kernel)</p>\n<p>通过增加高次项升维, 此函数复杂度升的很快</p>\n</li>\n<li>\n<p>径向基核函数-高斯核函数 rbf (Radial Basis Function Kernel)</p>\n<p>相对于多项式核函数,大多数情况下参数更少性能更高; 直线分不了的无脑冲 rbf</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/16/RiXFVm.png\" alt=\"\"></p>\n</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"朴素贝叶斯\">朴素贝叶斯</h4>\n<p>Naive Bayes classification,理论基础是大学必修课-概率论知识</p>\n<ul>\n<li>\n<p>&quot;朴素&quot;指的是 A,B 为独立事件, 有贝叶斯公式:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(A|B) = \\frac{P(A)P(B|A)}{P(B)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><code>先验概率</code> P(A) : 已知或可推断出事件 A 发生的概率</p>\n<p><code>后验概率</code> P(A|B) : 已知 B 发生条件下,A 发生的概率</p>\n<hr>\n</li>\n<li>\n<p>对于样本特征 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[w_1, w_2, w_3 ... w_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 得出每个特征的概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>W</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[W_1, W_2, W_3 ... W_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>, 判断所属分类 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[A, B, C ...]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\">...</span><span class=\"mclose\">]</span></span></span></span> 的概率:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>P</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">P(A | W_1 W_2 W_3 ... W_n)\n= \\frac{P(A) \\cdot P(W_1|A) \\cdot P(W_2|A) ... P(W_n|A)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\nP(B | W_1 W_2 W_3 ... W_n)\n= \\frac{P(B) \\cdot P(W_1|B) \\cdot P(W_2|B) ... P(W_n|B)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\nP(C | W_1 W_2 W_3 ... W_n)\n= \\frac{P(C) \\cdot P(W_1|C) \\cdot P(W_2|C) ... P(W_n|C)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\n......\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.1056em;\"></span><span class=\"mord\">......</span></span></span></span></span></p>\n<hr>\n</li>\n<li>\n<p>特点</p>\n<p>必要的前提条件是特征间互不相关 (相互独立), 很多情况下难以满足,无法对特征关联性强的样本进行分类</p>\n<p>逻辑简单,性能起伏小且稳定,特征独立性越强分类效果越好</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"聚类问题-cluster\">聚类问题-cluster</h3>\n<p>就像是人群根据 hobby 扎堆, 输入的数据根据某些特征的相似度分出多个&quot;簇&quot;</p>\n<p>聚类问题属于无监督学习 (无需指明训练样本所属类别)</p>\n<hr>\n<h4 id=\"样本-相似度度量\">样本-相似度度量</h4>\n<p>对于两点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_1,y_1,...n_1),(x_2,y_2,...n_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<h5 id=\"欧氏距离\">欧氏距离</h5>\n<p>无视路径阻碍的空间绝对 distance</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence=\"true\">∣</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= \\left| (x_1, y_1, ..., n_1), (x_2, y_2, ..., n_2) \\right| \\\\\n  &amp;= \\sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2 + ... + (n_1 - n_2)^2} \\\\\n  &amp;= \\sqrt{\\sum_{i=x}^n (i_1 - i_2)^2}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.6007em;vertical-align:-3.0503em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5503em;\"><span style=\"top:-6.5895em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-4.9456em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.4065em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0503em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5503em;\"><span style=\"top:-6.5895em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span><span style=\"top:-4.9456em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span><span style=\"top:-2.4065em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='3.1968em' viewBox='0 0 400000 3196' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0503em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"曼哈顿距离\">曼哈顿距离</h5>\n<p>计量阻碍,可以理解为寻路问题,同一曼哈顿距离可有多种路径解法</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>n</mi><mn>1</mn></msub><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= |x_1 - x_2| + |y_1 - y_2| + ... + |n_1 - n_2| \\\\\n  &amp;= \\sum_{i=x}^n | i_1 - i_2 |\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.7291em;vertical-align:-2.1145em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6145em;\"><span style=\"top:-5.4259em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-3.1145em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1145em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6145em;\"><span style=\"top:-5.4259em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.1145em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1145em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"余弦相似度\">余弦相似度</h5>\n<p>cosine similarity, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext>在</mtext><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>π</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">cos 在 [0, \\pi]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mord cjk_fallback\">在</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">]</span></span></span></span> 上为减函数, 在 [45°, 135°] 区间下降快</p>\n<p>余弦相似度对向量敏感度: 方向 &gt; 长度</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>b</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∣</mi><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>b</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∣</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">cos(\\theta) = \\frac{\\vec a \\cdot \\vec b}{|\\vec a| \\cdot |\\vec b|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.7719em;vertical-align:-1.1174em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6544em;\"><span style=\"top:-2.1326em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">b</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">b</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1174em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h5 id=\"以上对比\">以上对比</h5>\n<p>如下欧氏距离(绿色直线) 与哈曼顿距离(褐色折现) 与余弦相似度(红色向量) 对比</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnsRZm.png\" alt=\"\"></p>\n<h5 id=\"闵可夫斯基距离\">闵可夫斯基距离</h5>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup><mo fence=\"true\">)</mo></mrow><mfrac><mn>1</mn><mi>p</mi></mfrac></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= \\left( \\sum_{i=1}^n |i_1 - i_2|^p \\right)^{\\frac{1}{p}}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6716em;vertical-align:-1.5858em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0858em;\"><span style=\"top:-4.0858em;\"><span class=\"pstrut\" style=\"height:4.0939em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5858em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0858em;\"><span style=\"top:-4.0858em;\"><span class=\"pstrut\" style=\"height:4.0939em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0939em;\"><span style=\"top:-4.5029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4829em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5858em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>改变 p 的值,可以转化为其他距离:</p>\n<p>p=1 : 哈曼顿距离</p>\n<p>p=2 : 欧氏距离</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">p \\rArr \\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span> : 切比雪夫距离</p>\n</li>\n</ul>\n<h5 id=\"杰卡德相似系数\">杰卡德相似系数</h5>\n<p>Jaccard 相似系数就是 <code>交并比</code>, 可用于目标检测中 <code>目标位置-预测位置</code> 的相似度分析</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mspace width=\"2em\"/><mi>B</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>J</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A = [a_1, a_2, ..., a_n] \\qquad B = [b_1, b_2, ..., b_n]\n\\\\ \\ \\\\\nJ(A,B) = \\frac{A \\cap B}{A \\cup B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0463em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/Rnm1a9.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/21/ZCYX1g.png\" alt=\"\"></p>\n<p>上面假定的是 A,B 中样本权重相同, 实际聚类中需要考量样本的权重</p>\n<h5 id=\"相对熵-2\">相对熵</h5>\n<blockquote>\n<p>参见 <a href=\"../../../experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF#%E7%9B%B8%E5%AF%B9%E7%86%B5\">👽 通信-信息论-开坑自埋</a></p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"聚类算法划分\">聚类算法划分</h4>\n<h5 id=\"原型-K-Means\">原型-K-Means</h5>\n<p>prototype-based clustering, 用原型表示聚类结构, 然后通过对原型的更新来完善聚类算法</p>\n<ul>\n<li>\n<p>常用 <code>K-均值 / K-Means 算法</code>: 若干样本聚类为 k 个簇, k 为指定参数</p>\n<ol>\n<li>\n<p>随机挑选 k 个样本, 计算其他所有样本与此 k 个样本的欧氏距离,离谁近就归为哪一簇</p>\n</li>\n<li>\n<p>对每一个簇, 计算其中所有样本的均值中心, 并将这 k 个均值中心作为 1. 中的样本再次重复</p>\n</li>\n<li>\n<p>直到均值中心不再变化/变化小于阈值</p>\n</li>\n</ol>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RntO7D.png\" alt=\"\"></p>\n</li>\n<li>\n<p>K-Means 对 <code>距离很远的异常点</code> 和 <code>初始样本点的选择</code> 是敏感的</p>\n<p>遇到影响大的异常点时可以换为 <code>K-中位数/ K-Mediods 算法</code></p>\n<p>当初始样本点选择不当时,会使聚类结果不好,如下图</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/Rn4BGm.png\" alt=\"\"></p>\n<hr>\n</li>\n<li>\n<p>改良 -&gt; K-Means++</p>\n<p>初始样本点的选取: 要选择的样本点与已选择样本点距离越远越好</p>\n<p>方案: 每选择样本点后计算 <code>未选择样本</code> 与 <code>已选择样本组</code> 的距离, 使未选择样本下一次的选择概率与距离成正比</p>\n</li>\n<li>\n<p>数据分布对 K-Means 的影响:</p>\n<p>数据分布不平衡几乎没影响</p>\n<p>但是数据<code>几何畸变</code>对聚类影响很大; K-Means 对符合高斯/正态分布的样本 (大致是圈的样子) 的聚类效果最好, 对带状样本聚类效果差</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/Rn44kv.png\" alt=\"\"></p>\n<p>无论如何调参, K-Means 都不适用于如下情况:</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/Rnn4H1.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Mini-Batch K-Means:</p>\n<p>对所有样本求均值计算量还是蛮大的, Mini-Batch 思想大致是抽取一部分样本求均值来近似总均值</p>\n</li>\n<li>\n<p>特点:</p>\n<p>简单快速, 可解决大批量聚类,对于符合高斯分布的数据聚类效果较优</p>\n<p>需要预先给出聚类簇数量 k; 对于异常点和初始样本选取敏感; 对非高斯分布样本聚类效果差</p>\n</li>\n</ul>\n<hr>\n<h5 id=\"层次-AGNES\">层次-AGNES</h5>\n<p>hierarchical clustering, 通过分层 -&gt; 树形聚类结构 -&gt; 聚类结果</p>\n<ul>\n<li>\n<p>可采用 <code>自顶向下DIANA / 自底向上AGNES</code> 的划分方式</p>\n<p>AGNES (AGglomerative NESting)最初将每个对象作为一个簇,然后这些簇一步步地合并。两个簇间的距离由这两个不同簇中距离最近的数据点对的相似度来确定；聚类的合并过程反复进行直到所有的对象最终满足簇数目。</p>\n<p>DIANA (DIvisive ANAlysis)算法是上述过程的反过程,属于分裂的层次聚类,首先将所有的对象初始化到一个簇中,然后根据一些原则(比如最大的欧式距离),将该簇分类。直到到达用户指定的簇数目或者两个簇之间的距离超过了某个阈值。</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnH3bu.png\" alt=\"\"></p>\n<p>常用 <code>凝聚层次AGNES算法</code>.</p>\n</li>\n<li>\n<p>AGNES 簇间距离不同定义/合并策略</p>\n<ul>\n<li>\n<p>最小距离 prime</p>\n<p>两个集合中最近的两个样本的距离</p>\n<p>容易形成链状结构</p>\n</li>\n<li>\n<p>最大距离 complete</p>\n<p>两个集合中最远的两个样本的距离</p>\n<p>若存在异常值则不稳定</p>\n</li>\n<li>\n<p>平均距离 average</p>\n<p>两个集合中样本间两两距离的平均值</p>\n</li>\n<li>\n<p>方差 Ward</p>\n<p>使得簇内距离平方和最小,簇间平方和最大</p>\n</li>\n</ul>\n<hr>\n<p>如下为以上四类对于含噪点样本的聚类效果,最小距离聚类效果最好</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnHSln.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h5 id=\"密度-DBSCAN\">密度-DBSCAN</h5>\n<p>density-based clustering, 通过样本分布密度来考察样本间的可连接性, 逐步拓展连接成最终聚类结果</p>\n<ul>\n<li>\n<p>几种密度聚类实现算法:</p>\n<p>噪声密度 DBSCAN 聚类算法</p>\n<p>密度最大值聚类</p>\n<p>AP (Affinity Propagation)</p>\n<p>谱聚类</p>\n</li>\n<li>\n<p>常用 <code>噪声密度 / DBSCAN 算法</code></p>\n<p>允许噪声的基于密度的空间聚类 DBSCAN (Density-Based Spatial Clustering of Applications with Noise)</p>\n<p>只要样本点的密度大于某阈值,则将该样本添加到最近的簇中。这类算法能克服基于距离的算法只能发现 <code>高斯分布/类圆形(凸)</code> 的聚类缺点,可发现任意形状的聚类,且对噪声数据不敏感。但计算密度单元的计算复杂度大,需要建立空间索引来降低计算量</p>\n<p>使用方面, DBSCAN 不仅可以避免噪声影响,也可以专门找噪声/剔除噪声</p>\n<hr>\n</li>\n<li>\n<p>概念</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">学名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-邻域</td>\n<td style=\"text-align:left\">样本点在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> 半径内的区域</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">核心对象</td>\n<td style=\"text-align:left\">对于给定的阈值 m, 如果某样本点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-邻域中其他样本点数量 n&gt;=m,那么此样本点就是核心对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">直接密度可达</td>\n<td style=\"text-align:left\">对于核心对象 q, p 在其圈内, 那么 p 从 q 出发是直接密度可达的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">密度相连</td>\n<td style=\"text-align:left\">一串密度可达对象的串联</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">簇</td>\n<td style=\"text-align:left\">最大的密度相连对象集合</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>半径<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> 与 阈值 m 的影响 (调参侠石锤)</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnTRWm.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"模型-衡量指标\">模型-衡量指标</h4>\n<h5 id=\"均一性-homogeneity\">均一性-homogeneity</h5>\n<p>一个簇中只包含一个类别的样本</p>\n<h5 id=\"完整性-completeness\">完整性-completeness</h5>\n<p>同类别样本被归类到相同簇中</p>\n<h5 id=\"V-measure\">V-measure</h5>\n<p>均一性与完整性的加权平均</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>V</mi><mo stretchy=\"false\">(</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mi>c</mi></mrow><mrow><mi>β</mi><mi>h</mi><mo>+</mo><mi>c</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">V(\\beta) = \\frac{(1+\\beta)hc}{\\beta h +c}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.8804em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h5 id=\"ARI-AMI\">ARI-AMI</h5>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnnlxC.png\" alt=\"\"></p>\n<h5 id=\"轮廓系数-Silhouette\">轮廓系数-Silhouette</h5>\n<p>a: 当前样本与簇内样本距离均值</p>\n<p>b: min(当前样本与其他簇样本距离均值)</p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/18/RnndCY.png\" alt=\"\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"降维问题\">降维问题</h3>\n<p>比如在 3 维空间 xyz 内有一条线段, 我们只想知道线段的 x 信息, 可以把线段映射到 x-axis 上 (损失 yz-axis 上的信息)</p>\n<p>降维作用: 降低时间-空间复杂度,使数据易于分析展示 (维度越高的图人类越难理解) <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"缺失值比率\">缺失值比率</h4>\n<p>Missing Value Ratio, 去掉缺失值大于某一阈值的特征列</p>\n<hr>\n<h4 id=\"低方差过滤\">低方差过滤</h4>\n<p>Low Variance Filter, 对于某些列, 所有值的方差很小/样本没啥区别, 可以不用其做特征</p>\n<hr>\n<h4 id=\"随机森林-2\">随机森林</h4>\n<p>Random Forest, 随机森林可以自动计算各个特征的重要性, 便于寻找最优+最小的特征子集</p>\n<hr>\n<h4 id=\"反向特征消除\">反向特征消除</h4>\n<p>Backward Feature Elimination, 用数据集中 n 个样本训练模型, 每次删除一个样本, 找出对模型影响最小的样本删除</p>\n<hr>\n<h4 id=\"前向特征选择\">前向特征选择</h4>\n<p>Forward Feature Selection,前向特征选择其实就是反向特征消除的相反过程,即找到能改善模型性能的最佳特征,而不是删除弱影响特征.它背后的思路如下所述：</p>\n<ol>\n<li>选择一个特征,用每个特征训练模型 n 次,得到 n 个模型.</li>\n<li>选择模型性能最佳的变量作为初始变量.</li>\n<li>每次添加一个变量继续训练,重复上一过程,最后保留性能提升最大的变量.</li>\n<li>一直添加,一直筛选,直到模型性能不再有明显提高.</li>\n</ol>\n<hr>\n<h4 id=\"因子分析\">因子分析</h4>\n<p>Factor Analysis, 因子分析是一种常见的统计方法,它能从多个变量中提取共性因子,并得到最优解.</p>\n<p>在因子分析中,我们将变量按其相关性分组,即特定组内所有变量的相关性较高,组间变量的相关性较低.我们把每个组称为一个因子,它是多个变量的组合.和原始数据集的变量相比,这些因子在数量上更少,但携带的信息基本一致.</p>\n<hr>\n<h4 id=\"主成分分析-PCA\">主成分分析-PCA</h4>\n<p>通过正交变换将原始的 n 维数据集变换到一个新的被称做主成分的数据集中,即从现有的大量变量中提取一组新的变量.下面是关于 PCA 的一些要点：</p>\n<ol>\n<li>主成分是原始变量的线性组合.</li>\n<li>第一个主成分具有最大的方差值.</li>\n<li>第二主成分试图解释数据集中的剩余方差,并且与第一主成分不相关 (正交).</li>\n<li>第三主成分试图解释前两个主成分等没有解释的方差.</li>\n</ol>\n<p>映射不包含任何数据内部的分类信息, 因此一般 PCA 降维后数据表示更有效但或许分类更加困难</p>\n<hr>\n<h4 id=\"LDA\">LDA</h4>\n<p>Linear Discriminant Analysis / Fisher Linear Discriminant 是一种有监督的 supervised 线性降维算法</p>\n<p>LDA 充分利用数据的标签信息, 一般 LDA 降维后可以直接分类</p>\n<p>假设原始数据集表示为 X,(m*n 矩阵,m 是维度,n 是 sample 的数量), 目标是找到映射向量 a, 使得 a‘X 后的数据点能够保持以下两种性质：</p>\n<ol>\n<li>\n<p>同类的数据点尽可能的接近 (within class)</p>\n</li>\n<li>\n<p>不同类的数据点尽可能的分开 (between class)</p>\n</li>\n</ol>\n<hr>\n<h4 id=\"局部线性嵌入-LLE\">局部线性嵌入-LLE</h4>\n<p>非线性降维, 可使数据降维后较好的保持 <code>流形结构</code> ,适用于 flow-learninh</p>\n<hr>\n<h4 id=\"拉普拉斯特征映射-LE\">拉普拉斯特征映射-LE</h4>\n<p>Laplacian-Eigenmaps, 也是一种常用的流形降维算法, 思想也近似 LLE</p>\n<!-- TODO 暂时搁置\nhttps://zhuanlan.zhihu.com/p/100002630 -->\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"超参的学习-更新\">超参的学习-更新</h2>\n<h3 id=\"损失函数-loss\">损失函数-loss</h3>\n<p>loss function, 也叫代价函数 cost function</p>\n<p>用于衡量样本给出的 <code>真实值</code><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> 与 模型输出的 <code>预测值</code>y 之间的差异</p>\n<blockquote>\n<p>损失函数将 <code>寻找最优参数</code> 问题转换为了 <code>寻找损失函数最小值</code> 问题</p>\n</blockquote>\n<hr>\n<h4 id=\"均方差损失函数-MSE\">均方差损失函数-MSE</h4>\n<p>mean squared error, 常用于回归问题, 对于真实值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> 和预测值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>,其均方差</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>均方差在几何意义上对应欧几里得距离 (欧氏距离)</p>\n<ul>\n<li>\n<p>基于 min(均方差 loss) 寻找最优模型的方法叫 <code>最小二乘法</code></p>\n<p>在线性回归中应用的解释为: 寻找一条距所有真实值样本点 几何距离之和 最小的直线</p>\n<p>如何求 min(均方差 loss) ? -&gt; 一种方法是求导,令导函数 = 0 求解</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"交叉熵损失函数\">交叉熵损失函数</h4>\n<ul>\n<li>\n<p>分类问题常用交叉熵作为损失函数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">y</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><msup><mi mathvariant=\"bold-italic\">y</mi><mi mathvariant=\"normal\">⊤</mi></msup><mi>log</mi><mo>⁡</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><msub><mi>y</mi><mi>c</mi></msub><mi>log</mi><mo>⁡</mo><msub><mi>f</mi><mi>c</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>二分类</mtext><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>:</mo><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  \\mathcal{L}(\\boldsymbol{y}, f(\\boldsymbol{x} ; \\theta))\n  &amp;=-\\boldsymbol{y}^{\\top} \\log f(\\boldsymbol{x} ; \\theta) \\\\\n  &amp;=-\\sum_{c=1}^{C} y_{c} \\log f_{c}(\\boldsymbol{x} ; \\theta)\n\n  \\\\ \\ \\\\\n\n  二分类loss: \\mathcal{L}(y, \\hat{y})\n  &amp;= - \\left[ y \\log \\hat y + (1  - y) \\log (1 - \\hat y) \\right]\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.9546em;vertical-align:-3.7273em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2273em;\"><span style=\"top:-7.1565em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">))</span></span></span><span style=\"top:-4.6682em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.2611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-0.7611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">二分类</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.7273em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2273em;\"><span style=\"top:-7.1565em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span><span style=\"top:-4.6682em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.7611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.7273em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>例题</p>\n<p>对于期末考试三种结果,假设 one-hot 标签编码:</p>\n<p>优秀 [1,0,0]<br>\n合格 [0,1,0]<br>\n不合格 [0,0,1]</p>\n<p>假设优秀,合格,不合格概率分别为:</p>\n<p>甲 [0.2,0.5,0.3]<br>\n乙 [0.2,0.2,0.6]</p>\n<p>实际二位都不合格</p>\n<hr>\n<p>分别求交叉熵:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mtext>甲</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.3</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>=</mo><mn>1.2</mn><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mtext>乙</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.6</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>=</mo><mn>0.51</mn></mrow><annotation encoding=\"application/x-tex\">loss(甲) = -\\left[0 \\cdot \\ln(0.2) + 0 \\cdot \\ln(0.5) + 1 \\cdot \\ln(0.3)\\right] = 1.2\n\\\\ \\ \\\\\nloss(乙) = -\\left[0 \\cdot \\ln(0.2) + 0 \\cdot \\ln(0.2) + 1 \\cdot \\ln(0.6)\\right] = 0.51\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">甲</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.3</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.2</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">乙</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.6</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.51</span></span></span></span></span></p>\n<p>预测值越接近真实标签,损失函数越小</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"过-欠拟合及处理\">过-欠拟合及处理</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/04/10/RtRLGQ.png\" alt=\"\"></p>\n<p>一种是啥都没背过; 一种是背过了但只会死记硬背,不会其他的</p>\n<ul>\n<li>\n<p>可以用泛化误差来衡量拟合程度 <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/10/RtRSAt.png\" alt=\"\"></p>\n<hr>\n</li>\n</ul>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>处理\n<ul>\n<li>过拟合\n<ul>\n<li>训练数据++, 数据增广</li>\n<li>早停</li>\n<li>降维</li>\n<li>正则化</li>\n<li>集成学习方法</li>\n</ul>\n</li>\n<li>欠拟合\n<ul>\n<li>添加新特征</li>\n<li>增加模型复杂度</li>\n<li>减小正则化系数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"早停\">早停</h3>\n<p>Early Stopping <sup id='cite_ref-7'><a href=\"#cite_note-7\">[7]</a></sup></p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4m8h.png\" alt=\"\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"优化算法\">优化算法</h2>\n<h3 id=\"梯度下降法\">梯度下降法</h3>\n<p>在使用最小二乘法计算 min(均方差 loss) 时,有可能会遇到逆矩阵不存在或者计算量巨大的情况</p>\n<p>这时就可以用梯度下降法求 loss 极小值,进而找最小值</p>\n<ul>\n<li>\n<p>分类</p>\n<ul>\n<li>批量梯度下降法 BGD</li>\n<li>随机剃度下降法 SGD</li>\n<li>小批量随机梯度下降法 MBSGD</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://www.helloimg.com/images/2022/05/14/R7AFVm.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>步骤: 对于 梯度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span> 和其对应的 loss</p>\n<ol>\n<li>\n<p>loss 是否足够小/迭代次数是否达到? -&gt; 如果不够,就更新参数,继续迭代</p>\n</li>\n<li>\n<p>梯度下降</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>t</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi mathvariant=\"script\">L</mi><mrow><mo fence=\"true\">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo separator=\"true\">;</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nw_{t+1}\n&amp;=w_{t}-\\alpha \\frac{\\partial \\mathcal{R}(w)}{\\partial w_{t}} \\\\\n&amp;=w_{t}-\\alpha \\frac{1}{N} \\sum_{i=1}^{N} \\frac{\\partial \\mathcal{L}\\left(w_{t} ; x^{(i)}, y^{(i)}\\right)}{\\partial w}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.969em;vertical-align:-2.7345em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2345em;\"><span style=\"top:-5.6358em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.6715em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7345em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2345em;\"><span style=\"top:-5.6358em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathcal\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.6715em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.628em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.74em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7345em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>循环 1.</p>\n</li>\n</ol>\n<hr>\n</li>\n<li>\n<details>\n  <summary> 例题 </summary>\n<hr>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>假设函数</mtext><mo>:</mo><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>w</mi><mn>2</mn></msup><mspace width=\"1em\"/><mtext>假设起点</mtext><mo>:</mo><msup><mi>w</mi><mn>0</mn></msup><mo>=</mo><mn>1</mn><mspace width=\"1em\"/><mtext>学习率为</mtext><mo>:</mo><mi>α</mi><mo>=</mo><mn>0.4</mn><mspace linebreak=\"newline\"></mspace><mtext>根据梯度下降公式迭代寻优</mtext></mrow><annotation encoding=\"application/x-tex\">假设函数: J(w)=w^2 \\quad\n假设起点: w^0=1 \\quad\n学习率为: \\alpha = 0.4 \\\\\n根据梯度下降公式迭代寻优\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">假设函数</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord cjk_fallback\">假设起点</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord cjk_fallback\">学习率为</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.4</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">根据梯度下降公式迭代寻优</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>0</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>1</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mn>0</mn></msup><mo>−</mo><mi>α</mi><mo>⋅</mo><msup><mi>J</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mn>0</mn></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mn>0.4</mn><mo>⋅</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>2</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mn>1</mn></msup><mo>−</mo><mi>α</mi><mo>⋅</mo><msup><mi>J</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mn>1</mn></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.04</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>3</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.008</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>4</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.0016</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nw^0\n  &amp;= 1 \\\\\nw^1\n  &amp;= w^0 - \\alpha \\cdot J&#x27;(w^0) \\\\\n  &amp;= 1 - 0.4 \\cdot 2 \\\\\n  &amp;= 0.2 \\\\\nw^2\n  &amp;= w^1 - \\alpha \\cdot J&#x27;(w^1) \\\\\n  &amp;= 0.04 \\\\\nw^3\n  &amp;= 0.008 \\\\\nw^4\n  &amp;= 0.0016 \\\\\n...\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:13.6205em;vertical-align:-6.5603em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.0603em;\"><span style=\"top:-9.1962em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span><span style=\"top:-7.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span><span style=\"top:-6.1721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.1479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.6479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.1238em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span><span style=\"top:1.4003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span><span style=\"top:2.9003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">...</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.5603em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.0603em;\"><span style=\"top:-9.1962em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-7.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-6.1721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span></span></span><span style=\"top:-4.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.2</span></span></span><span style=\"top:-3.1479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.6479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.04</span></span></span><span style=\"top:-0.1238em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.008</span></span></span><span style=\"top:1.4003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.0016</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.0603em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/10/Rsusaq.png\" alt=\"\"></p>\n</details>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"学习率\">学习率</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4edA.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>学习率退火</p>\n<p>如果学习率不变,对于初期来说学习率偏低, 收敛慢 loss 下降慢</p>\n<p>对于后期来说又偏大,导致难以收敛, loss 止步不降</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4EX0.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"正则化\">正则化</h3>\n<p>保留所有特征 x,减少参数 w 大小 (给高次项或者所有项加上系数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>来压制)</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>θ</mi><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>θ</mi><msub><mi>w</mi><mn>4</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mspace width=\"2em\"/><mn>0</mn><mo>&lt;</mo><mi>θ</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y = w_1 x + w_2 x^2 + \\theta x^3 + \\theta w_4 x^4 \\qquad 0 &lt; \\theta &lt;= 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<ul>\n<li>\n<p>实际操作就是在目标函数(如损失函数)后加上一个范数:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mrow><mo fence=\"true\">∥</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">∥</mo></mrow><mi>p</mi></msub><mo>=</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\begin{Vmatrix} x \\end{Vmatrix}_p\n= \\sqrt{\\sum_{i=1}^{n} |x_i|^p}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3978em;vertical-align:-0.5358em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.862em;\"><span style=\"top:-2.256em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.854em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span style=\"height:0.016em;width:0.5556em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.5556em' height='0.016em' style='width:0.5556em' viewBox='0 0 555.5600000000001 16' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V16 H145z M145 0 H188 V16 H145zM367 0 H410 V16 H367z M367 0 H410 V16 H367z'/></svg></span></span><span style=\"top:-2.862em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.862em;\"><span style=\"top:-2.256em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span><span style=\"top:-2.854em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span style=\"height:0.016em;width:0.5556em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.5556em' height='0.016em' style='width:0.5556em' viewBox='0 0 555.5600000000001 16' preserveAspectRatio='xMinYMin'><path d='M145 0 H188 V16 H145z M145 0 H188 V16 H145zM367 0 H410 V16 H367z M367 0 H410 V16 H367z'/></svg></span></span><span style=\"top:-2.862em;\"><span class=\"pstrut\" style=\"height:2.606em;\"></span><span class=\"delimsizinginner delim-size1\"><span>∥</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.0983em;\"><span style=\"top:-2.3003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1568em;vertical-align:-1.2777em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='3.1968em' viewBox='0 0 400000 3196' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>p = 1 时为 <code>L1 范数 (曼哈顿范数)</code>,所有系数绝对值之和</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^{n} |x|\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span></span></p>\n<p>p = 2 时为 <code>L2 范数 (欧几里得范数)</code>,所有系数平方和的开方</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{\\sum_{i=1}^{n} |x_i|^2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.1568em;vertical-align:-1.2777em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='3.1968em' viewBox='0 0 400000 3196' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"权重初始化\">权重初始化</h3>\n<p>就像是 KMeans 一样, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 的初始化对训练的性能和结果也会有很大影响</p>\n<ul>\n<li>\n<p>一种方法是随机初始化</p>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4J2m.png\" alt=\"\"></p>\n</li>\n<li>\n<p>另一种就是参考已经训练好的优秀模型的调参</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"图像增广-DataAugmentation\">图像增广-DataAugmentation</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/05/19/Ry4toc.png\" alt=\"\"></p>\n<ol>\n<li>防止过拟合</li>\n<li>增强模型泛化能力</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-34\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6\">【上海交大】【腾讯】强强联合 机器学习+深度学习</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://zhuanlan.zhihu.com/p/43225794\">12 种降维方法终极指南 (含 Python 代码)</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://zhuanlan.zhihu.com/p/146600360\">05-生成网络总结 (VAE, GAN)</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://blog.csdn.net/qq_38651469/article/details/121100275\">独热编码 (One-Hot)及其代码</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://zhuanlan.zhihu.com/p/72038532\">欠拟合、过拟合及如何防止过拟合</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/\">https://scikit-learn.org/stable/tutorial/machine_learning_map/</a></p>\n<p><a name='cite_note-7' href='#cite_ref-7'>[7]</a>: <a href=\"https://www.bilibili.com/video/BV1ou411k7fD?p=6\">4 小时入门深度学习+实操 MMDetection 第一课</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "math",
                "python",
                "人工智能",
                "信息论",
                "机器学习",
                "doing"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/code/ML/",
            "url": "https://weidows.github.io/post/python/code/ML/",
            "title": "👀Code-4-Machine-Learning",
            "date_published": "2022-04-11T07:07:22.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-02-23 02:28:46\n * @FilePath: \\Blog-private\\scaffolds\\post.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"序-2\">序</h2>\n<p>此文为其他文章的代码部分:</p>\n<blockquote>\n<p><a href=\"../../AI/ML\">🥵硬啃-Machine-Learning</a></p>\n</blockquote>\n<p>也提供了 notebook 形式: <a href=\"https://github.com/Weidows-projects/public-post/blob/main/notebook/ML/_ML.ipynb\">代码地址</a></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据预处理方法\">数据预处理方法</h2>\n<h3 id=\"标准化-均值移除\">标准化-均值移除</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据预处理之：均值移除示例</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">3.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">0.0</span>, <span class=\"number\">4.0</span>, <span class=\"number\">3.0</span>], \\</span><br><span class=\"line\">    [<span class=\"number\">1.0</span>, -<span class=\"number\">4.0</span>, <span class=\"number\">2.0</span>]]\\</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 求每列的平均值 axis=0为列, =1为行 不填就计算所有值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(raw_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"comment\"># 求每列标准差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(raw_samples.std(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">std_samples = raw_samples.copy()  <span class=\"comment\"># 复制样本数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> std_samples.T:  <span class=\"comment\"># .T为转置,遍历每列</span></span><br><span class=\"line\">    col_mean = col.mean()  <span class=\"comment\"># 计算平均数</span></span><br><span class=\"line\">    col_std = col.std()  <span class=\"comment\"># 求标准差</span></span><br><span class=\"line\">    col -= col_mean  <span class=\"comment\"># 减平均值</span></span><br><span class=\"line\">    col /= col_std  <span class=\"comment\"># 除标准差</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 均值无限趋近0,但可能不是0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.std(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># scale 标准移除,与上面功能相同</span></span><br><span class=\"line\">std_samples = sp.scale(raw_samples)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.std(axis=<span class=\"number\">0</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>[ 1.33333333 -0.33333333  2.33333333]\n[1.24721913 3.29983165 0.47140452]\n[ 5.55111512e-17  0.00000000e+00 -2.96059473e-16]\n[1. 1. 1.]\n[ 5.55111512e-17  0.00000000e+00 -2.96059473e-16]\n[1. 1. 1.]\n</code></pre>\n<h3 id=\"范围缩放-2\">范围缩放</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据预处理之：范围缩放</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">7.0</span>, <span class=\"number\">8.0</span>, <span class=\"number\">9.0</span>]]).astype(<span class=\"string\">&quot;float64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mms_samples = raw_samples.copy()  <span class=\"comment\"># 复制样本数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> mms_samples.T:</span><br><span class=\"line\">    col_min = col.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">    col_max = col.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">    col -= col_min</span><br><span class=\"line\">    col /= (col_max - col_min)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mms_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据给定范围创建一个范围缩放器对象</span></span><br><span class=\"line\"><span class=\"comment\"># 使用范围缩放器实现特征值范围缩放</span></span><br><span class=\"line\">mms_samples = sp.MinMaxScaler(feature_range=(<span class=\"number\">0</span>, <span class=\"number\">1</span>))\\</span><br><span class=\"line\">  .fit_transform(raw_samples)  <span class=\"comment\"># 缩放</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mms_samples)</span><br></pre></td></tr></table></figure>\n<pre><code>[[0.  0.  0. ]\n [0.5 0.5 0.5]\n [1.  1.  1. ]]\n[[0.  0.  0. ]\n [0.5 0.5 0.5]\n [1.  1.  1. ]]\n</code></pre>\n<h3 id=\"归一化-2\">归一化</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">10.0</span>, <span class=\"number\">20.0</span>, <span class=\"number\">5.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">8.0</span>, <span class=\"number\">10.0</span>, <span class=\"number\">1.0</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">nor_samples = raw_samples.copy()</span><br><span class=\"line\"><span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> nor_samples:</span><br><span class=\"line\">    row /= <span class=\"built_in\">abs</span>(row).<span class=\"built_in\">sum</span>()  <span class=\"comment\"># 先对行求绝对值，再求和，再除以绝对值之和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(nor_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># norm=l1  /=绝对值之和</span></span><br><span class=\"line\"><span class=\"comment\"># norm=l2  /=平方之和</span></span><br><span class=\"line\">nor_samples = sp.normalize(raw_samples.copy(), norm=<span class=\"string\">&#x27;l1&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(nor_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[0.28571429 0.57142857 0.14285714]\n [0.42105263 0.52631579 0.05263158]]\n[[0.28571429 0.57142857 0.14285714]\n [0.42105263 0.52631579 0.05263158]]\n</code></pre>\n<h3 id=\"二值化-2\">二值化</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 二值化</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([[<span class=\"number\">65.5</span>, <span class=\"number\">89.0</span>, <span class=\"number\">73.0</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">55.0</span>, <span class=\"number\">99.0</span>, <span class=\"number\">98.5</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">45.0</span>, <span class=\"number\">22.5</span>, <span class=\"number\">60.0</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">bin_samples = raw_samples.copy()  <span class=\"comment\"># 复制数组</span></span><br><span class=\"line\"><span class=\"comment\"># 生成掩码数组</span></span><br><span class=\"line\">mask1 = bin_samples &lt; <span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mask1)</span><br><span class=\"line\">mask2 = bin_samples &gt;= <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过掩码进行二值化处理 (只转换True的位置)</span></span><br><span class=\"line\">bin_samples[mask1] = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)</span><br><span class=\"line\">bin_samples[mask2] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">bin_transformer = sp.Binarizer(threshold=<span class=\"number\">60</span> - <span class=\"number\">1</span>)  <span class=\"comment\"># 创建二值化对象(注意边界值)</span></span><br><span class=\"line\">bin_samples = bin_transformer.transform(raw_samples.copy())  <span class=\"comment\"># 二值化预处理</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)</span><br></pre></td></tr></table></figure>\n<pre><code>[[False False False]\n [ True False False]\n [ True  True False]]\n[[65.5 89.  73. ]\n [ 0.  99.  98.5]\n [ 0.   0.  60. ]]\n[[1. 1. 1.]\n [0. 1. 1.]\n [0. 0. 1.]]\n[[1. 1. 1.]\n [0. 1. 1.]\n [0. 0. 1.]]\n</code></pre>\n<h3 id=\"独热编码示例\">独热编码示例</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([[<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">7</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">one_hot_encoder = sp.OneHotEncoder(</span><br><span class=\"line\">    sparse=<span class=\"literal\">False</span>,  <span class=\"comment\"># 是否采用稀疏格式</span></span><br><span class=\"line\">    dtype=<span class=\"string\">&quot;int32&quot;</span>,</span><br><span class=\"line\">    categories=<span class=\"string\">&quot;auto&quot;</span>)  <span class=\"comment\"># 自动编码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行独热编码</span></span><br><span class=\"line\">oh_samples = one_hot_encoder.fit_transform(raw_samples.copy())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(oh_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(one_hot_encoder.inverse_transform(oh_samples))  <span class=\"comment\"># 解码</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[1 0 1 0 0 1 0 0 0]\n [0 1 0 1 0 0 1 0 0]\n [1 0 0 0 1 0 0 1 0]\n [0 1 1 0 0 0 0 0 1]]\n[[1 3 2]\n [7 5 4]\n [1 8 6]\n [7 3 9]]\n</code></pre>\n<h3 id=\"标签编码-2\">标签编码</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([<span class=\"string\">&#x27;audi&#x27;</span>, <span class=\"string\">&#x27;ford&#x27;</span>, <span class=\"string\">&#x27;audi&#x27;</span>, <span class=\"string\">&#x27;bmw&#x27;</span>, <span class=\"string\">&#x27;ford&#x27;</span>, <span class=\"string\">&#x27;bmw&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">lb_encoder = sp.LabelEncoder()  <span class=\"comment\"># 定义标签编码对象</span></span><br><span class=\"line\">lb_samples = lb_encoder.fit_transform(raw_samples.copy())  <span class=\"comment\"># 执行标签编码</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lb_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lb_encoder.inverse_transform(lb_samples))  <span class=\"comment\"># 逆向转换</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[0 2 0 1 2 1]\n['audi' 'ford' 'audi' 'bmw' 'ford' 'bmw']\n</code></pre>\n<h2 id=\"基本问题-2\">基本问题</h2>\n<h3 id=\"回归问题-2\">回归问题</h3>\n<h4 id=\"线性回归-2\">线性回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> axes3d</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练数据集</span></span><br><span class=\"line\">train_x = np.array([<span class=\"number\">0.5</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.8</span>, <span class=\"number\">1.1</span>, <span class=\"number\">1.4</span>])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">train_y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\">n_epochs = <span class=\"number\">30</span>  <span class=\"comment\"># 迭代次数</span></span><br><span class=\"line\">l_rate = <span class=\"number\">0.01</span>  <span class=\"comment\"># 学习率</span></span><br><span class=\"line\">epochs = []  <span class=\"comment\"># 记录迭代次数</span></span><br><span class=\"line\">losses = []  <span class=\"comment\"># 记录损失值</span></span><br><span class=\"line\"></span><br><span class=\"line\">w0, w1 = [<span class=\"number\">1</span>], [<span class=\"number\">1</span>]  <span class=\"comment\"># 模型初始值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, n_epochs + <span class=\"number\">1</span>):</span><br><span class=\"line\">    epochs.append(i)  <span class=\"comment\"># 记录第几次迭代</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = w0[-<span class=\"number\">1</span>] + w1[-<span class=\"number\">1</span>] * train_x  <span class=\"comment\"># 取出最新的w0,w1计算线性方程输出</span></span><br><span class=\"line\">    <span class=\"comment\"># 损失函数(均方差)</span></span><br><span class=\"line\">    loss = (((train_y - y)**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>()) / <span class=\"number\">2</span></span><br><span class=\"line\">    losses.append(loss)  <span class=\"comment\"># 记录每次迭代的损失值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d: w0=%f, w1=%f, loss=%f&quot;</span> % (i, w0[-<span class=\"number\">1</span>], w1[-<span class=\"number\">1</span>], loss))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算w0,w1的偏导数</span></span><br><span class=\"line\">    d0 = -(train_y - y).<span class=\"built_in\">sum</span>()</span><br><span class=\"line\">    d1 = -(train_x * (train_y - y)).<span class=\"built_in\">sum</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 更新w0,w1</span></span><br><span class=\"line\">    w0.append(w0[-<span class=\"number\">1</span>] - (d0 * l_rate))</span><br><span class=\"line\">    w1.append(w1[-<span class=\"number\">1</span>] - (d1 * l_rate))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################### 训练过程可视化 ######################</span></span><br><span class=\"line\"><span class=\"comment\">## 损失函数收敛过程</span></span><br><span class=\"line\">w0 = np.array(w0[:-<span class=\"number\">1</span>])</span><br><span class=\"line\">w1 = np.array(w1[:-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&quot;Losses&quot;</span>, facecolor=<span class=\"string\">&quot;lightgray&quot;</span>)  <span class=\"comment\"># 创建一个窗体</span></span><br><span class=\"line\">mp.title(<span class=\"string\">&quot;epoch&quot;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&quot;loss&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&quot;:&quot;</span>)  <span class=\"comment\"># 网格线：虚线</span></span><br><span class=\"line\">mp.plot(epochs, losses, c=<span class=\"string\">&quot;blue&quot;</span>, label=<span class=\"string\">&quot;loss&quot;</span>)</span><br><span class=\"line\">mp.legend()  <span class=\"comment\"># 图例</span></span><br><span class=\"line\">mp.tight_layout()  <span class=\"comment\"># 紧凑格式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 显示模型直线</span></span><br><span class=\"line\">pred_y = w0[-<span class=\"number\">1</span>] + w1[-<span class=\"number\">1</span>] * train_x  <span class=\"comment\"># 根据x预测y</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&quot;Linear Regression&quot;</span>, facecolor=<span class=\"string\">&quot;lightgray&quot;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&quot;Linear Regression&quot;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&quot;x&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&quot;y&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&quot;:&quot;</span>)</span><br><span class=\"line\">mp.scatter(train_x, train_y, c=<span class=\"string\">&quot;blue&quot;</span>, label=<span class=\"string\">&quot;Traing&quot;</span>)  <span class=\"comment\"># 绘制样本散点图</span></span><br><span class=\"line\">mp.plot(train_x, pred_y, c=<span class=\"string\">&quot;red&quot;</span>, label=<span class=\"string\">&quot;Regression&quot;</span>)</span><br><span class=\"line\">mp.legend()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示梯度下降过程(复制粘贴即可，不需要编写)</span></span><br><span class=\"line\"><span class=\"comment\"># 计算损失函数曲面上的点 loss = f(w0, w1)</span></span><br><span class=\"line\">arr1 = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>)  <span class=\"comment\"># 0~9间产生500个元素的均匀列表</span></span><br><span class=\"line\">arr2 = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">3.5</span>, <span class=\"number\">500</span>)  <span class=\"comment\"># 0~3.5间产生500个元素的均匀列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">grid_w0, grid_w1 = np.meshgrid(arr1, arr2)  <span class=\"comment\"># 产生二维矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">flat_w0, flat_w1 = grid_w0.ravel(), grid_w1.ravel()  <span class=\"comment\"># 二维矩阵扁平化</span></span><br><span class=\"line\">loss_metrix = train_y.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># 生成误差矩阵（-1,1）表示自动计算维度</span></span><br><span class=\"line\">outer = np.outer(train_x, flat_w1)  <span class=\"comment\"># 求外积（train_x和flat_w1元素两两相乘的新矩阵）</span></span><br><span class=\"line\"><span class=\"comment\"># 计算损失：((w0 + w1*x - y)**2)/2</span></span><br><span class=\"line\">flat_loss = (((flat_w0 + outer - loss_metrix)**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>(axis=<span class=\"number\">0</span>)) / <span class=\"number\">2</span></span><br><span class=\"line\">grid_loss = flat_loss.reshape(grid_w0.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Loss Function&#x27;</span>)</span><br><span class=\"line\">ax = mp.axes(projection=<span class=\"string\">&#x27;3d&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Loss Function&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;w0&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;w1&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_zlabel(<span class=\"string\">&#x27;loss&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.plot_surface(grid_w0,</span><br><span class=\"line\">                grid_w1,</span><br><span class=\"line\">                grid_loss,</span><br><span class=\"line\">                rstride=<span class=\"number\">10</span>,</span><br><span class=\"line\">                cstride=<span class=\"number\">10</span>,</span><br><span class=\"line\">                cmap=<span class=\"string\">&#x27;jet&#x27;</span>)</span><br><span class=\"line\">ax.plot(w0, w1, losses, <span class=\"string\">&#x27;o-&#x27;</span>, c=<span class=\"string\">&#x27;orangered&#x27;</span>, label=<span class=\"string\">&#x27;BGD&#x27;</span>, zorder=<span class=\"number\">5</span>)</span><br><span class=\"line\">mp.legend(loc=<span class=\"string\">&#x27;lower left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>1: w0=1.000000, w1=1.000000, loss=44.175000\n2: w0=1.209000, w1=1.190600, loss=36.538828\n3: w0=1.399164, w1=1.363579, loss=30.231687\n4: w0=1.572208, w1=1.520546, loss=25.022227\n5: w0=1.729693, w1=1.662961, loss=20.719373\n6: w0=1.873039, w1=1.792151, loss=17.165309\n7: w0=2.003532, w1=1.909325, loss=14.229691\n8: w0=2.122345, w1=2.015577, loss=11.804865\n9: w0=2.230542, w1=2.111905, loss=9.801916\n10: w0=2.329091, w1=2.199215, loss=8.147408\n11: w0=2.418871, w1=2.278330, loss=6.780688\n12: w0=2.500681, w1=2.349997, loss=5.651660\n13: w0=2.575247, w1=2.414898, loss=4.718950\n14: w0=2.643230, w1=2.473648, loss=3.948384\n15: w0=2.705228, w1=2.526811, loss=3.311740\n16: w0=2.761786, w1=2.574896, loss=2.785706\n17: w0=2.813402, w1=2.618367, loss=2.351029\n18: w0=2.860524, w1=2.657645, loss=1.991807\n19: w0=2.903561, w1=2.693114, loss=1.694907\n20: w0=2.942886, w1=2.725122, loss=1.449482\n21: w0=2.978836, w1=2.753985, loss=1.246572\n22: w0=3.011719, w1=2.779990, loss=1.078777\n23: w0=3.041814, w1=2.803399, loss=0.939987\n24: w0=3.069373, w1=2.824449, loss=0.825153\n25: w0=3.094629, w1=2.843355, loss=0.730107\n26: w0=3.117790, w1=2.860315, loss=0.651405\n27: w0=3.139046, w1=2.875507, loss=0.586204\n28: w0=3.158572, w1=2.889091, loss=0.532154\n29: w0=3.176523, w1=2.901216, loss=0.487315\n30: w0=3.193044, w1=2.912016, loss=0.450086\n</code></pre>\n<p><img src=\"ML_files/ML_13_1.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_13_2.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_13_3.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 利用LinearRegression实现线性回归</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm  <span class=\"comment\"># 线性模型# 线性模型</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.metrics <span class=\"keyword\">as</span> sm  <span class=\"comment\"># 模型性能评价模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\">train_x = np.array([[<span class=\"number\">0.5</span>], [<span class=\"number\">0.6</span>], [<span class=\"number\">0.8</span>], [<span class=\"number\">1.1</span>], [<span class=\"number\">1.4</span>]])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">train_y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建线性回归器</span></span><br><span class=\"line\">line_model = lm.LinearRegression()</span><br><span class=\"line\"><span class=\"comment\"># 用已知输入、输出数据集训练回归器</span></span><br><span class=\"line\">line_model.fit(train_x, train_y)</span><br><span class=\"line\"><span class=\"comment\"># 根据训练模型预测输出</span></span><br><span class=\"line\">pred_y = line_model.predict(train_x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;coef_:&quot;</span>, line_model.coef_)  <span class=\"comment\"># 系数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;intercept_:&quot;</span>, line_model.intercept_)  <span class=\"comment\"># 截距</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化回归曲线</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制样本点</span></span><br><span class=\"line\">mp.scatter(train_x, train_y, c=<span class=\"string\">&#x27;blue&#x27;</span>, alpha=<span class=\"number\">0.8</span>, s=<span class=\"number\">60</span>, label=<span class=\"string\">&#x27;Sample&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制拟合直线</span></span><br><span class=\"line\">mp.plot(</span><br><span class=\"line\">    train_x,  <span class=\"comment\"># x坐标数据</span></span><br><span class=\"line\">    pred_y,  <span class=\"comment\"># y坐标数据</span></span><br><span class=\"line\">    c=<span class=\"string\">&#x27;orangered&#x27;</span>,</span><br><span class=\"line\">    label=<span class=\"string\">&#x27;Regression Line&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.legend()  <span class=\"comment\"># 左上角的图例</span></span><br><span class=\"line\">mp.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>coef_: [2.2189781]\nintercept_: 4.107299270072994\n</code></pre>\n<p><img src=\"ML_files/ML_14_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets, linear_model, model_selection</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># science kit learn 自带的糖尿病数据</span></span><br><span class=\"line\">X, y = datasets.load_diabetes(return_X_y=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># 442 * 10 大小的二维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(X.shape)</span><br><span class=\"line\"><span class=\"comment\"># No.1 * 10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(X[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只取第二维的第三列作为特征输入 (也就是0.06169621这一列)</span></span><br><span class=\"line\">X = X[:, np.newaxis, <span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># train : test = 2 : 1</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = model_selection.train_test_split(</span><br><span class=\"line\">    X, y, test_size=<span class=\"number\">0.33</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model = linear_model.LinearRegression()</span><br><span class=\"line\">model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X_test, y_test, color=<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">plt.plot(X_test, y_pred, color=<span class=\"string\">&#x27;blue&#x27;</span>, linewidth=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>(442, 10)\n[ 0.03807591  0.05068012  0.06169621  0.02187235 -0.0442235  -0.03482076\n -0.04340085 -0.00259226  0.01990842 -0.01764613]\n</code></pre>\n<p><img src=\"ML_files/ML_15_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pumpkins[pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;bushel&#x27;</span>,</span><br><span class=\"line\">                                                     case=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                     regex=<span class=\"literal\">True</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pumpkins.head()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pumpkins.isnull().sum()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A set of new columns for a new dataframe. Filter out nonmatching columns</span></span><br><span class=\"line\">pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [</span><br><span class=\"line\">        <span class=\"string\">&#x27;Package&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Month&#x27;</span>, <span class=\"string\">&#x27;Low Price&#x27;</span>, <span class=\"string\">&#x27;High Price&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Date&#x27;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">],</span><br><span class=\"line\">                         axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get an average between low and high price for the base pumpkin price</span></span><br><span class=\"line\">price = (pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>] + pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create a new dataframe with this basic data</span></span><br><span class=\"line\">new_pumpkins = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"comment\"># Convert the date to its month only</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;Month&#x27;</span>:</span><br><span class=\"line\">    pd.DatetimeIndex(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).month,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DayOfYear&#x27;</span>:</span><br><span class=\"line\">    pd.to_datetime(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).apply(</span><br><span class=\"line\">        <span class=\"keyword\">lambda</span> dt: (dt - datetime(dt.year, <span class=\"number\">1</span>, <span class=\"number\">1</span>)).days),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Variety&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;City&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;City Name&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Package&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Low Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;High Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Price&#x27;</span>:</span><br><span class=\"line\">    price</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Convert the price if the Package contains fractional bushel values</span></span><br><span class=\"line\"><span class=\"comment\"># loc 遍历Package列中包含 &#x27;1 1/9&#x27; 的行, 对每行的 Price 列进行操作</span></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1 1/9&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / (<span class=\"number\">1</span> + <span class=\"number\">1</span> / <span class=\"number\">9</span>)</span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1/2&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / (<span class=\"number\">1</span> / <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 散点图</span></span><br><span class=\"line\">plt.scatter(new_pumpkins.Price, new_pumpkins.Month)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Price&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Month&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 柱状图</span></span><br><span class=\"line\">new_pumpkins.groupby([<span class=\"string\">&#x27;Month&#x27;</span>])[<span class=\"string\">&#x27;Price&#x27;</span>].mean().plot(kind=<span class=\"string\">&#x27;bar&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Month&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ax = <span class=\"literal\">None</span></span><br><span class=\"line\">colors = [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;yellow&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, var <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>].unique()):</span><br><span class=\"line\">    ax = new_pumpkins[new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>] == var].plot.scatter(<span class=\"string\">&#x27;DayOfYear&#x27;</span>,</span><br><span class=\"line\">                                                                   <span class=\"string\">&#x27;Price&#x27;</span>,</span><br><span class=\"line\">                                                                   ax=ax,</span><br><span class=\"line\">                                                                   c=colors[i],</span><br><span class=\"line\">                                                                   label=var)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_16_0.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_16_1.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_16_2.png\" alt=\"png\"></p>\n<h4 id=\"多项式回归-2\">多项式回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score, mean_squared_error, mean_absolute_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.pipeline <span class=\"keyword\">import</span> make_pipeline</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\">pumpkins = pumpkins[pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;bushel&#x27;</span>,</span><br><span class=\"line\">                                                     case=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                     regex=<span class=\"literal\">True</span>)]</span><br><span class=\"line\">pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [</span><br><span class=\"line\">        <span class=\"string\">&#x27;Package&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Month&#x27;</span>, <span class=\"string\">&#x27;Low Price&#x27;</span>, <span class=\"string\">&#x27;High Price&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Date&#x27;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">],</span><br><span class=\"line\">                         axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">price = (pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>] + pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Month&#x27;</span>:</span><br><span class=\"line\">    pd.DatetimeIndex(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).month,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DayOfYear&#x27;</span>:</span><br><span class=\"line\">    pd.to_datetime(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).apply(</span><br><span class=\"line\">        <span class=\"keyword\">lambda</span> dt: (dt - datetime(dt.year, <span class=\"number\">1</span>, <span class=\"number\">1</span>)).days),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Variety&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;City&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;City Name&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Package&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Low Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;High Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Price&#x27;</span>:</span><br><span class=\"line\">    price</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1 1/9&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / <span class=\"number\">1.1</span></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1/2&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price * <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">pie_pumpkins = new_pumpkins[new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>] == <span class=\"string\">&#x27;PIE TYPE&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    pie_pumpkins[<span class=\"string\">&#x27;DayOfYear&#x27;</span>].to_numpy().reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">    pie_pumpkins[<span class=\"string\">&#x27;Price&#x27;</span>],</span><br><span class=\"line\">    test_size=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pipeline = make_pipeline(PolynomialFeatures(<span class=\"number\">2</span>), LinearRegression())</span><br><span class=\"line\"></span><br><span class=\"line\">pipeline.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">pred = pipeline.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">mse = np.sqrt(mean_squared_error(y_test, pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Mean error: <span class=\"subst\">&#123;mse:<span class=\"number\">3.3</span>&#125;</span> (<span class=\"subst\">&#123;mse/np.mean(pred)*<span class=\"number\">100</span>:<span class=\"number\">3.3</span>&#125;</span>%)&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">score = pipeline.score(X_train, y_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Model determination: &#x27;</span>, score)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X_test, y_test)</span><br><span class=\"line\">plt.plot(<span class=\"built_in\">sorted</span>(X_test), pipeline.predict(<span class=\"built_in\">sorted</span>(X_test)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Mean error: 2.73 (17.0%)\nModel determination:  0.07639977655280084\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x19b75ee76d0&gt;]\n</code></pre>\n<p><img src=\"ML_files/ML_18_2.png\" alt=\"png\"></p>\n<h3 id=\"决策树-随机森林-2\">决策树-随机森林</h3>\n<h4 id=\"决策树分类\">决策树分类</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydotplus</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;simHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature_E = <span class=\"string\">&#x27;sepal length&#x27;</span>, <span class=\"string\">&#x27;sepal width&#x27;</span>, <span class=\"string\">&#x27;petal length&#x27;</span>, <span class=\"string\">&#x27;petal width&#x27;</span></span><br><span class=\"line\">iris_feature = <span class=\"string\">&#x27;花萼长度&#x27;</span>, <span class=\"string\">&#x27;花萼宽度&#x27;</span>, <span class=\"string\">&#x27;花瓣长度&#x27;</span>, <span class=\"string\">&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">iris_class = <span class=\"string\">&#x27;Iris-setosa&#x27;</span>, <span class=\"string\">&#x27;Iris-versicolor&#x27;</span>, <span class=\"string\">&#x27;Iris-virginica&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x = data[<span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>))]</span><br><span class=\"line\"><span class=\"comment\"># y = pd.Categorical(data[4]).codes</span></span><br><span class=\"line\">y = LabelEncoder().fit_transform(data[<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"comment\"># 为了可视化，仅使用前两列特征</span></span><br><span class=\"line\">x = x[[<span class=\"number\">0</span>, <span class=\"number\">1</span>]]</span><br><span class=\"line\"><span class=\"comment\"># x = x.iloc[:, :2]</span></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 决策树参数估计</span></span><br><span class=\"line\"><span class=\"comment\"># min_samples_split = 10：如果该结点包含的样本数目大于10，则(有可能)对其分支</span></span><br><span class=\"line\"><span class=\"comment\"># min_samples_leaf = 10：若将某结点分支后，得到的每个子结点样本数目都大于10，则完成分支；否则，不进行分支</span></span><br><span class=\"line\">model = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>)</span><br><span class=\"line\">model.fit(x_train, y_train)</span><br><span class=\"line\">y_train_pred = model.predict(x_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;训练集正确率：&#x27;</span>, accuracy_score(y_train, y_train_pred))</span><br><span class=\"line\">y_test_hat = model.predict(x_test)  <span class=\"comment\"># 测试数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;测试集正确率：&#x27;</span>, accuracy_score(y_test, y_test_hat))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存</span></span><br><span class=\"line\"><span class=\"comment\"># dot -Tpng my.dot -o my.png</span></span><br><span class=\"line\"><span class=\"comment\"># 1、输出</span></span><br><span class=\"line\"><span class=\"comment\"># with open(&#x27;iris.dot&#x27;, &#x27;w&#x27;) as f:</span></span><br><span class=\"line\"><span class=\"comment\">#     tree.export_graphviz(model, out_file=f, feature_names=iris_feature_E[0:2], class_names=iris_class,</span></span><br><span class=\"line\"><span class=\"comment\">#                          filled=True, rounded=True, special_characters=True)</span></span><br><span class=\"line\">tree.export_graphviz(model,</span><br><span class=\"line\">                     out_file=<span class=\"string\">&#x27;./_data_set/iris_classification/iris.dot&#x27;</span>,</span><br><span class=\"line\">                     feature_names=iris_feature_E[<span class=\"number\">0</span>:<span class=\"number\">2</span>],</span><br><span class=\"line\">                     class_names=iris_class,</span><br><span class=\"line\">                     filled=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                     rounded=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                     special_characters=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2、给定文件名</span></span><br><span class=\"line\"><span class=\"comment\"># tree.export_graphviz(model, out_file=&#x27;iris.dot&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># tree.export_graphviz(model, out_file=&#x27;iris.dot&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># 3、输出为pdf格式</span></span><br><span class=\"line\">dot_data = tree.export_graphviz(model,</span><br><span class=\"line\">                                out_file=<span class=\"literal\">None</span>,</span><br><span class=\"line\">                                feature_names=iris_feature_E[<span class=\"number\">0</span>:<span class=\"number\">2</span>],</span><br><span class=\"line\">                                class_names=iris_class,</span><br><span class=\"line\">                                filled=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                rounded=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                special_characters=<span class=\"literal\">True</span>)</span><br><span class=\"line\">graph = pydotplus.graph_from_dot_data(dot_data)</span><br><span class=\"line\">graph.write_pdf(<span class=\"string\">&#x27;./_data_set/iris_classification/iris.pdf&#x27;</span>)</span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./_data_set/iris_classification/iris.png&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">f.write(graph.create_png())</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画图</span></span><br><span class=\"line\">N, M = <span class=\"number\">50</span>, <span class=\"number\">50</span>  <span class=\"comment\"># 横纵各采样多少个值</span></span><br><span class=\"line\">x1_min, x2_min = x.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">x1_max, x2_max = x.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">t1 = np.linspace(x1_min, x1_max, N)</span><br><span class=\"line\">t2 = np.linspace(x2_min, x2_max, M)</span><br><span class=\"line\">x1, x2 = np.meshgrid(t1, t2)  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">x_show = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x_show.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;x_show = \\n&#x27;</span>, x_show)</span><br><span class=\"line\"></span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">y_show_hat = model.predict(x_show)  <span class=\"comment\"># 预测值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat)</span><br><span class=\"line\">y_show_hat = y_show_hat.reshape(x1.shape)  <span class=\"comment\"># 使之与输入的形状相同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat)</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, y_show_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)  <span class=\"comment\"># 预测值的显示</span></span><br><span class=\"line\">plt.scatter(x_test[<span class=\"number\">0</span>],</span><br><span class=\"line\">            x_test[<span class=\"number\">1</span>],</span><br><span class=\"line\">            c=y_test.ravel(),</span><br><span class=\"line\">            edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">            s=<span class=\"number\">100</span>,</span><br><span class=\"line\">            zorder=<span class=\"number\">10</span>,</span><br><span class=\"line\">            cmap=cm_dark,</span><br><span class=\"line\">            marker=<span class=\"string\">&#x27;*&#x27;</span>)  <span class=\"comment\"># 测试数据</span></span><br><span class=\"line\">plt.scatter(x[<span class=\"number\">0</span>], x[<span class=\"number\">1</span>], c=y.ravel(), edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, s=<span class=\"number\">20</span>,</span><br><span class=\"line\">            cmap=cm_dark)  <span class=\"comment\"># 全部数据</span></span><br><span class=\"line\">plt.xlabel(iris_feature[<span class=\"number\">0</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(iris_feature[<span class=\"number\">1</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;鸢尾花数据的决策树分类&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练集上的预测结果</span></span><br><span class=\"line\">y_test = y_test.reshape(-<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_test_hat)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_test)</span><br><span class=\"line\">result = (y_test_hat == y_test)  <span class=\"comment\"># True则预测正确，False则预测错误</span></span><br><span class=\"line\">acc = np.mean(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;准确度: %.2f%%&#x27;</span> % (<span class=\"number\">100</span> * acc))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 过拟合：错误率</span></span><br><span class=\"line\">depth = np.arange(<span class=\"number\">1</span>, <span class=\"number\">15</span>)</span><br><span class=\"line\">err_train_list = []</span><br><span class=\"line\">err_test_list = []</span><br><span class=\"line\">clf = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> depth:</span><br><span class=\"line\">    clf.set_params(max_depth=d)</span><br><span class=\"line\">    clf.fit(x_train, y_train)</span><br><span class=\"line\">    y_train_pred = clf.predict(x_train)</span><br><span class=\"line\">    err_train = <span class=\"number\">1</span> - accuracy_score(y_train, y_train_pred)</span><br><span class=\"line\">    err_train_list.append(err_train)</span><br><span class=\"line\">    y_test_pred = clf.predict(x_test)</span><br><span class=\"line\">    err_test = <span class=\"number\">1</span> - accuracy_score(y_test, y_test_pred)</span><br><span class=\"line\">    err_test_list.append(err_test)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(d, <span class=\"string\">&#x27; 测试集错误率: %.2f%%&#x27;</span> % (<span class=\"number\">100</span> * err_test))</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(depth,</span><br><span class=\"line\">         err_test_list,</span><br><span class=\"line\">         <span class=\"string\">&#x27;ro-&#x27;</span>,</span><br><span class=\"line\">         markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">         lw=<span class=\"number\">2</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;测试集错误率&#x27;</span>)</span><br><span class=\"line\">plt.plot(depth,</span><br><span class=\"line\">         err_train_list,</span><br><span class=\"line\">         <span class=\"string\">&#x27;go-&#x27;</span>,</span><br><span class=\"line\">         markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">         lw=<span class=\"number\">2</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;训练集错误率&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;决策树深度&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;错误率&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;lower left&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树深度与过拟合&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>训练集正确率： 0.9523809523809523\n测试集正确率： 0.6222222222222222\n(2500, 2)\nx_show = \n [[4.3        2.        ]\n [4.37346939 2.        ]\n [4.44693878 2.        ]\n ...\n [7.75306122 4.4       ]\n [7.82653061 4.4       ]\n [7.9        4.4       ]]\n(2500,)\n[0 0 0 ... 2 2 2]\n[[0 0 0 ... 1 1 1]\n [0 0 0 ... 1 1 1]\n [0 0 0 ... 1 1 1]\n ...\n [0 0 0 ... 2 2 2]\n [0 0 0 ... 2 2 2]\n [0 0 0 ... 2 2 2]]\n</code></pre>\n<p><img src=\"ML_files/ML_20_1.png\" alt=\"png\"></p>\n<pre><code>[0 1 2 0 2 2 1 0 0 2 2 0 1 2 1 0 2 1 0 0 1 0 2 0 2 1 0 0 1 1 2 2 2 2 1 0 1\n 0 2 1 2 0 1 1 1]\n[0 1 1 0 2 1 2 0 0 2 1 0 2 1 1 0 1 1 0 0 1 1 1 0 2 1 0 0 1 2 1 2 1 2 2 0 1\n 0 1 2 2 0 2 2 1]\n准确度: 62.22%\n1  测试集错误率: 44.44%\n2  测试集错误率: 40.00%\n3  测试集错误率: 20.00%\n4  测试集错误率: 24.44%\n5  测试集错误率: 24.44%\n6  测试集错误率: 28.89%\n7  测试集错误率: 37.78%\n8  测试集错误率: 40.00%\n9  测试集错误率: 37.78%\n10  测试集错误率: 40.00%\n11  测试集错误率: 37.78%\n12  测试集错误率: 37.78%\n13  测试集错误率: 40.00%\n14  测试集错误率: 37.78%\n</code></pre>\n<p><img src=\"ML_files/ML_20_3.png\" alt=\"png\"></p>\n<h4 id=\"随机森林-3\">随机森林</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature = <span class=\"string\">u&#x27;花萼长度&#x27;</span>, <span class=\"string\">u&#x27;花萼宽度&#x27;</span>, <span class=\"string\">u&#x27;花瓣长度&#x27;</span>, <span class=\"string\">u&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x_prime = data[<span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>))]</span><br><span class=\"line\">y = pd.Categorical(data[<span class=\"number\">4</span>]).codes</span><br><span class=\"line\">x_prime_train, x_prime_test, y_train, y_test = train_test_split(x_prime,</span><br><span class=\"line\">                                                                y,</span><br><span class=\"line\">                                                                train_size=<span class=\"number\">0.7</span>,</span><br><span class=\"line\">                                                                random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">feature_pairs = [[<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">2</span>], [<span class=\"number\">0</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">3</span>]]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>), facecolor=<span class=\"string\">&#x27;#FFFFFF&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, pair <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(feature_pairs):</span><br><span class=\"line\">    <span class=\"comment\"># 准备数据</span></span><br><span class=\"line\">    x_train = x_prime_train[pair]</span><br><span class=\"line\">    x_test = x_prime_test[pair]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 决策树学习</span></span><br><span class=\"line\">    model = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>, min_samples_leaf=<span class=\"number\">3</span>)</span><br><span class=\"line\">    model.fit(x_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">    N, M = <span class=\"number\">500</span>, <span class=\"number\">500</span>  <span class=\"comment\"># 横纵各采样多少个值</span></span><br><span class=\"line\">    x1_min, x2_min = x_train.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">    x1_max, x2_max = x_train.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">    t1 = np.linspace(x1_min, x1_max, N)</span><br><span class=\"line\">    t2 = np.linspace(x2_min, x2_max, M)</span><br><span class=\"line\">    x1, x2 = np.meshgrid(t1, t2)  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">    x_show = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 训练集上的预测结果</span></span><br><span class=\"line\">    y_train_pred = model.predict(x_train)</span><br><span class=\"line\">    acc_train = accuracy_score(y_train, y_train_pred)</span><br><span class=\"line\">    y_test_pred = model.predict(x_test)</span><br><span class=\"line\">    acc_test = accuracy_score(y_test, y_test_pred)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;特征：&#x27;</span>, iris_feature[pair[<span class=\"number\">0</span>]], <span class=\"string\">&#x27; + &#x27;</span>, iris_feature[pair[<span class=\"number\">1</span>]])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\t训练集准确率: %.4f%%&#x27;</span> % (<span class=\"number\">100</span> * acc_train))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\t测试集准确率: %.4f%%\\n&#x27;</span> % (<span class=\"number\">100</span> * acc_test))</span><br><span class=\"line\"></span><br><span class=\"line\">    cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">    cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">    y_hat = model.predict(x_show)</span><br><span class=\"line\">    y_hat = y_hat.reshape(x1.shape)</span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    plt.contour(x1,</span><br><span class=\"line\">                x2,</span><br><span class=\"line\">                y_hat,</span><br><span class=\"line\">                colors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                levels=[<span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">                antialiased=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                linewidths=<span class=\"number\">1</span>)</span><br><span class=\"line\">    plt.pcolormesh(x1, x2, y_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)  <span class=\"comment\"># 预测值</span></span><br><span class=\"line\">    plt.scatter(x_train[pair[<span class=\"number\">0</span>]],</span><br><span class=\"line\">                x_train[pair[<span class=\"number\">1</span>]],</span><br><span class=\"line\">                c=y_train,</span><br><span class=\"line\">                s=<span class=\"number\">20</span>,</span><br><span class=\"line\">                edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                cmap=cm_dark,</span><br><span class=\"line\">                label=<span class=\"string\">u&#x27;训练集&#x27;</span>)</span><br><span class=\"line\">    plt.scatter(x_test[pair[<span class=\"number\">0</span>]],</span><br><span class=\"line\">                x_test[pair[<span class=\"number\">1</span>]],</span><br><span class=\"line\">                c=y_test,</span><br><span class=\"line\">                s=<span class=\"number\">80</span>,</span><br><span class=\"line\">                marker=<span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">                edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                cmap=cm_dark,</span><br><span class=\"line\">                label=<span class=\"string\">u&#x27;测试集&#x27;</span>)</span><br><span class=\"line\">    plt.xlabel(iris_feature[pair[<span class=\"number\">0</span>]], fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">    plt.ylabel(iris_feature[pair[<span class=\"number\">1</span>]], fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">    <span class=\"comment\"># plt.legend(loc=&#x27;upper right&#x27;, fancybox=True, framealpha=0.3)</span></span><br><span class=\"line\">    plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">    plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">    plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.suptitle(<span class=\"string\">u&#x27;决策树对鸢尾花数据两特征组合的分类结果&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">1</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.94</span>))  <span class=\"comment\"># (left, bottom, right, top)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>特征： 花萼长度  +  花萼宽度\n\t训练集准确率: 85.7143%\n\t测试集准确率: 71.1111%\n\n特征： 花萼长度  +  花瓣长度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 91.1111%\n\n特征： 花萼长度  +  花瓣宽度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 86.6667%\n\n特征： 花萼宽度  +  花瓣长度\n\t训练集准确率: 97.1429%\n\t测试集准确率: 95.5556%\n\n特征： 花萼宽度  +  花瓣宽度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 84.4444%\n\n特征： 花瓣长度  +  花瓣宽度\n\t训练集准确率: 98.0952%\n\t测试集准确率: 97.7778%\n\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2108356862.py:83: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(1, rect=(0, 0, 1, 0.94))  # (left, bottom, right, top)\n</code></pre>\n<p><img src=\"ML_files/ML_22_2.png\" alt=\"png\"></p>\n<h4 id=\"决策树-随机森林回归\">决策树-随机森林回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [-3,3)</span></span><br><span class=\"line\">x = np.random.rand(N) * <span class=\"number\">6</span> - <span class=\"number\">3</span></span><br><span class=\"line\">x.sort()</span><br><span class=\"line\">y = np.sin(x) + np.random.randn(N) * <span class=\"number\">0.05</span></span><br><span class=\"line\">x = x.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># model = DecisionTreeRegressor(criterion=&#x27;mse&#x27;, max_depth=10)</span></span><br><span class=\"line\">model = RandomForestRegressor(n_estimators=<span class=\"number\">20</span>, criterion=<span class=\"string\">&#x27;mse&#x27;</span>, max_depth=<span class=\"number\">10</span>)</span><br><span class=\"line\">model.fit(x, y)</span><br><span class=\"line\">x_test = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">50</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">y_hat = model.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;r*&#x27;</span>, markersize=<span class=\"number\">10</span>, markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>, label=<span class=\"string\">&#x27;实际值&#x27;</span>)</span><br><span class=\"line\">plt.plot(x_test, y_hat, <span class=\"string\">&#x27;g-&#x27;</span>, linewidth=<span class=\"number\">2</span>, label=<span class=\"string\">&#x27;预测值&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;X&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Y&#x27;</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树-随机森林回归&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较决策树的深度影响</span></span><br><span class=\"line\">depth = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">clr = <span class=\"string\">&#x27;rgbmy&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># model = DecisionTreeRegressor(criterion=&#x27;mse&#x27;)</span></span><br><span class=\"line\">model = RandomForestRegressor(n_estimators=<span class=\"number\">20</span>, criterion=<span class=\"string\">&#x27;mse&#x27;</span>)</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;ro&#x27;</span>, ms=<span class=\"number\">5</span>, mec=<span class=\"string\">&#x27;k&#x27;</span>, label=<span class=\"string\">&#x27;实际值&#x27;</span>)</span><br><span class=\"line\">x_test = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">50</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> d, c <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(depth, clr):</span><br><span class=\"line\">    model.set_params(max_depth=d)</span><br><span class=\"line\">    model.fit(x, y)</span><br><span class=\"line\">    y_hat = model.predict(x_test)</span><br><span class=\"line\">    plt.plot(x_test,</span><br><span class=\"line\">             y_hat,</span><br><span class=\"line\">             <span class=\"string\">&#x27;-&#x27;</span>,</span><br><span class=\"line\">             color=c,</span><br><span class=\"line\">             linewidth=<span class=\"number\">2</span>,</span><br><span class=\"line\">             markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">             label=<span class=\"string\">&#x27;Depth=%d&#x27;</span> % d)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;X&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Y&#x27;</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树-随机森林回归&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>[[-2.95013857]\n [-2.91406777]\n [-2.90709403]\n [-2.90375999]\n [-2.87745415]\n [-2.86685497]\n [-2.84070033]\n [-2.81375697]\n [-2.77943784]\n [-2.77745775]\n [-2.66347611]\n [-2.65986762]\n [-2.64217075]\n [-2.63778267]\n [-2.63639243]\n [-2.60165162]\n [-2.48896096]\n [-2.43041085]\n [-2.39941506]\n [-2.38779079]\n [-2.37856289]\n [-2.32809632]\n [-2.29426051]\n [-2.25524085]\n [-2.23914776]\n [-2.16578847]\n [-2.0055294 ]\n [-1.9885004 ]\n [-1.73199798]\n [-1.61893958]\n [-1.58908223]\n [-1.54966302]\n [-1.49074428]\n [-1.46530843]\n [-1.40362808]\n [-1.3935955 ]\n [-1.3928819 ]\n [-1.37684247]\n [-1.3377295 ]\n [-1.33035029]\n [-1.24577529]\n [-1.15561278]\n [-1.12976361]\n [-0.92771942]\n [-0.91536325]\n [-0.83851709]\n [-0.54828961]\n [-0.54587447]\n [-0.54456521]\n [-0.51610774]\n [-0.38078143]\n [-0.27298529]\n [-0.20898971]\n [-0.20866835]\n [ 0.01703485]\n [ 0.03203468]\n [ 0.06107388]\n [ 0.07358949]\n [ 0.07361575]\n [ 0.10676155]\n [ 0.15818226]\n [ 0.20123638]\n [ 0.3410772 ]\n [ 0.45680655]\n [ 0.52384169]\n [ 0.65741898]\n [ 0.68306354]\n [ 0.82845395]\n [ 0.83952908]\n [ 0.99278446]\n [ 1.04865533]\n [ 1.16809926]\n [ 1.21294563]\n [ 1.44659934]\n [ 1.47606149]\n [ 1.48031876]\n [ 1.54476213]\n [ 1.54542061]\n [ 1.60452852]\n [ 1.85706958]\n [ 1.9814776 ]\n [ 2.07801869]\n [ 2.08420295]\n [ 2.08974078]\n [ 2.09458999]\n [ 2.21547939]\n [ 2.2354401 ]\n [ 2.2824592 ]\n [ 2.39313024]\n [ 2.4822308 ]\n [ 2.5275393 ]\n [ 2.56392915]\n [ 2.63696096]\n [ 2.65318554]\n [ 2.66286196]\n [ 2.67531127]\n [ 2.69337798]\n [ 2.78329004]\n [ 2.83409465]\n [ 2.94897411]]\n[-0.16517944 -0.2651016  -0.26383212 -0.2408083  -0.21137157 -0.30729908\n -0.24489794 -0.42738593 -0.39536257 -0.34762803 -0.55252409 -0.40629331\n -0.47658554 -0.47459876 -0.50897455 -0.58933727 -0.57144697 -0.61564276\n -0.76543047 -0.64009055 -0.79612233 -0.77625958 -0.82824783 -0.74228023\n -0.6882561  -0.85479709 -0.9210133  -0.88824326 -0.94228155 -1.04205908\n -1.01456756 -1.0150173  -1.01319155 -0.93942161 -1.0101109  -1.00949492\n -1.00669835 -1.02762794 -0.90526463 -1.04873446 -0.98356087 -0.96345712\n -0.90790305 -0.78617335 -0.8215092  -0.7756252  -0.62805774 -0.61416394\n -0.55438357 -0.54877048 -0.24409899 -0.24654351 -0.22139215 -0.31816396\n -0.00948097  0.03731195  0.07871564  0.06089414  0.091661    0.10130855\n  0.05916354  0.284293    0.32301758  0.47390064  0.43774825  0.59439442\n  0.62285701  0.78479681  0.7888438   0.91498224  0.91654605  0.84583033\n  0.90598404  0.99494553  1.05048367  0.97256267  1.04768316  1.09246729\n  0.92367061  0.97097779  0.98148804  0.86766162  0.87249721  0.81545132\n  0.80772307  0.75639662  0.73792794  0.75909448  0.71239606  0.63892773\n  0.6373865   0.53978973  0.47836416  0.47544309  0.4156747   0.46233128\n  0.43384357  0.32001956  0.2980857   0.16211947]\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2984870596.py:33: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2)\n</code></pre>\n<p><img src=\"ML_files/ML_24_2.png\" alt=\"png\"></p>\n<pre><code>C:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2984870596.py:60: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2)\n</code></pre>\n<p><img src=\"ML_files/ML_24_4.png\" alt=\"png\"></p>\n<h3 id=\"分类问题-2\">分类问题</h3>\n<h4 id=\"逻辑回归-2\">逻辑回归</h4>\n<h5 id=\"二分类\">二分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.array([[<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>], [<span class=\"number\">6</span>, <span class=\"number\">4</span>],\\</span><br><span class=\"line\">              [<span class=\"number\">5</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">5</span>], [<span class=\"number\">4</span>, <span class=\"number\">7</span>], [<span class=\"number\">4</span>, -<span class=\"number\">1</span>]])</span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建逻辑分类器对象</span></span><br><span class=\"line\"><span class=\"comment\"># C参数：正则强度，越大拟合效果越小，通过调整该参数防止过拟合</span></span><br><span class=\"line\"><span class=\"comment\"># solver参数：逻辑函数中指数的函数关系（liblinear表示线性关系）</span></span><br><span class=\"line\">model = lm.LogisticRegression()</span><br><span class=\"line\">model.fit(x, y)  <span class=\"comment\"># 训练</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 预测</span></span><br><span class=\"line\">test_x = np.array([[<span class=\"number\">3</span>, <span class=\"number\">9</span>], [<span class=\"number\">6</span>, <span class=\"number\">1</span>]])</span><br><span class=\"line\">test_y = model.predict(test_x)  <span class=\"comment\"># 预测</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算显示坐标的边界</span></span><br><span class=\"line\"><span class=\"comment\"># x[:, 0].min()   x 中所有数组的第一位</span></span><br><span class=\"line\">left = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">right = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">buttom = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">top = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 产生网格化矩阵</span></span><br><span class=\"line\">grid_x, grid_y = np.meshgrid(np.arange(left, right, <span class=\"number\">0.01</span>),</span><br><span class=\"line\">                             np.arange(buttom, top, <span class=\"number\">0.01</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;grid_x.shape:&quot;</span>, grid_x.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;grid_y.shape:&quot;</span>, grid_y.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将x,y坐标合并成两列</span></span><br><span class=\"line\">mesh_x = np.column_stack((grid_x.ravel(), grid_y.ravel()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;mesh_x.shape:&quot;</span>, mesh_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据每个点的xy坐标进行预测，并还原成二维形状</span></span><br><span class=\"line\">mesh_z = model.predict(mesh_x)</span><br><span class=\"line\">mesh_z = mesh_z.reshape(grid_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Logistic Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Logistic Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.pcolormesh(grid_x, grid_y, mesh_z, cmap=<span class=\"string\">&#x27;gray&#x27;</span>, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">mp.scatter(</span><br><span class=\"line\">    x[:, <span class=\"number\">0</span>],  <span class=\"comment\"># 样本x坐标</span></span><br><span class=\"line\">    x[:, <span class=\"number\">1</span>],  <span class=\"comment\"># 样本y坐标</span></span><br><span class=\"line\">    c=y,</span><br><span class=\"line\">    cmap=<span class=\"string\">&#x27;brg&#x27;</span>,</span><br><span class=\"line\">    s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.scatter(test_x[:, <span class=\"number\">0</span>], test_x[:, <span class=\"number\">1</span>], c=<span class=\"string\">&quot;red&quot;</span>, marker=<span class=\"string\">&#x27;s&#x27;</span>, s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<pre><code>[1 0]\ngrid_x.shape: (1100, 700)\ngrid_y.shape: (1100, 700)\nmesh_x.shape: (770000, 2)\n</code></pre>\n<p><img src=\"ML_files/ML_27_1.png\" alt=\"png\"></p>\n<h5 id=\"多分类\">多分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入</span></span><br><span class=\"line\">x = np.array([[<span class=\"number\">4</span>, <span class=\"number\">7</span>], [<span class=\"number\">3.5</span>, <span class=\"number\">8</span>], [<span class=\"number\">3.1</span>, <span class=\"number\">6.2</span>], [<span class=\"number\">0.5</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">1.2</span>, <span class=\"number\">1.9</span>],</span><br><span class=\"line\">              [<span class=\"number\">6</span>, <span class=\"number\">2</span>], [<span class=\"number\">5.7</span>, <span class=\"number\">1.5</span>], [<span class=\"number\">5.4</span>, <span class=\"number\">2.2</span>]])</span><br><span class=\"line\"><span class=\"comment\"># 输出（多个类别）</span></span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建逻辑分类器对象</span></span><br><span class=\"line\">model = lm.LogisticRegression(C=<span class=\"number\">200</span>)  <span class=\"comment\"># 调整该值为1看效果</span></span><br><span class=\"line\">model.fit(x, y)  <span class=\"comment\"># 训练</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 坐标轴范围</span></span><br><span class=\"line\">left = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">right = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">h = <span class=\"number\">0.005</span></span><br><span class=\"line\"></span><br><span class=\"line\">buttom = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">top = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">v = <span class=\"number\">0.005</span></span><br><span class=\"line\"></span><br><span class=\"line\">grid_x, grid_y = np.meshgrid(np.arange(left, right, h),</span><br><span class=\"line\">                             np.arange(buttom, top, v))</span><br><span class=\"line\"></span><br><span class=\"line\">mesh_x = np.column_stack((grid_x.ravel(), grid_y.ravel()))</span><br><span class=\"line\">mesh_z = model.predict(mesh_x)</span><br><span class=\"line\">mesh_z = mesh_z.reshape(grid_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Logistic Classification&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Logistic Classification&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.pcolormesh(grid_x, grid_y, mesh_z, cmap=<span class=\"string\">&#x27;gray&#x27;</span>, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">mp.scatter(x[:, <span class=\"number\">0</span>], x[:, <span class=\"number\">1</span>], c=y, cmap=<span class=\"string\">&#x27;brg&#x27;</span>, s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_29_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score, mean_squared_error, mean_absolute_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures, LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.pipeline <span class=\"keyword\">import</span> make_pipeline</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># pumpkins = pumpkins[pumpkins[&#x27;Package&#x27;].str.contains(&#x27;bushel&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#                                                      case=True,</span></span><br><span class=\"line\"><span class=\"comment\">#                                                      regex=True)]</span></span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    [<span class=\"string\">&#x27;Color&#x27;</span>, <span class=\"string\">&#x27;Origin&#x27;</span>, <span class=\"string\">&#x27;Item Size&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Package&#x27;</span>]</span><br><span class=\"line\">],</span><br><span class=\"line\">                             axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins.dropna(inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = new_pumpkins.apply(LabelEncoder().fit_transform)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 颜色数据与其他列的关系</span></span><br><span class=\"line\">sns.PairGrid(new_pumpkins).<span class=\"built_in\">map</span>(sns.scatterplot)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分类散点图</span></span><br><span class=\"line\"><span class=\"comment\"># sns.swarmplot(x=&quot;Color&quot;, y=&quot;Item Size&quot;, data=new_pumpkins)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 小提琴图</span></span><br><span class=\"line\">sns.catplot(x=<span class=\"string\">&quot;Color&quot;</span>, y=<span class=\"string\">&quot;Item Size&quot;</span>, kind=<span class=\"string\">&quot;violin&quot;</span>, data=new_pumpkins)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x19b7ed39fd0&gt;\n</code></pre>\n<p><img src=\"ML_files/ML_30_1.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_30_2.png\" alt=\"png\"></p>\n<h4 id=\"支持向量机-SVM-2\">支持向量机-SVM</h4>\n<h5 id=\"核函数-2\">核函数</h5>\n<ol>\n<li>\n<p>线性</p>\n</li>\n<li>\n<p>径向基-高斯</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature = <span class=\"string\">&#x27;花萼长度&#x27;</span>, <span class=\"string\">&#x27;花萼宽度&#x27;</span>, <span class=\"string\">&#x27;花瓣长度&#x27;</span>, <span class=\"string\">&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x, y = data[[<span class=\"number\">0</span>, <span class=\"number\">1</span>]], pd.Categorical(data[<span class=\"number\">4</span>]).codes</span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分类器</span></span><br><span class=\"line\"><span class=\"comment\"># svm_clf = svm.SVC(C=10, gamma=1, kernel=&#x27;rbf&#x27;, decision_function_shape=&#x27;ovo&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># svm_clf = svm.SVC(C=3, kernel=&#x27;poly&#x27;, degree=3)</span></span><br><span class=\"line\">svm_clf = svm.SVC(C=<span class=\"number\">3</span>, kernel=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;GridSearchCV begin...&#x27;</span>)</span><br><span class=\"line\">t = time()</span><br><span class=\"line\">clf = svm_clf</span><br><span class=\"line\"><span class=\"comment\"># clf = GridSearchCV(svm_clf, param_grid=&#123;&#x27;gamma&#x27;:np.logspace(-2, 2, 10), &#x27;C&#x27;:np.logspace(-2, 2, 10)&#125;, cv=3)</span></span><br><span class=\"line\">clf.fit(x_train, y_train.ravel())</span><br><span class=\"line\">t_end = time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;耗时：%d秒&#x27;</span> % (t_end - t))</span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;最优参数：&#x27;, clf.best_params_)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准确率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.score(x_train, y_train))  <span class=\"comment\"># 精度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;训练集准确率：&#x27;</span>, accuracy_score(y_train, clf.predict(x_train)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.score(x_test, y_test))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;测试集准确率：&#x27;</span>, accuracy_score(y_test, clf.predict(x_test)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># decision_function</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x_train[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;decision_function:\\n&#x27;</span>, clf.decision_function(x_train))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\npredict:\\n&#x27;</span>, clf.predict(x_train))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画图</span></span><br><span class=\"line\">x1_min, x2_min = x.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">x1_max, x2_max = x.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">x1, x2 = np.mgrid[x1_min:x1_max:<span class=\"number\">300j</span>, x2_min:x2_max:<span class=\"number\">300j</span>]  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">grid_test = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\">grid_hat = clf.predict(grid_test)  <span class=\"comment\"># 预测分类值</span></span><br><span class=\"line\">grid_hat = grid_hat.reshape(x1.shape)  <span class=\"comment\"># 使之与输入的形状相同</span></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, grid_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">plt.scatter(x[<span class=\"number\">0</span>], x[<span class=\"number\">1</span>], c=y, edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, s=<span class=\"number\">50</span>, cmap=cm_dark)  <span class=\"comment\"># 样本</span></span><br><span class=\"line\">plt.scatter(x_test[<span class=\"number\">0</span>], x_test[<span class=\"number\">1</span>], s=<span class=\"number\">120</span>, facecolors=<span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">            zorder=<span class=\"number\">10</span>)  <span class=\"comment\"># 圈中测试集样本</span></span><br><span class=\"line\">plt.xlabel(iris_feature[<span class=\"number\">0</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(iris_feature[<span class=\"number\">1</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;鸢尾花SVM二特征分类&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout(pad=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>GridSearchCV begin...\n耗时：0秒\n0.7888888888888889\n训练集准确率： 0.7888888888888889\n0.7833333333333333\n测试集准确率： 0.7833333333333333\n       0    1\n11   4.8  3.4\n113  5.7  2.5\n123  6.3  2.7\n12   4.8  3.0\n2    4.7  3.2\ndecision_function:\n [[ 2.27077043  0.77466667 -0.23050192]\n [-0.26084184  2.25751125  1.0560141 ]\n [-0.28293421  2.25843306  1.22796515]\n [ 2.24308998  0.92588576 -0.2355186 ]\n [ 2.26643883  0.80879936 -0.24170145]\n [-0.28069428  1.23581332  2.24817619]\n [ 2.28018898  0.76457517 -0.24714914]\n [-0.25832462  1.21350955  2.20811726]\n [-0.27289547  1.20094518  2.249947  ]\n [-0.28479994  1.2318958   2.26058535]\n [-0.23449614  2.22389578  1.08207816]\n [-0.27824598  1.19362022  2.2618816 ]\n [-0.24940836  1.20624284  2.19142888]\n [ 2.2732283  -0.2577432   0.82271427]\n [-0.2872948   2.27977562  1.1680301 ]\n [-0.28016055  1.24346593  2.23969255]\n [-0.28069428  1.23581332  2.24817619]\n [-0.17539161  2.25364746  0.77515212]\n [-0.25325305  1.14281388  2.23566431]\n [-0.2421088   2.25159667  0.90072452]\n [ 2.24374936 -0.23761503  0.93581753]\n [ 2.24150985  0.87804111 -0.2241573 ]\n [ 2.28041834 -0.27382086  0.86293615]\n [-0.27824598  1.19362022  2.2618816 ]\n [ 2.27361996  0.84008337 -0.26180365]\n [-0.26919985  2.24943754  1.18347413]\n [-0.28629221  2.26101768  1.23745359]\n [-0.23808639  1.19803786  2.16960812]\n [ 2.24670891 -0.21840299  0.83780678]\n [ 2.23817757  0.82105098 -0.19112107]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.24150985  0.87804111 -0.2241573 ]\n [-0.30409023  1.27536123  2.28319903]\n [-0.27073104  1.23503534  2.2197061 ]\n [-0.30441277  1.26883084  2.28803158]\n [-0.28752494  1.24411663  2.25991942]\n [-0.29292012  2.28000741  1.22212062]\n [-0.23176304  1.04104242  2.22722296]\n [-0.28694643  1.15125962  2.28088265]\n [-0.19956441  2.19653578  1.01742803]\n [ 2.26878977 -0.27918692  1.16597018]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.18519501  1.23494087 -0.26146238]\n [-0.2512831   2.2597216   0.89408741]\n [-0.29066599  1.240849    2.26933123]\n [ 2.25729439 -0.2129225   0.79411601]\n [-0.29441953  1.26382422  2.26345809]\n [ 2.26377705 -0.22976306  0.79617407]\n [ 2.27077043  0.77466667 -0.23050192]\n [-0.2445374   1.07681969  2.23683943]\n [-0.21840757  2.21786592  1.00447438]\n [-0.28524498  1.22203776  2.26581127]\n [ 2.24947915  0.81045802 -0.20787766]\n [ 2.2684482  -0.24915018  0.81973595]\n [-0.20907334  1.12013512  2.17603067]\n [ 2.26728139  0.82893904 -0.24984081]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.25207771  0.85867453 -0.23431088]\n [-0.28069428  1.23581332  2.24817619]\n [ 1.05055292  2.22662497 -0.23240122]\n [ 2.2722284   0.7997718  -0.24896247]\n [-0.26723747  1.19201787  2.24286157]\n [ 2.27827649  0.82682975 -0.26630655]\n [-0.17333043  2.16553945  1.02939988]\n [ 2.26890439  0.89311197 -0.26243597]\n [-0.2512831   2.2597216   0.89408741]\n [-0.23341849  2.27309387  0.7709214 ]\n [ 2.25617562 -0.22437834  0.81410784]\n [ 2.22986475  0.96247553 -0.22562355]\n [ 0.93771503  2.24006469 -0.23365567]\n [ 2.28631446 -0.25590025  0.75474384]\n [-0.23808639  1.19803786  2.16960812]\n [-0.2646401   1.23019768  2.20613126]\n [ 2.25729439 -0.2129225   0.79411601]\n [-0.28479994  1.2318958   2.26058535]\n [-0.22087216  2.20491832  1.08971052]\n [-0.29260626  2.28238001  1.20719635]\n [-0.29101034  1.23272406  2.27341138]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.19974418 -0.17699012  0.91119813]\n [ 2.21209755  1.01040036 -0.21350121]\n [-0.27849238  2.26059076  1.19977637]\n [-0.26997469  2.24280567  1.20408124]\n [-0.29874557  1.25977449  2.27874043]\n [-0.25377271  2.24886239  1.06528288]\n [-0.27961589  2.2500049   1.22933155]\n [-0.27219081  1.21466357  2.24182934]\n [-0.2884762   2.2710352   1.22512174]\n [-0.28479994  1.2318958   2.26058535]\n [ 2.24150985  0.87804111 -0.2241573 ]]\n\npredict:\n [0 1 1 0 0 2 0 2 2 2 1 2 2 0 1 2 2 1 2 1 0 0 0 2 0 1 1 2 0 0 1 0 2 2 2 2 1\n 2 2 1 0 1 0 1 2 0 2 0 0 2 1 2 0 0 2 0 1 0 2 1 0 2 0 1 0 1 1 0 0 1 0 2 2 0\n 2 1 1 2 1 0 0 1 1 2 1 1 2 1 2 0]\n</code></pre>\n<p><img src=\"ML_files/ML_32_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> stats</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extend</span>(<span class=\"params\">a, b, r=<span class=\"number\">0.01</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * (<span class=\"number\">1</span> + r) - b * r, -a * r + b * (<span class=\"number\">1</span> + r)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">N = <span class=\"number\">200</span></span><br><span class=\"line\">x = np.empty((<span class=\"number\">4</span> * N, <span class=\"number\">2</span>))</span><br><span class=\"line\">means = [(-<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, -<span class=\"number\">1</span>), (-<span class=\"number\">1</span>, -<span class=\"number\">1</span>)]</span><br><span class=\"line\">sigmas = [</span><br><span class=\"line\">    np.eye(<span class=\"number\">2</span>), <span class=\"number\">2</span> * np.eye(<span class=\"number\">2</span>),</span><br><span class=\"line\">    np.diag((<span class=\"number\">1</span>, <span class=\"number\">2</span>)),</span><br><span class=\"line\">    np.array(((<span class=\"number\">3</span>, <span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>)))</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    mn = stats.multivariate_normal(means[i], sigmas[i] * <span class=\"number\">0.07</span>)</span><br><span class=\"line\">    x[i * N:(i + <span class=\"number\">1</span>) * N, :] = mn.rvs(N)</span><br><span class=\"line\">a = np.array((<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)).reshape((-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">y = np.tile(a, N).flatten()</span><br><span class=\"line\">clf = svm.SVC(C=<span class=\"number\">1</span>, kernel=<span class=\"string\">&#x27;rbf&#x27;</span>, gamma=<span class=\"number\">1</span>, decision_function_shape=<span class=\"string\">&#x27;ovo&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># clf = svm.SVC(C=1, kernel=&#x27;linear&#x27;, decision_function_shape=&#x27;ovr&#x27;)</span></span><br><span class=\"line\">clf.fit(x, y)</span><br><span class=\"line\">y_hat = clf.predict(x)</span><br><span class=\"line\">acc = accuracy_score(y, y_hat)</span><br><span class=\"line\">np.set_printoptions(suppress=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;预测正确的样本个数：%d，正确率：%.2f%%&#x27;</span> % (<span class=\"built_in\">round</span>(acc * <span class=\"number\">4</span> * N), <span class=\"number\">100</span> * acc))</span><br><span class=\"line\"><span class=\"comment\"># decision_function</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.decision_function(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_hat)</span><br><span class=\"line\"></span><br><span class=\"line\">x1_min, x2_min = np.<span class=\"built_in\">min</span>(x, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">x1_max, x2_max = np.<span class=\"built_in\">max</span>(x, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">x1_min, x1_max = extend(x1_min, x1_max)</span><br><span class=\"line\">x2_min, x2_max = extend(x2_min, x2_max)</span><br><span class=\"line\">x1, x2 = np.mgrid[x1_min:x1_max:<span class=\"number\">500j</span>, x2_min:x2_max:<span class=\"number\">500j</span>]</span><br><span class=\"line\">x_test = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y_test = clf.predict(x_test)</span><br><span class=\"line\">y_test = y_test.reshape(x1.shape)</span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap(</span><br><span class=\"line\">    [<span class=\"string\">&#x27;#FF8080&#x27;</span>, <span class=\"string\">&#x27;#80FF80&#x27;</span>, <span class=\"string\">&#x27;#8080FF&#x27;</span>, <span class=\"string\">&#x27;#F0F080&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;y&#x27;</span>])</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, y_test, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">plt.contour(x1, x2, y_test, levels=(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>), colors=<span class=\"string\">&#x27;k&#x27;</span>, linestyles=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">plt.scatter(x[:, <span class=\"number\">0</span>],</span><br><span class=\"line\">            x[:, <span class=\"number\">1</span>],</span><br><span class=\"line\">            s=<span class=\"number\">20</span>,</span><br><span class=\"line\">            c=y,</span><br><span class=\"line\">            cmap=cm_dark,</span><br><span class=\"line\">            edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">            alpha=<span class=\"number\">0.7</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;$X_1$&#x27;</span>, fontsize=<span class=\"number\">11</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;$X_2$&#x27;</span>, fontsize=<span class=\"number\">11</span>)</span><br><span class=\"line\">plt.xlim((x1_min, x1_max))</span><br><span class=\"line\">plt.ylim((x2_min, x2_max))</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.tight_layout(pad=<span class=\"number\">2.5</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;SVM多分类方法：One/One or One/Other&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>预测正确的样本个数：793，正确率：99.12%\n[[ 1.30403817  1.18371967  1.61069453  0.53379555  0.10282667 -0.6639782 ]\n [ 1.20484592  1.00041165  1.13023042  0.32840742  0.16888308 -0.33559223]\n [ 1.28448754  1.15305262  1.24310512  0.59725054 -0.31474389 -0.97622623]\n ...\n [-0.23584035 -0.08224918 -1.09483656  0.1554822  -1.12200744 -1.12840424]\n [ 0.2447751   0.34444513 -1.55255237  0.17064062 -1.24348982 -1.41973039]\n [-0.03070327 -0.15566364 -1.9254549  -0.09600454 -1.23897289 -1.44257329]]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]\n</code></pre>\n<p><img src=\"ML_files/ML_33_1.png\" alt=\"png\"></p>\n<h4 id=\"朴素贝叶斯-2\">朴素贝叶斯</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NBClassify</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fillNa=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">        self.fillNa = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">train</span>(<span class=\"params\">self, trainSet</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 计算每种类别的概率</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存所有tag的所有种类，及它们出现的频次</span></span><br><span class=\"line\">        dictTag = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            dictTag[<span class=\"built_in\">str</span>(</span><br><span class=\"line\">                subTuple[<span class=\"number\">1</span>])] = <span class=\"number\">1</span> <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(subTuple[<span class=\"number\">1</span>]) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictTag.keys(</span><br><span class=\"line\">                ) <span class=\"keyword\">else</span> dictTag[<span class=\"built_in\">str</span>(subTuple[<span class=\"number\">1</span>])] + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存每个tag本身的概率</span></span><br><span class=\"line\">        tagProbablity = &#123;&#125;</span><br><span class=\"line\">        totalFreq = <span class=\"built_in\">sum</span>([value <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> dictTag.values()])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> dictTag.items():</span><br><span class=\"line\">            tagProbablity[key] = value / totalFreq</span><br><span class=\"line\">        <span class=\"comment\"># print(tagProbablity)</span></span><br><span class=\"line\">        self.tagProbablity = tagProbablity</span><br><span class=\"line\">        <span class=\"comment\">##############################################################################</span></span><br><span class=\"line\">        <span class=\"comment\"># 计算特征的条件概率</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存特征属性基本信息&#123;特征1:&#123;值1:出现5次, 值2:出现1次&#125;, 特征2:&#123;值1:出现1次, 值2:出现5次&#125;&#125;</span></span><br><span class=\"line\">        dictFeaturesBase = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> subTuple[<span class=\"number\">0</span>].items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> key <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictFeaturesBase.keys():</span><br><span class=\"line\">                    dictFeaturesBase[key] = &#123;value: <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> value <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictFeaturesBase[key].keys():</span><br><span class=\"line\">                        dictFeaturesBase[key][value] = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        dictFeaturesBase[key][value] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># dictFeaturesBase = &#123;</span></span><br><span class=\"line\">        <span class=\"comment\"># &#x27;职业&#x27;: &#123;&#x27;农夫&#x27;: 1, &#x27;教师&#x27;: 2, &#x27;建筑工人&#x27;: 2, &#x27;护士&#x27;: 1&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\"># &#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: 3, &#x27;头痛&#x27;: 3&#125;</span></span><br><span class=\"line\">        <span class=\"comment\"># &#125;</span></span><br><span class=\"line\">        dictFeatures = &#123;&#125;.fromkeys([key <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictTag])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictFeatures.keys():</span><br><span class=\"line\">            dictFeatures[key] = &#123;&#125;.fromkeys([key <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictFeaturesBase])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> subkey <span class=\"keyword\">in</span> value.keys():</span><br><span class=\"line\">                value[subkey] = &#123;&#125;.fromkeys(</span><br><span class=\"line\">                    [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dictFeaturesBase[subkey].keys()])</span><br><span class=\"line\">        <span class=\"comment\"># dictFeatures = &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;感冒 &#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;脑震荡&#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;过敏 &#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#125;</span></span><br><span class=\"line\">        <span class=\"comment\"># initialise dictFeatures</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> subTuple[<span class=\"number\">0</span>].items():</span><br><span class=\"line\">                dictFeatures[subTuple[<span class=\"number\">1</span>]][key][value] = <span class=\"number\">1</span> <span class=\"keyword\">if</span> dictFeatures[</span><br><span class=\"line\">                    subTuple[<span class=\"number\">1</span>]][key][value] == <span class=\"literal\">None</span> <span class=\"keyword\">else</span> dictFeatures[</span><br><span class=\"line\">                        subTuple[<span class=\"number\">1</span>]][key][value] + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># print(dictFeatures)</span></span><br><span class=\"line\">        <span class=\"comment\"># 将驯良样本中没有的项目，由None改为一个非常小的数值，表示其概率极小而并非是零</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> tag, featuresDict <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> featureName, fetureValueDict <span class=\"keyword\">in</span> featuresDict.items():</span><br><span class=\"line\">                <span class=\"keyword\">for</span> featureKey, featureValues <span class=\"keyword\">in</span> fetureValueDict.items():</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> featureValues == <span class=\"literal\">None</span>:</span><br><span class=\"line\">                        fetureValueDict[featureKey] = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 由特征频率计算特征的条件概率P(feature|tag)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> tag, featuresDict <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> featureName, fetureValueDict <span class=\"keyword\">in</span> featuresDict.items():</span><br><span class=\"line\">                totalCount = <span class=\"built_in\">sum</span>(</span><br><span class=\"line\">                    [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> fetureValueDict.values() <span class=\"keyword\">if</span> x != <span class=\"literal\">None</span>])</span><br><span class=\"line\">                <span class=\"keyword\">for</span> featureKey, featureValues <span class=\"keyword\">in</span> fetureValueDict.items():</span><br><span class=\"line\">                    fetureValueDict[</span><br><span class=\"line\">                        featureKey] = featureValues / totalCount <span class=\"keyword\">if</span> featureValues != <span class=\"literal\">None</span> <span class=\"keyword\">else</span> <span class=\"literal\">None</span></span><br><span class=\"line\">        self.featuresProbablity = dictFeatures</span><br><span class=\"line\">        <span class=\"comment\">##############################################################################</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">classify</span>(<span class=\"params\">self, featureDict</span>):</span><br><span class=\"line\">        resultDict = &#123;&#125;</span><br><span class=\"line\">        <span class=\"comment\"># 计算每个tag的条件概率</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> self.tagProbablity.items():</span><br><span class=\"line\">            iNumList = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> f, v <span class=\"keyword\">in</span> featureDict.items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> self.featuresProbablity[key][f][v]:</span><br><span class=\"line\">                    iNumList.append(self.featuresProbablity[key][f][v])</span><br><span class=\"line\">            conditionPr = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> iNum <span class=\"keyword\">in</span> iNumList:</span><br><span class=\"line\">                conditionPr *= iNum</span><br><span class=\"line\">            resultDict[key] = value * conditionPr</span><br><span class=\"line\">        <span class=\"comment\"># 对比每个tag的条件概率的大小</span></span><br><span class=\"line\">        resultList = <span class=\"built_in\">sorted</span>(resultDict.items(),</span><br><span class=\"line\">                            key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">                            reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultList[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    trainSet = [</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;护士&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;农夫&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;过敏 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;脑震荡&quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;教师&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;教师&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;脑震荡&quot;</span>),</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    monitor = NBClassify()</span><br><span class=\"line\">    <span class=\"comment\"># trainSet is something like that [(featureDict, tag), ]</span></span><br><span class=\"line\">    monitor.train(trainSet)</span><br><span class=\"line\">    <span class=\"comment\"># 打喷嚏的建筑工人</span></span><br><span class=\"line\">    <span class=\"comment\"># 请问他患上感冒的概率有多大？</span></span><br><span class=\"line\">    result = monitor.classify(&#123;<span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>, <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>感冒 \n</code></pre>\n<h4 id=\"多元问题-菜肴分类\">多元问题-菜肴分类</h4>\n<h5 id=\"数据加载与清洗\">数据加载与清洗</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> imblearn.over_sampling <span class=\"keyword\">import</span> SMOTE</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;./_data_set/cuisines_classification/cuisines.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df.head()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># df.info()</span></span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cuisine</th>\n      <th>almond</th>\n      <th>angelica</th>\n      <th>anise</th>\n      <th>anise_seed</th>\n      <th>apple</th>\n      <th>apple_brandy</th>\n      <th>apricot</th>\n      <th>armagnac</th>\n      <th>...</th>\n      <th>whiskey</th>\n      <th>white_bread</th>\n      <th>white_wine</th>\n      <th>whole_grain_wheat_flour</th>\n      <th>wine</th>\n      <th>wood</th>\n      <th>yam</th>\n      <th>yeast</th>\n      <th>yogurt</th>\n      <th>zucchini</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>65</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>66</td>\n      <td>indian</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>67</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>68</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>69</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 385 columns</p>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 菜肴成分分析</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_ingredient_df</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    ingredient_df = df.T.drop([<span class=\"string\">&#x27;cuisine&#x27;</span>,</span><br><span class=\"line\">                               <span class=\"string\">&#x27;Unnamed: 0&#x27;</span>]).<span class=\"built_in\">sum</span>(axis=<span class=\"number\">1</span>).to_frame(<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\">    ingredient_df = ingredient_df[(ingredient_df.T != <span class=\"number\">0</span>).<span class=\"built_in\">any</span>()]</span><br><span class=\"line\">    ingredient_df = ingredient_df.sort_values(by=<span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">                                              ascending=<span class=\"literal\">False</span>,</span><br><span class=\"line\">                                              inplace=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ingredient_df</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分析原料使用率前十</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&quot;thai&quot;</span>, <span class=\"string\">&quot;japanese&quot;</span>, <span class=\"string\">&quot;chinese&quot;</span>, <span class=\"string\">&quot;indian&quot;</span>, <span class=\"string\">&quot;korean&quot;</span>]:</span><br><span class=\"line\">    ingredient_df = create_ingredient_df(df[(df.cuisine == i)])</span><br><span class=\"line\">    ingredient_df.head(<span class=\"number\">10</span>).plot.barh().set_title(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删掉并不重要的特征</span></span><br><span class=\"line\">feature_df = df.drop([<span class=\"string\">&#x27;cuisine&#x27;</span>, <span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;rice&#x27;</span>, <span class=\"string\">&#x27;garlic&#x27;</span>, <span class=\"string\">&#x27;ginger&#x27;</span>],</span><br><span class=\"line\">                     axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">labels_df = df.cuisine</span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_38_0.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_38_1.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_38_2.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_38_3.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_38_4.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 菜肴样本不均,平衡数据集</span></span><br><span class=\"line\">transformed_feature_df, transformed_label_df = SMOTE().fit_resample(</span><br><span class=\"line\">    feature_df, labels_df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 烂方法展示</span></span><br><span class=\"line\"><span class=\"comment\"># for i in [&quot;thai&quot;, &quot;japanese&quot;, &quot;chinese&quot;, &quot;indian&quot;, &quot;korean&quot;]:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(i, df.loc[df[&#x27;cuisine&#x27;] == i].shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nicer one</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(</span><br><span class=\"line\">    <span class=\"string\">f&#x27;===================== old label count: ===================== \\n<span class=\"subst\">&#123;labels_df.value_counts()&#125;</span>\\</span></span><br><span class=\"line\"><span class=\"string\">    \\n===================== new label count: ===================== \\n<span class=\"subst\">&#123;transformed_label_df.value_counts()&#125;</span>&#x27;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">transformed_df = pd.concat([transformed_label_df, transformed_feature_df],</span><br><span class=\"line\">                           axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">                           join=<span class=\"string\">&#x27;outer&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># transformed_df.head()</span></span><br><span class=\"line\">transformed_df.info()</span><br><span class=\"line\">transformed_df.to_csv(<span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>===================== old label count: ===================== \nkorean      799\nindian      598\nchinese     442\njapanese    320\nthai        289\nName: cuisine, dtype: int64    \n===================== new label count: ===================== \nindian      799\nthai        799\nchinese     799\njapanese    799\nkorean      799\nName: cuisine, dtype: int64\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 3995 entries, 0 to 3994\nColumns: 381 entries, cuisine to zucchini\ndtypes: int64(380), object(1)\nmemory usage: 11.6+ MB\n</code></pre>\n<h5 id=\"分类-1\">分类-1</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report, precision_recall_curve</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df = pd.read_csv(</span><br><span class=\"line\">    <span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cuisine</th>\n      <th>almond</th>\n      <th>angelica</th>\n      <th>anise</th>\n      <th>anise_seed</th>\n      <th>apple</th>\n      <th>apple_brandy</th>\n      <th>apricot</th>\n      <th>armagnac</th>\n      <th>...</th>\n      <th>whiskey</th>\n      <th>white_bread</th>\n      <th>white_wine</th>\n      <th>whole_grain_wheat_flour</th>\n      <th>wine</th>\n      <th>wood</th>\n      <th>yam</th>\n      <th>yeast</th>\n      <th>yogurt</th>\n      <th>zucchini</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>indian</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 382 columns</p>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cuisines_label_df = cuisines_df[<span class=\"string\">&#x27;cuisine&#x27;</span>]</span><br><span class=\"line\">cuisines_feature_df = cuisines_df.drop([<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;cuisine&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df,</span><br><span class=\"line\">                                                    cuisines_label_df,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1137      korean</span></span><br><span class=\"line\"><span class=\"string\">428         thai</span></span><br><span class=\"line\"><span class=\"string\">191       indian</span></span><br><span class=\"line\"><span class=\"string\">1336      korean</span></span><br><span class=\"line\"><span class=\"string\">3947        thai</span></span><br><span class=\"line\"><span class=\"string\">          ...</span></span><br><span class=\"line\"><span class=\"string\">3335    japanese</span></span><br><span class=\"line\"><span class=\"string\">3539        thai</span></span><br><span class=\"line\"><span class=\"string\">436         thai</span></span><br><span class=\"line\"><span class=\"string\">1875      indian</span></span><br><span class=\"line\"><span class=\"string\">3079    japanese</span></span><br><span class=\"line\"><span class=\"string\">Name: cuisine, Length: 2796, dtype: object</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;korean&#x27; &#x27;thai&#x27; &#x27;indian&#x27; ... &#x27;thai&#x27; &#x27;indian&#x27; &#x27;japanese&#x27;]</span></span><br><span class=\"line\"><span class=\"string\"> &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># print(y_train)</span></span><br><span class=\"line\"><span class=\"comment\"># print(np.ravel(y_train))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lbfgs = LogisticRegression(solver=&#x27;lbfgs&#x27;)</span></span><br><span class=\"line\">model = LogisticRegression(multi_class=<span class=\"string\">&#x27;ovr&#x27;</span>,</span><br><span class=\"line\">                           solver=<span class=\"string\">&#x27;liblinear&#x27;</span>).fit(X_train, np.ravel(y_train))</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy = model.score(X_test, y_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(&quot;Accuracy is &#123;&#125;&quot;.format(accuracy))</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Accuracy is <span class=\"subst\">&#123;accuracy&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>Accuracy is 0.7906588824020017\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># [选择性 test] 针对某一行测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">line_num = <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;ingredients: <span class=\"subst\">&#123;X_test.iloc[line_num][X_test.iloc[line_num]!=<span class=\"number\">0</span>].keys()&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;cuisine: <span class=\"subst\">&#123;y_test.iloc[line_num]&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">test = X_test.iloc[line_num].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>).T</span><br><span class=\"line\">proba = model.predict_proba(test)</span><br><span class=\"line\">classes = model.classes_</span><br><span class=\"line\">resultdf = pd.DataFrame(data=proba, columns=classes)</span><br><span class=\"line\"></span><br><span class=\"line\">topPrediction = resultdf.T.sort_values(by=[<span class=\"number\">0</span>], ascending=[<span class=\"literal\">False</span>])</span><br><span class=\"line\">topPrediction.head()</span><br></pre></td></tr></table></figure>\n<pre><code>ingredients: Index(['butter', 'cayenne', 'cheese', 'cinnamon', 'coriander', 'onion',\n       'tomato', 'turmeric'],\n      dtype='object')\ncuisine: indian\n\n\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n  warnings.warn(\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>indian</th>\n      <td>0.962110</td>\n    </tr>\n    <tr>\n      <th>thai</th>\n      <td>0.021403</td>\n    </tr>\n    <tr>\n      <th>korean</th>\n      <td>0.011124</td>\n    </tr>\n    <tr>\n      <th>japanese</th>\n      <td>0.003710</td>\n    </tr>\n    <tr>\n      <th>chinese</th>\n      <td>0.001653</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n     chinese       0.76      0.68      0.72       242\n      indian       0.91      0.93      0.92       239\n    japanese       0.72      0.76      0.74       222\n      korean       0.84      0.80      0.82       264\n        thai       0.77      0.84      0.80       232\n\n    accuracy                           0.80      1199\n   macro avg       0.80      0.80      0.80      1199\nweighted avg       0.80      0.80      0.80      1199\n</code></pre>\n<h5 id=\"分类-2\">分类-2</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, AdaBoostClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report, precision_recall_curve</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df = pd.read_csv(</span><br><span class=\"line\">    <span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_label_df = cuisines_df[<span class=\"string\">&#x27;cuisine&#x27;</span>]</span><br><span class=\"line\">cuisines_feature_df = cuisines_df.drop([<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;cuisine&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df,</span><br><span class=\"line\">                                                    cuisines_label_df,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 正则化系数</span></span><br><span class=\"line\">C = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建不同的分类器</span></span><br><span class=\"line\">classifiers = &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 线性 SVC 分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;Linear SVC&#x27;</span>: SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, C=C, probability=<span class=\"literal\">True</span>, random_state=<span class=\"number\">0</span>),</span><br><span class=\"line\">    <span class=\"comment\"># K-近邻分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;KNN classifier&#x27;</span>: KNeighborsClassifier(C),</span><br><span class=\"line\">    <span class=\"comment\"># Support Vector 分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;SVC&#x27;</span>: SVC(),</span><br><span class=\"line\">    <span class=\"comment\"># 集成分类器, 随机森林 与 ADA</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;RFST&#x27;</span>: RandomForestClassifier(n_estimators=<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"string\">&#x27;ADA&#x27;</span>: AdaBoostClassifier(n_estimators=<span class=\"number\">100</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index, (name, classifier) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(classifiers.items()):</span><br><span class=\"line\">    classifier.fit(X_train, np.ravel(y_train))</span><br><span class=\"line\"></span><br><span class=\"line\">    y_pred = classifier.predict(X_test)</span><br><span class=\"line\">    accuracy = accuracy_score(y_test, y_pred)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Accuracy (train) for %s: %0.1f%%&quot;</span> % (name, accuracy * <span class=\"number\">100</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Accuracy (train) for Linear SVC: 80.2%\n              precision    recall  f1-score   support\n\n     chinese       0.73      0.76      0.74       250\n      indian       0.86      0.89      0.88       235\n    japanese       0.78      0.78      0.78       245\n      korean       0.88      0.74      0.80       227\n        thai       0.78      0.84      0.81       242\n\n    accuracy                           0.80      1199\n   macro avg       0.81      0.80      0.80      1199\nweighted avg       0.81      0.80      0.80      1199\n\nAccuracy (train) for KNN classifier: 73.6%\n              precision    recall  f1-score   support\n\n     chinese       0.71      0.73      0.72       250\n      indian       0.80      0.86      0.83       235\n    japanese       0.67      0.80      0.73       245\n      korean       0.91      0.51      0.65       227\n        thai       0.69      0.77      0.73       242\n\n    accuracy                           0.74      1199\n   macro avg       0.76      0.73      0.73      1199\nweighted avg       0.75      0.74      0.73      1199\n\nAccuracy (train) for SVC: 82.8%\n              precision    recall  f1-score   support\n\n     chinese       0.77      0.81      0.79       250\n      indian       0.88      0.93      0.90       235\n    japanese       0.82      0.76      0.79       245\n      korean       0.90      0.77      0.83       227\n        thai       0.79      0.88      0.83       242\n\n    accuracy                           0.83      1199\n   macro avg       0.83      0.83      0.83      1199\nweighted avg       0.83      0.83      0.83      1199\n\nAccuracy (train) for RFST: 84.5%\n              precision    recall  f1-score   support\n\n     chinese       0.82      0.81      0.82       250\n      indian       0.85      0.93      0.89       235\n    japanese       0.86      0.81      0.83       245\n      korean       0.90      0.83      0.86       227\n        thai       0.81      0.85      0.83       242\n\n    accuracy                           0.84      1199\n   macro avg       0.85      0.85      0.85      1199\nweighted avg       0.85      0.84      0.84      1199\n\nAccuracy (train) for ADA: 69.3%\n              precision    recall  f1-score   support\n\n     chinese       0.64      0.42      0.51       250\n      indian       0.81      0.85      0.83       235\n    japanese       0.65      0.61      0.63       245\n      korean       0.62      0.82      0.71       227\n        thai       0.73      0.79      0.76       242\n\n    accuracy                           0.69      1199\n   macro avg       0.69      0.70      0.69      1199\nweighted avg       0.69      0.69      0.68      1199\n</code></pre>\n<h3 id=\"聚类问题\">聚类问题</h3>\n<h4 id=\"聚类入门-数据分布\">聚类入门-数据分布</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;./_data_set/Clustering/nigerian-songs.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># df.head()</span></span><br><span class=\"line\">df.info()</span><br><span class=\"line\"><span class=\"comment\"># object 类型除外</span></span><br><span class=\"line\">df.describe()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 530 entries, 0 to 529\nData columns (total 16 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   name              530 non-null    object \n 1   album             530 non-null    object \n 2   artist            530 non-null    object \n 3   artist_top_genre  530 non-null    object \n 4   release_date      530 non-null    int64  \n 5   length            530 non-null    int64  \n 6   popularity        530 non-null    int64  \n 7   danceability      530 non-null    float64\n 8   acousticness      530 non-null    float64\n 9   energy            530 non-null    float64\n 10  instrumentalness  530 non-null    float64\n 11  liveness          530 non-null    float64\n 12  loudness          530 non-null    float64\n 13  speechiness       530 non-null    float64\n 14  tempo             530 non-null    float64\n 15  time_signature    530 non-null    int64  \ndtypes: float64(8), int64(4), object(4)\nmemory usage: 66.4+ KB\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>release_date</th>\n      <th>length</th>\n      <th>popularity</th>\n      <th>danceability</th>\n      <th>acousticness</th>\n      <th>energy</th>\n      <th>instrumentalness</th>\n      <th>liveness</th>\n      <th>loudness</th>\n      <th>speechiness</th>\n      <th>tempo</th>\n      <th>time_signature</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2015.390566</td>\n      <td>222298.169811</td>\n      <td>17.507547</td>\n      <td>0.741619</td>\n      <td>0.265412</td>\n      <td>0.760623</td>\n      <td>0.016305</td>\n      <td>0.147308</td>\n      <td>-4.953011</td>\n      <td>0.130748</td>\n      <td>116.487864</td>\n      <td>3.986792</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.131688</td>\n      <td>39696.822259</td>\n      <td>18.992212</td>\n      <td>0.117522</td>\n      <td>0.208342</td>\n      <td>0.148533</td>\n      <td>0.090321</td>\n      <td>0.123588</td>\n      <td>2.464186</td>\n      <td>0.092939</td>\n      <td>23.518601</td>\n      <td>0.333701</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1998.000000</td>\n      <td>89488.000000</td>\n      <td>0.000000</td>\n      <td>0.255000</td>\n      <td>0.000665</td>\n      <td>0.111000</td>\n      <td>0.000000</td>\n      <td>0.028300</td>\n      <td>-19.362000</td>\n      <td>0.027800</td>\n      <td>61.695000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2014.000000</td>\n      <td>199305.000000</td>\n      <td>0.000000</td>\n      <td>0.681000</td>\n      <td>0.089525</td>\n      <td>0.669000</td>\n      <td>0.000000</td>\n      <td>0.075650</td>\n      <td>-6.298750</td>\n      <td>0.059100</td>\n      <td>102.961250</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2016.000000</td>\n      <td>218509.000000</td>\n      <td>13.000000</td>\n      <td>0.761000</td>\n      <td>0.220500</td>\n      <td>0.784500</td>\n      <td>0.000004</td>\n      <td>0.103500</td>\n      <td>-4.558500</td>\n      <td>0.097950</td>\n      <td>112.714500</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2017.000000</td>\n      <td>242098.500000</td>\n      <td>31.000000</td>\n      <td>0.829500</td>\n      <td>0.403000</td>\n      <td>0.875750</td>\n      <td>0.000234</td>\n      <td>0.164000</td>\n      <td>-3.331000</td>\n      <td>0.177000</td>\n      <td>125.039250</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2020.000000</td>\n      <td>511738.000000</td>\n      <td>73.000000</td>\n      <td>0.966000</td>\n      <td>0.954000</td>\n      <td>0.995000</td>\n      <td>0.910000</td>\n      <td>0.811000</td>\n      <td>0.582000</td>\n      <td>0.514000</td>\n      <td>206.007000</td>\n      <td>5.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    top = df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>].value_counts()</span><br><span class=\"line\">    plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">    sns.barplot(x=top[:<span class=\"number\">5</span>].index, y=top[:<span class=\"number\">5</span>].values)</span><br><span class=\"line\">    plt.xticks(rotation=<span class=\"number\">45</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Top genres&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">draw(df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 过滤掉 Missing</span></span><br><span class=\"line\">new_df = df[df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] != <span class=\"string\">&#x27;Missing&#x27;</span>]</span><br><span class=\"line\">draw(new_df)</span><br><span class=\"line\"></span><br><span class=\"line\">featured_df = new_df[((new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afro dancehall&#x27;</span>)</span><br><span class=\"line\">                      | (new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afropop&#x27;</span>)</span><br><span class=\"line\">                      | (new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;nigerian pop&#x27;</span>))</span><br><span class=\"line\">                     &amp; (new_df[<span class=\"string\">&#x27;popularity&#x27;</span>] &gt; <span class=\"number\">0</span>)]</span><br><span class=\"line\">draw(featured_df)</span><br><span class=\"line\"></span><br><span class=\"line\">corrmat = featured_df.corr()</span><br><span class=\"line\">f, ax = plt.subplots(figsize=(<span class=\"number\">12</span>, <span class=\"number\">9</span>))</span><br><span class=\"line\">sns.heatmap(corrmat, vmax=<span class=\"number\">.8</span>, square=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;AxesSubplot:&gt;\n</code></pre>\n<p><img src=\"ML_files/ML_50_1.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_50_2.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_50_3.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_50_4.png\" alt=\"png\"></p>\n<h4 id=\"K-Means-与衡量指标\">K-Means-与衡量指标</h4>\n<h5 id=\"入门-音乐分类\">入门-音乐分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这种格式可以运行</span></span><br><span class=\"line\">!pip install seaborn</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;./_data_set/Clustering/nigerian-songs.csv&quot;</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<pre><code>Looking in indexes: http://mirrors.aliyun.com/pypi/simple/\nRequirement already satisfied: seaborn in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (0.11.2)\nRequirement already satisfied: scipy&gt;=1.0 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.7.1)\nRequirement already satisfied: numpy&gt;=1.15 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.20.3)\nRequirement already satisfied: pandas&gt;=0.23 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.4.2)\nRequirement already satisfied: matplotlib&gt;=2.2 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (3.4.3)\nRequirement already satisfied: python-dateutil&gt;=2.7 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (2.8.2)\nRequirement already satisfied: cycler&gt;=0.10 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (0.11.0)\nRequirement already satisfied: pyparsing&gt;=2.2.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (3.0.4)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (1.3.2)\nRequirement already satisfied: pillow&gt;=6.2.0 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (9.0.1)\nRequirement already satisfied: pytz&gt;=2020.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from pandas&gt;=0.23-&gt;seaborn) (2021.3)\nRequirement already satisfied: six&gt;=1.5 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from python-dateutil&gt;=2.7-&gt;matplotlib&gt;=2.2-&gt;seaborn) (1.16.0)\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>album</th>\n      <th>artist</th>\n      <th>artist_top_genre</th>\n      <th>release_date</th>\n      <th>length</th>\n      <th>popularity</th>\n      <th>danceability</th>\n      <th>acousticness</th>\n      <th>energy</th>\n      <th>instrumentalness</th>\n      <th>liveness</th>\n      <th>loudness</th>\n      <th>speechiness</th>\n      <th>tempo</th>\n      <th>time_signature</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Sparky</td>\n      <td>Mandy &amp; The Jungle</td>\n      <td>Cruel Santino</td>\n      <td>alternative r&amp;b</td>\n      <td>2019</td>\n      <td>144000</td>\n      <td>48</td>\n      <td>0.666</td>\n      <td>0.8510</td>\n      <td>0.420</td>\n      <td>0.534000</td>\n      <td>0.1100</td>\n      <td>-6.699</td>\n      <td>0.0829</td>\n      <td>133.015</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>shuga rush</td>\n      <td>EVERYTHING YOU HEARD IS TRUE</td>\n      <td>Odunsi (The Engine)</td>\n      <td>afropop</td>\n      <td>2020</td>\n      <td>89488</td>\n      <td>30</td>\n      <td>0.710</td>\n      <td>0.0822</td>\n      <td>0.683</td>\n      <td>0.000169</td>\n      <td>0.1010</td>\n      <td>-5.640</td>\n      <td>0.3600</td>\n      <td>129.993</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>LITT!</td>\n      <td>LITT!</td>\n      <td>AYLØ</td>\n      <td>indie r&amp;b</td>\n      <td>2018</td>\n      <td>207758</td>\n      <td>40</td>\n      <td>0.836</td>\n      <td>0.2720</td>\n      <td>0.564</td>\n      <td>0.000537</td>\n      <td>0.1100</td>\n      <td>-7.127</td>\n      <td>0.0424</td>\n      <td>130.005</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Confident / Feeling Cool</td>\n      <td>Enjoy Your Life</td>\n      <td>Lady Donli</td>\n      <td>nigerian pop</td>\n      <td>2019</td>\n      <td>175135</td>\n      <td>14</td>\n      <td>0.894</td>\n      <td>0.7980</td>\n      <td>0.611</td>\n      <td>0.000187</td>\n      <td>0.0964</td>\n      <td>-4.961</td>\n      <td>0.1130</td>\n      <td>111.087</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>wanted you</td>\n      <td>rare.</td>\n      <td>Odunsi (The Engine)</td>\n      <td>afropop</td>\n      <td>2018</td>\n      <td>152049</td>\n      <td>25</td>\n      <td>0.702</td>\n      <td>0.1160</td>\n      <td>0.833</td>\n      <td>0.910000</td>\n      <td>0.3480</td>\n      <td>-6.044</td>\n      <td>0.0447</td>\n      <td>105.115</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetured_df = df[((df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afro dancehall&#x27;</span>)</span><br><span class=\"line\">                 | (df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afropop&#x27;</span>)</span><br><span class=\"line\">                 | (df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;nigerian pop&#x27;</span>))</span><br><span class=\"line\">                &amp; (df[<span class=\"string\">&#x27;popularity&#x27;</span>] &gt; <span class=\"number\">0</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">top = fetured_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>].value_counts()</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">sns.barplot(x=top.index, y=top.values)</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">45</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Top genres&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 箱线图, 可以直观看出数据的分布</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>), dpi=<span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 1)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;popularity&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 2)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;acousticness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 3)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;energy&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 4)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;instrumentalness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 5)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;liveness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 6)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;loudness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 7)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;speechiness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 8)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;tempo&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 9)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;time_signature&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 10)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;danceability&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 11)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;length&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 12)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;release_date&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"> &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i, v <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>([</span><br><span class=\"line\">        <span class=\"string\">&quot;popularity&quot;</span>, <span class=\"string\">&quot;acousticness&quot;</span>, <span class=\"string\">&quot;energy&quot;</span>, <span class=\"string\">&quot;instrumentalness&quot;</span>, <span class=\"string\">&quot;liveness&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;loudness&quot;</span>, <span class=\"string\">&quot;speechiness&quot;</span>, <span class=\"string\">&quot;tempo&quot;</span>, <span class=\"string\">&quot;time_signature&quot;</span>, <span class=\"string\">&quot;danceability&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;length&quot;</span>, <span class=\"string\">&quot;release_date&quot;</span></span><br><span class=\"line\">]):</span><br><span class=\"line\">    plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">3</span>, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    sns.boxplot(x=v, data=df)</span><br><span class=\"line\">    <span class=\"comment\"># plt.title(v)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_53_0.png\" alt=\"png\"></p>\n<p><img src=\"ML_files/ML_53_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> metrics</span><br><span class=\"line\"></span><br><span class=\"line\">le = LabelEncoder()</span><br><span class=\"line\"></span><br><span class=\"line\">X = df.loc[:, (<span class=\"string\">&#x27;artist_top_genre&#x27;</span>, <span class=\"string\">&#x27;popularity&#x27;</span>, <span class=\"string\">&#x27;danceability&#x27;</span>,</span><br><span class=\"line\">               <span class=\"string\">&#x27;acousticness&#x27;</span>, <span class=\"string\">&#x27;loudness&#x27;</span>, <span class=\"string\">&#x27;energy&#x27;</span>)]</span><br><span class=\"line\">X[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] = le.fit_transform(X[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>])</span><br><span class=\"line\">y = le.transform(df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 聚为3类</span></span><br><span class=\"line\">nclusters = <span class=\"number\">3</span></span><br><span class=\"line\">seed = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">km = KMeans(n_clusters=nclusters, random_state=seed).fit(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Predict the cluster for each data point</span></span><br><span class=\"line\">y_cluster_kmeans = km.predict(X)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_cluster_kmeans)</span><br><span class=\"line\"></span><br><span class=\"line\">score = metrics.silhouette_score(X, y_cluster_kmeans)</span><br><span class=\"line\"><span class=\"comment\"># score 从 [-1,1], 越大表示聚类效果越好</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(score)</span><br></pre></td></tr></table></figure>\n<pre><code>[2 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 2 0 0 1 0 0 2 1 1 2 2 2 0\n 2 0 1 2 2 2 0 1 1 2 1 0 0 0 0 1 1 1 1 1 2 0 2 1 0 2 0 1 2 1 2 1 1 1 1 2 1\n 0 2 2 0 0 0 1 0 0 1 1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 0 0 1 0 1 2 0 1 1 2 0 1\n 1 1 1 1 1 1 0 1 0 1 0 1 0 2 1 2 0 1 1 1 0 0 1 1 0 2 0 1 1 0 0 0 1 1 0 1 0\n 2 0 1 1 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 0 0 1 1 1 0 0 1 0 2 1 1 1 1 1 0\n 1 1 1 1 0 2 0 0 0 0 0 0 1 1 2 1 1 1 1 1 2 1 1 0 0 1 1 1 1 1 0 0 1 0 1 0 0\n 1 2 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 2 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1\n 2 0 0 1 1 0 0 0 1 0 0 1 1 1 2 1 1 2 0 0 1 0 1 1 0 1 1 1 0 2 1 1 2 2 2 0 2\n 2 2 2 2 2 2 2 1 2 2 1 2 1 2 1 2 2 2 0 1 0 1 1 0 1 2 1 1 2 1 0 2 2 0 0 0 1\n 0 1 0 1 1 1 1 2 1 1 2 2 1 0 2 0 2 1 1 2 2 2 0 0 2 2 1 1 0 0 0 1 1 1 1 1 1\n 1 1 1 1 2 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1\n 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 0 0 0 1 2 1 1 2 1 0 0 0 2 2 2 0 2\n 2 2 0 2 2 0 1 0 1 2 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1\n 0 1 1 1 1 1 1 0 1 1 1 2 0 0 1 1 1 1 2 1 0 2 1 1 1 0 1 1 2 1 0 0 0 0 0 1 1\n 1 1 1 0 0 1 1 1 1 1 1 1]\n0.5918299843029218\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 手肘方法: 拐点附近就是较好的聚类划分</span></span><br><span class=\"line\">wcss = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">    kmeans = KMeans(n_clusters=i, init=<span class=\"string\">&#x27;k-means++&#x27;</span>, random_state=<span class=\"number\">42</span>).fit(X)</span><br><span class=\"line\">    wcss.append(kmeans.inertia_)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.lineplot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>), wcss, marker=<span class=\"string\">&#x27;o&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Elbow&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Number of clusters&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;WCSS&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>D:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1036: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=3.\n  warnings.warn(\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n</code></pre>\n<p><img src=\"ML_files/ML_55_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始值的随机选取会影响每次的结果</span></span><br><span class=\"line\">kmeans = KMeans(n_clusters=<span class=\"number\">3</span>).fit(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 0 | 1 | 2</span></span><br><span class=\"line\">labels = kmeans.predict(X)</span><br><span class=\"line\">plt.scatter(df[<span class=\"string\">&#x27;popularity&#x27;</span>], df[<span class=\"string\">&#x27;danceability&#x27;</span>], c=labels)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;popularity&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;danceability&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 真实值 与 与预测值集合的交集 元素个数</span></span><br><span class=\"line\">correct_labels = <span class=\"built_in\">sum</span>(y == kmeans.labels_)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d/%d samples were correctly labeled.&quot;</span> %</span><br><span class=\"line\">      (correct_labels, y.size))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Accuracy score: &#123;0:0.2f&#125;&#x27;</span>.<span class=\"built_in\">format</span>(correct_labels / <span class=\"built_in\">float</span>(y.size)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_56_0.png\" alt=\"png\"></p>\n<pre><code>93/530 samples were correctly labeled.\nAccuracy score: 0.18\n</code></pre>\n<h5 id=\"sample-2\">sample-2</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.colors</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.datasets <span class=\"keyword\">as</span> ds</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> homogeneity_score, completeness_score, v_measure_score, adjusted_mutual_info_score,\\</span><br><span class=\"line\">    adjusted_rand_score, silhouette_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> Axes3D</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">expand</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    d = (b - a) * <span class=\"number\">0.1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - d, b + d</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">400</span></span><br><span class=\"line\">centers = <span class=\"number\">4</span></span><br><span class=\"line\">data, y = ds.make_blobs(N, n_features=<span class=\"number\">2</span>, centers=centers, random_state=<span class=\"number\">2</span>)</span><br><span class=\"line\">data2, y2 = ds.make_blobs(N,</span><br><span class=\"line\">                          n_features=<span class=\"number\">2</span>,</span><br><span class=\"line\">                          centers=centers,</span><br><span class=\"line\">                          cluster_std=(<span class=\"number\">1</span>, <span class=\"number\">2.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>),</span><br><span class=\"line\">                          random_state=<span class=\"number\">2</span>)</span><br><span class=\"line\">data3 = np.vstack(</span><br><span class=\"line\">    (data[y == <span class=\"number\">0</span>][:], data[y == <span class=\"number\">1</span>][:<span class=\"number\">50</span>], data[y == <span class=\"number\">2</span>][:<span class=\"number\">20</span>], data[y == <span class=\"number\">3</span>][:<span class=\"number\">5</span>]))</span><br><span class=\"line\">y3 = np.array([<span class=\"number\">0</span>] * <span class=\"number\">100</span> + [<span class=\"number\">1</span>] * <span class=\"number\">50</span> + [<span class=\"number\">2</span>] * <span class=\"number\">20</span> + [<span class=\"number\">3</span>] * <span class=\"number\">5</span>)</span><br><span class=\"line\">m = np.array(((<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">3</span>)))</span><br><span class=\"line\">data_r = data.dot(m)</span><br><span class=\"line\"></span><br><span class=\"line\">matplotlib.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">matplotlib.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">cm = matplotlib.colors.ListedColormap(<span class=\"built_in\">list</span>(<span class=\"string\">&#x27;rgbm&#x27;</span>))</span><br><span class=\"line\">data_list = data, data, data_r, data_r, data2, data2, data3, data3</span><br><span class=\"line\">y_list = y, y, y, y, y2, y2, y3, y3</span><br><span class=\"line\">titles = <span class=\"string\">&#x27;原始数据&#x27;</span>, <span class=\"string\">&#x27;KMeans++聚类&#x27;</span>, <span class=\"string\">&#x27;旋转后数据&#x27;</span>, <span class=\"string\">&#x27;旋转后KMeans++聚类&#x27;</span>,\\</span><br><span class=\"line\">          <span class=\"string\">&#x27;方差不相等数据&#x27;</span>, <span class=\"string\">&#x27;方差不相等KMeans++聚类&#x27;</span>, <span class=\"string\">&#x27;数量不相等数据&#x27;</span>, <span class=\"string\">&#x27;数量不相等KMeans++聚类&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">model = KMeans(n_clusters=<span class=\"number\">4</span>, init=<span class=\"string\">&#x27;k-means++&#x27;</span>, n_init=<span class=\"number\">5</span>)</span><br><span class=\"line\">fig = plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">9</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, (x, y, title) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(<span class=\"built_in\">zip</span>(data_list, y_list, titles), start=<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"comment\"># plt.subplot(4, 2, i)</span></span><br><span class=\"line\">    ax = fig.add_subplot(<span class=\"number\">4</span>, <span class=\"number\">2</span>, i)</span><br><span class=\"line\">    plt.title(title)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">        y_pred = y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        y_pred = model.fit_predict(x)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Homogeneity:&#x27;</span>, homogeneity_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;completeness:&#x27;</span>, completeness_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;V measure:&#x27;</span>, v_measure_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;AMI:&#x27;</span>, adjusted_mutual_info_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;ARI:&#x27;</span>, adjusted_rand_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Silhouette:&#x27;</span>, silhouette_score(x, y_pred), <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    ax.scatter(x[:, <span class=\"number\">0</span>], x[:, <span class=\"number\">1</span>], s=<span class=\"number\">10</span>, c=y_pred, cmap=cm, edgecolors=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">    ax.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.95</span>))</span><br><span class=\"line\">plt.suptitle(<span class=\"string\">&#x27;数据分布对KMeans聚类的影响&#x27;</span>, fontsize=<span class=\"number\">18</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>1\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.616436816839852 \n\n2\nHomogeneity: 0.9898828240244267\ncompleteness: 0.9899006758819153\nV measure: 0.9898917498726852\nAMI: 0.9898081557479033\nARI: 0.9933165272203728\nSilhouette: 0.6189656317733315 \n\n3\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.5275987244664399 \n\n4\nHomogeneity: 0.7296158940840607\ncompleteness: 0.7315285272632114\nV measure: 0.7305709588584066\nAMI: 0.7283397010755561\nARI: 0.6783811042853299\nSilhouette: 0.5366236044449266 \n\n5\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.4790725752982868 \n\n6\nHomogeneity: 0.7449364376693913\ncompleteness: 0.7755445167472191\nV measure: 0.7599323988656883\nAMI: 0.757903292819801\nARI: 0.7113213508090338\nSilhouette: 0.5737260449304202 \n\n7\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.5975066093204152 \n\n8\nHomogeneity: 0.9776347312784609\ncompleteness: 0.9728632742060752\nV measure: 0.975243166591057\nAMI: 0.9745709993295113\nARI: 0.9906840043816505\nSilhouette: 0.6013877858619149 \n\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_28356\\867049078.py:57: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2, rect=(0, 0, 1, 0.95))\n</code></pre>\n<p><img src=\"ML_files/ML_58_2.png\" alt=\"png\"></p>\n<h4 id=\"层次聚类\">层次聚类</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> AgglomerativeClustering</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> kneighbors_graph</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.datasets <span class=\"keyword\">as</span> ds</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">expand</span>(<span class=\"params\">a, b, r</span>):</span><br><span class=\"line\">    d = (b - a) * r</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - d, b + d</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    warnings.filterwarnings(action=<span class=\"string\">&#x27;ignore&#x27;</span>, category=UserWarning)</span><br><span class=\"line\">    np.set_printoptions(suppress=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">    n_clusters = <span class=\"number\">4</span></span><br><span class=\"line\">    N = <span class=\"number\">400</span></span><br><span class=\"line\">    data1, y1 = ds.make_blobs(n_samples=N,</span><br><span class=\"line\">                              n_features=<span class=\"number\">2</span>,</span><br><span class=\"line\">                              centers=((-<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, -<span class=\"number\">1</span>), (-<span class=\"number\">1</span>, -<span class=\"number\">1</span>)),</span><br><span class=\"line\">                              cluster_std=(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>),</span><br><span class=\"line\">                              random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data1 = np.array(data1)</span><br><span class=\"line\">    n_noise = <span class=\"built_in\">int</span>(<span class=\"number\">0.1</span> * N)</span><br><span class=\"line\">    r = np.random.rand(n_noise, <span class=\"number\">2</span>)</span><br><span class=\"line\">    data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data1, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data1, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    r[:, <span class=\"number\">0</span>] = r[:, <span class=\"number\">0</span>] * (data_max1 - data_min1) + data_min1</span><br><span class=\"line\">    r[:, <span class=\"number\">1</span>] = r[:, <span class=\"number\">1</span>] * (data_max2 - data_min2) + data_min2</span><br><span class=\"line\">    data1_noise = np.concatenate((data1, r), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    y1_noise = np.concatenate((y1, [<span class=\"number\">4</span>] * n_noise))</span><br><span class=\"line\"></span><br><span class=\"line\">    data2, y2 = ds.make_moons(n_samples=N, noise=<span class=\"number\">.05</span>)</span><br><span class=\"line\">    data2 = np.array(data2)</span><br><span class=\"line\">    n_noise = <span class=\"built_in\">int</span>(<span class=\"number\">0.1</span> * N)</span><br><span class=\"line\">    r = np.random.rand(n_noise, <span class=\"number\">2</span>)</span><br><span class=\"line\">    data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data2, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data2, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    r[:, <span class=\"number\">0</span>] = r[:, <span class=\"number\">0</span>] * (data_max1 - data_min1) + data_min1</span><br><span class=\"line\">    r[:, <span class=\"number\">1</span>] = r[:, <span class=\"number\">1</span>] * (data_max2 - data_min2) + data_min2</span><br><span class=\"line\">    data2_noise = np.concatenate((data2, r), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    y2_noise = np.concatenate((y2, [<span class=\"number\">3</span>] * n_noise))</span><br><span class=\"line\"></span><br><span class=\"line\">    mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">    mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cm = mpl.colors.ListedColormap([<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;m&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>])</span><br><span class=\"line\">    plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">8</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    plt.cla()</span><br><span class=\"line\">    linkages = (<span class=\"string\">&quot;ward&quot;</span>, <span class=\"string\">&quot;complete&quot;</span>, <span class=\"string\">&quot;average&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, (n_clusters, data, y) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(</span><br><span class=\"line\">        ((<span class=\"number\">4</span>, data1, y1), (<span class=\"number\">4</span>, data1_noise, y1_noise), (<span class=\"number\">2</span>, data2, y2),</span><br><span class=\"line\">         (<span class=\"number\">2</span>, data2_noise, y2_noise))):</span><br><span class=\"line\">        plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span> * index + <span class=\"number\">1</span>)</span><br><span class=\"line\">        plt.scatter(data[:, <span class=\"number\">0</span>], data[:, <span class=\"number\">1</span>], c=y, s=<span class=\"number\">12</span>, edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, cmap=cm)</span><br><span class=\"line\">        plt.title(<span class=\"string\">&#x27;Prime&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">        plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">        data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        plt.xlim(expand(data_min1, data_max1, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">        plt.ylim(expand(data_min2, data_max2, <span class=\"number\">0.05</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        connectivity = kneighbors_graph(data,</span><br><span class=\"line\">                                        n_neighbors=<span class=\"number\">7</span>,</span><br><span class=\"line\">                                        mode=<span class=\"string\">&#x27;distance&#x27;</span>,</span><br><span class=\"line\">                                        metric=<span class=\"string\">&#x27;minkowski&#x27;</span>,</span><br><span class=\"line\">                                        p=<span class=\"number\">2</span>,</span><br><span class=\"line\">                                        include_self=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        connectivity = <span class=\"number\">0.5</span> * (connectivity + connectivity.T)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, linkage <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(linkages):</span><br><span class=\"line\">            ac = AgglomerativeClustering(n_clusters=n_clusters,</span><br><span class=\"line\">                                         affinity=<span class=\"string\">&#x27;euclidean&#x27;</span>,</span><br><span class=\"line\">                                         connectivity=connectivity,</span><br><span class=\"line\">                                         linkage=linkage)</span><br><span class=\"line\">            ac.fit(data)</span><br><span class=\"line\">            y = ac.labels_</span><br><span class=\"line\">            plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">4</span>, i + <span class=\"number\">2</span> + <span class=\"number\">4</span> * index)</span><br><span class=\"line\">            plt.scatter(data[:, <span class=\"number\">0</span>],</span><br><span class=\"line\">                        data[:, <span class=\"number\">1</span>],</span><br><span class=\"line\">                        c=y,</span><br><span class=\"line\">                        s=<span class=\"number\">12</span>,</span><br><span class=\"line\">                        edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                        cmap=cm)</span><br><span class=\"line\">            plt.title(linkage, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">            plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">            plt.xlim(expand(data_min1, data_max1, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">            plt.ylim(expand(data_min2, data_max2, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">    plt.suptitle(<span class=\"string\">&#x27;层次聚类的不同合并策略&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">    plt.tight_layout(<span class=\"number\">0.5</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.95</span>))</span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_60_0.png\" alt=\"png\"></p>\n<h3 id=\"降维问题-2\">降维问题</h3>\n<h4 id=\"缺失值比率-2\">缺失值比率</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import required libraries</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read the data</span></span><br><span class=\"line\">train = pd.read_csv(<span class=\"string\">&quot;./_data_set/降维问题/train_v9rqX0R.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># checking the percentage of missing values in each variable</span></span><br><span class=\"line\"><span class=\"comment\"># 数据完整率 = (空数 / 所有数) * 100</span></span><br><span class=\"line\">a = train.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(train) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># saving column names in a variable</span></span><br><span class=\"line\">variable = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">12</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[i] &lt;= <span class=\"number\">20</span>:  <span class=\"comment\">#setting the threshold as 20%</span></span><br><span class=\"line\">        variable.append(train.columns[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 缺失率大于阈值的列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(variable)</span><br></pre></td></tr></table></figure>\n<pre><code>['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Location_Type', 'Outlet_Type', 'Item_Outlet_Sales']\n</code></pre>\n<h4 id=\"低方差过滤-2\">低方差过滤</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import required libraries</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read the data</span></span><br><span class=\"line\">train = pd.read_csv(<span class=\"string\">&quot;./_data_set/降维问题/train_v9rqX0R.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充空项</span></span><br><span class=\"line\">train[<span class=\"string\">&#x27;Item_Weight&#x27;</span>].fillna(train[<span class=\"string\">&#x27;Item_Weight&#x27;</span>].median(), inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train[<span class=\"string\">&#x27;Outlet_Size&#x27;</span>].fillna(train[<span class=\"string\">&#x27;Outlet_Size&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充后的缺失率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(train) * <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">numeric = train[[</span><br><span class=\"line\">    <span class=\"string\">&#x27;Item_Weight&#x27;</span>, <span class=\"string\">&#x27;Item_Visibility&#x27;</span>, <span class=\"string\">&#x27;Item_MRP&#x27;</span>, <span class=\"string\">&#x27;Outlet_Establishment_Year&#x27;</span></span><br><span class=\"line\">]]</span><br><span class=\"line\">var = numeric.var()</span><br><span class=\"line\">numeric = numeric.columns</span><br><span class=\"line\">variable = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(var)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> var[i] &gt;= <span class=\"number\">10</span>:  <span class=\"comment\">#setting the threshold as 10%</span></span><br><span class=\"line\">        variable.append(numeric[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(variable)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Item_Identifier              0.0\nItem_Weight                  0.0\nItem_Fat_Content             0.0\nItem_Visibility              0.0\nItem_Type                    0.0\nItem_MRP                     0.0\nOutlet_Identifier            0.0\nOutlet_Establishment_Year    0.0\nOutlet_Size                  0.0\nOutlet_Location_Type         0.0\nOutlet_Type                  0.0\nItem_Outlet_Sales            0.0\ndtype: float64\n['Item_Weight', 'Item_MRP', 'Outlet_Establishment_Year']\n</code></pre>\n<h2 id=\"代码相关\">代码相关</h2>\n<h3 id=\"存储-读取模型\">存储-读取模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm  <span class=\"comment\"># 线性模型</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.metrics <span class=\"keyword\">as</span> sm  <span class=\"comment\"># 模型性能评价模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.array([[<span class=\"number\">0.5</span>], [<span class=\"number\">0.6</span>], [<span class=\"number\">0.8</span>], [<span class=\"number\">1.1</span>], [<span class=\"number\">1.4</span>]])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建线性回归器</span></span><br><span class=\"line\">model = lm.LinearRegression()</span><br><span class=\"line\"><span class=\"comment\"># 用已知输入、输出数据集训练回归器</span></span><br><span class=\"line\">model.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;训练完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存训练后的模型</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;linear_model.pkl&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    pickle.dump(model, f)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;保存模型完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">######################### 加载模型 #########################</span></span><br><span class=\"line\"><span class=\"comment\"># 上面通过训练数据x,y 训练好了 x -&gt; y 的线性回归模型</span></span><br><span class=\"line\"><span class=\"comment\"># 下面加载模型, 再给出测试数据 x, 查看模型预测结果直线与原始数据 (x,y) 的拟合度</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;linear_model.pkl&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    model = pickle.load(f)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加载模型完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据加载的模型预测输出</span></span><br><span class=\"line\">pred_y = model.predict(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化回归曲线</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">mp.scatter(x, y, c=<span class=\"string\">&#x27;blue&#x27;</span>, alpha=<span class=\"number\">0.8</span>, s=<span class=\"number\">60</span>, label=<span class=\"string\">&#x27;Sample Points&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.plot(x, pred_y, c=<span class=\"string\">&#x27;orangered&#x27;</span>, label=<span class=\"string\">&#x27;Regression&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.legend()</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<pre><code>训练完成.\n保存模型完成.\n加载模型完成.\n</code></pre>\n<p><img src=\"ML_files/ML_66_1.png\" alt=\"png\"></p>\n<h3 id=\"Web-app\">Web-app</h3>\n<h4 id=\"一-3\">一</h4>\n<p>train 一个逻辑回归模型并用 pickle 打包</p>\n<p>然后load</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, classification_report</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">ufos = pd.read_csv(<span class=\"string\">&#x27;./_data_set/web-app/1/ufos.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># ufos.head()</span></span><br><span class=\"line\"></span><br><span class=\"line\">ufos = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Seconds&#x27;</span>: ufos[<span class=\"string\">&#x27;duration (seconds)&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Country&#x27;</span>: ufos[<span class=\"string\">&#x27;country&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Latitude&#x27;</span>: ufos[<span class=\"string\">&#x27;latitude&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Longitude&#x27;</span>: ufos[<span class=\"string\">&#x27;longitude&#x27;</span>]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.Country.unique()</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.dropna(inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">ufos = ufos[(ufos[<span class=\"string\">&#x27;Seconds&#x27;</span>] &gt;= <span class=\"number\">1</span>) &amp; (ufos[<span class=\"string\">&#x27;Seconds&#x27;</span>] &lt;= <span class=\"number\">60</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ufos.info()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;us&#x27;, nan, &#x27;gb&#x27;, &#x27;ca&#x27;, &#x27;au&#x27;, &#x27;de&#x27;] -&gt; 0-5</span></span><br><span class=\"line\">ufos[<span class=\"string\">&#x27;Country&#x27;</span>] = LabelEncoder().fit_transform(ufos[<span class=\"string\">&#x27;Country&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.head()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ======================== 准备完成 ==============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = ufos[[<span class=\"string\">&#x27;Seconds&#x27;</span>, <span class=\"string\">&#x27;Latitude&#x27;</span>, <span class=\"string\">&#x27;Longitude&#x27;</span>]]</span><br><span class=\"line\">y = ufos[<span class=\"string\">&#x27;Country&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># [&#x27;Seconds&#x27;, &#x27;Latitude&#x27;, &#x27;Longitude&#x27;]  ==&gt;  &#x27;Country&#x27;</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># default max_iter=100 会超限</span></span><br><span class=\"line\">model = LogisticRegression(max_iter=<span class=\"number\">1000</span>).fit(X_train, y_train)</span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Predicted labels: &#x27;</span>, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Accuracy: &#x27;</span>, accuracy_score(y_test, y_pred))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ======================== 打包 model ==============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">model_name = <span class=\"string\">&#x27;./_data_set/web-app/1/ufo-model.pkl&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.dump(model, <span class=\"built_in\">open</span>(model_name, <span class=\"string\">&#x27;wb&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        41\n           1       0.85      0.47      0.60       250\n           2       1.00      1.00      1.00         8\n           3       1.00      1.00      1.00       131\n           4       0.97      1.00      0.98      4743\n\n    accuracy                           0.97      5173\n   macro avg       0.96      0.89      0.92      5173\nweighted avg       0.97      0.97      0.97      5173\n\nPredicted labels:  [4 4 4 ... 3 4 4]\nAccuracy:  0.9702300405953992\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model_load = pickle.load(<span class=\"built_in\">open</span>(model_name, <span class=\"string\">&#x27;rb&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(model_load.predict([[<span class=\"number\">50</span>, <span class=\"number\">44</span>, -<span class=\"number\">12</span>]]))</span><br></pre></td></tr></table></figure>\n<pre><code>[3]\n\n\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n  warnings.warn(\n</code></pre>\n<h4 id=\"二-3\">二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report</span><br><span class=\"line\"></span><br><span class=\"line\">data = pd.read_csv(<span class=\"string\">&#x27;./_data_set/cuisines_classification/cleaned_cuisines.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除前两列无用的列</span></span><br><span class=\"line\">X = data.iloc[:, <span class=\"number\">2</span>:]</span><br><span class=\"line\">y = data[[<span class=\"string\">&#x27;cuisine&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, C=<span class=\"number\">10</span>, probability=<span class=\"literal\">True</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># model.fit(X_train, np.revel(y_train))</span></span><br><span class=\"line\">model.fit(X_train, y_train.values.ravel())</span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n     chinese       0.73      0.68      0.70       242\n      indian       0.89      0.88      0.88       246\n    japanese       0.80      0.79      0.79       262\n      korean       0.82      0.75      0.78       229\n        thai       0.75      0.88      0.81       220\n\n    accuracy                           0.79      1199\n   macro avg       0.79      0.80      0.79      1199\nweighted avg       0.80      0.79      0.79      1199\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> skl2onnx <span class=\"keyword\">import</span> convert_sklearn</span><br><span class=\"line\"><span class=\"keyword\">from</span> skl2onnx.common.data_types <span class=\"keyword\">import</span> FloatTensorType</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 张量为 380</span></span><br><span class=\"line\">initial_type = [(<span class=\"string\">&#x27;float_input&#x27;</span>, FloatTensorType([<span class=\"literal\">None</span>, <span class=\"number\">380</span>]))]</span><br><span class=\"line\">options = &#123;<span class=\"built_in\">id</span>(model): &#123;<span class=\"string\">&#x27;nocl&#x27;</span>: <span class=\"literal\">True</span>, <span class=\"string\">&#x27;zipmap&#x27;</span>: <span class=\"literal\">False</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">onx = convert_sklearn(model, initial_types=initial_type, options=options)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./_data_set/web-app/2/model.onnx&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(onx.SerializeToString())</span><br></pre></td></tr></table></figure>\n<h2 id=\"信息论\">信息论</h2>\n<h3 id=\"两点分布信息熵\">两点分布信息熵</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 因为 ln0 无定义, 用此值模拟趋近 0</span></span><br><span class=\"line\">eps = <span class=\"number\">1e-5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># probability</span></span><br><span class=\"line\">p = np.linspace(eps, <span class=\"number\">1</span> - eps, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Information entropy</span></span><br><span class=\"line\">h = -(<span class=\"number\">1</span> - p) * np.log2(<span class=\"number\">1</span> - p) - p * np.log2(p)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(p, h, label=<span class=\"string\">&#x27;Information entropy&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Probability&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Entropy&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果中信息熵的峰值取决于 log 底数, e为底时峰值为0.7左右, 2为底峰值为1</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_74_0.png\" alt=\"png\"></p>\n<h3 id=\"基尼系数与-ln\">基尼系数与-ln</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">eps = <span class=\"number\">1e-4</span></span><br><span class=\"line\">p = np.linspace(eps, <span class=\"number\">1</span> - eps, <span class=\"number\">100</span>)</span><br><span class=\"line\">h = -(<span class=\"number\">1</span> - p) * np.log2(<span class=\"number\">1</span> - p) - p * np.log2(p)</span><br><span class=\"line\">gini = <span class=\"number\">2</span> * (<span class=\"number\">1</span> - p) * p</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(p, gini, <span class=\"string\">&#x27;r-&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.plot(p, h / <span class=\"number\">2</span>, <span class=\"string\">&#x27;g-&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Gini(p) / Ln(p)&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;p&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;H&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Gini&#x27;</span>, <span class=\"string\">&#x27;Ln&#x27;</span>], loc=<span class=\"string\">&#x27;best&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"ML_files/ML_76_0.png\" alt=\"png\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-36\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://discover304.top/\">https://discover304.top/</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6\">【上海交大】【腾讯】强强联合 机器学习+深度学习</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.analyticsvidhya.com/blog/2018/08/dimensionality-reduction-techniques-python/\">The Ultimate Guide to 12 Dimensionality Reduction Techniques (with Python codes)</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://github.com/microsoft/ML-For-Beginners\">https://github.com/microsoft/ML-For-Beginners</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "python",
                "人工智能",
                "信息论",
                "机器学习"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Web/JavaScript/live2d-moc3/README/",
            "url": "https://weidows.github.io/post/Web/JavaScript/live2d-moc3/README/",
            "title": "👉live2d-moc3-web-集成渲染库",
            "date_published": "2022-03-26T04:46:57.000Z",
            "content_html": "<h2>\n<ul>\n<li>\n<h1>👉Live2d-moc3👈</h1>\n</li>\n</ul>\n</h2>\n<p><a href=\"https://weidows.github.io/post/Web/JavaScript/live2d-moc3/README\">⏩ 文章地址/示例博客</a> | <a href=\"https://github.com/Weidows-projects/live2d-moc3\">✔️ 仓库地址</a> | <a href=\"https://weidows-projects.github.io/live2d-moc3/\">👀 示例页面</a> 欢迎提交 pr !</p>\n<!--\n * @?: live2d************************************************\n * @Author: JavaScripteidows\n * @Date: 2022-03-20 22:26:55\n * @LastEditors: Weidows\n * @LastEditTime: 2022-05-23 00:47:01\n * @FilePath: \\Blog-private\\source\\_posts\\Web\\JavaScript\\live2d-moc3\\README.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li>[x] 支持 live2d-moc3 版本的 web 渲染库</li>\n<li>[x] 支持鼠标点击互动 | 不提供拖动功能</li>\n<li>[x] 新增支持 [多模型] 异步加载 + 每日恒定随机模型 (每天更换自定义列表内随机模型,当日不再随刷新而替换)\n<ul>\n<li>[x] 已支持模型号越界判定,自动缩小到给定范围</li>\n</ul>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"如何添加\">如何添加</h2>\n<ul>\n<li>\n<p>三个必要的头: <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup> <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Live2DCubismCore --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/live2dcubismcore.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Include Pixi. --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/pixi.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/live2d.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以及自定义的 js, 单个/多个模型都可以, 但只显示一个, 想要多个可以多 new 几个</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;DOMContentLoaded&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> models = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"number\">800</span>,</span><br><span class=\"line\">      <span class=\"attr\">height</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">      <span class=\"attr\">left</span>: <span class=\"string\">&quot;0px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&quot;0px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">basePath</span>:</span><br><span class=\"line\">        <span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/alg-wiki/AzurLaneL2DViewer@gh-pages/assets&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">role</span>: <span class=\"string\">&quot;bisimai_2&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">background</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">opacity</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">mobile</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"number\">800</span>,</span><br><span class=\"line\">      <span class=\"attr\">height</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">      <span class=\"attr\">right</span>: <span class=\"string\">&quot;0px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">bottom</span>: <span class=\"string\">&quot;0px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">basePath</span>:</span><br><span class=\"line\">        <span class=\"string\">&quot;https://fastly.jsdelivr.net/gh/alg-wiki/AzurLaneL2DViewer@gh-pages/assets&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">role</span>: <span class=\"string\">&quot;bisimai_2&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">background</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">opacity</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">      <span class=\"attr\">mobile</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"title class_\">Live2</span>dLoader(models);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"比如-Hexo\">比如 Hexo</h2>\n<p>添加到主题的 _config.yml</p>\n<p>js 代码可以写完参数后 <a href=\"https://c.runoob.com/front-end/51/\">压缩为一行</a>,一起添加到下面;</p>\n<p>当然也可以魔改框架源码,此处不再赘述.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">inject:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span></span><br><span class=\"line\">    <span class=\"comment\"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script</span> <span class=\"string\">src=&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/live2dcubismcore.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script</span> <span class=\"string\">src=&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/pixi.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script</span> <span class=\"string\">src=&quot;https://fastly.jsdelivr.net/gh/Weidows-projects/live2d-moc3/dist/live2d.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">bottom:</span></span><br><span class=\"line\">    <span class=\"comment\"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script&gt;addEventListener(&quot;DOMContentLoaded&quot;,function()&#123;let</span> <span class=\"string\">models=[&#123;left:&quot;0px&quot;,bottom:&quot;0px&quot;,basePath:&quot;https://fastly.jsdelivr.net/gh/alg-wiki/AzurLaneL2DViewer@gh-pages/assets&quot;,role:&quot;bisimai_2&quot;,background:&quot;&quot;,opacity:1,mobile:false,&#125;,&#123;right:&quot;0px&quot;,bottom:&quot;0px&quot;,basePath:&quot;https://fastly.jsdelivr.net/gh/alg-wiki/AzurLaneL2DViewer@gh-pages/assets&quot;,role:&quot;bisimai_2&quot;,background:&quot;&quot;,opacity:1,mobile:false,&#125;,];new</span> <span class=\"string\">Live2dLoader(models)&#125;);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"可选参数\">可选参数</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td>可选[Number]</td>\n<td>800</td>\n<td>宽度，单位为 px</td>\n</tr>\n<tr>\n<td>height</td>\n<td>可选[Number]</td>\n<td>600</td>\n<td>长度，单位为 px</td>\n</tr>\n<tr>\n<td>top,right,bottom,left</td>\n<td>可选[String]</td>\n<td>“”</td>\n<td>模型到浏览器各边框的距离。选择两个即可定位，如定位在左下角：left: ‘0px’ , bottom: ‘0px’</td>\n</tr>\n<tr>\n<td>basePath</td>\n<td>必须[String]</td>\n<td>“”</td>\n<td>live2d 模型资源库的路径,推荐下面仓库,模型非常好看 </br> <a href=\"https://github.com/alg-wiki/AzurLaneL2DViewer\">alg-wiki/AzurLaneL2DViewer</a> </br> <a href=\"https://github.com/imuncle/live2d\">imuncle/live2d</a></td>\n</tr>\n<tr>\n<td>role</td>\n<td>必须[String]</td>\n<td>“”</td>\n<td>角色模型对应的文件夹（即 basePath 下的文件夹</td>\n</tr>\n<tr>\n<td>background</td>\n<td>可选[String]</td>\n<td>“”</td>\n<td>背景图片，可填入图片外链</td>\n</tr>\n<tr>\n<td>opacity</td>\n<td>可选[Number]</td>\n<td>1</td>\n<td>模型透明度，(0,1] 取值</td>\n</tr>\n<tr>\n<td>mobile</td>\n<td>可选[boolean]</td>\n<td>true</td>\n<td>移动端(手机)是否显示</td>\n</tr>\n</tbody>\n</table>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Q-A\">Q-A</h2>\n<h3 id=\"模型问题报错\">模型问题报错</h3>\n<ul>\n<li>\n<p>关于报错含有 <code>reading ‘_ptr’</code> 的, 是模型不适配问题 (#2)</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">live2dcubismcore</span>.min.js:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">Uncaught</span> TypeError: Cannot read properties of null (reading ‘_ptr’)</span><br><span class=\"line\"><span class=\"attribute\">at</span> new Model (live2dcubismcore.min.js:<span class=\"number\">1</span>:<span class=\"number\">138485</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> Function.Model.fromMoc (live2dcubismcore.min.js:<span class=\"number\">1</span>:<span class=\"number\">138707</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> l2d.js💯<span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attribute\">at</span> t.value (mini-signals.js:<span class=\"number\">93</span>:<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> e.t._onComplete (Loader.js:<span class=\"number\">568</span>:<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> Loader.js:<span class=\"number\">608</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">at</span> s (async.js:<span class=\"number\">27</span>:<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> e. (interactiveTarget.js:<span class=\"number\">82</span>:<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"attribute\">at</span> Loader.js:<span class=\"number\">590</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">at</span> async.js:<span class=\"number\">35</span>:<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>检验过并不是配置文件哪里有问题, 单纯是二进制模型 .png/.moc3 问题, 想修复的话要修复模型</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"怎么刷新\">怎么刷新</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/05/23/ZRyZgz.png\" alt=\"\"></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-40\">借物表</h2>\n<blockquote>\n<p>项目基于<a href=\"https://github.com/alg-wiki/AzurLaneL2DViewer\">AzurLaneL2DViewer</a>修改</p>\n</blockquote>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://fastly.jsdelivr.net/gh/litstronger/live2d-moc3@master/js/frame/live2dcubismcore.min.js\">https://fastly.jsdelivr.net/gh/litstronger/live2d-moc3@master/js/frame/live2dcubismcore.min.js</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://cdnjs.cloudflare.com/ajax/libs/pixi.js/4.6.1/pixi.min.js\">https://cdnjs.cloudflare.com/ajax/libs/pixi.js/4.6.1/pixi.min.js</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "javascript",
                "live2d"
            ]
        },
        {
            "id": "https://weidows.github.io/post/python/AI/AI/",
            "url": "https://weidows.github.io/post/python/AI/AI/",
            "title": "🐊All-about-AI",
            "date_published": "2022-03-18T16:13:49.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-05-16 22:31:05\n * @FilePath: \\Blog-private\\source\\_posts\\python\\AI\\AI.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li>\n<details>\n  <summary> 文章封面图 (恐怖慎看) </summary>\n<p><img src=\"https://www.helloimg.com/images/2022/03/19/RaxZ0b.png\" alt=\"RaxZ0b.png\"></p>\n<hr>\n</details>\n</li>\n</ul>\n<p>此篇为本博客中 AI 领域的根, 也可以当做目录 (因为篇幅太长,就给分开了)</p>\n<blockquote>\n<p>文中大量使用 LaTeX 公式, 如何写的可以看 <a href=\"../../../experience/LaTeX\">🍹LaTeX~环形使者(?)</a> <br>\n强推大佬朋友的文章: <a href=\"https://discover304.top/2021/12/21/2021q4/123-ai-question-collection/\">【人工智能】面试问题整理</a></p>\n</blockquote>\n<ul>\n<li>\n<p>嗟叹</p>\n<p>炼丹界门派好多啊, 一派一传承</p>\n<p>师出少林, 修行武当, 行至小河, 探头一照</p>\n<p>欸, 爷竟是峨眉的 🐵</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"体系概览\">体系概览</h2>\n<ul>\n<li>\n<p>人工智能是什么? <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup><sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<blockquote>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVidNr.png\" alt=\"\"><br>\n<img src=\"https://www.helloimg.com/images/2022/03/09/RCPHaM.png\" alt=\"\"></p>\n</blockquote>\n</li>\n</ul>\n<p>下面包含细分文章的索引 (可点击跳转)</p>\n<blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>AI\n<ul>\n<li>研究领域\n<ul>\n<li><a href=\"../ML\">机器学习</a>\n<ul>\n<li><a href=\"../DL\">深度学习</a></li>\n</ul>\n</li>\n<li>CV 计算机视觉\n<ul>\n<li>图像识别</li>\n<li>机器视觉</li>\n</ul>\n</li>\n<li>语音信息处理\n<ul>\n<li>文本-&gt;语音</li>\n<li>语音-&gt;文本</li>\n</ul>\n</li>\n<li>自然语言处理 NLP\n<ul>\n<li>文本生成</li>\n<li>文本分类</li>\n<li>翻译</li>\n<li>…</li>\n</ul>\n</li>\n<li>ROS 机器人系统</li>\n<li>专家系统</li>\n</ul>\n</li>\n<li>框架和库\n<ul>\n<li>Tenserflow</li>\n<li>Pytorch</li>\n<li>sklearn</li>\n<li>飞桨</li>\n<li>…</li>\n</ul>\n</li>\n<li>表示学习\n<ul>\n<li>表示\n<ul>\n<li>为了提高机器学习系统的准确率,就需要将输入信息转换为有效的特征</li>\n</ul>\n</li>\n<li>数据表示是机器学习的核心问题</li>\n<li>底层特征与高层语义之间存在语义鸿沟,如何在鸿沟上搭桥是表示学习的关键</li>\n<li>表示方法\n<ul>\n<li>局部表示/离散表示/符号表示\n<ul>\n<li>如: 红 绿 蓝</li>\n</ul>\n</li>\n<li>分布式表示\n<ul>\n<li>优点\n<ul>\n<li>表示能力强</li>\n<li>向量维度低</li>\n<li>相似度容易计算</li>\n</ul>\n</li>\n<li>例如: (255,0,0), (0,255,0)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>嵌入\n<ul>\n<li>将一个度量空间中的一些对象映射到另一个低维的度量空间中</li>\n<li>并尽可能保持不同对象之间的拓扑关系,比如自然语言中词的分布式表示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据分析-2\">数据分析</h2>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>数据分析\n<ul>\n<li>数据类型\n<ul>\n<li>数值 Numerical\n<ul>\n<li>离散 discrete</li>\n<li>连续 continuous</li>\n</ul>\n</li>\n<li>分类 Categorical\n<ul>\n<li>无法相互度量的数据,例如颜色</li>\n</ul>\n</li>\n<li>序数 Ordinal\n<ul>\n<li>类似分类数据,但可以相互度量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用特殊值\n<ul>\n<li>均值 mean</li>\n<li>中值 median</li>\n<li>众数 mode</li>\n<li>标准差 std</li>\n<li>方差 var = std * std</li>\n<li>百分位数 percentile\n<ul>\n<li>返回一个数 x, 这个 x &gt;= 数组中百分之 percentile 的数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"待办\">待办</h2>\n<h3 id=\"GAN\">GAN</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/04/08/Rsmdm0.png\" alt=\"\"></p>\n<p>搜集大量 x 与 y 类型数据, GAN 模型可以自动学习 x 与 y 之间的关系</p>\n<h3 id=\"异常检测-anomaly-detection\">异常检测-anomaly-detection</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/04/08/Rsmvdm.png\" alt=\"\"></p>\n<h3 id=\"Glow\">Glow</h3>\n<p>Glow -&gt; Flow-based generative model</p>\n<p>生成网络属于 DNN,是一种常用的<a href=\"#%E5%8C%BA%E5%88%86%E6%9C%89-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0\">无监督学习模型</a></p>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>深度神经网络 DNN -&gt; 生成网络\n<ul>\n<li>生成对抗网络 GANs (Generative Adversarial Networks)</li>\n<li>变分自编码器 VAE (Variational Auto-Encoder)</li>\n<li>Pixel RNN/CNN</li>\n<li>流模型 Glow (Generative Flow)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-32\">借物表</h2>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-nofsahRrgYKisIxH\" src=\"https://player.bilibili.com/player.html?bvid=BV1J94y1f7u5&page=1&high_quality=1&danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-nofsahRrgYKisIxH\").style.height=document.getElementById(\"mmedia-nofsahRrgYKisIxH\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-nofsahRrgYKisIxH\").style.height=document.getElementById(\"mmedia-nofsahRrgYKisIxH\").scrollWidth*0.76+\"px\";\n    }; </script>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-WEomwIabPYSPabgJ\" src=\"https://player.bilibili.com/player.html?bvid=BV16L411w7oQ&page=1&high_quality=1&danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-WEomwIabPYSPabgJ\").style.height=document.getElementById(\"mmedia-WEomwIabPYSPabgJ\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-WEomwIabPYSPabgJ\").style.height=document.getElementById(\"mmedia-WEomwIabPYSPabgJ\").scrollWidth*0.76+\"px\";\n    }; </script>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://zhuanlan.zhihu.com/p/86794447\">一文看懂人工智能、机器学习、深度学习与神经网络之间的区别与关系</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://nndl.github.io/\">神经网络与深度学习</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "人工智能",
                "机器学习",
                "深度学习",
                "doing"
            ]
        },
        {
            "id": "https://weidows.github.io/post/life/game/",
            "url": "https://weidows.github.io/post/life/game/",
            "title": "🥳些些游戏琐事",
            "date_published": "2022-03-12T15:50:57.000Z",
            "content_html": "<h1>些些游戏琐事</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-05-07 10:19:44\n * @FilePath: \\Blog-private\\source\\_posts\\life\\game.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E4%BA%9B%E4%BA%9B%E6%B8%B8%E6%88%8F%E7%90%90%E4%BA%8B\">些些游戏琐事</a>\n<ul>\n<li><a href=\"#epic\">EPIC</a>\n<ul>\n<li><a href=\"#%E5%BA%93%E7%A9%BA%E4%BA%86\">库空了</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%B0%8F%E5%B0%8F%E6%A2%A6%E9%AD%87\">小小梦魇</a>\n<ul>\n<li><a href=\"#%E7%9E%8E%E7%9C%BC%E5%8E%A8%E5%B8%88%E5%85%B3\">瞎眼厨师关</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%96%B9%E8%88%9F-ark\">方舟-ARK</a>\n<ul>\n<li><a href=\"#%E9%94%81%E5%B8%A7\">锁帧</a></li>\n<li><a href=\"#%E6%9B%B4%E6%94%B9%E7%89%A9%E5%93%81%E5%A0%86%E5%8F%A0%E6%95%B0%E9%87%8F\">更改物品堆叠数量</a></li>\n<li><a href=\"#%E4%BD%9C%E5%BC%8A%E4%BB%A3%E7%A0%81\">作弊代码</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"EPIC\">EPIC</h2>\n<h3 id=\"库空了\">库空了</h3>\n<ul>\n<li>\n<p>大概就是这么个情况:</p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/12/RFHXkK.png\" alt=\"RFHXkK.png\"></p>\n</li>\n<li>\n<p>试了如下方法:</p>\n<ol>\n<li>用朋友电脑登录,库存正常显示</li>\n<li>重装/清除 C 盘数据(program files,APPdata/Local 等都请了)/清理注册表 -&gt; 都无效</li>\n<li>把设置里所有选项试了个遍,无效</li>\n</ol>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>之后尝试用 GOG 看看库存,发现 GOG 上正常而且能调用 EPIC 安装游戏</p>\n<p>于是我这样试了下安装了一个游戏,装完后惊奇的发现: 我叼出来了!</p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/13/RFHq1b.png\" alt=\"RFHq1b.png\"></p>\n<p>所以…解决办法就是随便装个游戏</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"小小梦魇\">小小梦魇</h2>\n<h3 id=\"瞎眼厨师关\">瞎眼厨师关</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/03/28/RqmsTz.png\" alt=\"\"></p>\n<p>网上教程大多是先让进这个笼子<sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup>,然后等 boss 走到左边后出来跟他赛跑</p>\n<p>试了好多次都被抓</p>\n<p>后来发现, 可以爬上这个笼子,等 boss 走到左边后从笼子右边跳下去,boss 不会追上来</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"方舟-ARK\">方舟-ARK</h2>\n<h3 id=\"锁帧\">锁帧</h3>\n<blockquote>\n<p>ARKSurvivalEvolved\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\Engine.ini</p>\n</blockquote>\n<ul>\n<li>\n<p>在最后 append 这个:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[/script/engine.renderersettings]</span></span><br><span class=\"line\"><span class=\"attr\">t.maxfps</span>=<span class=\"number\">60</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"更改物品堆叠数量\">更改物品堆叠数量</h3>\n<blockquote>\n<p>ARKSurvivalEvolved\\ShooterGame\\Saved\\Config\\WindowsNoEditor\\GameUserSettings.ini</p>\n</blockquote>\n<p>里面的 <code>ItemStackSizeMultiplier</code> 这一项</p>\n<hr>\n<h3 id=\"作弊代码\">作弊代码</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:left\">代码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">飞</td>\n<td style=\"text-align:left\">fly</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">走</td>\n<td style=\"text-align:left\">walk</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">伽马值</td>\n<td style=\"text-align:left\">gamma x.x</td>\n</tr>\n</tbody>\n</table>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-8\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"http://www.wyaq.com/youxi/gonglue/8142_5.html\">小小梦魇 1 图文攻略 全剧情流程+全解谜 boss 打法攻略(5)瞎眼厨子</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.bilibili.com/video/BV1mf4y1X7na\">方舟生存进化系统自带叠加功能设置方法及效果（非模组）【方舟三分钟】</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.bilibili.com/video/BV14V411z7NY\">【方舟】告别显卡占用过高造成的卡顿-死机等情况，锁帧教程</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "游戏"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/LeetCode/1/",
            "url": "https://weidows.github.io/post/experience/LeetCode/1/",
            "title": "😵‍💫跟力扣斗智斗勇-log-1",
            "date_published": "2022-03-09T05:20:05.000Z",
            "content_html": "<h1>跟力扣斗智斗勇-log-1</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-06-14 21:13:55\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\LeetCode\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E8%B7%9F%E5%8A%9B%E6%89%A3%E6%96%97%E6%99%BA%E6%96%97%E5%8B%87-log-1\">跟力扣斗智斗勇-log-1</a>\n<ul>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95\">数据结构与算法</a>\n<ul>\n<li><a href=\"#%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC%E9%97%AE%E9%A2%98\">链表反转问题</a></li>\n<li><a href=\"#%E7%B4%A0%E6%95%B0\">素数</a></li>\n<li><a href=\"#%E5%8C%BA%E5%88%86%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86\">区分二叉树遍历</a>\n<ul>\n<li><a href=\"#%E6%B7%B1%E5%BA%A6-%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86\">深度-广度优先遍历</a></li>\n<li><a href=\"#%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86\">前中后序遍历</a></li>\n</ul>\n</li>\n<li><a href=\"#arraylist-linkedlist\">ArrayList-LinkedList</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%A2%98%E8%A7%A3\">题解</a>\n<ul>\n<li><a href=\"#160-%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8\">160. 相交链表</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%96%B9%E6%B3%95\">方法</a>\n<ul>\n<li><a href=\"#%E6%8A%95%E7%A5%A8%E7%AE%97%E6%B3%95\">投票算法</a></li>\n<li><a href=\"#%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88\">快慢指针</a></li>\n<li><a href=\"#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92\">动态规划</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%9D%91\">坑</a>\n<ul>\n<li><a href=\"#python-%E5%8F%96%E6%95%B4%E4%B8%8E%E6%95%B4%E9%99%A4\">python-取整与整除</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<!-- [⏩ 文章地址](https://weidows.github.io/post/experience/LeetCode/1/) | [✔️ 仓库地址](https://github.com/Weidows-projects/public-post/) 欢迎提交 pr ! -->\n<p>一题二写，三数之和，题解四瞅五瞄六瞧，水平还七上八下九流，十分辣鸡<br>\n十天九考，八皇会面，题干七页六道五问，答案仅四行三言两语，一点不会</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据结构与算法\">数据结构与算法</h2>\n<p>课程: 速览 ing</p>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-wtUsZFwEpupSXQpy\" src=\"https://player.bilibili.com/player.html?bvid=BV1a54y1b74k&page=1&high_quality=1&danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-wtUsZFwEpupSXQpy\").style.height=document.getElementById(\"mmedia-wtUsZFwEpupSXQpy\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-wtUsZFwEpupSXQpy\").style.height=document.getElementById(\"mmedia-wtUsZFwEpupSXQpy\").scrollWidth*0.76+\"px\";\n    }; </script>\n<h3 id=\"链表反转问题\">链表反转问题</h3>\n<p><code>迭代(栈)</code> / <code>递归</code></p>\n<p>这问题我面试时问我了,我回答的就是栈,面试官说栈要遍历两次,而递归一次就能出(函数参数添加 prev 节点)</p>\n<hr>\n<h3 id=\"素数\">素数</h3>\n<p>非素数(合数) / 素数(质数) : 都要排除 0 和 1</p>\n<ul>\n<li>\n<p>暴力法: 遍历 2 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mi>n</mi></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.2397em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-2.7603em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2397em;\"><span></span></span></span></span></span></span></span></span> 之前的数字,如果能被整除,那么这个数字不是素数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>; i * i &lt; x; i++)&#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>埃塞法: 比如找 100 内有多少个素数 (25 个)</p>\n<p>构造 bool[100]</p>\n<p>找到 3 是素数, 那么 3x3=3, 3x4=12, 3x5=15…3x33=99 都不是素数,对应 bool[i]做标记,遍历时跳过</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"区分二叉树遍历\">区分二叉树遍历</h3>\n<h4 id=\"深度-广度优先遍历\">深度-广度优先遍历</h4>\n<ul>\n<li>\n<p>深度优先遍历: <code>递归</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inOrder</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  inOrder(root.left);</span><br><span class=\"line\">  bstQueue.offer(root.val);</span><br><span class=\"line\">  inOrder(root.right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>广度优先遍历: <code>队列</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inOrder</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  bstQueue.offer(root.val);</span><br><span class=\"line\">  inOrder(root.left);</span><br><span class=\"line\">  inOrder(root.right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"前中后序遍历\">前中后序遍历</h4>\n<p>前序也叫先序, 这三种都属于深度优先遍历</p>\n<ul>\n<li>\n<p>基本上是递归模板,比如中序遍历 BST 如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inOrder</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  inOrder(root.left);</span><br><span class=\"line\">  bstQueue.offer(root.val);</span><br><span class=\"line\">  inOrder(root.right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>详见这个题解: <a href=\"https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8.java\">https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/173.二叉搜索树迭代器.java</a></p>\n</li>\n<li>\n<p>前后序遍历: <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inOrder</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  bstQueue.offer(root.val);</span><br><span class=\"line\">  inOrder(root.left);</span><br><span class=\"line\">  inOrder(root.right);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">inOrder</span><span class=\"params\">(TreeNode root)</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (root == <span class=\"literal\">null</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  inOrder(root.left);</span><br><span class=\"line\">  inOrder(root.right);</span><br><span class=\"line\">  bstQueue.offer(root.val);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"ArrayList-LinkedList\">ArrayList-LinkedList</h3>\n<p>顺序遍历时间复杂度相同, n 相同时 LinkedList 空间更大</p>\n<ul>\n<li>\n<p>ArrayList:</p>\n<p>随机查询快, 插入和删除慢(不可随机)</p>\n<blockquote>\n<p>随机指的是对任意指定 index 的操作</p>\n</blockquote>\n<hr>\n</li>\n<li>\n<p>LinkedList:</p>\n<p>随机查询慢, 插入和删除快(可随机)</p>\n<p>linkedlist 排序性能更好,并且较 arraylist 更节省空间 <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"题解\">题解</h2>\n<h3 id=\"160-相交链表\">160. 相交链表</h3>\n<blockquote>\n<p><a href=\"https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/160.%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8.py\">https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/160.相交链表.py</a></p>\n</blockquote>\n<ul>\n<li>\n<p>此方法简单描述就是交叉接尾<br>\n<sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">getIntersectionNode</span>(<span class=\"params\">self, headA, headB</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        :type head1, head1: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        p, q = headA, headB</span><br><span class=\"line\">        <span class=\"keyword\">while</span> p != q:</span><br><span class=\"line\">            p = p.<span class=\"built_in\">next</span> <span class=\"keyword\">if</span> p <span class=\"keyword\">else</span> headB</span><br><span class=\"line\">            q = q.<span class=\"built_in\">next</span> <span class=\"keyword\">if</span> q <span class=\"keyword\">else</span> headA</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://www.helloimg.com/images/2022/03/09/RCFKPP.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/09/RCFg7n.png\" alt=\"\"></p>\n<p>当前链表结尾后接上对方链表的头, 同时以两链表头为起点, 可以发现都走了 7 步后在交叉绿点相遇</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"方法-2\">方法</h2>\n<h3 id=\"投票算法\">投票算法</h3>\n<p>可以看一下多数元素的题解 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p>对于出现次数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>大于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{n}{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0404em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>的元素,能抵消其他元素还有余量,最后 candidate 必然是众数</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"快慢指针\">快慢指针</h3>\n<p>常用于链表</p>\n<ol>\n<li>\n<p><a href=\"https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.go\">判断是否存在 <code>环</code>, 相遇即成环</a></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hasCycle</span><span class=\"params\">(head *ListNode)</span></span> <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\">  slow, fast := head, head</span><br><span class=\"line\">  <span class=\"keyword\">for</span> fast != <span class=\"literal\">nil</span> &amp;&amp; fast.Next != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    slow = slow.Next</span><br><span class=\"line\">    fast = fast.Next.Next</span><br><span class=\"line\">    <span class=\"keyword\">if</span> slow == fast &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><a href=\"https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8.java\">寻找链表中点</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ListNode</span> <span class=\"variable\">slow</span> <span class=\"operator\">=</span> head, fast = head;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (fast != tail) &#123;</span><br><span class=\"line\">  slow = slow.next;</span><br><span class=\"line\">  fast = fast.next;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (fast != tail) &#123;</span><br><span class=\"line\">    fast = fast.next;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">ListNode</span> <span class=\"variable\">mid</span> <span class=\"operator\">=</span> slow;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"动态规划\">动态规划</h3>\n<p>有的问题会需要<code>前瞻后顾 找最优 &quot;重叠&quot; 子结构</code>, 像是递归/迭代/贪心无法解决或者十分棘手, 瞥一眼又是中等+难度的, 多是 dp (dymanic-programming) 没跑了; 这种问题有个大致框架: <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<ol>\n<li>\n<p>状态矩阵 <code>dp[n][n]</code></p>\n<p>dp[i][j] 一般存储第 i 到 j 位通过条件转换后的状态位/数值</p>\n</li>\n<li>\n<p>条件转换方程</p>\n<p>条件: if-else</p>\n<p>转换方程: 类似 <code>dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])</code> 这种形式</p>\n</li>\n<li>\n<p>最终结果就是最后一趟 i,j 的位置: 如下的 <code>dp[0][ n - 1]</code></p>\n</li>\n</ol>\n<hr>\n<ul>\n<li>\n<p>i, j 的遍历方向是根据转换方程来确定的, 比如 <a href=\"https://github.com/Weidows-projects/public-post/blob/main/LeetCode/code/516.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97.py\">516.最长回文子序列</a> 这个题</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">longestPalindromeSubseq</span>(<span class=\"params\">self, s</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">        :type s: str</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: int</span></span><br><span class=\"line\"><span class=\"string\">        &quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(s) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(s)</span><br><span class=\"line\"></span><br><span class=\"line\">        n = <span class=\"built_in\">len</span>(s)</span><br><span class=\"line\">        dp = [[<span class=\"number\">0</span>] * n <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n)]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n - <span class=\"number\">1</span>, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">            dp[i][i] = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s[i] == s[j]:</span><br><span class=\"line\">                    dp[i][j] = dp[i + <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + <span class=\"number\">2</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    dp[i][j] = <span class=\"built_in\">max</span>(dp[i + <span class=\"number\">1</span>][j], dp[i][j - <span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dp[<span class=\"number\">0</span>][n - <span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<p>在确定 <code>dp[i][j]</code> 前, 需要已经确定 <code>dp[i+1][j]</code> 和 <code>dp[i][j-1]</code></p>\n<p>也就是说: 外层 i 为逆序,从上往下推, 内层 j 为正序从左往右推 (x 为所推的值)</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">i \\ j</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">2</th>\n<th style=\"text-align:center\">3</th>\n<th style=\"text-align:center\">4</th>\n<th style=\"text-align:center\">5</th>\n<th style=\"text-align:center\">6</th>\n<th style=\"text-align:center\">7</th>\n<th style=\"text-align:center\">8</th>\n<th style=\"text-align:center\">9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">x</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"坑\">坑</h2>\n<h3 id=\"python-取整与整除\">python-取整与整除</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 整除: 对于正数是int(), 对于负数是round()</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">3</span>//<span class=\"number\">2</span>)          <span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(-<span class=\"number\">3</span>//<span class=\"number\">2</span>)         <span class=\"comment\"># -2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">9</span>//<span class=\"number\">5</span>)          <span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(-<span class=\"number\">9</span>//<span class=\"number\">5</span>)         <span class=\"comment\"># -2</span></span><br><span class=\"line\"><span class=\"comment\"># 向下取整</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(<span class=\"number\">3</span> / <span class=\"number\">2</span>))    <span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(-<span class=\"number\">3</span> / <span class=\"number\">2</span>))   <span class=\"comment\"># -1</span></span><br><span class=\"line\"><span class=\"comment\"># 四舍五入</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">round</span>(<span class=\"number\">3</span> / <span class=\"number\">2</span>))  <span class=\"comment\"># 2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">round</span>(-<span class=\"number\">3</span> / <span class=\"number\">2</span>)) <span class=\"comment\"># -2</span></span><br><span class=\"line\"><span class=\"comment\"># 还有其他区别</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(<span class=\"number\">14</span> - <span class=\"number\">3</span> / <span class=\"number\">2</span>))  <span class=\"comment\"># 12 (14-1.5=12.5 -&gt; 12)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(<span class=\"number\">14</span> - <span class=\"number\">3</span> // <span class=\"number\">2</span>)) <span class=\"comment\"># 13 (14-1=13)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(- <span class=\"number\">3</span> / <span class=\"number\">2</span>))     <span class=\"comment\"># -1 (-1.5 -&gt; -1)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(-<span class=\"number\">3</span> // <span class=\"number\">2</span>))     <span class=\"comment\"># -2</span></span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-24\">借物表</h2>\n<p><a name='cite_note-0' href='#cite_ref-0'>[0]</a>: <a href=\"https://github.com/Weidows-projects/public-post/\">✔️ 仓库地址</a></p>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/solution/xiang-jiao-lian-biao-by-leetcode-solutio-a8jn/\">https://leetcode-cn.com/problems/intersection-of-two-linked-lists/solution/xiang-jiao-lian-biao-by-leetcode-solutio-a8jn/</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://leetcode-cn.com/problems/majority-element/solution/duo-shu-yuan-su-by-leetcode-solution/\">https://leetcode-cn.com/problems/majority-element/solution/duo-shu-yuan-su-by-leetcode-solution/</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://blog.csdn.net/u013834525/article/details/80421684\">https://blog.csdn.net/u013834525/article/details/80421684</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"http://www.manongjc.com/detail/16-qngebjtzewkyzmi.html\">jdk8 下 ArrayList 与 LinedList 排序效率对比</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://leetcode-cn.com/problems/longest-palindromic-subsequence/solution/zui-chang-hui-wen-zi-xu-lie-by-leetcode-hcjqp/\">https://leetcode-cn.com/problems/longest-palindromic-subsequence/solution/zui-chang-hui-wen-zi-xu-lie-by-leetcode-hcjqp/</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "面试",
                "算法",
                "leetcode",
                "数据结构"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/regex/",
            "url": "https://weidows.github.io/post/experience/regex/",
            "title": "🙉修为突破灵药-正则表达式",
            "date_published": "2022-02-22T17:34:56.000Z",
            "content_html": "<h1>修为突破灵药-正则表达式</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:44:36\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\regex.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E4%BF%AE%E4%B8%BA%E7%AA%81%E7%A0%B4%E7%81%B5%E8%8D%AF-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">修为突破灵药-正则表达式</a>\n<ul>\n<li><a href=\"#fix-%E8%AE%B0%E5%BD%95\">fix-记录</a></li>\n<li><a href=\"#regex-%E5%A4%9A%E5%AF%B9%E5%A4%9A%E6%9B%BF%E6%8D%A2\">regex-多对多替换</a></li>\n<li><a href=\"#vscode-%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2\">vscode-批量替换</a>\n<ul>\n<li><a href=\"#%E4%B8%80\">一</a></li>\n<li><a href=\"#%E4%BA%8C\">二</a></li>\n</ul>\n</li>\n<li><a href=\"#sed-%E6%9B%BF%E6%8D%A2%E5%8F%8D%E6%96%9C%E6%9D%A0\">sed-替换反斜杠</a></li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Regular Expressions，缩写为 Regex 或 Regexp</p>\n</blockquote>\n<ul>\n<li>\n<p>推荐两个学习网址:</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/74136752\">手握手教你学会正则表达式</a></p>\n<p><a href=\"https://regexlearn.com/zh-cn\">https://regexlearn.com/zh-cn</a></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"fix-记录\">fix-记录</h2>\n<ul>\n<li>\n<p><a href=\"https://github.com/bubkoo/hexo-filter-fenced-code/issues/3\">https://github.com/bubkoo/hexo-filter-fenced-code/issues/3</a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> rFenceCode = <span class=\"regexp\">/(\\s*)(`&#123;3,&#125;|~&#123;3,&#125;) *(.*) *\\n?([\\s\\S]+?)\\s*(\\2)(\\n+|$)/g</span>;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">regex</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>(\\s*)(`&#123;3,&#125; | ~&#123;3,&#125;)</code></td>\n<td style=\"text-align:center\">``` 或者 ~~~</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code> *(.*)</code></td>\n<td style=\"text-align:center\">至少 1 个空格+至少 1 个任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code> *\\n?</code></td>\n<td style=\"text-align:center\">至少 1 个空格+可有可无换行 <br> 错误原因就是此,我习惯 trim 行尾的空格,所以无法正常匹配</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"regex-多对多替换\">regex-多对多替换</h2>\n<ul>\n<li>\n<p>我在切换图床时想实现如下 <code>多对多替换</code> 的需求</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">1</span>d9Xs6ADR3MaNCy.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVFbWK.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">2</span>C7cgeEIQNr3qLu.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVFlgb.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">2</span>GXOS5mW8EzIT7Y.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVFWDS.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">2</span>POdUowc3qW8DRy.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVFTHD.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">2</span>ThkbFZmCU3QvEN.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVF2ao.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">https:<span class=\"regexp\">//</span>fastly.jsdelivr.net<span class=\"regexp\">/gh/</span>Weidows<span class=\"regexp\">/Images/</span>post/<span class=\"number\">2</span>ThYuqlEtFfdJeK.png</span><br><span class=\"line\">--&gt; https:<span class=\"regexp\">//</span>www.helloimg.com<span class=\"regexp\">/images/</span><span class=\"number\">2022</span><span class=\"regexp\">/02/</span><span class=\"number\">27</span>/GVFOGC.jpg</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>shell 脚本实现:</p>\n<p>支持同一链接在多个文件/多次出现出现的情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">##</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@?: *********************************************************************</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@Author: Weidows</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@Date: 2022-02-27 01:34:37</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@LastEditors: Weidows</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@LastEditTime: 2022-02-27 18:29:00</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@FilePath: \\Blog-private\\test.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@Description:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">@!: *********************************************************************</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">##</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">fileArray=(</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  1d9Xs6ADR3MaNCy</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2C7cgeEIQNr3qLu</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2GXOS5mW8EzIT7Y</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2POdUowc3qW8DRy</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2ThkbFZmCU3QvEN</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">)</span></span><br><span class=\"line\">fileArray=(</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">urlArray=(</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2022/02/27/GVFbWK.jpg</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2022/02/27/GVFlgb.jpg</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2022/02/27/GVFWDS.jpg</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2022/02/27/GVFTHD.jpg</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  2022/02/27/GVF2ao.jpg</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">)</span></span><br><span class=\"line\">urlArray=(</span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">for i in &quot;$&#123;!fileArray[@]&#125;&quot;; do</span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">查找</span></span><br><span class=\"line\">  path=`grep -rl $&#123;fileArray[$i]&#125; ./source`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">替换</span></span><br><span class=\"line\">  sed -i &quot;s#cdn.jsdelivr.net/gh/Weidows/Images/post/$&#123;fileArray[$i]&#125;\\.\\w\\w\\w#www.helloimg.com/images/$&#123;urlArray[$i]&#125;#g&quot; $path</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"vscode-批量替换\">vscode-批量替换</h2>\n<h3 id=\"一\">一</h3>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Screenshot_20210313_171408_tv.danmaku.bili</span><br><span class=\"line\">-&gt; Screenshot20210313171408</span><br><span class=\"line\"></span><br><span class=\"line\">Screenshot_<span class=\"string\">\\d+_\\d+_tv.danmaku.bili`</span></span><br><span class=\"line\">-&gt; Screenshot<span class=\"string\">\\d+\\d+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"二\">二</h3>\n<ul>\n<li>\n<p>匹配下面内容</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\">  - experience</span><br><span class=\"line\">  - shell</span><br><span class=\"line\"><span class=\"keyword\">tags:</span></span><br><span class=\"line\">  - experience</span><br><span class=\"line\">  - shell</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol>\n<li>\n<p>categories:*tags:</p>\n<p>行不通, 其中间含有 \\n</p>\n</li>\n<li>\n<p>categories:\\n((.)±(.)+\\n)+tags:\\n((.)±(.)+\\n)+</p>\n</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"sed-替换反斜杠\">sed-替换反斜杠</h2>\n<ul>\n<li>\n<p>数据中的斜杠是脚本天敌,需要做预处理转义<br>\n<sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2022/02/27/GVJOM6.jpg</span><br><span class=\"line\">-&gt; 2022\\<span class=\"string\">/02</span>\\<span class=\"string\">/27</span>\\<span class=\"string\">/GVJOM6.jpg</span></span><br></pre></td></tr></table></figure>\n<p><code>sed -i &quot;s#/#\\\\/#g&quot; result.txt</code></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-7\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://blog.csdn.net/weixin_39031707/article/details/104065184\">Sed 替换 内容带反斜杠（/）</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "regex"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Web/get-resources/",
            "url": "https://weidows.github.io/post/Web/get-resources/",
            "title": "🌏媒体资源加密-and-解密获取",
            "date_published": "2022-02-22T11:49:20.000Z",
            "content_html": "<h1>媒体资源加密-and-解密获取</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:44:47\n * @FilePath: \\Blog-private\\source\\_posts\\Web\\get-resources.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%AA%92%E4%BD%93%E8%B5%84%E6%BA%90%E5%8A%A0%E5%AF%86-and-%E8%A7%A3%E5%AF%86%E8%8E%B7%E5%8F%96\">媒体资源加密-and-解密获取</a>\n<ul>\n<li><a href=\"#token-%E9%98%B2%E7%9B%97%E9%93%BE\">token-防盗链</a></li>\n<li><a href=\"#ffmpeg-hls-aes_128_cbc\">FFmpeg-HLS-AES_128_CBC</a>\n<ul>\n<li><a href=\"#%E5%88%86%E7%89%87\">分片</a></li>\n<li><a href=\"#%E5%88%86%E7%89%87%E4%BD%9C%E7%94%A8-%E5%BC%95%E5%AD%90\">分片作用-引子</a></li>\n<li><a href=\"#%E8%8A%B1%E6%B4%BB\">花活</a></li>\n<li><a href=\"#%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%B5%81%E7%A8%8B%E5%9B%BE\">加解密流程图</a></li>\n<li><a href=\"#openssl-%E6%89%8B%E5%8A%A8%E5%8A%A0%E5%AF%86\">openssl-手动加密</a>\n<ul>\n<li><a href=\"#encrypt-without-iv\">encrypt-without-iv</a></li>\n<li><a href=\"#encrypt-with-iv\">encrypt-with-iv</a></li>\n</ul>\n</li>\n<li><a href=\"#ffmpeg-%E5%88%86%E7%89%87%E5%8A%A0%E5%AF%86%E4%B8%80%E6%9D%A1%E9%BE%99\">FFmpeg-分片加密一条龙</a></li>\n<li><a href=\"#%E8%A7%A3%E5%AF%86-%E5%90%88%E5%B9%B6\">解密-合并</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%8E%B7%E5%8F%96\">获取</a>\n<ul>\n<li><a href=\"#%E8%A7%86%E9%A2%91\">视频</a></li>\n<li><a href=\"#%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87\">网页图片</a></li>\n<li><a href=\"#qq-%E7%BE%A4%E5%9B%BE%E7%89%87\">QQ-群图片</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>各类平台网页中的视频通常会被 <code>加密处理</code> 以防止别人拿走; 防盗技术还是有很多种的:<sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<ol>\n<li>FFmpeg-HLS-AES_128_CBC 加密</li>\n<li>url 中加入 token 验证</li>\n<li>验证用户身份再给链接(session,cookie)</li>\n<li>视频加水印</li>\n<li>限制跨域访问</li>\n<li>…etc</li>\n</ol>\n</li>\n</ul>\n<p>下面只摸一下技术层面的 <code>1.和2.</code></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"token-防盗链\">token-防盗链</h2>\n<p>如 <code>http://xxxxxx.com/m3u8/hunan/desc.m3u8?stream_id=hunan&lt;m=1410595018&amp;lkey=8bc1e0fe35f6321ef560f8ccffb70e5d&amp;path=59.49.42.14,58.59.3.9,58.59.3.51&amp;platid=10&amp;splatid=1015&amp;tag=live&amp;cips=127.0.0.1&amp;ext=m3u8&amp;sign=live_tv</code> <sup id='cite_ref-8'><a href=\"#cite_note-8\">[8]</a></sup></p>\n<p>在 url 加上 时间戳,ip 地址,平台 id,splatid,tag,cips,ext,sign 等参数, 可以让服务器鉴别是否被其他网站/客户端请求, 并作出 403 响应</p>\n<p>同一参数的 url 无法被复用, 但是仍可以通过动态调整参数来绕过服务器的检测</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"FFmpeg-HLS-AES-128-CBC\">FFmpeg-HLS-AES_128_CBC</h2>\n<ul>\n<li>\n<p>这么一坨 💩,什么意思嘛?</p>\n<p>FFmpeg 是最强大的视频编解码器, 可以把输入的视频处理成符合 HLS 规范的流媒体, 同时通过 AES-128-CBC 格式的秘钥加密视频</p>\n<p>浅入深出,别急慢慢吃… 下面结合这个库动动手就明白了:<sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<hr>\n</li>\n</ul>\n<h3 id=\"分片\">分片</h3>\n<ul>\n<li>\n<p>分片的方式比较简单,这里我们准备好一个 <code>demo.mp4</code>, 丢给 FFmpeg 下面的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list index.m3u8 -segment_time 30 %d.ts</span><br></pre></td></tr></table></figure>\n<p>执行完会出来下面这些东西,这些 ts 文件就是分成片的小段视频,此处没加密可以直接播放</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRd0R.png\" alt=\"\"></p>\n<p>有些播放器支持的话 index.m3u8 也是可以播放的, 其实就是引用的这些 ts</p>\n<hr>\n</li>\n<li>\n<p>上面命令中 <code>index.m3u8</code> 这个文件是分片的索引文件, 指明了 ts 文件的先后顺序,时长,版本和加密等信息</p>\n<blockquote>\n<ul>\n<li>TS: MPEG2-Transport Stream,高清相机拍摄视频的封装格式;特点就是要求从视频流的任一片段开始都是可以独立解码的</li>\n<li>m3u8: HTTP Live Streaming（HLS） 协议格式的基础,Unicode 版本的 M3U，此文件用 UTF-8 编码<sup id='cite_ref-01'><a href=\"#cite_note-01\">[1]</a></sup> <br>\n下图 index 就是 m3u8,作用就是索引 ts<br>\n<img src=\"https://www.helloimg.com/images/2022/02/26/GVRc4n.png\" alt=\"\"></li>\n</ul>\n</blockquote>\n<hr>\n</li>\n<li>\n<p>喏,index.m3u8 文件内容应该能看懂</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#EXTM3U</span><br><span class=\"line\">#EXT-X-VERSION:3</span><br><span class=\"line\">#EXT-X-MEDIA-SEQUENCE:0</span><br><span class=\"line\">#EXT-X-ALLOW-CACHE:YES</span><br><span class=\"line\">#EXT-X-TARGETDURATION:32</span><br><span class=\"line\">#EXTINF:30.720000,</span><br><span class=\"line\">0.ts</span><br><span class=\"line\">#EXTINF:29.280000,</span><br><span class=\"line\">1.ts</span><br><span class=\"line\">#EXTINF:31.880000,</span><br><span class=\"line\">2.ts</span><br><span class=\"line\">#EXTINF:29.040000,</span><br><span class=\"line\">3.ts</span><br><span class=\"line\">#EXTINF:29.320000,</span><br><span class=\"line\">4.ts</span><br><span class=\"line\">#EXTINF:6.280000,</span><br><span class=\"line\">5.ts</span><br><span class=\"line\">#EXT-X-ENDLIST</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h3 id=\"分片作用-引子\">分片作用-引子</h3>\n<ol>\n<li>\n<p>分段加载视频而不是一口气加载到底</p>\n<p>大部分视频用户不会完完整整的看,分段加载减轻服务器压力,也使用户体验好</p>\n<p>(好几 G 的电影,一口气加载到底, 内存/缓存遭不住…)</p>\n</li>\n<li>\n<p>分片可以让用户无法<code>直接通过链接</code>在浏览器获取<code>完整的 mp4 视频</code></p>\n<p>但,可以通过获取所有 ts 文件合并为 mp4</p>\n<p>插件市场的一些插件可以通过 .m3u8 获取并合并.ts 间接获取完整的 .MP4</p>\n</li>\n</ol>\n<p>于是为了反破解出现了 <code>某些花活</code> 和 <code>视频加密</code></p>\n<hr>\n<h3 id=\"花活\">花活</h3>\n<ol>\n<li>\n<p>把 .m3u8 文件伪装成 .mp4, 可以让大部分没有伪装识别能力的爬虫找不着北 (比如 CoCocut)</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRSwv.png\" alt=\"\"><br>\n<img src=\"https://www.helloimg.com/images/2022/02/26/GVRTHM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>m3u8 中多层嵌套 m3u8 (套娃), 有些爬虫是支持的, 有的 G 了</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#EXTM3U</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=1064000</span><br><span class=\"line\">1000kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=564000</span><br><span class=\"line\">500kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=282000</span><br><span class=\"line\">250kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=2128000</span><br><span class=\"line\">2000kbps.m3u8</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>…etc</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"加解密流程图\">加解密流程图</h3>\n<p>原创哦,转载请标记</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRvhz.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"openssl-手动加密\">openssl-手动加密</h3>\n<h4 id=\"encrypt-without-iv\">encrypt-without-iv</h4>\n<p>此处通过 shell 脚本分析,墙裂建议结合仓库学习:<sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workPath=&quot;2.encrypted-without-iv&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">清除原先的</span></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">分片</span></span><br><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list $workPath/index.m3u8 -segment_time 30 $workPath/%d.ts</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">获取加密秘钥</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">openssl rand 16</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  随机生成 16B 二进制数据 (16*8=128 位, 对应AES-128-CBC名称)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># tee -a $workPath/enc.key</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  将生成的数据输出到秘钥文件 enc.key, 同时把数据交给 hexdump 处理</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  hexdump -e <span class=\"string\">&#x27;a/b format1 format2&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    a个字节/8位 -&gt; format2 (a可省,默认为1)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    b个字节/8位 -&gt; format1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    详见: https://blog.csdn.net/bytxl/article/details/43738103</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\">#   每1字节/8位 -&gt; %02x -&gt; 2位16进制</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    也就是二进制转16进制,每4位合1位, 128/4=32位16进制</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  每16字节的结果为1行, 那去掉这个16可以吗?</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    应该是不行的,结果会出错,例如:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    4a6afd460c84c498b8a817ad66392ef2 √</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    46fd6a4a98c4840cad17a8b8f22e3966 ×</span></span><br><span class=\"line\">encryptionKey=`openssl rand 16 | tee -a $workPath/enc.key | hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ts 文件数</span></span><br><span class=\"line\">numberOfTsFiles=`ls $workPath/*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    # without-iv也就是默认iv为32位文件序列号</span><br><span class=\"line\">    #   如 5.ts -&gt; 00000000000000000000000000000005</span><br><span class=\"line\">    initializationVector=`printf &#x27;%032x&#x27; $i`</span><br><span class=\"line\"></span><br><span class=\"line\">    # 对每个分片加密</span><br><span class=\"line\">    openssl aes-128-cbc -e -in $workPath/$i.ts -out $workPath/enc_$i.ts -nosalt -iv $initializationVector -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">寻找并添加加密方法和秘钥URL</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  找 <span class=\"string\">&quot;#EXT-X-TARGETDURATION:&quot;</span> 这一段,并在下一行添加</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  <span class=\"comment\">#EXT-X-KEY:METHOD=AES-128,URI=&quot;enc.key&quot;</span></span></span><br><span class=\"line\">sed &#x27;/#EXT-X-TARGETDURATION:/a #EXT-X-KEY:METHOD=AES-128,URI=&quot;enc.key&quot;&#x27; $workPath/index.m3u8 &gt; $workPath/index_new.m3u8</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">覆盖</span></span><br><span class=\"line\">mv $workPath/index_new.m3u8 $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如图,加密后的 ts 就不能直接播放了</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRzam.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"encrypt-with-iv\">encrypt-with-iv</h4>\n<p>这个 iv (initialisation vector,初始化向量) 有点迷, 作用是增强随机性</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workPath=&quot;3.encrypted-with-iv&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"></span><br><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list $workPath/index.m3u8 -segment_time 30 $workPath/%d.ts</span><br><span class=\"line\"></span><br><span class=\"line\">encryptionKey=`openssl rand 16 | tee -a $workPath/enc.key | hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey 偏移量,32位16进制数据,如: f86b5decdb6359cb1023e308651dccfb</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">不需要另存文件, 只需要写在 m3u8 文件里</span></span><br><span class=\"line\">ivKey=`openssl rand -hex 16`</span><br><span class=\"line\"></span><br><span class=\"line\">numberOfTsFiles=`ls $workPath/*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    openssl aes-128-cbc -e -in $workPath/$i.ts -out $workPath/enc_$i.ts -nosalt -iv $ivKey -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下面 <span class=\"variable\">$&#123;ivKey&#125;</span> 需要获取变量,所以字符串要用<span class=\"string\">&quot;&quot;</span>而不能是<span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\">sed &quot;/#EXT-X-TARGETDURATION:/a #EXT-X-KEY:METHOD=AES-128,URI=\\&quot;enc.key\\&quot;,IV=0x$&#123;ivKey&#125;&quot; $workPath/index.m3u8 &gt; $workPath/index_new.m3u8</span><br><span class=\"line\"></span><br><span class=\"line\">mv $workPath/index_new.m3u8 $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"FFmpeg-分片加密一条龙\">FFmpeg-分片加密一条龙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workPath=&quot;4.encrypt-with-FFmpeg&quot;</span><br><span class=\"line\">urlPrefix=&quot;weidows.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">enc.keyinfo</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  写到 m3u8 里的 keyURL | https://hlsbook.net/enc.key</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  加密用的 key 文件地址  | enc.key</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  IV值 (可选)          | ecd0d06eaf884d8226c33928e87efa33</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  详见: https://hlsbook.net/how-to-encrypt-hls-video-with-ffmpeg/</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl rand 16 &gt; $workPath/enc.key</span><br><span class=\"line\"></span><br><span class=\"line\">tmpfile=`mktemp`</span><br><span class=\"line\">echo $urlPrefix/enc.key &gt; $tmpfile</span><br><span class=\"line\">echo $workPath/enc.key &gt;&gt; $tmpfile</span><br><span class=\"line\">echo `openssl rand -hex 16` &gt;&gt; $tmpfile</span><br><span class=\"line\">mv $tmpfile $workPath/enc.keyinfo</span><br><span class=\"line\"></span><br><span class=\"line\">ffmpeg -y -i demo.mp4 -c copy -hls_time 30 -hls_key_info_file $workPath/enc.keyinfo -hls_playlist_type vod -hls_segment_filename $workPath/enc_%d.ts $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>index.m3u8</p>\n<p>可见生成的没什么问题,而且可以通过下面的方法正常解密</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#EXTM3U</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-VERSION</span>:<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-TARGETDURATION</span>:<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-MEDIA-SEQUENCE</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-PLAYLIST-TYPE</span>:VOD</span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-KEY</span>:METHOD=AES-<span class=\"number\">128</span>,URI=<span class=\"string\">&quot;./enc.key&quot;</span>,IV=<span class=\"number\">0</span>x2b5cc8a84648ed8ce5f64e5845d3cb7c</span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">30.720000</span>,</span><br><span class=\"line\">enc_0<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.280000</span>,</span><br><span class=\"line\">enc_1<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">31.880000</span>,</span><br><span class=\"line\">enc_2<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.040000</span>,</span><br><span class=\"line\">enc_3<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.320000</span>,</span><br><span class=\"line\">enc_4<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">6.280000</span>,</span><br><span class=\"line\">enc_5<span class=\"selector-class\">.ts</span></span><br><span class=\"line\">#EXT-X-ENDLIST</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"解密-合并\">解密-合并</h3>\n<p>上面加密会了的话,解密就简单了,完全就是反过来</p>\n<p>合并方法取自: <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup></p>\n<p>这篇文章<sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup>简单介绍了下如何手动解密,其文中把 key 和 iv 位数标错为 16 了,别误解</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">inputPath=<span class=\"string\">&quot;2.encrypted-without-iv&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey=<span class=\"string\">&quot;&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">inputPath=<span class=\"string\">&quot;3.encrypted-with-iv&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey=<span class=\"string\">&quot;0d5cce6d9fbfae9dcc86cb3f12d4eb4b&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加密 enc_*.ts 输入路径</span></span><br><span class=\"line\">inputPath=&quot;4.encrypt-with-FFmpeg&quot;</span><br><span class=\"line\">ivKey=&quot;36bb7a1e43e1d3d88b779243817a67bc&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解密 dec_*.ts 和合并后 mp4 输出路径</span></span><br><span class=\"line\">outputPath=&quot;5.decrypt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $outputPath/*</span><br><span class=\"line\"></span><br><span class=\"line\">encryptionKey=$(hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27; $inputPath/enc.key)</span><br><span class=\"line\"></span><br><span class=\"line\">numberOfTsFiles=`ls $inputPath/enc_*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    if [[ $ivKey == &quot;&quot; ]]; then</span><br><span class=\"line\">        ivKey=$(printf &#x27;%032x&#x27; $i)</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    openssl aes-128-cbc -d -in $inputPath/enc_$i.ts -out $outputPath/dec_$i.ts -nosalt -iv $ivKey -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">合并</span></span><br><span class=\"line\">ffmpeg -allowed_extensions ALL -i $inputPath/index.m3u8 -acodec copy -vcodec copy -f mp4 $outputPath/combine.mp4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如图 <code>dec_*.ts</code> 为解密后的文件,可以直接播放了</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVR0xA.png\" alt=\"\"></p>\n<p>可以看项目中的 <code>5.</code>, 合并后的 mp4 也没有问题</p>\n<p>但 原视频 != 分片加解密合并后的视频, 大小差不多但是会有差异 (9.87MB vs 9.95MB)</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"获取\">获取</h2>\n<p>下面就是对资源获取方式的 <code>推荐</code> 了</p>\n<h3 id=\"视频\">视频</h3>\n<blockquote>\n<p>CoCocut: 这个插件官方直接说了不支持爬加密视频,但是大部分平台用起来<s>还是很棒的</s>,插件中最棒的<br>\n有个小弊病, 它不开会员的话是超慢的单线程下载… 我常用它获取 m3u8 地址让下面这伙计下载</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://github.com/nilaoda/N_m3u8DL-CLI\">N_m3u8DL-CLI</a>: 这家伙可以通过 m3u8 下载加密视频; 支持多线程,很快 <img src=\"https://www.helloimg.com/images/2022/02/27/GVct49.png\" alt=\"\"><br>\n可以手动破解加密视频 <sup id='cite_ref-7'><a href=\"#cite_note-7\">[7]</a></sup></p>\n</blockquote>\n<blockquote>\n<p>QQ 浏览器手机 app, 直接进对应网页就可以爬下来视频,加密的也可以,速度拉满 (小母牛倒立 🐄🍺</p>\n</blockquote>\n<hr>\n<h3 id=\"网页图片\">网页图片</h3>\n<ul>\n<li>\n<p>下面两个差不多,都是把页面现有的图片都扒下来, <code>按域名分类</code>,很容易筛选出来</p>\n<p>这方法并不适用于获取视频.</p>\n<blockquote>\n<p>梦想资源下载器</p>\n</blockquote>\n<blockquote>\n<p>网页右键另存为<br>\n<img src=\"https://www.helloimg.com/images/2022/02/26/GVRbW9.png\" alt=\"\"></p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Picviewer CE+</p>\n</blockquote>\n<hr>\n<h3 id=\"QQ-群图片\">QQ-群图片</h3>\n<p>经常有老哥在群里发图,苦于一张张保存手抽筋,发现了此方法:</p>\n<ol>\n<li>\n<p>打开电脑版消息管理器,找到那些聊天记录</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRQg0.png\" alt=\"\"></p>\n</li>\n<li>\n<p>选择,复制</p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVRN95.png\" alt=\"\"></p>\n</li>\n<li>\n<p>发送给 <code>我的手机</code></p>\n<p><img src=\"https://www.helloimg.com/images/2022/02/26/GVR7Hh.png\" alt=\"\"></p>\n</li>\n<li>\n<p>然后就无了, 这手段对于保存好几十/上百张图十分便利</p>\n</li>\n</ol>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-4\">借物表</h2>\n<p><a name='cite_note-01' href='#cite_ref-01'>[1]</a>: <a href=\"https://www.jianshu.com/p/426425cad08a\">HLS 协议介绍</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://github.com/fftt2017/hls-m3u8-sample\">https://github.com/fftt2017/hls-m3u8-sample</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://zhuanlan.zhihu.com/p/32014463\">在线教育类网站视频加密视频安全的一些方法</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://github.com/Weidows-projects/hls-m3u8-sample\">https://github.com/Weidows-projects/hls-m3u8-sample</a>, 此库是在<sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup>的基础上改进的</p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://www.52pojie.cn/thread-971265-1-1.html\">解密 m3u8 文件, ts 文件解密, hls 解密.</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://blog.csdn.net/Yao_2333/article/details/82910560\">ffmpeg-简单 AES 加解密记录</a></p>\n<p><a name='cite_note-7' href='#cite_ref-7'>[7]</a>: <a href=\"https://www.appinn.com/download-video-30482/\">恕我直言，再难下载的视频，手搓大佬终究还是有办法</a></p>\n<p><a name='cite_note-8' href='#cite_ref-8'>[8]</a>: <a href=\"https://www.zhihu.com/question/20697986/answer/128433075\">HLS 如何实现加密 ？</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "推荐",
                "浏览器",
                "扩展",
                "ffmpeg",
                "算法",
                "hexdump",
                "hls",
                "openssl",
                "shell",
                "密码学",
                "qq"
            ]
        },
        {
            "id": "https://weidows.github.io/post/others/golang/blockchain/",
            "url": "https://weidows.github.io/post/others/golang/blockchain/",
            "title": "🐭从零开始-Golang-blockchain",
            "date_published": "2022-02-06T16:53:07.000Z",
            "content_html": "<h1>从零开始-Golang-blockchain</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:48:24\n * @FilePath: \\Blog-private\\source\\_posts\\others\\golang\\blockchain.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-golang-blockchain\">从零开始-Golang-blockchain</a>\n<ul>\n<li><a href=\"#%E9%85%8D%E7%BD%AE\">配置</a>\n<ul>\n<li><a href=\"#%E6%A8%A1%E5%9D%97%E4%BB%A3%E7%90%86\">模块代理</a></li>\n<li><a href=\"#%E6%A8%A1%E5%9D%97%E5%88%9D%E5%A7%8B%E5%8C%96\">模块初始化</a></li>\n<li><a href=\"#goland-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%AF%BC%E5%85%A5\">Goland-快捷键导入</a></li>\n</ul>\n</li>\n<li><a href=\"#golang-learning\">Golang-learning</a>\n<ul>\n<li><a href=\"#package\">package</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>开辟于此课程以及《Golang 区块链入门到实战_以太坊/fabric》<sup id='cite_ref-01'><a href=\"#cite_note-01\">[1]</a></sup></p>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-udBpLGLKktNrgQiw\" src=\"https://player.bilibili.com/player.html?bvid=1jf4y1s7sZ&page=1&high_quality=1&danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-udBpLGLKktNrgQiw\").style.height=document.getElementById(\"mmedia-udBpLGLKktNrgQiw\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-udBpLGLKktNrgQiw\").style.height=document.getElementById(\"mmedia-udBpLGLKktNrgQiw\").scrollWidth*0.76+\"px\";\n    }; </script>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"配置-5\">配置</h2>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>go-cn</span><br></pre></td></tr></table></figure>\n<h3 id=\"模块代理\">模块代理</h3>\n<ul>\n<li>\n<p>运行<sup id='cite_ref-02'><a href=\"#cite_note-02\">[2]</a></sup></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">go env -w GO111MODULE=on</span><br><span class=\"line\">go env -w GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"模块初始化\">模块初始化</h3>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">go</span> <span class=\"built_in\">mod</span> init ProjectName</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>cannot determine module path for source directory (outside GOPATH<sup id='cite_ref-03'><a href=\"#cite_note-03\">[3]</a></sup></p>\n</blockquote>\n<hr>\n<h3 id=\"Goland-快捷键导入\">Goland-快捷键导入</h3>\n<p>在此提一嘴想用 vscode 写 go 的话,目前还是不太友好… (2022.2); <code>首选 Goland</code></p>\n<ul>\n<li>\n<p>Jetbrains 不同 IDE 之间的快捷键是没法直接导入,一个个地改又非常费劲</p>\n<p>找到了一个通过修改文件来导入的方式<sup id='cite_ref-04'><a href=\"#cite_note-04\">[4]</a></sup>,比如我们想把快捷键 IDEA -&gt; Goland</p>\n<ol>\n<li>打开 idea 并导出配置到压缩包,快捷键在 <code>settings.zip\\keymaps\\</code></li>\n<li>先打开 Goland 随便改一个快捷键,不然下一步可能找不到; 然后关掉 Goland</li>\n<li>找到 <code>Goland\\profile\\config\\jba_config\\win.keymaps\\</code>,复制粘贴</li>\n</ol>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Golang-learning\">Golang-learning</h2>\n<p>基础语法可以跟着菜鸟教程学习 <sup id='cite_ref-05'><a href=\"#cite_note-05\">[5]</a></sup></p>\n<h3 id=\"package\">package</h3>\n<ul>\n<li>\n<p><code>package main</code>被误改会报错<sup id='cite_ref-06'><a href=\"#cite_note-06\">[6]</a></sup></p>\n<blockquote>\n<p>package command-line-arguments is not a main package</p>\n</blockquote>\n<p>正确 import 法:<sup id='cite_ref-07'><a href=\"#cite_note-07\">[7]</a></sup></p>\n<hr>\n</li>\n<li>\n<p>简易例子:</p>\n<ul>\n<li>\n<p>test.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sum</span><span class=\"params\">( a, b <span class=\"type\">int</span> )</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>main.go</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> mian</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  fmt.Println(sum(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-30\">借物表</h2>\n<p><a name='cite_note-01' href='#cite_ref-01'>[1]</a>: <a href=\"https://www.zlkt.net/book/detail/9/257\">《Golang 区块链入门到实战_以太坊/fabric》</a></p>\n<p><a name='cite_note-02' href='#cite_ref-02'>[2]</a>: <a href=\"https://goproxy.cn/\">https://goproxy.cn/</a></p>\n<p><a name='cite_note-03' href='#cite_ref-03'>[3]</a>: <a href=\"https://blog.csdn.net/ciel_yu/article/details/107847578\">go mod init 在初始化时出现 cannot determine module path for source directory (outside GOPATH</a></p>\n<p><a name='cite_note-04' href='#cite_ref-04'>[4]</a>: <a href=\"https://www.cnblogs.com/devzyc/p/14084488.html\">JetBrains 系列 IDE 之间的快捷键相互导入</a></p>\n<p><a name='cite_note-05' href='#cite_ref-05'>[5]</a>: <a href=\"https://www.runoob.com/go/go-tutorial.html\">https://www.runoob.com/go/go-tutorial.html</a></p>\n<p><a name='cite_note-06' href='#cite_ref-06'>[6]</a>: <a href=\"https://blog.csdn.net/A_java_c/article/details/120006213\">go 语言入门：package command-line-arguments is not a main package</a></p>\n<p><a name='cite_note-07' href='#cite_ref-07'>[7]</a>: <a href=\"https://segmentfault.com/a/1190000018235929\">golang 之 import 和 package 的使用</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "区块链",
                "golang"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/",
            "url": "https://weidows.github.io/post/experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/",
            "title": "👽通信-信息论-开坑自埋",
            "date_published": "2022-01-06T16:23:14.000Z",
            "content_html": "<h1>通信-信息论-开坑自埋</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:15:55\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\basic\\通信技术.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E9%80%9A%E4%BF%A1-%E4%BF%A1%E6%81%AF%E8%AE%BA-%E5%BC%80%E5%9D%91%E8%87%AA%E5%9F%8B\">通信-信息论-开坑自埋</a>\n<ul>\n<li><a href=\"#wifi\">WIFI</a>\n<ul>\n<li><a href=\"#%E5%90%8D%E5%AD%97\">名字</a></li>\n<li><a href=\"#%E9%A2%91%E6%AE%B5\">频段</a></li>\n<li><a href=\"#%E8%B0%83%E5%88%B6%E6%89%8B%E6%AE%B5\">调制手段</a></li>\n<li><a href=\"#%E6%A0%87%E5%87%86%E5%88%B6%E5%AE%9A\">标准制定</a></li>\n<li><a href=\"#%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E9%99%85\">理论与实际</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2\">傅里叶变换</a>\n<ul>\n<li><a href=\"#%E5%BC%95%E8%A8%80\">引言</a></li>\n<li><a href=\"#fourier-transform\">fourier-transform</a></li>\n<li><a href=\"#%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8-%E9%99%A4%E5%99%AA\">实际应用-除噪</a></li>\n<li><a href=\"#inverse-fourier\">inverse-fourier</a></li>\n<li><a href=\"#%E8%B4%A8%E5%BF%83%E4%B8%8E%E5%82%85%E9%87%8C%E5%8F%B6%E5%85%AC%E5%BC%8F%E7%9A%84%E5%85%B3%E7%B3%BB\">质心与傅里叶公式的关系</a></li>\n<li><a href=\"#%E7%BC%BA%E7%82%B9\">缺点</a></li>\n<li><a href=\"#%E7%9F%AD%E6%97%B6%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2\">短时傅里叶变换</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%9E%81%E5%8C%96%E7%A0%81\">极化码</a>\n<ul>\n<li><a href=\"#%E4%BF%A1%E6%81%AF%E7%86%B5-%E5%A6%82%E4%BD%95%E5%BA%A6%E9%87%8F%E4%BF%A1%E6%81%AF\">信息熵-如何度量信息</a>\n<ul>\n<li><a href=\"#%E5%93%88%E7%89%B9%E8%8E%B1\">哈特莱</a></li>\n<li><a href=\"#%E9%A6%99%E5%86%9C\">香农</a></li>\n<li><a href=\"#%E5%9F%BA%E5%B0%BC%E7%B3%BB%E6%95%B0\">基尼系数</a></li>\n<li><a href=\"#%E6%AC%A7%E6%8B%89%E5%BC%8F-%E4%B8%A4%E7%82%B9%E5%88%86%E5%B8%83\">欧拉式-两点分布</a></li>\n<li><a href=\"#%E7%9B%B8%E5%AF%B9%E7%86%B5\">相对熵</a></li>\n<li><a href=\"#%E5%8D%95%E4%BD%8D\">单位</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BF%A1%E9%81%93%E5%AE%B9%E9%87%8F-%E6%9C%80%E5%A4%A7%E4%BA%92%E4%BF%A1%E6%81%AF\">信道容量-最大互信息</a></li>\n<li><a href=\"#%E9%A6%99%E5%86%9C%E6%9E%81%E9%99%90\">香农极限</a></li>\n<li><a href=\"#%E6%9E%81%E5%8C%96%E7%A0%81-polarcodes\">极化码-PolarCodes</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9F%B3%E9%A2%91\">音频</a>\n<ul>\n<li><a href=\"#%E6%9C%89-%E6%97%A0%E6%8D%9F%E5%8E%8B%E7%BC%A9\">有-无损压缩</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>draft 此文章点子来自: <a href=\"https://www.youtube.com/watch?v=4w6_zWSrZw4\">你不了解的「WiFi」从技术原理 应用 讲到行业的未来 一个视频彻底讲清楚 「硬核无线技术」系列视频 WiFi 篇</a><br>\n一串听下来发现对于通信这方面的知识还是很欠缺, 甚至有些家常知识点都没太了解.</p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"WIFI\">WIFI</h2>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/4w6_zWSrZw4\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n<h3 id=\"名字\">名字</h3>\n<p>音响领域有高保真 HIFI (High Fidelity), 之后出现的无线起名 WIFI (Wireless Fidelity),</p>\n<p>Science Fiction -&gt; SciFi (发音与上面类似,一方面考虑好记)</p>\n<hr>\n<h3 id=\"频段\">频段</h3>\n<p>2.4G 频段: 2.4~2.4835 GHz</p>\n<p>5G 频段: 5.15~5.85 GHz</p>\n<p>每个频段可分为若干信道(频宽从 1~160MHz 不等), 满足多连接/多设备<code>尽可能</code>不互相干扰下使用.</p>\n<ul>\n<li>\n<p>在小区/宿舍里经常发现信号范围内有一排别人的 WIFI/热点</p>\n<p>甭管有没有密码, 必然会对我们当前设备使用 WIFI 无线电信号<code>产生干扰</code></p>\n<p>2.4G 频段窄而且电磁波穿透力比 5G 频段强,另外默认用 2.4G 频段的设备多</p>\n<p>所以, 把自己的设备切换使用为 5G 频段可以<code>一定程度上抗干扰</code></p>\n</li>\n<li>\n<p>其实也不止 WIFI 影响 WIFI,还要好多设备也是用 2.4G 频段通信会有干扰:</p>\n<p>蓝牙,无线鼠标,无线录音麦…etc</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"调制手段\">调制手段</h3>\n<p>何为调制?</p>\n<blockquote>\n<p>把数字信号转为电磁波通过天线发送, 接收端再把电磁波解为数字信号的过程,如下图<br>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVPAl9.png\" alt=\"20220107015502\" /> <br>\n<a href=\"https://www.txrjy.com/thread-1080059-1-1.html\">https://www.txrjy.com/thread-1080059-1-1.html</a></p>\n</blockquote>\n<p>编/解码过程用到<a href=\"#%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2\">傅里叶变换和逆变</a></p>\n<ul>\n<li>\n<p>从 802.11b 到 802.11ax 应用的三种调制方式:</p>\n<p>802.11 (eight O two eleven, 0 读 O, dot 不用读)</p>\n<p>DSSS (D triple S, 直接序列扩频)</p>\n<p>FHSS (调频)</p>\n<p>OFDM (Orthogonal Frequency-Division Multiplexing. <code>正交频分复用</code>/同频分解多调制)</p>\n</li>\n<li>\n<p>由于民用频宽范围比较有限,DSSS 这种依靠大频宽保证可靠性的技术不适用,逐渐过渡到了 OFDM:</p>\n<p>这种调制方式大幅降低所需频宽, 图中上面为 OFDM</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVAkJA.png\" alt=\"20220107020556\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"标准制定\">标准制定</h3>\n<p>上面所提到的 802.11 xxx 就是无线电协会所制定的 WIFI 标准, 其每次更新是为了规划未来一段时间的 WIFI 走向, 避免各做各的无法正常通信.</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVPvZm.png\" alt=\"20220107023524\" />\n<p>802.11ac 引入波束赋形 Beam Forming, 追踪设备并把信号尽可能聚束到此方向</p>\n<p>2019 年协会才把标准整体命名为 WIFI1-WIFI6, 调制方式 OFDM -&gt; OFDMA(4GLTE 蜂窝网络的调制方式)</p>\n<p>WIFI 发展越加偏向/近似蜂窝网络</p>\n<hr>\n<h3 id=\"理论与实际\">理论与实际</h3>\n<ul>\n<li>\n<p>无线通信理论速率与实际速率差距蛮大的:</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GV47CT.png\" alt=\"20220107030252\" />\n<p>生活中都有经验,离路由器越近越好</p>\n</li>\n<li>\n<p>用不用追新设备?</p>\n<p>先上结论: <code>不用</code></p>\n<p>我们大多数人不咋组内网,组内网的话也是插线而不是走 WIFI,路由器唯一线路就是走公网</p>\n<p>路由器跑的快不快在于宽带套餐,100-300M 宽带还是绝大部分家庭/学校的选择,而出于 2013 年的 WIFI5 标准完完全全够跑满</p>\n<p>WIFI6 标准的路由器可以认为, 杀鸡用牛刀</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"傅里叶变换\">傅里叶变换</h2>\n<h3 id=\"引言\">引言</h3>\n<blockquote>\n<p><a href=\"https://mp.weixin.qq.com/s/iD4aLGwQuYVzXfFkfMfVxg\">傅里叶变换的精彩讲解</a> <br>\n简单来说傅里叶变换的作用: <code>从混合的波(声波/电磁波)中分离出某个频率的波</code></p>\n<p>高数确实是一门神秘且棘手的学科,所以听到这个傅里叶变换心理也是略有抵触的. <br>\n后话: 不做应用的单纯的数学雀食烦…但是结合应用的话就有趣起来了 <code>\\(^o^)/</code></p>\n</blockquote>\n<ul>\n<li>\n<p>多个不同频率的波叠加</p>\n<p>傅里叶变换就是在研究如何从混合波中分析出其组成波 (类似从混合色中分析原色)</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GV4UWD.png\" alt=\"20220113234230\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"fourier-transform\">fourier-transform</h3>\n<ul>\n<li>\n<p>对于某个混合波,我们想知道它是<code>哪几种波</code>混合的结果,如何得知?</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVL9X0.png\" alt=\"20220114170236\" />\n<ol>\n<li>\n<p>我们把波形绕成环,并且可以调整 <code>cycles/second -&gt; Frequency</code> 的比例</p>\n</li>\n<li>\n<p>视圆环图像质量均匀,取<code>&quot;质心 center of mass&quot;</code> 的坐标 (x,y)</p>\n</li>\n<li>\n<p>取 x 坐标为 Y 轴, Frequency 为 X 轴作图</p>\n</li>\n<li>\n<p>可见 2Hz+3Hz 的波,Frequency 在 2 和 3 出出现明显波峰</p>\n</li>\n</ol>\n<hr>\n</li>\n<li>\n<p>分别叠加也符合:</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVLaMS.png\" alt=\"20220114172006\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"实际应用-除噪\">实际应用-除噪</h3>\n<ul>\n<li>\n<p>比如现有声波里有一个已知高频噪音 (蚊子),但我们无法从声波中直接过滤掉,如何去掉它?</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GV4Kxo.png\" alt=\"20220114174154\" />\n<ol>\n<li>\n<p>做傅里叶变换</p>\n</li>\n<li>\n<p>找到那个频率的波峰并通过某种方法干掉它</p>\n</li>\n<li>\n<p>傅里叶反变换得到没有蚊子叫的声波</p>\n</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"inverse-fourier\">inverse-fourier</h3>\n<p>对傅里叶变换的图像再次变换可以<code>大致</code>获得原始波</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVANO9.png\" alt=\"20220114174856\" />\n<hr>\n<h3 id=\"质心与傅里叶公式的关系\">质心与傅里叶公式的关系</h3>\n<ul>\n<li>\n<p>&quot;质心&quot;实际指的就是公式变换的结果,下面分别为离散/连续的计算公式</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVtUo6.png\" alt=\"20220114175932\" />\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVASN1.png\" alt=\"20220114180011\" />\n<hr>\n</li>\n<li>\n<p>需要注意的是,上面公式与傅里叶变换公式有小小的区别:</p>\n<p>上面的公式只是在求 <code>单点</code>,实际傅里叶变换公式不需要除以时间</p>\n<p>使得对应频率的 x 根据时间 t 倍增延长 (也就是变换后产生波峰的原因)</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVLYsv.png\" alt=\"20220114182317\" />\n<hr>\n</li>\n<li>\n<p>比如某频率的波持续 3 秒,其对应大小乘 3 倍</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVFTHD.png\" alt=\"20220114182518\" />\n<p>持续时间越长,对应频率的波峰越大</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"缺点\">缺点</h3>\n<p>比如有一段 2s 的声波,第一秒为 1Hz,第二秒为 2Hz</p>\n<p>通过傅里叶变换只能识别出存在 1Hz 和 2Hz 的波,并可以比较持续时间,但并不能分析其在时间轴上的定位</p>\n<p>针对其不能时频联合分析的缺点, 出现了 <code>短时傅里叶变换</code></p>\n<hr>\n<h3 id=\"短时傅里叶变换\">短时傅里叶变换</h3>\n<blockquote>\n<p><a href=\"https://www.eet-china.com/mp/a77376.html\">一文道破傅里叶变换的本质，优缺点一目了然</a></p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"极化码\">极化码</h2>\n<style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class=\"bbplayer\"><iframe class=\"bbplayer\" id=\"mmedia-nafRXAqwgpmQskgd\" src=\"https://player.bilibili.com/player.html?bvid=BV1fq4y1g7hq&page=1&high_quality=1&danmaku=true\" allowfullscreen=\"allowfullscreen\" scrolling=\"no\" border=\"0\" frameborder=\"0\" framespacing=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups\"></iframe></div><script> document.getElementById(\"mmedia-nafRXAqwgpmQskgd\").style.height=document.getElementById(\"mmedia-nafRXAqwgpmQskgd\").scrollWidth*0.76+\"px\";\n    window.onresize = function(){\n      document.getElementById(\"mmedia-nafRXAqwgpmQskgd\").style.height=document.getElementById(\"mmedia-nafRXAqwgpmQskgd\").scrollWidth*0.76+\"px\";\n    }; </script>\n<h3 id=\"信息熵-如何度量信息\">信息熵-如何度量信息</h3>\n<p><a href=\"../../../public-post/notebook/ML#%E4%B8%A4%E7%82%B9%E5%88%86%E5%B8%83%E4%BF%A1%E6%81%AF%E7%86%B5\">所用代码及结果展示</a></p>\n<h4 id=\"哈特莱\">哈特莱</h4>\n<p>哈特莱首先提出使用对数 log 来描述信息</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>后称信息熵</mtext><mo>:</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>n</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mi>s</mi><mo>=</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><msup><mi>s</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">后称信息熵: H(p) = n\\log_{10} s = \\log_{10} s^{n}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">后称信息熵</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9386em;vertical-align:-0.2441em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9585em;vertical-align:-0.2441em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>信息符合加法: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(x,y)=h(x)+h(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>概率符合乘法: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x,y)=p(x)p(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>log 可以把乘法变加法: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\log p(x,y) = \\log p(x)p(y) = \\log p(x)+\\log p(y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>操作原理就是 <code>通过概率间接量化信息</code>, 哈特莱这里底数取得是 10, 下面香农改为了 2 (更适合计算机计算)</p>\n<hr>\n<h4 id=\"香农\">香农</h4>\n<ul>\n<li>\n<p>香农首先提出信息熵来度量信息,可以粗略解释为:</p>\n<p>n 个连续的 “是(1)” 或 “否(0)” 可以消除 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 比特内容的不确定性(疑义度)</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>信息熵</mtext><mo>:</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>k</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">信息熵: H(p) = -k \\sum_{i=1}^{n} p_{i} \\log_{2} p_{i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">信息熵</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>比如:</p>\n<blockquote>\n<p>常用的汉字大约有 7000 个,假设每个字使用概率相等,至少需要用 13 比特表示才能完全消除一个字的疑义度 (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>13</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{13}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">13</span></span></span></span></span></span></span></span></span></span></span></span>=8192 &gt; 7000) <br>\n那么在此条件下每个字的信息熵为 13 比特 <br>\n现实中每个字的使用频率概率, 出现场景, 上下文关联都会影响实际的信息熵 (比如文盲说话的信息熵不如学者高) <br>\n<a href=\"https://blog.csdn.net/chenKFKevin/article/details/72074250\">信息的度量——信息熵</a></p>\n</blockquote>\n</li>\n<li>\n<p>关于为什么前面带了个 <code>-k</code></p>\n<blockquote>\n<p>与直觉相反, 一个事件发生概率越大,实际所带的信息越小<br>\n比如太阳从东边升起,没什么信息含量; 换为从西边升起,即使概率无限接近 0, 它所含信息权重也是很高的 <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n</blockquote>\n<p><img src=\"https://www.helloimg.com/images/2022/04/11/RtspVm.png\" alt=\"\"></p>\n</li>\n<li>\n<p>具体计算一个:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mn>0.1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.1</mn><mo>⋅</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>0.1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.33</mn><mspace linebreak=\"newline\"></mspace><mi>H</mi><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.2</mn><mo>⋅</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.46</mn><mspace linebreak=\"newline\"></mspace><mi>H</mi><mo stretchy=\"false\">(</mo><mn>0.3</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.3</mn><mo>⋅</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>0.3</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.52</mn></mrow><annotation encoding=\"application/x-tex\">H(0.1) = 0.1 \\cdot log_2 (0.1) = 0.33 \\\\\nH(0.2) = 0.2 \\cdot log_2 (0.2) = 0.46 \\\\\nH(0.3) = 0.3 \\cdot log_2 (0.3) = 0.52\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">0.1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0.1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.33</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.46</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">0.3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0.3</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.52</span></span></span></span></span></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"基尼系数\">基尼系数</h4>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4tdlM.png\" alt=\"\"></p>\n<p>我们把曲线 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">- \\log P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 换为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">1-P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>, 得到的就是基尼系数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>基尼系数</mtext><mo>:</mo><mi>G</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>p</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">基尼系数: G(p)\n= \\sum_{i=1}^{n} p_i (1-p_i)\n= 1- \\sum_{i=1}^{n} p_{i}^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">基尼系数</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>基尼系数与熵是十分近似的, 在决策树中可以用基尼系数来代替熵 (效率更高)</p>\n<p><a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6&amp;t=3716.0\">第二定义: 社会财富分配</a></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"欧拉式-两点分布\">欧拉式-两点分布</h4>\n<ul>\n<li>\n<p>两点分布的熵:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>令</mtext><mi>P</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>p</mi><mspace width=\"2em\"/><mi>p</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>p</mi><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>p</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mi>p</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>2</mn><mi>p</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">令 P(0) = 1-p \\qquad p(1) = p\n\n\\\\ \\ \\\\\n\n\\begin{aligned}\n  H(p)\n  &amp;= - (1-p) \\log_2 (1-p) - p \\log_2 p \\\\\n\n  Gini(p)\n  &amp;= (1-p) \\cdot [1-(1-p)] + p \\cdot (1-p) \\\\\n  &amp;= 2p(1-p)\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:4.5em;vertical-align:-2em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">ini</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img src=\"https://www.helloimg.com/images/2022/04/13/R4tKlh.png\" alt=\"\"></p>\n<p>可见在概率为 0.5 时,信息熵 (不确定度) 最高</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"相对熵\">相对熵</h4>\n<p>也叫互熵/交叉熵/鉴别信息/Kullback 熵/KL 散度/K-L 距离…</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>D</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>q</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mfrac><msub><mi>p</mi><mi>i</mi></msub><msub><mi>q</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">D(p||q) = \\sum_{i=1}^{n} p_{i} \\log{\\frac{p_i}{q_i}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<hr>\n<h4 id=\"单位\">单位</h4>\n<ul>\n<li>\n<p>经典熵底数为 2,单位为 bit</p>\n<p>在做数据分析时有用 e 为底数的定义, 单位为 nat (奈特)</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>k</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>ln</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">H(p) = -k \\sum_{i=1}^{n} p_{i} \\ln p_{i}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"信道容量-最大互信息\">信道容量-最大互信息</h3>\n<ul>\n<li>\n<p>信道容量(Channel Capacity) 也叫最大互信息</p>\n<blockquote>\n<p>互信息: <code>它是一个随机变量包含另一个随机变量信息量的度量</code></p>\n</blockquote>\n<p>比如一条河从 A-&gt;B 端, 但只有 70% 的河水能流到 B,其他的河水流失了; 那么在这里 A-&gt;B 端河水的互信息为 70%</p>\n<p>当然, 互信息的度量单位并不是百分比, 概念上也略有偏颇</p>\n<blockquote>\n<p>视频中的例子: X-&gt;Y 传递信息熵为 <code>H(X)</code> 的信息, 传递过程中丢失/不能还原的信息熵为 <code>H(X|Y)</code>, 那么</p>\n</blockquote>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>互信息</mtext><mo>:</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">互信息: I(X|Y) = H(X) - H(X|Y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">互信息</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<hr>\n</li>\n<li>\n<p>什么是信道/信道容量? 举个栗子:</p>\n<p>有个工厂里有好多流水线从 A-&gt;B 处输送产品; 每条流水线可以理解为是一个信道</p>\n<p>流水线运输速度太快会使产品不合格,需要限制在 T 时间内运输 N(T) 件产品才可以保证质量; 同样道理通信时一味地加速发送会使通信状态变差,也需要限制在一定范围之内,<code>这个范围就是信道容量</code></p>\n<p>(理论条件下,单位时间内可以传过去的信息量)</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>信道容量</mtext><mo>:</mo><mi>C</mi><mo>=</mo><msub><mrow><mi mathvariant=\"normal\">Lim</mi><mo>⁡</mo></mrow><mrow><mi>T</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><mfrac><mrow><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo></mrow><mi>T</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">信道容量: C=\\operatorname{Lim}_{T \\rightarrow \\infty} \\frac{\\log N(T)}{T}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">信道容量</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mop\"><span class=\"mop\"><span class=\"mord mathrm\">Lim</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<hr>\n</li>\n</ul>\n<h3 id=\"香农极限\">香农极限</h3>\n<p>实际条件下,通信接收方会因为丢包/信号干扰/磁场等<code>噪声</code>无法接收到部分信息,导致无法真实达到信道容量</p>\n<p>香农提出通过合适的编码,信道容量 C 可以被尽可能的无限逼近,但对于大于 C 的速率不成立.<code>即香农极限</code>(香农提出,后人证明)</p>\n  <img src=\"https://www.helloimg.com/images/2022/02/27/GV4j4v.png\" alt=\"20220203184654\" />\n<hr>\n<ul>\n<li>\n<p>经典教材计算机网络也有提及</p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/03/Gh3Pnz.png\" alt=\"\"></p>\n<p><img src=\"https://www.helloimg.com/images/2022/03/03/Gh3a7A.png\" alt=\"Gh3a7A.png\"></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"极化码-PolarCodes\">极化码-PolarCodes</h3>\n<ul>\n<li>\n<p>核心思想: 通过异或操作把信息分流</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVPxut.png\" alt=\"20220203221617\" />\n<p>通过异或操作,把信道一/二两个实际信道转换成信道<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo>−</mo></msup><mi mathvariant=\"normal\">/</mi><msup><mi>W</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">W^-/W^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span></p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVSFtR.png\" alt=\"20220203222548\" />\n<p>这里可能会疑惑信道<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo>+</mo></msup></mrow><annotation encoding=\"application/x-tex\">W^+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span>第四种情况 “U2=U1=Y1” 中 U1 从何得知?</p>\n<p>实际上这里我们让<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>W</mi><mo>−</mo></msup></mrow><annotation encoding=\"application/x-tex\">W^-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7713em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">−</span></span></span></span></span></span></span></span></span></span></span>信道不传输信息,U1 是通信双方预先约定好的内容</p>\n<hr>\n</li>\n<li>\n<p>当处理的码长(信道数)足够多时,好信道的互信息会无限逼近 1 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<blockquote>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GV4Ent.png\" alt=\"20220203224853\" />\n</blockquote>\n<p>当然凡事不是越多越好:</p>\n<ol>\n<li>\n<p>这里信息传输的条件是<code>信道连接能保持稳定</code></p>\n</li>\n<li>\n<p>每增加信道数,需要做的处理指数级增长</p>\n</li>\n</ol>\n<hr>\n</li>\n</ul>\n<p>具体如何编码/构建, 详见论文 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup> (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mtext>🥵</mtext><mrow><mi>h</mi><mi>a</mi><mi>r</mi><mi>d</mi></mrow><mrow><mi>t</mi><mi>o</mi><mi>o</mi></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">🥵 ^{too}_{hard}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0767em;vertical-align:-0.2831em;\"></span><span class=\"mord\"><span class=\"mord\">🥵</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7936em;\"><span style=\"top:-2.4169em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">ha</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">oo</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"音频\">音频</h2>\n<h3 id=\"有-无损压缩\">有-无损压缩</h3>\n<p>对于大部分人的<code>木耳</code>来说,完全听不出来差别; 极小部分人<code>金耳</code>才能听出来 (年轻,耳朵从出生没受过损伤)</p>\n<p>可以试试双盲测试: <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p><a href=\"https://www.zhihu.com/question/20699962\">耳机厂商为什么不把耳机煲好了再卖？</a></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-26\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://res-www.zte.com.cn/mediares/magazine/publication/com_cn/article/201901/cn201901004.pdf\">“太极混一”——极化码原理及 5G 应用</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"http://www.erji.net/forum.php?mod=viewthread&amp;tid=1598502\">【双盲测试】你听得出有损和无损的区别么</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6\">https://www.bilibili.com/video/BV16L411w7oQ?p=6</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "通信",
                "音频",
                "傅里叶变换",
                "极化码",
                "信息论"
            ]
        },
        {
            "id": "https://weidows.github.io/post/design/%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/",
            "url": "https://weidows.github.io/post/design/%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/",
            "title": "🥨结构设计杂记",
            "date_published": "2021-11-28T15:18:29.000Z",
            "content_html": "<h1>结构设计杂记</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:49:07\n * @FilePath: \\Blog-private\\source\\_posts\\design\\结构设计.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%9D%82%E8%AE%B0\">结构设计杂记</a>\n<ul>\n<li><a href=\"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E9%97%AE%E9%A2%98\">目录结构问题</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"目录结构问题\">目录结构问题</h2>\n<ul>\n<li>\n<p>今天整理文件夹时遇到的小问题:</p>\n<p>我的目录如下,因为在整理时发现在 Audio/Image 下也有要整理的素材</p>\n<p>如果每个里面都搞一个&quot;素材&quot;文件夹又显得多余,于是动手开始了合并这三个文件夹</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">|&gt; Audio</span></span><br><span class=\"line\"><span class=\"string\">|&gt; Image</span></span><br><span class=\"line\"><span class=\"string\">|&gt; Video</span></span><br><span class=\"line\">  <span class=\"string\">|&gt; 素材</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>but</p>\n<p>整理过程中发现简单粗暴地合并会给我的人为索引带来困难:</p>\n<p>大多东西 (比如歌/MV/涩图) 都是<code>单方面的内容</code>,不涉及另外两方面</p>\n<p>所以一旦合并,人为索引复杂度会 1 -&gt; 2~3</p>\n<hr>\n</li>\n<li>\n<p>最终选择:</p>\n<p>运用 <code>解耦</code> 思想,把&quot;素材&quot;抽离出来;</p>\n<p>尽管你可能人为&quot;素材&quot;应该是那三个的子分类,但是这种结构应该才是最优解</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">|&gt; Audio</span></span><br><span class=\"line\"><span class=\"string\">|&gt; Image</span></span><br><span class=\"line\"><span class=\"string\">|&gt; Video</span></span><br><span class=\"line\"><span class=\"string\">|&gt; 素材</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>🤔🤣 是不是很傻的问题呢? 我倒是感觉这种抽象化思维很有帮助.</p>\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "设计"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/shell/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/",
            "url": "https://weidows.github.io/post/experience/shell/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/",
            "title": "🥱戏耍脚本中~奇技淫巧",
            "date_published": "2021-11-03T08:37:54.000Z",
            "content_html": "<h1>戏耍脚本中~奇技淫巧</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-05-26 17:53:55\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\shell\\奇技淫巧.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E6%88%8F%E8%80%8D%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7\">戏耍脚本中~奇技淫巧</a>\n<ul>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E5%88%A4%E7%A9%BA\">参数判空</a>\n<ul>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E5%88%A4%E5%AE%9A\">字符串拼接判定</a></li>\n<li><a href=\"#%E8%AF%AD%E6%B3%95%E5%88%A4%E5%AE%9A\">语法判定</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%A8%8B%E5%BA%8F%E5%8D%A0%E7%94%A8\">程序占用</a></li>\n<li><a href=\"#echo\">echo</a></li>\n<li><a href=\"#scoop\">Scoop</a>\n<ul>\n<li><a href=\"#portable\">portable</a></li>\n<li><a href=\"#%E8%A7%A3%E5%89%96-exe\">解剖-exe</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E6%9F%90%E5%AD%97%E7%AC%A6%E4%B8%B2\">判断是否含有某字符串</a></li>\n<li><a href=\"#%E5%85%B3%E4%BA%8E%E7%9B%AE%E5%BD%95\">关于目录</a></li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"参数判空\">参数判空</h2>\n<h3 id=\"字符串拼接判定\">字符串拼接判定</h3>\n<ul>\n<li>\n<p>有时候我们想判断一个变量是不是空的,会变得有些棘手</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ $&#123;abc&#125; != &quot;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>我们的想法是判断是否存在 abc 这个变量,实际上这样写并不行,没有这个变量的话会变成下面的样子:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [  != &quot;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>这样肯定会报错的</p>\n<hr>\n</li>\n<li>\n<p>改一下,比如添加冗余校验字符</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abc = &quot;abc&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">if [ a$&#123;abc&#125; != a ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>bat 中引号也会视为变量一部分</code>,所以:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> &quot;<span class=\"variable\">%DIRNAME%</span>&quot; == &quot;&quot; <span class=\"built_in\">set</span> DIRNAME=.</span><br></pre></td></tr></table></figure>\n<p>或者:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> abc=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"variable\">%abc%</span> == &quot;&quot; (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> &quot;abc为空&quot;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>跟 shell 语法差别很大来着, 注意别写错…</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"语法判定\">语法判定</h3>\n<ul>\n<li>\n<p>shell 的语法:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if [ -n &quot;$&#123;abc&#125;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>bat 语法:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span> abc (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> &#x27;abc&#x27; <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span>.</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"程序占用\">程序占用</h2>\n<ul>\n<li>\n<p>如果你用过 aria2 的话肯定会遇到一个头疼的事: <code>如何开机后台自动启动它</code></p>\n<ol>\n<li>\n<p>它的程序本身不带有开机启动,需要另外写启动脚本</p>\n</li>\n<li>\n<p>它无法后台启动,必然会占据一个控制台程序的前台</p>\n</li>\n</ol>\n</li>\n<li>\n<p>网上找到了比较好用的方法: <code>vbs 脚本</code></p>\n<figure class=\"highlight vbs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CreateObject</span>(<span class=\"string\">&quot;WScript.Shell&quot;</span>).Run <span class=\"string\">&quot;aria2c --conf-path=D:\\Game\\Scoop\\persist\\aria2\\conf&quot;</span>,<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>由于我平时用 bat 管理电脑,单独编写执行一个 vbs 脚本略显多余,所以直接结合进 bat 脚本里,用完就删针刺激:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> CreateObject(&quot;WScript.Shell&quot;).Run &quot;aria2c --conf-<span class=\"built_in\">path</span>=D:\\Game\\Scoop\\persist\\aria2\\conf&quot;,<span class=\"number\">0</span> &gt; aria2.vbs</span><br><span class=\"line\">cscript //Nologo aria2.vbs</span><br><span class=\"line\"><span class=\"built_in\">del</span> aria2.vbs</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"echo\">echo</h2>\n<ul>\n<li>\n<p>看到一个脚本中这么写,乍一看蒙了:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CLS</span>&amp;<span class=\"built_in\">ECHO</span>.&amp;<span class=\"built_in\">ECHO</span> 完成, 以下选项自选：</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.&amp;<span class=\"built_in\">ECHO</span> <span class=\"number\">1</span>、启用视频播放程序(会驻留进程)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>实际上只是把几个命令压缩到了一行</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cls</span>   <span class=\"meta\"># 清屏</span></span><br><span class=\"line\">echo. <span class=\"meta\"># 换行</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Scoop-4\">Scoop</h2>\n<h3 id=\"portable\">portable</h3>\n<p>我们可以通过创建虚拟链接把 C 盘中的 runtime 数据 -&gt; scoop/persist 内</p>\n<ul>\n<li>\n<p>此片段可自动判断 <code>remix-ide / .remix-ipfsnode / .cache_remix_ide</code> 所在目录是 <code>USERPROFILE / APPDATA</code></p>\n<p>并将数据移动到 persist 内,创建虚拟链接</p>\n<p><code>需要注意只能是文件夹,不能是文件!!!</code></p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;foreach (<span class=\"variable\">$folder</span> in @(&#x27;remix-ide&#x27;, &#x27;.remix-ipfsnode&#x27;, &#x27;.cache_remix_ide&#x27;)) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;      <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;      <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    &#125; else &#123;continue&#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  if (Test-Path <span class=\"variable\">$runtimeCachePersist</span>) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    Remove-Item <span class=\"variable\">$runtimeCache</span> -Force -Recurse -ErrorAction SilentlyContinue&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    New-Item -Type Junction -Path <span class=\"variable\">$runtimeCache</span> -Target <span class=\"variable\">$runtimeCachePersist</span> | Out-Null&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    mkdir <span class=\"variable\">$runtimeCache</span>&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    Move-Item <span class=\"variable\">$runtimeCache</span> <span class=\"variable\">$runtimeCachePersist</span> -Force&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    New-Item -Type Junction -Path <span class=\"variable\">$runtimeCache</span> -Target <span class=\"variable\">$runtimeCachePersist</span> | Out-Null&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以及配对的 uninstaller:</p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;uninstaller&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;script&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;foreach (<span class=\"variable\">$folder</span> in @(&#x27;remix-ide&#x27;, &#x27;.remix-ipfsnode&#x27;, &#x27;.cache_remix_ide&#x27;)) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;      <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;      <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    &#125; else &#123;continue&#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  if (!(Test-Path <span class=\"variable\">$runtimeCachePersist</span>)) &#123; Move-Item <span class=\"variable\">$runtimeCache</span> <span class=\"variable\">$runtimeCachePersist</span> -Force -ErrorAction SilentlyContinue &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  else &#123; Remove-Item <span class=\"variable\">$runtimeCache</span> -Force -Recurse -ErrorAction SilentlyContinue &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"解剖-exe\">解剖-exe</h3>\n<ul>\n<li>\n<p>此片段可以把常见的 <code>.exe -&gt; .exe#/dl.7z</code> 中的文件提取出来</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;Expand-7zipArchive <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\\\</span>`$PLUGINSDIR<span class=\"subst\">\\\\</span>app-64.7z<span class=\"subst\">\\&quot;</span> <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\&quot;</span>&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;Remove-Item -Recurse -Force <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\\\</span>`$PLUGINSDIR<span class=\"subst\">\\&quot;</span>&quot;</span>,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"判断是否含有某字符串\">判断是否含有某字符串</h2>\n<ul>\n<li>\n<p>如下,可以判断.gitignore 中是否含有 ‘backup’</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat <span class=\"variable\">%BACKUP_DIR%</span>\\.gitignore | <span class=\"built_in\">findstr</span> backup &gt;<span class=\"built_in\">nul</span> || (</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> backup&gt;&gt; <span class=\"variable\">%BACKUP_DIR%</span>\\.gitignore</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"关于目录\">关于目录</h2>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\">pwd</span><br><span class=\"line\"><span class=\"built_in\">echo</span> %<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> %~dp0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">╰─ cmd /c &quot;d:\\Repos\\Weidows-projects\\Keeper\\test.bat&quot;</span><br><span class=\"line\">/d/Repos/Weidows-projects/Keeper</span><br><span class=\"line\">d:\\Repos\\Weidows-projects\\Keeper\\test.bat</span><br><span class=\"line\">d:\\Repos\\Weidows-projects\\Keeper\\</span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-28\">借物表</h2>\n<p>暂无…</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "shell",
                "powershell"
            ]
        },
        {
            "id": "https://weidows.github.io/post/life/%E9%97%B2%E9%B1%BC/",
            "url": "https://weidows.github.io/post/life/%E9%97%B2%E9%B1%BC/",
            "title": "🤬Eyes-4-Fishing",
            "date_published": "2021-10-21T02:06:57.000Z",
            "content_html": "<h1>Eyes-4-Fishing</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @Date: 2021-10-21 10:06:57\n * @LastEditors: Weidows\n * @LastEditTime: 2022-06-14 21:10:27\n * @FilePath: \\Blog-private\\source\\_posts\\life\\闲鱼.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#eyes-4-fishing\">Eyes-4-Fishing</a>\n<ul>\n<li><a href=\"#%E9%BB%91%E8%AF%9D\">黑话</a></li>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E8%A2%AB%E9%AA%97\">如何避免被骗</a></li>\n<li><a href=\"#%E5%85%B6%E4%BB%96%E6%8E%A8%E8%8D%90\">其他推荐</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>🔥 闲鱼购物避险法则,鉴别过滤不良商家.</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"黑话\">黑话</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">关键词/信息</th>\n<th style=\"text-align:center\">为什么</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">点我想要私聊</td>\n<td style=\"text-align:center\">骗流量,让他商品比较靠前</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">仅同城交易</td>\n<td style=\"text-align:center\">不通过平台交易(线下交易),出了问题找不到卖家</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">价格明显低但是挂了很长时间</td>\n<td style=\"text-align:center\">钓鱼/诈骗,通过这个引流/压根没货骗人付款的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">我想要的人数&gt; 15 但是还是没出</td>\n<td style=\"text-align:center\">同上</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">女生自用/急用钱/老公用的</td>\n<td style=\"text-align:center\">这能信?</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">换设备了,闲置低价出了</td>\n<td style=\"text-align:center\">价格低的话同上,价格正常的话有可能可信</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商家有多个价格相同而且低的商品</td>\n<td style=\"text-align:center\">比如一水的 2599,3000 这种,不是标的实价,一问就抬价</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">图片大概率是网图(偷别人的),不能退货的</td>\n<td style=\"text-align:center\">实物与描述不符,货到砸手</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商家信用极好基本上全 ×</td>\n<td style=\"text-align:center\">信用极好不至于用闲鱼,除非是过万的大件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">商品是近期密集上架的</td>\n<td style=\"text-align:center\">频繁被举报,租的别人的号,不想被实名</td>\n</tr>\n</tbody>\n</table>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"如何避免被骗\">如何避免被骗</h2>\n<ol>\n<li>私聊让他拍个实物照/视频,正常卖家会给拍的 (墨迹找理由的或者态度不好的就是内个)</li>\n<li>商家货架上白白净净(大部分人都这样),或者有很多已售出的商品(至少不是骗子)</li>\n<li>关注数比粉丝数更能体现出商家是不是正常人</li>\n<li>走闲鱼平台交易,不要!不要!不要转到微信/支付宝/银行卡支付</li>\n</ol>\n<blockquote>\n<p>群友: 根据我多年的闲鱼经验，一般来说，定位在珠三角地区用户，我是不会买他们的电子产品的</p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"其他推荐\">其他推荐</h2>\n<blockquote>\n<p><a href=\"https://www.bilibili.com/video/BV1eu411174i\">咸鱼黑话大全</a></p>\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "闲鱼",
                "购物"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/basic/OpenGL/",
            "url": "https://weidows.github.io/post/experience/basic/OpenGL/",
            "title": "🥵OpenGL-xmake-蚌埠住了",
            "date_published": "2021-09-19T14:37:25.000Z",
            "content_html": "<h1>OpenGL-xmake-蚌埠住了</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-22 15:22:48\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\basic\\OpenGL.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#opengl-xmake-%E8%9A%8C%E5%9F%A0%E4%BD%8F%E4%BA%86\">OpenGL-xmake-蚌埠住了</a>\n<ul>\n<li><a href=\"#python\">Python</a>\n<ul>\n<li><a href=\"#%E6%8A%A5%E9%94%99\">报错</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95\">测试</a></li>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81\">实例代码</a></li>\n</ul>\n</li>\n<li><a href=\"#c\">C</a>\n<ul>\n<li><a href=\"#xmake-%E5%BC%95%E5%85%A5%E5%BA%93\">xmake-引入库</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95-1\">测试</a></li>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81-1\">实例代码</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>学校开了图形学这门课程,让我们配置下环境</p>\n<p>老师给的是 VS + OpenGL + C/C++ + 复制库文件 的方式</p>\n</li>\n<li>\n<p>转路</p>\n<ol>\n<li>\n<p><code>VScode + Python + pyopengl 库</code></p>\n</li>\n<li>\n<p><code>Vscode + C++ + xmake(需要VisualStudio) + 各种库</code> (推荐方法)</p>\n</li>\n</ol>\n<hr>\n</li>\n<li>\n<p>网上找了找,并不是能很顺畅的捅下来 (因为依赖项比较杂)</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Python-3\">Python</h2>\n<ul>\n<li>\n<p>先装 vscode 和 Python / anaconda,这俩没问题</p>\n</li>\n<li>\n<p>通过 pip (conda 不行) 安装 <code>pyopengl</code> 库</p>\n<ul>\n<li>\n<p>有的教程装的是 <code>pyglet</code>,这个库官方解释是 “pyglet is a cross-platform games and multimedia package.”</p>\n</li>\n<li>\n<p>虽然 <a href=\"http://pyglet.gl\">pyglet.gl</a> 可以调 OpenGL API,但是鉴于 Ctrl CV 工作,还是老老实实用 pyopengl 库吧</p>\n</li>\n</ul>\n<hr>\n</li>\n</ul>\n<h3 id=\"报错-3\">报错</h3>\n<p>直接通过 pip 在线安装的话是装的 32 位的库,在 64 位机子上跑不起来</p>\n<blockquote>\n<p>报错 <a href=\"https://blog.csdn.net/feilong_csdn/article/details/61421002\">“OpenGL.error.NullFunctionError: Attempt to call an undefined function”解决方案</a></p>\n</blockquote>\n<p>必须去下载适合本机的离线包安装: <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl\">下载地址</a></p>\n<p>比如我是 win_64,py_3.8 ; 需要下载的是: <code>PyOpenGL-3.1.5-cp38-cp38-win_amd64.whl</code>,然后安装</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把之前的版本先卸载,否则安装也无效</span></span><br><span class=\"line\"><span class=\"attribute\">pip</span> uninstall pyopengl</span><br><span class=\"line\"><span class=\"attribute\">pip</span> install PyOpenGL-<span class=\"number\">3</span>.<span class=\"number\">1</span>.<span class=\"number\">5</span>-cp38-cp38-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"测试-3\">测试</h3>\n<p>画个静态茶壶, 就是文章封面图</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数为b类型而不是string</span></span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;Teapot&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例代码\">实例代码</h3>\n<p><a href=\"../../../python/%E6%9D%82#opengl\">实例代码</a></p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"C\">C</h2>\n<p>如果你喜欢 VScode 调试 C/C++,而不想用比较复杂的 Visual Studio</p>\n<p>如果你想通过简单的配置就让 VScode 能调试 OpenGL</p>\n<p>恭喜,马上就好!</p>\n<p>首先,按照我另一篇文章: <a href=\"../../../others/cpp/C_Configuration\">👌 茅塞顿开之 C/C+±VScode-xmake</a> 配置好 <code>vscode + C/C++</code> 的开发环境</p>\n<hr>\n<h3 id=\"xmake-引入库\">xmake-引入库</h3>\n<p>xmake 自带的 xrepo 可以安装 xrepo/vcpkg/conan 的库</p>\n<ul>\n<li>\n<p>需要注意一下:</p>\n<p>虽然我这里使用 vscode + xmake,但是安装依赖时仍需要调用 visualstudio,必须安装</p>\n<p>需要安装的有两个: <code>buildtools + visualstudio community</code></p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVLoVo.png\" alt=\"20211120115814\" />\n<p>buildtools 也就是生成工具只有那一个,裸装就好,里面的东西不用装</p>\n<p>visualstudio community 的话什么版本都行,xmake 都支持了,它里面必须装 <code>C++ 桌面开发</code>,不能装成其他的</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVA21S.png\" alt=\"20211120115909\" />\n<p>语言包记得选中+英! 不然识别不到</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVSD4n.png\" alt=\"20211120120254\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"测试-4\">测试</h3>\n<ul>\n<li>\n<p>xmake.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 引用.lib形式的静态库会报错,所以要用shared动态链接库版本</span></span><br><span class=\"line\">add_requires(<span class=\"string\">&quot;freeglut&quot;</span>,&#123;configs = &#123;shared = <span class=\"literal\">true</span>&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 全局添加依赖</span></span><br><span class=\"line\">add_packages(<span class=\"string\">&quot;freeglut&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">target(<span class=\"string\">&quot;MazeGame&quot;</span>)</span><br><span class=\"line\">    set_kind(<span class=\"string\">&quot;binary&quot;</span>)</span><br><span class=\"line\">    add_files(<span class=\"string\">&quot;test.cpp&quot;</span>)</span><br><span class=\"line\">target_end()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>test.cpp</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;GL/glut.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Initial</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glMatrixMode(GL_PROJECTION); <span class=\"comment\">//设置投影参数，表示下面进行投影变换。若改GL_PROJECTION为GL_MODEVIEW则进行视图变换。</span></span><br><span class=\"line\">  glLoadIdentity();            <span class=\"comment\">//通常我们在需要进行投影变换时要把当前矩形设置为单位矩阵，即glLoadIdentity()</span></span><br><span class=\"line\">  gluOrtho2D(<span class=\"number\">0.0</span>, <span class=\"number\">200.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">200.0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Display</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">  glPushMatrix(); <span class=\"comment\">//操作矩阵堆栈,调用函数，相当于把矩阵放到堆栈上</span></span><br><span class=\"line\">  glColor3f(<span class=\"number\">1.0f</span>, <span class=\"number\">1.0f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">70</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glRotated(<span class=\"number\">-90</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">  glScaled(<span class=\"number\">0.25</span>, <span class=\"number\">0.25</span>, <span class=\"number\">0.0</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">-100</span>, <span class=\"number\">-100</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glBegin(GL_POLYGON);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">150</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">100</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">  glEnd();</span><br><span class=\"line\">  glPopMatrix();</span><br><span class=\"line\"></span><br><span class=\"line\">  glBegin(GL_POLYGON); <span class=\"comment\">//opengl要求指定顶点的位置必须在glBegin()后面，同时在glEnd()后面。</span></span><br><span class=\"line\">  glVertex2f(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">150</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">100</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">  glEnd();</span><br><span class=\"line\">  glFlush();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> **argv)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glutInit(&amp;argc, argv);</span><br><span class=\"line\">  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); <span class=\"comment\">//使用单缓存模式，如果GLUT_DOUBLE则为双缓存模式</span></span><br><span class=\"line\">  glutInitWindowSize(<span class=\"number\">600</span>, <span class=\"number\">600</span>);                <span class=\"comment\">//设置窗口大小</span></span><br><span class=\"line\">  glutInitWindowPosition(<span class=\"number\">100</span>, <span class=\"number\">100</span>);            <span class=\"comment\">//设置窗口位置</span></span><br><span class=\"line\">  glutCreateWindow(<span class=\"string\">&quot;Triangle&quot;</span>);</span><br><span class=\"line\">  glutDisplayFunc(Display);</span><br><span class=\"line\">  Initial();</span><br><span class=\"line\">  glutMainLoop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"实例代码-2\">实例代码</h3>\n<p><a href=\"https://github.com/Weidows/C--/tree/master/src/OpenGL\">实例代码</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "python",
                "opengl",
                "c",
                "conan"
            ]
        },
        {
            "id": "https://weidows.github.io/post/others/Better-Chinese/",
            "url": "https://weidows.github.io/post/others/Better-Chinese/",
            "title": "🤷‍♂️国人-不懂-国语.?",
            "date_published": "2021-09-02T10:03:26.000Z",
            "content_html": "<h1>国人-不懂-国语.?</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:46:53\n * @FilePath: \\Blog-private\\source\\_posts\\others\\Better-Chinese.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%9B%BD%E4%BA%BA-%E4%B8%8D%E6%87%82-%E5%9B%BD%E8%AF%AD\">国人-不懂-国语.?</a>\n<ul>\n<li><a href=\"#%E6%AD%A3%E6%96%87\">正文</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>兄弟文章: <a href=\"../Better-English\">🧀Better-English-4-U</a></p>\n</blockquote>\n<ul>\n<li>有些字眼/黑话属实难以揉捏透,看来看去大脑都高潮了.</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"正文\">正文</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">释义</th>\n<th style=\"text-align:center\">链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">狗推</td>\n<td style=\"text-align:center\">是对于在菲律宾从事网络博彩推广工作的人一种带有轻蔑性质的称呼。</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">预发环境-影子流量</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><a href=\"https://segmentfault.com/a/1190000039805146\">谈一谈线上事故的故事</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">炼丹</td>\n<td style=\"text-align:center\">一般来说就是用计算机训练项目</td>\n<td style=\"text-align:center\">很有趣的回答: <a href=\"https://zhuanlan.zhihu.com/p/23781756?utm_source=qq&amp;utm_medium=social&amp;utm_oi=807874781918658560\">深度学习·炼丹入门</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">灰度测试</td>\n<td style=\"text-align:center\">功能/业务性测试,一般不是由程序员负责的东西</td>\n<td style=\"text-align:center\"><a href=\"https://zhuanlan.zhihu.com/p/124912164\">灰度测试是什么意思呢？</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">幂等性</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><a href=\"https://blog.csdn.net/miachen520/article/details/91039661\">什么是幂等性</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">部署/上线</td>\n<td style=\"text-align:center\">部署: 把代码从开发机丢到服务器上跑; 上线: 代码在测试环境跑没问题,然后迁到生产环境</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">穿透</td>\n<td style=\"text-align:center\">前端所展示的内容与需求/实际不一致 (比如我 100 岁,后端给的是 10 岁)</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">扁平化管理</td>\n<td style=\"text-align:center\"><img src=\"https://www.helloimg.com/images/2022/02/27/GVSEnc.png\" alt=\"20220127160425\" /></td>\n<td style=\"text-align:center\"><a href=\"https://www.zhihu.com/question/37902193\">什么是扁平化管理？</a></td>\n</tr>\n</tbody>\n</table>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://weidows.github.io/post/experience/dev/sql-problem/",
            "url": "https://weidows.github.io/post/experience/dev/sql-problem/",
            "title": "🚚开发之旅~",
            "date_published": "2021-08-17T09:29:17.000Z",
            "content_html": "<h1>开发之旅~</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:44:23\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\dev\\sql-problem.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%BC%80%E5%8F%91%E4%B9%8B%E6%97%85\">开发之旅~</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2\">模糊查询</a></li>\n<li><a href=\"#where\">where</a></li>\n<li><a href=\"#%E5%A4%9A%E7%B4%A2%E5%BC%95%E6%8E%92%E5%BA%8F\">多索引排序</a></li>\n<li><a href=\"#mariadb-%E6%97%A0%E6%B3%95%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5\">Mariadb-无法远程连接</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E6%BA%90%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A\">数据源连接不上</a></li>\n<li><a href=\"#docker-databases\">docker-databases</a></li>\n<li><a href=\"#%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE%E9%80%9F%E8%A7%88\">接口数据速览</a></li>\n<li><a href=\"#%E5%A4%96%E9%94%AE-%E6%95%B0%E6%8D%AE-%E5%AF%BC%E5%87%BA%E5%85%A5\">外键-数据-导出入</a></li>\n<li><a href=\"#map-and-filter\">map-and-filter</a></li>\n<li><a href=\"#%E6%82%B2%E8%A7%82%E9%94%81-%E4%B9%90%E8%A7%82%E9%94%81\">悲观锁-乐观锁</a>\n<ul>\n<li><a href=\"#%E4%B8%8A%E9%94%81%E4%B8%9A%E5%8A%A1%E4%B8%8E%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\">上锁业务与读写性能分析</a></li>\n<li><a href=\"#%E8%A1%8C%E9%94%81%E4%B8%8E%E8%A1%A8%E9%94%81\">行锁与表锁</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"简介-11\">简介</h2>\n<p>一顿课程下来,SQL 语法是熟悉了,但是做到业务层面,不圆滑之处暴露出来惹.</p>\n<p>不只是 SQL,包括工作中常用的技巧.</p>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"模糊查询-2\">模糊查询</h2>\n<ul>\n<li>\n<p>包括模糊查询中文<br>\n<sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup><br>\n<sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p>中/英都可以正常查询:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByBean&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;Base_Column_List&quot;</span>/&gt;</span></span><br><span class=\"line\">  from test</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">      and name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;url != null and url != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">      and cut_url like concat(&#x27;%&#x27;,#&#123;url&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"where-2\">where</h2>\n<ul>\n<li>\n<p>开发中可能经常见到: <code>where 1 = 1</code> ,这是干什么用的?</p>\n</li>\n<li>\n<p>拿上面的举例子,把它变成下面这样子:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByBean&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;Base_Column_List&quot;</span>/&gt;</span></span><br><span class=\"line\">  from test</span><br><span class=\"line\">  where</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;url != null and url != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    and cut_url like concat(&#x27;%&#x27;,#&#123;url&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>如果 name == null,那么 SQL 会是这样:</p>\n<p>where and cut_url like concat(‘%’,#{url},‘%’)</p>\n<p>肯定会报错</p>\n</li>\n<li>\n<p>改成这样子就没问题了:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByBean&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;Base_Column_List&quot;</span>/&gt;</span></span><br><span class=\"line\">  from test</span><br><span class=\"line\">  where 1 = 1</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    name like concat(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;url != null and url != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">    and cut_url like concat(&#x27;%&#x27;,#&#123;url&#125;,&#x27;%&#x27;)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在 SQL 支持的情况下,还是套<code>&lt;where&gt;</code>标签更好,它能处理 <code>where and</code> 这种情况.</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多索引排序\">多索引排序</h2>\n<ul>\n<li>\n<p>有时一个表中多个字段需要加索引</p>\n<p>但是这样导致每次添加/更新数据时排序都会变化</p>\n<p>前端接到的数据可以认为是无序化的,如何解决呢?</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>挺简单的 <code>order by id</code></li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Mariadb-无法远程连接\">Mariadb-无法远程连接</h2>\n<ul>\n<li>\n<p>在 manjaro 虚拟机装了个 mariadb</p>\n<p>主机与虚拟机已经连通,但是 mariadb 无法连接上 (授权失败)</p>\n<blockquote>\n<p>Host ‘192.168.114.1’ is not allowed to connect to this MariaDB server</p>\n</blockquote>\n<p>因为 mariadb 默认只允许 localhost 连接</p>\n<hr>\n</li>\n<li>\n<p>网上找了一堆文章,大多是 <code>grant 授权</code> , <code>改配置文件</code> 之类的</p>\n<p>试了下,各种碰壁 , 这里给个简单方法</p>\n<hr>\n</li>\n<li>\n<p>直接 <code>新建一个用户</code></p>\n<p>用户名随意 , host 填 <code>%</code> (也就是允许所有)</p>\n<p>远程连接时连这个用户就行了.</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据源连接不上\">数据源连接不上</h2>\n<blockquote>\n<p>Failed to bind properties under ‘’ to com.zaxxer.hikari.HikariDataSource</p>\n</blockquote>\n<ul>\n<li>\n<p>这个情况大多是配置属性没写对,重点看一下标记的地方</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVAKQR.png\" alt=\"20210925193945\" />\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"docker-databases\">docker-databases</h2>\n<p>用 docker 跑数据库真的是太 Jier 好使了!</p>\n<blockquote>\n<p>在另一篇文章: <a href=\"../../system/../docker#%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86\">🌈 初探 Docker.</a></p>\n</blockquote>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"接口数据速览\">接口数据速览</h2>\n<ul>\n<li>\n<p>前端接到 JSON 数据总是需要看一下,通过 postman 那种不是很便捷</p>\n<p>于是之前我一直是找到响应-&gt;复制-&gt;粘贴到 vscode 格式化</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVAj6c.png\" alt=\"20211015130205\" />\n</li>\n<li>\n<p>偶然发现有个更方便的手段: 浏览器<code>前端助手插件</code></p>\n<p>安装后直接双击请求,跳出的新页面就是已经格式化好的</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVtIXg.png\" alt=\"20211015130109\" />\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVS6hz.png\" alt=\"20211015130815\" />\n</li>\n</ul>\n<hr>\n<h2 id=\"外键-数据-导出入\">外键-数据-导出入</h2>\n<ul>\n<li>\n<p>结组做数据库课设时发现,含有外键的表,create table 时会报错.</p>\n<p>解决办法呢,比如下面的三个表</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVA0EY.png\" alt=\"20211204085119\" />\n<p>先把 player 和 technology 两个表创建好,再创建 good_at 就不会报错了</p>\n<p>(<code>也就是需要先创建外键指向的表,再创建含有外键的表</code>)</p>\n<hr>\n</li>\n<li>\n<p>insert 时还是会遇到问题,跟上面类似</p>\n<blockquote>\n<p>Error: SQLSTATE[23000]: Integrity constraint violation: 1452 Cannot add or update a child row: a foreign key constraint fails (<code>test</code>.<code>test_user</code>, CONSTRAINT <code>fk_test_user_test_user_id</code> FOREIGN KEY (<code>test_user_id</code>) REFERENCES <code>test_user</code> (<code>id</code>))</p>\n</blockquote>\n<p>先插入 player / technology 表,再插入 good_at 表</p>\n<hr>\n<p>实则还有种变相解决方法是在插入前 foreign_key_checks,插入后再打开:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span></span><br><span class=\"line\">  FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> game(id,name,score,player) <span class=\"keyword\">VALUES</span>(<span class=\"number\">1</span>,<span class=\"string\">&#x27;aggdm&#x27;</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>),(<span class=\"number\">2</span>,<span class=\"string\">&#x27;cmera&#x27;</span>,<span class=\"number\">10</span>,<span class=\"number\">10</span>),(<span class=\"number\">3</span>,<span class=\"string\">&#x27;hzxgy&#x27;</span>,<span class=\"number\">10</span>,<span class=\"number\">14</span>),(<span class=\"number\">4</span>,<span class=\"string\">&#x27;ihqti&#x27;</span>,<span class=\"number\">5</span>,<span class=\"number\">12</span>),(<span class=\"number\">5</span>,<span class=\"string\">&#x27;hozmy&#x27;</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>),(<span class=\"number\">6</span>,<span class=\"string\">&#x27;wrcux&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">12</span>),(<span class=\"number\">7</span>,<span class=\"string\">&#x27;mlijv&#x27;</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>),(<span class=\"number\">8</span>,<span class=\"string\">&#x27;qmnij&#x27;</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>),(<span class=\"number\">9</span>,<span class=\"string\">&#x27;vswdc&#x27;</span>,<span class=\"number\">7</span>,<span class=\"number\">14</span>),(<span class=\"number\">10</span>,<span class=\"string\">&#x27;gebit&#x27;</span>,<span class=\"number\">6</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span></span><br><span class=\"line\">  FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"map-and-filter\">map-and-filter</h2>\n<ul>\n<li>\n<p>开发时遇到此问题:</p>\n<blockquote>\n<p>Required request body is missing:请求体为空</p>\n</blockquote>\n<p>纳闷,把前端数据正常传给后端了,为什么触发此错误?</p>\n<p>后来发现是 .map() 的坑,被这个问答糊脸了:<br>\n<sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<hr>\n</li>\n<li>\n<p>map 是映射,必然会 return 一个值 (没 return 的话就是 undefined)</p>\n<p>filter 是过滤,可以过滤掉某些结果不 return</p>\n<p>虽然这两个都有 transform 能力但是在返回值上不同<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    subgraph filter\n      A2(A) --filter--&gt; A3(A&#39;)\n      B2(B) --filter--&gt; B3(B)\n      C2(C) --filter--&gt; C3(无)\n    end\n\n    subgraph map\n      A --map--&gt; A&#39;\n      B --map--&gt; B4(B)\n      C --map--&gt; undefined\n    end\n  </pre></div><br>\n<a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n</li>\n</ul>\n<h2 id=\"悲观锁-乐观锁\">悲观锁-乐观锁</h2>\n<p>对数据库中同一数据进行多个操作 (如 update),需要加锁来保证数据/操作正确 <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<ul>\n<li>\n<p>这里拿 Git 举例子:</p>\n<p>有一个 Git 仓库, A,B,C 三个开发者负责不同开发任务</p>\n<p><code>悲观锁</code>就是保证某一时刻只能一人进行一个任务,无论谁先开始,其他人必须等到前一位完成后,在前一位的提交结果上再做操作</p>\n<p><code>乐观锁</code>就是让开发者可以同起点同时进行任务,第一位完成的可以正常提交,但是后续其他人的提交会产生合并冲突,把他们打回重做(在第一位提交后的基础上)</p>\n<blockquote>\n<p><img src=\"https://www.helloimg.com/images/2022/03/22/R13Vcg.png\" alt=\"R13Vcg.png\"></p>\n</blockquote>\n<hr>\n</li>\n<li>\n<p>原理: <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<p>悲观锁实际上就是尝试加个排它锁,能加上锁就可以操作,不然说明数据正在被操作,等着</p>\n<p>乐观锁是通过添加数据版本(版本号/时间戳)来校验,提交时数据版本一致就可以提交,否则是有冲突打回</p>\n<hr>\n</li>\n<li>\n<p>适用场景:</p>\n<p>在高并发场景下, 乐观锁会大量打回,提交率不如悲观锁</p>\n<p>低并发场景下, 不同任务同时操作同一数据概率低时, 乐观锁可以发挥多线程的性能优势</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"上锁业务与读写性能分析\">上锁业务与读写性能分析</h3>\n<ul>\n<li>\n<p>悲观锁</p>\n<p>在某一事务 for update 上锁后,其他所有线程 <code>不能读/写</code> 被锁数据直到 commit 后</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">begin</span>;</span><br><span class=\"line\">Select...For <span class=\"keyword\">Update</span>; # InnoDB 中用于加悲观锁的命令</span><br><span class=\"line\">update...</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>乐观锁</p>\n<p>乐观锁是个概念锁, 不影响任何线程读写, 只是在更新数据/提交时校验与先前版本是否一致, 不一致的话不做更改</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prev_version <span class=\"operator\">=</span> <span class=\"keyword\">select</span> version <span class=\"keyword\">from</span> ...</span><br><span class=\"line\"><span class=\"keyword\">begin</span>;</span><br><span class=\"line\">update...where version <span class=\"operator\">=</span> prev_version;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>综上来看</p>\n<p>高频写 -&gt; 悲观锁</p>\n<p>高频读 -&gt; 乐观锁</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"行锁与表锁\">行锁与表锁</h3>\n<p>当 <code>select...where...for update</code> 中 where 条件用了 <code>index / primary key</code>, 就会锁行,否则会锁表 <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup></p>\n<ul>\n<li>\n<p>我的理解:</p>\n<p>含有 index / primary key 条件的查询结果一般只有一行,索引快,上锁性能损耗低</p>\n<p>而不含的, 查出来的结果数据量庞大, 逐行加锁性能损耗太大, 不如直接锁表</p>\n</li>\n</ul>\n<p><a><img src=\"https://fastly.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-27\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://www.cnblogs.com/-lin-x-c-/p/10375412.html\">mysql 中模糊查询的四种用法：</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.oschina.net/question/160183_36995\">mybatis 模糊查询 中文问题</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.dovov.com/javascript-mapundefined.html\">为什么 javascript map 函数返回 undefined？(Why does javascript map function return undefined?)</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://zhuanlan.zhihu.com/p/31537871\">什么是悲观锁和乐观锁</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://zhuanlan.zhihu.com/p/85803908\">乐观锁与悲观锁深入学习</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://mp.weixin.qq.com/s/5bSLAhIATj89fFQ4uAc-Ww\">字节一面：select…for update 会锁表还是锁行？</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "docker",
                "sql",
                "前端",
                "json",
                "mariadb"
            ]
        }
    ]
}