<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://weidows.github.io</id>
    <title>⭐️齐下无贰⭐️ • Posts by &#34;basic&#34; category</title>
    <link href="https://weidows.github.io" />
    <updated>2022-01-06T16:23:14.000Z</updated>
    <category term="java" />
    <category term="javadoc" />
    <category term="编码" />
    <category term="vscode" />
    <category term="maven" />
    <category term="对象" />
    <category term="设计模式" />
    <category term="jvm" />
    <category term="lambda" />
    <category term="备忘录" />
    <category term="api" />
    <category term="推荐" />
    <category term="浏览器" />
    <category term="扩展" />
    <category term="ffmpeg" />
    <category term="算法" />
    <category term="hexdump" />
    <category term="hls" />
    <category term="openssl" />
    <category term="shell" />
    <category term="密码学" />
    <category term="ps" />
    <category term="设计" />
    <category term="摄影" />
    <category term="latex" />
    <category term="php" />
    <category term="website" />
    <category term="ssh" />
    <category term="linux" />
    <category term="regex" />
    <category term="yaml" />
    <category term="音乐" />
    <category term="哲学" />
    <category term="生活" />
    <category term="健身" />
    <category term="面试" />
    <category term="笔记" />
    <category term="english" />
    <category term="idea" />
    <category term="html" />
    <category term="css" />
    <category term="javascript" />
    <category term="成长路线" />
    <category term="deprecated" />
    <category term="font" />
    <category term="vr" />
    <category term="网课" />
    <category term="manjaro" />
    <category term="计算机系统" />
    <category term="服务器" />
    <category term="虚拟机" />
    <category term="树莓派" />
    <category term="windows" />
    <category term="docker" />
    <category term="多线程" />
    <category term="进程" />
    <category term="cpu" />
    <category term="scoop" />
    <category term="git" />
    <category term="python" />
    <category term="node" />
    <category term="ubuntu" />
    <category term="wsl2" />
    <category term="环境变量" />
    <category term="aria2" />
    <category term="工具" />
    <category term="pycharm" />
    <category term="goland" />
    <category term="图床" />
    <category term="爬虫" />
    <category term="sm.ms" />
    <category term="package" />
    <category term="tomcat" />
    <category term="mybatis" />
    <category term="map" />
    <category term="crud" />
    <category term="日志" />
    <category term="分页" />
    <category term="数据库" />
    <category term="注解" />
    <category term="mysql" />
    <category term="jdbc" />
    <category term="sql" />
    <category term="前端" />
    <category term="json" />
    <category term="javaweb" />
    <category term="servlet" />
    <category term="cookie" />
    <category term="session" />
    <category term="jsp" />
    <category term="filter" />
    <category term="架构" />
    <category term="反射" />
    <category term="cors" />
    <category term="大前端" />
    <category term="jquery" />
    <category term="npm" />
    <category term="yarn" />
    <category term="vue" />
    <category term="opengl" />
    <category term="c" />
    <category term="conan" />
    <category term="理论知识" />
    <category term="通信" />
    <category term="音频" />
    <category term="傅里叶变换" />
    <category term="极化码" />
    <category term="信息论" />
    <category term="powershell" />
    <category term="宝塔面板" />
    <category term="搞笑" />
    <category term="高能" />
    <category term="快捷键" />
    <category term="cmake" />
    <category term="区块链" />
    <category term="golang" />
    <category term="markdown" />
    <category term="processing" />
    <category term="anaconda" />
    <category term="hexo" />
    <category term="github" />
    <category term="gitee" />
    <category term="action" />
    <category term="branch" />
    <category term="release" />
    <category term="pages" />
    <category term="copilot" />
    <category term="插件" />
    <category term="emmet" />
    <category term="美化" />
    <category term="snippet" />
    <category term="seo" />
    <category term="node.js" />
    <category term="butterfly" />
    <category term="pug" />
    <category term="styl" />
    <category term="pjax" />
    <category term="优化" />
    <category term="魔改" />
    <entry>
        <id>https://weidows.github.io/post/experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</id>
        <title>👽通信技术 - 开坑自埋</title>
        <link rel="alternate" href="https://weidows.github.io/post/experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/"/>
        <content type="html">&lt;h1&gt;通信技术 - 开坑自埋&lt;/h1&gt;
&lt;!--
 * @?: *********************************************************************
 * @Author: Weidows
 * @LastEditors: Weidows
 * @LastEditTime: 2022-02-25 22:15:42
 * @FilePath: \Blog-private\source\_posts\experience\basic\ 通信技术.md
 * @Description:
 * @!: *********************************************************************
--&gt;&lt;blockquote class=&#34;pullquote mindmap mindmap-md&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF-%E5%BC%80%E5%9D%91%E8%87%AA%E5%9F%8B&#34;&gt;通信技术 - 开坑自埋&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#wifi&#34;&gt;WIFI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%90%8D%E5%AD%97&#34;&gt;名字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%A2%91%E6%AE%B5&#34;&gt;频段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B0%83%E5%88%B6%E6%89%8B%E6%AE%B5&#34;&gt;调制手段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%A0%87%E5%87%86%E5%88%B6%E5%AE%9A&#34;&gt;标准制定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E9%99%85&#34;&gt;理论与实际&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2&#34;&gt;傅里叶变换&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BC%95%E8%A8%80&#34;&gt;引言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fourier-transform&#34;&gt;fourier-transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8-%E9%99%A4%E5%99%AA&#34;&gt;实际应用 - 除噪&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#inverse-fourier&#34;&gt;inverse-fourier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B4%A8%E5%BF%83%E4%B8%8E%E5%82%85%E9%87%8C%E5%8F%B6%E5%85%AC%E5%BC%8F%E7%9A%84%E5%85%B3%E7%B3%BB&#34;&gt;质心与傅里叶公式的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BC%BA%E7%82%B9&#34;&gt;缺点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%9F%AD%E6%97%B6%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2&#34;&gt;短时傅里叶变换&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9E%81%E5%8C%96%E7%A0%81&#34;&gt;极化码&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A6%82%E4%BD%95%E5%BA%A6%E9%87%8F%E4%BF%A1%E6%81%AF-%E4%BF%A1%E6%81%AF%E7%86%B5&#34;&gt;如何度量信息 - 信息熵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BF%A1%E9%81%93%E5%AE%B9%E9%87%8F-%E6%9C%80%E5%A4%A7%E4%BA%92%E4%BF%A1%E6%81%AF&#34;&gt;信道容量 - 最大互信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%A6%99%E5%86%9C%E6%9E%81%E9%99%90&#34;&gt;香农极限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9E%81%E5%8C%96%E7%A0%81-polarcodes&#34;&gt;极化码 -PolarCodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;draft 此文章点子来自: &lt;a href=&#34;https://www.youtube.com/watch?v=4w6_zWSrZw4&#34;&gt;你不了解的「WiFi」从技术原理 应用 讲到行业的未来 一个视频彻底讲清楚 「硬核无线技术」系列视频 WiFi 篇&lt;/a&gt;&lt;br&gt;
一串听下来发现对于通信这方面的知识还是很欠缺, 甚至有些家常知识点都没太了解.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;WIFI&#34;&gt;WIFI&lt;/h2&gt;
&lt;div class=&#34;video-container&#34;&gt;&lt;iframe src=&#34;https://www.youtube.com/embed/4w6_zWSrZw4&#34; frameborder=&#34;0&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;h3 id=&#34;名字&#34;&gt;名字&lt;/h3&gt;
&lt;p&gt;音响领域有高保真 HIFI (High Fidelity), 之后出现的无线起名 WIFI (Wireless Fidelity),&lt;/p&gt;
&lt;p&gt;Science Fiction -&amp;gt; SciFi (发音与上面类似, 一方面考虑好记)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;频段&#34;&gt;频段&lt;/h3&gt;
&lt;p&gt;2.4G 频段: 2.4~2.4835 GHz&lt;/p&gt;
&lt;p&gt;5G 频段: 5.15~5.85 GHz&lt;/p&gt;
&lt;p&gt;每个频段可分为若干信道 (频宽从 1~160MHz 不等), 满足多连接 / 多设备&lt;code&gt; 尽可能 &lt;/code&gt; 不互相干扰下使用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在小区 / 宿舍里经常发现信号范围内有一排别人的 WIFI/ 热点&lt;/p&gt;
&lt;p&gt;甭管有没有密码, 必然会对我们当前设备使用 WIFI 无线电信号 &lt;code&gt; 产生干扰&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.4G 频段窄而且电磁波穿透力比 5G 频段强, 另外默认用 2.4G 频段的设备多&lt;/p&gt;
&lt;p&gt;所以, 把自己的设备切换使用为 5G 频段可以 &lt;code&gt; 一定程度上抗干扰&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其实也不止 WIFI 影响 WIFI, 还要好多设备也是用 2.4G 频段通信会有干扰:&lt;/p&gt;
&lt;p&gt;蓝牙, 无线鼠标, 无线录音麦…etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;调制手段&#34;&gt;调制手段&lt;/h3&gt;
&lt;p&gt;何为调制?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把数字信号转为电磁波通过天线发送, 接收端再把电磁波解为数字信号的过程, 如下图&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/7sGTmctk3JHZUOQ.png&#34; alt=&#34;20220107015502&#34; /&gt; &lt;br&gt;
&lt;a href=&#34;https://www.txrjy.com/thread-1080059-1-1.html&#34;&gt;https://www.txrjy.com/thread-1080059-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编 / 解码过程用到 &lt;a href=&#34;#%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2&#34;&gt; 傅里叶变换和逆变&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;从 802.11b 到 802.11ax 应用的三种调制方式:&lt;/p&gt;
&lt;p&gt;802.11 (eight O two eleven, 0 读 O, dot 不用读)&lt;/p&gt;
&lt;p&gt;DSSS (D triple S, 直接序列扩频)&lt;/p&gt;
&lt;p&gt;FHSS (调频)&lt;/p&gt;
&lt;p&gt;OFDM (Orthogonal Frequency-Division Multiplexing. &lt;code&gt;正交频分复用&lt;/code&gt;/ 同频分解多调制)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于民用频宽范围比较有限,DSSS 这种依靠大频宽保证可靠性的技术不适用, 逐渐过渡到了 OFDM:&lt;/p&gt;
&lt;p&gt;这种调制方式大幅降低所需频宽, 图中上面为 OFDM&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/mNesrXZPEv7Yjqp.png&#34; alt=&#34;20220107020556&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;标准制定&#34;&gt;标准制定&lt;/h3&gt;
&lt;p&gt;上面所提到的 802.11 xxx 就是无线电协会所制定的 WIFI 标准, 其每次更新是为了规划未来一段时间的 WIFI 走向, 避免各做各的无法正常通信.&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/9j26zdTgM4msUOK.png&#34; alt=&#34;20220107023524&#34; /&gt;
&lt;p&gt;802.11ac 引入波束赋形 Beam Forming, 追踪设备并把信号尽可能聚束到此方向&lt;/p&gt;
&lt;p&gt;2019 年协会才把标准整体命名为 WIFI1-WIFI6, 调制方式 OFDM -&amp;gt; OFDMA(4GLTE 蜂窝网络的调制方式)&lt;/p&gt;
&lt;p&gt;WIFI 发展越加偏向 / 近似蜂窝网络&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;理论与实际&#34;&gt;理论与实际&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无线通信理论速率与实际速率差距蛮大的:&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/GJRZOmSPCWQ3oy6.png&#34; alt=&#34;20220107030252&#34; /&gt;
&lt;p&gt;生活中都有经验, 离路由器越近越好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用不用追新设备?&lt;/p&gt;
&lt;p&gt;先上结论: &lt;code&gt;不用&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们大多数人不咋组内网, 组内网的话也是插线而不是走 WIFI, 路由器唯一线路就是走公网&lt;/p&gt;
&lt;p&gt;路由器跑的快不快在于宽带套餐,100-300M 宽带还是绝大部分家庭 / 学校的选择, 而出于 2013 年的 WIFI5 标准完完全全够跑满&lt;/p&gt;
&lt;p&gt;WIFI6 标准的路由器可以认为, 杀鸡用牛刀&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;傅里叶变换 -2&#34;&gt;傅里叶变换&lt;/h2&gt;
&lt;h3 id=&#34;引言&#34;&gt;引言&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/iD4aLGwQuYVzXfFkfMfVxg&#34;&gt;傅里叶变换的精彩讲解&lt;/a&gt; &lt;br&gt;
简单来说傅里叶变换的作用: &lt;code&gt;从混合的波 (声波 / 电磁波) 中分离出某个频率的波&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;高数确实是一门神秘且棘手的学科, 所以听到这个傅里叶变换心理也是略有抵触的. &lt;br&gt;
后话: 不做应用的单纯的数学雀食烦…但是结合应用的话就有趣起来了 &lt;code&gt;\(^o^)/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;多个不同频率的波叠加&lt;/p&gt;
&lt;p&gt;傅里叶变换就是在研究如何从混合波中分析出其组成波 (类似从混合色中分析原色)&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/hf3ecjxPp4I2ruQ.png&#34; alt=&#34;20220113234230&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;fourier-transform&#34;&gt;fourier-transform&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于某个混合波, 我们想知道它是 &lt;code&gt; 哪几种波 &lt;/code&gt; 混合的结果, 如何得知?&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/RgQ7epA6aKsPBIz.png&#34; alt=&#34;20220114170236&#34; /&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我们把波形绕成环, 并且可以调整 &lt;code&gt;cycles/second -&amp;gt; Frequency&lt;/code&gt; 的比例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视圆环图像质量均匀, 取&lt;code&gt;&amp;quot; 质心 center of mass&amp;quot;&lt;/code&gt; 的坐标 (x,y)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取 x 坐标为 Y 轴, Frequency 为 X 轴作图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可见 2Hz+3Hz 的波,Frequency 在 2 和 3 出出现明显波峰&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分别叠加也符合:&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/oxyDRBv57rT3Pzd.png&#34; alt=&#34;20220114172006&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;实际应用 - 除噪&#34;&gt;实际应用 - 除噪&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;比如现有声波里有一个已知高频噪音 (蚊子), 但我们无法从声波中直接过滤掉, 如何去掉它?&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/h923p4d5jxow6kV.png&#34; alt=&#34;20220114174154&#34; /&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;做傅里叶变换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到那个频率的波峰并通过某种方法干掉它&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;傅里叶反变换得到没有蚊子叫的声波&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;inverse-fourier&#34;&gt;inverse-fourier&lt;/h3&gt;
&lt;p&gt;对傅里叶变换的图像再次变换可以 &lt;code&gt; 大致 &lt;/code&gt; 获得原始波&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/LuyxcSPZCdX8jQV.png&#34; alt=&#34;20220114174856&#34; /&gt;
&lt;hr&gt;
&lt;h3 id=&#34;质心与傅里叶公式的关系&#34;&gt;质心与傅里叶公式的关系&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot; 质心 &amp;quot; 实际指的就是公式变换的结果, 下面分别为离散 / 连续的计算公式&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/aRH9L2enBi7K3Gy.png&#34; alt=&#34;20220114175932&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/kPr3m526axvEzj1.png&#34; alt=&#34;20220114180011&#34; /&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要注意的是, 上面公式与傅里叶变换公式有小小的区别:&lt;/p&gt;
&lt;p&gt;上面的公式只是在求 &lt;code&gt;单点&lt;/code&gt;, 实际傅里叶变换公式不需要除以时间&lt;/p&gt;
&lt;p&gt;使得对应频率的 x 根据时间 t 倍增延长 (也就是变换后产生波峰的原因)&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/taKjLwzDlq3xMRv.png&#34; alt=&#34;20220114182317&#34; /&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;比如某频率的波持续 3 秒, 其对应大小乘 3 倍&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/2POdUowc3qW8DRy.png&#34; alt=&#34;20220114182518&#34; /&gt;
&lt;p&gt;持续时间越长, 对应频率的波峰越大&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;缺点&#34;&gt;缺点&lt;/h3&gt;
&lt;p&gt;比如有一段 2s 的声波, 第一秒为 1Hz, 第二秒为 2Hz&lt;/p&gt;
&lt;p&gt;通过傅里叶变换只能识别出存在 1Hz 和 2Hz 的波, 并可以比较持续时间, 但并不能分析其在时间轴上的定位&lt;/p&gt;
&lt;p&gt;针对其不能时频联合分析的缺点, 出现了 &lt;code&gt;短时傅里叶变换&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;短时傅里叶变换&#34;&gt;短时傅里叶变换&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eet-china.com/mp/a77376.html&#34;&gt;一文道破傅里叶变换的本质，优缺点一目了然&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;极化码&#34;&gt;极化码&lt;/h2&gt;
&lt;style&gt;.bbplayer{width: 100%; max-width: 850px; margin: auto}&lt;/style&gt;&lt;div class=&#34;bbplayer&#34;&gt;&lt;iframe class=&#34;bbplayer&#34; id=&#34;mmedia-xsntJvEtgoPHnqtF&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1fq4y1g7hq&amp;page=1&amp;high_quality=1&amp;danmaku=true&#34; allowfullscreen=&#34;allowfullscreen&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;0&#34; framespacing=&#34;0&#34; sandbox=&#34;allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script&gt; document.getElementById(&#34;mmedia-xsntJvEtgoPHnqtF&#34;).style.height=document.getElementById(&#34;mmedia-xsntJvEtgoPHnqtF&#34;).scrollWidth*0.76+&#34;px&#34;;
    window.onresize = function(){document.getElementById(&#34;mmedia-xsntJvEtgoPHnqtF&#34;).style.height=document.getElementById(&#34;mmedia-xsntJvEtgoPHnqtF&#34;).scrollWidth*0.76+&#34;px&#34;;
    }; &lt;/script&gt;
&lt;h3 id=&#34;如何度量信息 - 信息熵&#34;&gt;如何度量信息 - 信息熵&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;哈特莱首先提出使用对数 log 来描述信息&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;后称信息熵 &lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt; 后称信息熵: H = n\log s = \log s^{n}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;后称信息熵&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.9088em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7144em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;信息符合加法: &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;h(x,y)=h(x)+h(y)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;概率符合乘法: &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;p(x,y)=p(x)p(y)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;log 可以把乘法变加法: &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\log p(x,y) = \log p(x)p(y) = \log p(x)+\log p(y)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;操作原理就是 &lt;code&gt;通过概率间接量化信息&lt;/code&gt;, 只不过哈特莱这里底数取得是 10, 下面香农改为了 2 (更适合计算机计算)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;香农首先提出信息熵来度量信息, 可以粗略解释为:&lt;/p&gt;
&lt;p&gt;n 个连续的 “是(1)” 或 “否(0)” 可以消除 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2^{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6644em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.6644em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 比特内容的不确定性(疑义度)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;信息熵 &lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;munderover&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/munderover&gt;&lt;msub&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt; 信息熵: H=-k \sum_{i=1}^{n} p_{i} \log p_{i}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;信息熵&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:2.9291em;vertical-align:-1.2777em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop op-limits&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.6514em;&#34;&gt;&lt;span style=&#34;top:-1.8723em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3.05em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mrel mtight&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3.05em;&#34;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&#34;mop op-symbol large-op&#34;&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-4.3em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3.05em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2777em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的汉字大约有 7000 个, 假设每个字使用概率相等, 至少需要用 13 比特表示才能完全消除一个字的疑义度 (&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;13&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2^{13}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=8192 &amp;gt; 7000) &lt;br&gt;
那么在此条件下每个字的信息熵为 13 比特 &lt;br&gt;
每个字的使用频率概率, 出现场景, 上下文关联都会影响实际的信息熵 (比如文盲说话的信息熵不如学者高) &lt;br&gt;
&lt;a href=&#34;https://blog.csdn.net/chenKFKevin/article/details/72074250&#34;&gt;信息的度量——信息熵&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;信道容量 - 最大互信息&#34;&gt;信道容量 - 最大互信息&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信道容量(Channel Capacity) 也叫最大互信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;互信息: &lt;code&gt;它是一个随机变量包含另一个随机变量信息量的度量&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如一条河从 A-&amp;gt;B 端, 但只有 70% 的河水能流到 B, 其他的河水流失了; 那么在这里 A-&amp;gt;B 端河水的互信息为 70%&lt;/p&gt;
&lt;p&gt;当然, 互信息的度量单位并不是百分比, 概念上也略有偏颇&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;视频中的例子: X-&amp;gt;Y 传递信息熵为 &lt;code&gt;H(X)&lt;/code&gt; 的信息, 传递过程中丢失 / 不能还原的信息熵为 &lt;code&gt;H(X|Y)&lt;/code&gt;, 那么&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;互信息 &lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;∣&lt;/mi&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;H&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;∣&lt;/mi&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt; 互信息: I(X|Y) = H(X) - H(X|Y)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;互信息&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∣&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.08125em;&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;∣&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是信道 / 信道容量? 举个栗子:&lt;/p&gt;
&lt;p&gt;有个工厂里有好多流水线从 A-&amp;gt;B 处输送产品; 每条流水线可以理解为是一个信道&lt;/p&gt;
&lt;p&gt;流水线运输速度太快会使产品不合格, 需要限制在 T 时间内运输 N(T) 件产品才可以保证质量; 同样道理通信时一味地加速发送会使通信状态变差, 也需要限制在一定范围之内,&lt;code&gt;这个范围就是信道容量&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(理论条件下, 单位时间内可以传过去的信息量)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;信道容量 &lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mrow&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;Lim&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;→&lt;/mo&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;∞&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt; 信道容量: C=\operatorname{Lim}_{T \rightarrow \infty} \frac{\log N(T)}{T}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;信道容量&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:2.113em;vertical-align:-0.686em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;&lt;span class=&#34;mop&#34;&gt;&lt;span class=&#34;mord mathrm&#34;&gt;Lim&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mrel mtight&#34;&gt;→&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;∞&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.427em;&#34;&gt;&lt;span style=&#34;top:-2.314em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.677em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.686em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;香农极限&#34;&gt;香农极限&lt;/h3&gt;
&lt;p&gt;实际条件下, 通信接收方会因为丢包 / 信号干扰 / 磁场等 &lt;code&gt; 噪声 &lt;/code&gt; 无法接收到部分信息, 导致无法真实达到信道容量&lt;/p&gt;
&lt;p&gt;香农提出通过合适的编码, 信道容量 C 可以被尽可能的无限逼近, 但对于大于 C 的速率不成立.&lt;code&gt;即香农极限&lt;/code&gt;(香农提出, 后人证明)&lt;/p&gt;
  &lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/HnxaEvL3Q2zMTSy.png&#34; alt=&#34;20220203184654&#34; /&gt;
&lt;hr&gt;
&lt;h3 id=&#34;极化码 -PolarCodes&#34;&gt;极化码 -PolarCodes&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://res-www.zte.com.cn/mediares/magazine/publication/com_cn/article/201901/cn201901004.pdf&#34;&gt;“太极混一”——极化码原理及 5G 应用&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;核心思想: 通过异或操作把信息分流&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/6lJ31DoVsva5QNg.png&#34; alt=&#34;20220203221617&#34; /&gt;
&lt;p&gt;通过异或操作, 把信道一 / 二两个实际信道转换成信道&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;/msup&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;/&lt;/mi&gt;&lt;msup&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;W^-/W^+&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0213em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/vblN7CyS846RBd9.png&#34; alt=&#34;20220203222548&#34; /&gt;
&lt;p&gt;这里可能会疑惑信道 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;W^+&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 第四种情况 “U2=U1=Y1” 中 U1 从何得知?&lt;/p&gt;
&lt;p&gt;实际上这里我们让 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;W&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;W^-&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;W&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 信道不传输信息,U1 是通信双方预先约定好的内容&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当处理的码长 (信道数) 足够多时, 好信道的互信息会无限逼近 1&lt;/p&gt;
&lt;blockquote&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/DnMr2JGm8UlaLX9.png&#34; alt=&#34;20220203224853&#34; /&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然凡事不是越多越好:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;这里信息传输的条件是 &lt;code&gt; 信道连接能保持稳定&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每增加信道数, 需要做的处理指数级增长&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体如何编码 / 构建, 详见上方论文 (&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msubsup&gt;&lt;mtext&gt;🥵&lt;/mtext&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;/mrow&gt;&lt;/msubsup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;🥵 ^{too}_{hard}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0767em;vertical-align:-0.2831em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;🥵&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7936em;&#34;&gt;&lt;span style=&#34;top:-2.4169em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;ha&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;oo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2831em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kity@2.0.4/dist/kity.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;true&#34; type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text&amp;#x2F;css&#34; href=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css&#34;&gt;</content>
        <category term="笔记" />
        <category term="通信" />
        <category term="音频" />
        <category term="傅里叶变换" />
        <category term="极化码" />
        <category term="信息论" />
        <updated>2022-01-06T16:23:14.000Z</updated>
    </entry>
    <entry>
        <id>https://weidows.github.io/post/experience/basic/OpenGL/</id>
        <title>🥵OpenGL-xmake- 蚌埠住了</title>
        <link rel="alternate" href="https://weidows.github.io/post/experience/basic/OpenGL/"/>
        <content type="html">&lt;h1&gt;OpenGL-xmake- 蚌埠住了&lt;/h1&gt;
&lt;!--
 * @?: *********************************************************************
 * @Author: Weidows
 * @LastEditors: Weidows
 * @LastEditTime: 2022-02-23 03:21:58
 * @FilePath: \Blog-private\source\_posts\experience\basic\OpenGL.md
 * @Description:
 * @!: *********************************************************************
--&gt;&lt;blockquote class=&#34;pullquote mindmap mindmap-md&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#opengl-xmake-%E8%9A%8C%E5%9F%A0%E4%BD%8F%E4%BA%86&#34;&gt;OpenGL-xmake- 蚌埠住了&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93&#34;&gt;代码仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8A%A5%E9%94%99&#34;&gt;报错&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%8B%E8%AF%95&#34;&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c&#34;&gt;C&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xmake-%E5%BC%95%E5%85%A5%E5%BA%93&#34;&gt;xmake- 引入库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%8B%E8%AF%95-1&#34;&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81%E5%BA%93&#34;&gt;实例代码库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;学校开了图形学这门课程, 让我们配置下环境&lt;/p&gt;
&lt;p&gt;老师给的是 VS + OpenGL + C/C++ + 复制库文件 的方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;VScode + Python + pyopengl 库&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Vscode + C++ + xmake(需要 VisualStudio) + 各种库&lt;/code&gt; (推荐方法)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网上找了找, 并不是能很顺畅的捅下来 (因为依赖项比较杂)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码仓库&#34;&gt;&lt;a href=&#34;https://github.com/Weidows/C--/tree/master/src/OpenGL&#34;&gt;代码仓库&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;Python-3&#34;&gt;Python&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;先装 vscode 和 Python / anaconda, 这俩没问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 pip (conda 不行) 安装 &lt;code&gt;pyopengl&lt;/code&gt; 库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有的教程装的是 &lt;code&gt;pyglet&lt;/code&gt;, 这个库官方解释是 “pyglet is a cross-platform games and multimedia package.”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虽然 &lt;a href=&#34;http://pyglet.gl&#34;&gt;pyglet.gl&lt;/a&gt; 可以调 OpenGL API, 但是鉴于 Ctrl CV 工作, 还是老老实实用 pyopengl 库吧&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;报错 -2&#34;&gt;报错&lt;/h3&gt;
&lt;p&gt;直接通过 pip 在线安装的话是装的 32 位的库, 在 64 位机子上跑不起来&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;报错 &lt;a href=&#34;https://blog.csdn.net/feilong_csdn/article/details/61421002&#34;&gt;“OpenGL.error.NullFunctionError: Attempt to call an undefined function”解决方案&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;必须去下载适合本机的离线包安装: &lt;a href=&#34;https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比如我是 win_64,py_3.8 ; 需要下载的是: &lt;code&gt;PyOpenGL-3.1.5-cp38-cp38-win_amd64.whl&lt;/code&gt;, 然后安装&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 把之前的版本先卸载, 否则安装也无效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;pip&lt;/span&gt; uninstall pyopengl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;pip&lt;/span&gt; install PyOpenGL-&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;-cp&lt;span class=&#34;number&#34;&gt;38&lt;/span&gt;-cp&lt;span class=&#34;number&#34;&gt;38&lt;/span&gt;-win_amd&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;.whl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&#34;测试 -2&#34;&gt;测试&lt;/h3&gt;
&lt;p&gt;画个静态茶壶, 就是文章封面图&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; OpenGL.GL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; OpenGL.GLU &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; OpenGL.GLUT &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;drawFunc&lt;/span&gt;():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    glClear(GL_COLOR_BUFFER_BIT)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    glutWireTeapot(&lt;span class=&#34;number&#34;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    glFlush()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutInit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutInitWindowSize(&lt;span class=&#34;number&#34;&gt;400&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;400&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 参数为 b 类型而不是 string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutCreateWindow(&lt;span class=&#34;string&#34;&gt;b&amp;quot;Teapot&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutDisplayFunc(drawFunc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;glutMainLoop()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;C&#34;&gt;C&lt;/h2&gt;
&lt;p&gt;如果你喜欢 VScode 调试 C/C++, 而不想用比较复杂的 Visual Studio&lt;/p&gt;
&lt;p&gt;如果你想通过简单的配置就让 VScode 能调试 OpenGL&lt;/p&gt;
&lt;p&gt;恭喜, 马上就好!&lt;/p&gt;
&lt;p&gt;首先, 按照我另一篇文章: &lt;a href=&#34;../../../others/cpp/C_Configuration&#34;&gt;👌 茅塞顿开之 C/C+±VScode-xmake&lt;/a&gt; 配置好 &lt;code&gt;vscode + C/C++&lt;/code&gt; 的开发环境&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;xmake- 引入库&#34;&gt;xmake- 引入库&lt;/h3&gt;
&lt;p&gt;xmake 自带的 xrepo 可以安装 xrepo/vcpkg/conan 的库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;需要注意一下:&lt;/p&gt;
&lt;p&gt;虽然我这里使用 vscode + xmake, 但是安装依赖时仍需要调用 visualstudio, 必须安装&lt;/p&gt;
&lt;p&gt;需要安装的有两个: &lt;code&gt;buildtools + visualstudio community&lt;/code&gt;&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/OuiQ8WnjASBJdtV.png&#34; alt=&#34;20211120115814&#34; /&gt;
&lt;p&gt;buildtools 也就是生成工具只有那一个, 裸装就好, 里面的东西不用装&lt;/p&gt;
&lt;p&gt;visualstudio community 的话什么版本都行,xmake 都支持了, 它里面必须装 &lt;code&gt;C++ 桌面开发&lt;/code&gt;, 不能装成其他的&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/kWgXvhQ9M74V1Ho.png&#34; alt=&#34;20211120115909&#34; /&gt;
&lt;p&gt;语言包记得选中 + 英! 不然识别不到&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/YxtcXgoI3ThPmqn.png&#34; alt=&#34;20211120120254&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;测试 -3&#34;&gt;测试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;xmake.lua&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 引用.lib 形式的静态库会报错, 所以要用 shared 动态链接库版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_requires(&lt;span class=&#34;string&#34;&gt;&amp;quot;freeglut&amp;quot;&lt;/span&gt;,&amp;#123;configs = &amp;#123;shared = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&amp;#125;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 全局添加依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_packages(&lt;span class=&#34;string&#34;&gt;&amp;quot;freeglut&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target(&lt;span class=&#34;string&#34;&gt;&amp;quot;MazeGame&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    set_kind(&lt;span class=&#34;string&#34;&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add_files(&lt;span class=&#34;string&#34;&gt;&amp;quot;test.cpp&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_end()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;test.cpp&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;GL/glut.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Initial&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glMatrixMode(GL_PROJECTION); &lt;span class=&#34;comment&#34;&gt;// 设置投影参数，表示下面进行投影变换。若改 GL_PROJECTION 为 GL_MODEVIEW 则进行视图变换。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glLoadIdentity();            &lt;span class=&#34;comment&#34;&gt;// 通常我们在需要进行投影变换时要把当前矩形设置为单位矩阵，即 glLoadIdentity()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gluOrtho2D(&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200.0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Display&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glClear(GL_COLOR_BUFFER_BIT);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glPushMatrix(); &lt;span class=&#34;comment&#34;&gt;// 操作矩阵堆栈, 调用函数，相当于把矩阵放到堆栈上 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glColor3f(&lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1.0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glTranslated(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glTranslated(&lt;span class=&#34;number&#34;&gt;70&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glRotated(&lt;span class=&#34;number&#34;&gt;-90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glScaled(&lt;span class=&#34;number&#34;&gt;0.25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glTranslated(&lt;span class=&#34;number&#34;&gt;-100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;-100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glBegin(GL_POLYGON);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glEnd();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glPopMatrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glBegin(GL_POLYGON); &lt;span class=&#34;comment&#34;&gt;//opengl 要求指定顶点的位置必须在 glBegin() 后面，同时在 glEnd()后面。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glVertex2f(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glEnd();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glFlush();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; argc, &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutInit(&amp;amp;argc, argv);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); &lt;span class=&#34;comment&#34;&gt;// 使用单缓存模式，如果 GLUT_DOUBLE 则为双缓存模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutInitWindowSize(&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;);                &lt;span class=&#34;comment&#34;&gt;// 设置窗口大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutInitWindowPosition(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);            &lt;span class=&#34;comment&#34;&gt;// 设置窗口位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutCreateWindow(&lt;span class=&#34;string&#34;&gt;&amp;quot;Triangle&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutDisplayFunc(Display);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Initial();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  glutMainLoop();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;实例代码库&#34;&gt;&lt;a href=&#34;https://github.com/Weidows/C--&#34;&gt;实例代码库&lt;/a&gt;&lt;/h3&gt;
&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kity@2.0.4/dist/kity.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;true&#34; type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text&amp;#x2F;css&#34; href=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css&#34;&gt;</content>
        <category term="python" />
        <category term="opengl" />
        <category term="c" />
        <category term="conan" />
        <updated>2021-09-19T14:37:25.000Z</updated>
    </entry>
    <entry>
        <id>https://weidows.github.io/post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
        <title>🌈基础知识</title>
        <link rel="alternate" href="https://weidows.github.io/post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
        <content type="html">&lt;h1&gt;基础知识&lt;/h1&gt;
&lt;!--
 * @?: *********************************************************************
 * @Author: Weidows
 * @LastEditors: Weidows
 * @LastEditTime: 2022-02-23 03:20:33
 * @FilePath: \Blog-private\source\_posts\experience\basic\ 基础知识.md
 * @Description:
 * @!: *********************************************************************
--&gt;&lt;blockquote class=&#34;pullquote mindmap mindmap-md&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86&#34;&gt;基础知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A1%AC%E4%BB%B6&#34;&gt;硬件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8E%9F%E5%8F%8D%E8%A1%A5%E7%A0%81&#34;&gt;原反补码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8D%95%E7%89%87%E6%9C%BA&#34;&gt;单片机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0&#34;&gt;复变函数&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%8D%E6%95%B0&#34;&gt;复数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&#34;&gt;计算机网络&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82&#34;&gt;数据链路层&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AA%92%E4%BD%93%E6%8E%A5%E5%85%A5%E6%8E%A7%E5%88%B6%E5%88%86%E7%B1%BB&#34;&gt;媒体接入控制分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#csmacd&#34;&gt;CSMA/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mac-%E5%B1%82%E5%8D%8F%E8%AE%AE&#34;&gt;MAC 层协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BD%91%E7%BB%9C%E5%B1%82&#34;&gt;网络层&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8D%8F%E8%AE%AE&#34;&gt;路由选择协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE-rip-%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86&#34;&gt;路由信息协议 RIP 的基本工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BC%80%E6%94%BE%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E4%BC%98%E5%85%88-ospf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86&#34;&gt;开放最短路径优先 OSPF 的基本工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%BE%B9%E7%95%8C%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE-bgp&#34;&gt;边界网关协议 BGP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A6%BB%E6%95%A3&#34;&gt;离散&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9B%BE&#34;&gt;图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;已录入 &lt;a href=&#34;../../../others/LearnWay#%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B&#34;&gt;😍Weidows の成长路线.# 理论课程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;硬件 -2&#34;&gt;硬件&lt;/h2&gt;
&lt;h3 id=&#34;原反补码&#34;&gt;原反补码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开局三张图, 故事全靠编 🤣&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325114342.png&#34; alt=&#34;20210325114342&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325114403.png&#34; alt=&#34;20210325114403&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325114419.png&#34; alt=&#34;20210325114419&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为带有符号位的二进制数在计算机内计算时, 原码和反码的运算结果都不是 100% 正确, 而且会有 &lt;code&gt;+0&lt;/code&gt; 和&lt;code&gt;-0&lt;/code&gt;两个零&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补码 100% 正确, 于是我们采用补码, 而且补码只有一个零&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;补码就是为了解决这两个问题的, 没了.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;单片机&#34;&gt;单片机&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标志寄存器内部的八位是分开使用的, 作用不同, 但功能都是作为标志位&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210331121042.png&#34; alt=&#34;20210331121042&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210331122847.png&#34; alt=&#34;20210331122847&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210331122957.png&#34; alt=&#34;20210331122957&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;复变函数&#34;&gt;复变函数&lt;/h2&gt;
&lt;h3 id=&#34;复数&#34;&gt;复数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;运算&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210402161142.png&#34; alt=&#34;20210402161142&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般表示&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325170144.png&#34; alt=&#34;20210325170144&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;几何表示&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325170538.png&#34; alt=&#34;20210325170538&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;幂与根&lt;br&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/20210325181554.png&#34; alt=&#34;20210325181554&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;计算机网络 -2&#34;&gt;计算机网络&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;摘自 &lt;a href=&#34;https://space.bilibili.com/360996402/&#34;&gt;湖科大教书匠 - 计算机网络&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h3&gt;
&lt;h4 id=&#34;媒体接入控制分类&#34;&gt;媒体接入控制分类&lt;/h4&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/xQHF3y59JUehCXm.png&#34; alt=&#34;20210930170530&#34; /&gt;
&lt;h4 id=&#34;CSMA-CD&#34;&gt;CSMA/CD&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.136.la/tech/show-132262.html&#34;&gt;2016.6.20 计算机网络复习要点第三章之 CSMA/CD 协议(示例代码)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;采用随机接入, 当多个主机同时发送帧时会 &lt;code&gt; 发生碰撞 / 冲突&lt;/code&gt;. 无连接不可靠, 尽力交付的服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSMA/CD (载波监听多点接入 / 碰撞检测) 是以太网采用的 &lt;code&gt; 解决冲突 &lt;/code&gt; 的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多路接入 MA: 多个站点接入同一条总线上, 竞争使用总线&lt;/li&gt;
&lt;li&gt;载波监听 CS: 站点发送数据前，先检查总线上是不是已经有数据在传输，如果有就暂缓发送，避免冲突。&lt;/li&gt;
&lt;li&gt;冲突检测: 边发送边对介质上电压信号进行检测，当电压摆动值超过一定门限时就认为发生了冲突。一旦发生冲突就停止发送数据，然后根据协议进行重传。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 CSMA/CD 协议时，一个站不可能同时进行发送和接收（但必须边发送边监听）。因此，使用 CSMA/CD 协议的以太网不可能进行全双工通信而只能进行半双工通信（双向交替通信）；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每一个站在自己发送数据之后的一小段时间内，存在着遭遇碰撞的可能性，这一小段时间是不确定的，它取决于另一个发送数据的站到本站的距离；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最先发送数据帧的 A 站，在发送数据帧后至多经过时间 2r 就可知道所发送的数据帧是否遭受到碰撞；因此，以太网端到端往返时间 2r 称为争用期（碰撞窗口）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经过争用期还没有检测到碰撞，才能肯定后续发送的数据一定不会发送碰撞；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;凡是长度小于 64 字节的帧都是由于冲突而异常中止的无效帧，只要收到了这种无效帧，就应当立即将其丢弃；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采用截断二进制指数退避算法来确定碰撞后重传的时机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;让发生碰撞的站停止发送数据后，不是等待信道变为空闲后就立即发送数据，而是推迟（退避）一个随机的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单位回退时间通常取冲突窗口 (争用期) 的值 2r，即传输最小帧长 512bit 数据用时，叫作时槽。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取 r, 0 ≤ r &amp;lt; 2^k-1, 重传的时延 (退避时间) 就是 r 倍的单位回退时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K 为碰撞次数时。K=Min[重传次数，10]，当重传次数超过 10 时，K 就不在增大而是一直等于 10；当重传达 16 次仍不能成功时，则丢弃该帧，并向高层报告&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/2WyIlfDNPrJ6sQ1.png&#34; alt=&#34;20210930181153&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道利用率&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/hd45lubyon7FDr3.png&#34; alt=&#34;20210930191350&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帧发送 / 接收流程&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/8jYab4yC9VLRG1W.png&#34; alt=&#34;20210930191552&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/PFVHYloxm1hckEM.png&#34; alt=&#34;20210930191636&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;MAC- 层协议&#34;&gt;MAC 层协议&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/t_home/article/details/90711643&#34;&gt;以太网 MAC 层基础知识学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;小林 Coding - 图解网络&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MAC (media access control) / (message authentication code)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC 地址相同的设备只要不是同属一个数据链路就不会出现问题。同一网段下两设备都不能正常联网.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I3E 注册管理结构 RA（Registration Authority）是局域网全球地址的法定管理机构[W-IEEERA]，负责分配前三个字节；前三个字节又称组织唯一标识符 OUI（Organizationally Unique Identifier），又称公司标识符（Company ID）[RFC 7042]。后三个字节由厂家自行指派称为扩展标识符（Extended Identifier）。总的一起叫做 EUI-48 扩展的唯一标识符（Extended Unique Identifier）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以太网 V2 的 MAC 帧格式(MAC 格式标准有两个，一个是 DIX Ethernet V2 标准，一个是 IEEE 的 802.3 标准)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IEEE 802 标准中规定了一种 48 位的全球地址，此地址固化在适配器的 ROM 中（所以称为物理地址）。无线 LAN、蓝牙、以太网、FDDI、ATM 等设备都使用相同规格的 MAC 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAC 地址字段&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/C1TXwPMj9zHQ2aF.png&#34; alt=&#34;20210930194939&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/JxoYR9LODWjGnbp.png&#34; alt=&#34;20210930202539&#34; /&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络包至此 (数据链路层) 的图解&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/eVHymoZWgErR2Av.png&#34; alt=&#34;20210930204450&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;网络层&#34;&gt;网络层&lt;/h3&gt;
&lt;h4 id=&#34;路由选择协议&#34;&gt;路由选择协议&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;动 / 静态路由选择&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/HkKA2PnsEm4tNL3.png&#34; alt=&#34;20211022084950&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因特网 &lt;code&gt; 采用动态路由选择&lt;/code&gt;, 分层次自治&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/9IZUoa8HqYElz5F.png&#34; alt=&#34;20211022085337&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/hPpgxf58tyMq3DN.png&#34; alt=&#34;20211022085557&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器基本结构&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/zPGbwVF3qlKjXC2.png&#34; alt=&#34;20211022090722&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;路由信息协议 -RIP- 的基本工作原理&#34;&gt;路由信息协议 RIP 的基本工作原理&lt;/h4&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/jdVpGbKIcXsq6DE.png&#34; alt=&#34;20211022100415&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RIP 会选择距离向量短的路由, 而不管带宽 (距离相同的话使用负载均衡)&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/R5AifYzypPelHbv.png&#34; alt=&#34;20211022100624&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/9WzcwDOFVLPhAfR.png&#34; alt=&#34;20211022100656&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RIP 交换要点&lt;/p&gt;
&lt;p&gt;只和相邻路由器交换信息&lt;/p&gt;
&lt;p&gt;交换自己的路由表&lt;/p&gt;
&lt;p&gt;周期性交换 (比如 30s)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;举例: RIP 路由条目更新规则&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/LvTHYGxhgrsJIAB.png&#34; alt=&#34;20211022115640&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;坏消息传得慢 / 路由环路 / 距离无穷计数问题&lt;/p&gt;
&lt;p&gt;新更新的路由表被老版本覆盖, 有几个措施可以 &lt;code&gt; 减少出现概率 &lt;/code&gt; 或减小危害:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;限制最大路径为 15&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由表发生变化时立即发送更新报文 (触发更新)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记录特定接口的路由信息, 而不反向传递 (水平分割)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;开放最短路径优先 -OSPF- 的基本工作原理&#34;&gt;开放最短路径优先 OSPF 的基本工作原理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本工作原理&lt;/p&gt;
&lt;p&gt;基于链路状态, 使用最短路径优先, 保证不会产生路由环路&lt;/p&gt;
&lt;p&gt;不限制网络规模, 更新效率高, 收敛速度快&lt;/p&gt;
&lt;p&gt;链路状态是指与哪些路由器相邻以及相应连路的代价 (费用 / 距离 / 时延 / 带宽等等)&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/HYzejtkFZDTUKrN.png&#34; alt=&#34;20211022165456&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链路状态更新 &amp;amp;&amp;amp; 最短路径 SPF 计算&lt;/p&gt;
&lt;p&gt;每个路由器会产生链路状态通告(LSA), 包含: 直连网络 / 邻居路由器得到链路状态&lt;/p&gt;
&lt;p&gt;LSA 封装在链路状态更新分组 (LSU) 中, 采用洪泛法发送&lt;/p&gt;
&lt;p&gt;每个路由器通过链路状态数据库 (LSDB) 来接收 LSU 维护链路状态, 各路由器 LSDB 最终一致&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/6K5CxSOMV8G1XNj.png&#34; alt=&#34;20211022170324&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OSPF 工作过程 &amp;amp;&amp;amp; 五种数据分组&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/bvPgLwtE95OeJCG.png&#34; alt=&#34;20211022170725&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;邻居关系建立 &amp;amp;&amp;amp; 划分区域&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/9KXGIOVhlwcpkWL.png&#34; alt=&#34;20211022174329&#34; /&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/F4gZe2kz83mxNVP.png&#34; alt=&#34;20211022174754&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;边界网关协议 -BGP&#34;&gt;边界网关协议 BGP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;路由选择&lt;/p&gt;
&lt;p&gt;不同自治系统内度量路由的代价可能是不同的, 所以无法通过代价度量来寻找最佳路由&lt;/p&gt;
&lt;p&gt;自治系统间路由选择还需要考虑政治, 经济, 安全等因素&lt;/p&gt;
&lt;p&gt;BGP 力求找一条不兜圈子的较好的路由线路, 而不是找最佳路由&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/Ea8Ug2YTDhMyHk5.png&#34; alt=&#34;20211022232434&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;举例: BGP 路径向量应用&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/PVhkctRs47nZ9Yp.png&#34; alt=&#34;20211022232856&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BGP-4 的四种报文&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/rn8ziTL3eb69RaU.png&#34; alt=&#34;20211022233905&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接封装 xx 报文的协议&lt;/p&gt;
&lt;p&gt;RIP -&amp;gt; UDP&lt;/p&gt;
&lt;p&gt;OSPF -&amp;gt; IP&lt;/p&gt;
&lt;p&gt;BGP -&amp;gt; TCP&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;离散&#34;&gt;离散&lt;/h2&gt;
&lt;h3 id=&#34;图&#34;&gt;图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有向图 - 邻接矩阵存储&lt;/p&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/NVhbGgOzdX1ts5k.png&#34; alt=&#34;20211028200201&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kity@2.0.4/dist/kity.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;true&#34; type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text&amp;#x2F;css&#34; href=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css&#34;&gt;</content>
        <category term="备忘录" />
        <category term="笔记" />
        <category term="计算机系统" />
        <category term="理论知识" />
        <updated>2021-03-25T03:32:45.000Z</updated>
    </entry>
</feed>
