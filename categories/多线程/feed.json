{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"多线程\" category",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "url": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "title": "🌭回顾一下多线程-贰",
            "date_published": "2021-02-20T17:06:22.000Z",
            "content_html": "<h1>回顾一下多线程-贰</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:41:35\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\多线程\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%9B%9E%E9%A1%BE%E4%B8%80%E4%B8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E8%B4%B0\">回顾一下多线程-贰</a>\n<ul>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5-synchronized\">线程同步-synchronized</a>\n<ul>\n<li><a href=\"#%E4%B9%B0%E7%A5%A8\">买票</a></li>\n<li><a href=\"#%E9%93%B6%E8%A1%8C%E5%8F%96%E6%AC%BE\">银行取款</a></li>\n<li><a href=\"#%E5%85%B3%E4%BA%8E%E8%AF%95%E9%94%99%E6%8A%80%E5%B7%A7\">关于试错技巧</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9B%86%E5%90%88%E4%B8%8E%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8\">集合与线程安全</a>\n<ul>\n<li><a href=\"#%E9%9D%9E%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5\">非线程同步</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5\">线程同步</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%9B%86%E5%90%88\">线程安全集合</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%AD%BB%E9%94%81\">死锁</a>\n<ul>\n<li><a href=\"#%E4%BA%A7%E7%94%9F%E6%9D%A1%E4%BB%B6\">产生条件</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">解决方案</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81-reentrantlock\">可重入锁-ReentrantLock</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6\">多线程与循环控制</a></li>\n<li><a href=\"#%E5%BB%B6%E8%BF%9F%E5%AF%B9%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BD%B1%E5%93%8D\">延迟对多线程的影响</a>\n<ul>\n<li><a href=\"#%E4%B8%80\">一</a></li>\n<li><a href=\"#%E4%BA%8C\">二</a></li>\n<li><a href=\"#%E4%B8%89\">三</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1-wait-notify\">线程通信-wait-notify</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E6%B1%A0\">线程池</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程同步-synchronized\">线程同步-synchronized</h2>\n<ul>\n<li>\n<p>多个线程操作同一资源时会有问题出现,用 <code>synchronized</code> 同步.</p>\n<p>线程同步的形成条件: <code>队列+锁</code></p>\n<p>实现形式有 同步方法 和 同步代码块</p>\n<hr>\n</li>\n</ul>\n<ol>\n<li>\n<p>同步方法, 锁的是方法所属对象 this</p>\n<p>如下买票例子中 buy 方法锁的是 <code>Ticket ticket</code> 这个对象</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"type\">void</span> <span class=\"title\">buy</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>同步代码块, 锁 obj</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">synchronized</span> (<span class=\"variable\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 操作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"买票\">买票</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Ticket</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; <span class=\"comment\">//票数</span></span><br><span class=\"line\">  <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>; <span class=\"comment\">//外部停止方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag) &#123;</span><br><span class=\"line\">      buy();</span><br><span class=\"line\">      <span class=\"comment\">//模拟延时</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">buy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断是否有票</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ticketNums &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;得到倒数第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Ticket</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Ticket</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;小明&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;老师&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;黄牛&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<p>不加锁: 有错误</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第10票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第9票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第8票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第7票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第6票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第5票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第4票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第2票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第1票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第1票</span></span><br></pre></td></tr></table></figure>\n<p>加锁: 无误</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第10票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第9票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第8票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第7票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第6票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第5票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第4票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第2票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第1票</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"银行取款\">银行取款</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Bank</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">100</span>), <span class=\"string\">&quot;我的账户&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">DrawingChannel</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DrawingChannel</span>(account, <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">50</span>), <span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">DrawingChannel</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DrawingChannel</span>(account, <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">100</span>), <span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    a.start();</span><br><span class=\"line\">    b.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//账户</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Account</span> &#123;</span><br><span class=\"line\">  BigDecimal balance;<span class=\"comment\">//余额</span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> String name; <span class=\"comment\">//卡名</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Account</span><span class=\"params\">(BigDecimal balance, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.balance = balance;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 银行：模拟取款</span></span><br><span class=\"line\"><span class=\"comment\"> * * 这里之所以没用实现Runnable接口的方式是为了调用Thread类中一些方法</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DrawingChannel</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> Account account; <span class=\"comment\">//账户</span></span><br><span class=\"line\">  BigDecimal drawingMoney; <span class=\"comment\">//取了多少钱</span></span><br><span class=\"line\">  BigDecimal nowMoney; <span class=\"comment\">//现在手里有多少钱</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">DrawingChannel</span><span class=\"params\">(Account account, BigDecimal drawingMoney, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(name);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.account = account;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.drawingMoney = drawingMoney;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.nowMoney = <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (account) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//判断有没有钱</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (account.balance.compareTo(drawingMoney) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(account.name + <span class=\"string\">&quot;钱不够&quot;</span> + drawingMoney + <span class=\"string\">&quot;,&quot;</span> + <span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;无法取走&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 放大错误</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      draw();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//卡内余额 = 余额 - 取的钱</span></span><br><span class=\"line\">    account.balance = account.balance.subtract(drawingMoney);</span><br><span class=\"line\">    System.out.println(<span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;取走&quot;</span> + drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//手里的钱</span></span><br><span class=\"line\">    nowMoney = nowMoney.add(drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(account.name + <span class=\"string\">&quot;余额为：&quot;</span> + account.balance);</span><br><span class=\"line\">    System.out.println(<span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;手里的钱：&quot;</span> + nowMoney);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>预期结果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>取走<span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户钱不够<span class=\"number\">100</span>,<span class=\"selector-tag\">B</span>无法取走</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"关于试错技巧\">关于试错技巧</h3>\n<ul>\n<li>\n<p>熟练使用.sleep()试错</p>\n<ul>\n<li>\n<p>试错前</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">我的账户钱不够<span class=\"number\">100</span>,<span class=\"selector-tag\">B</span>无法取走</span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>试错后</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">B</span> 取走 <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 取走 <span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">B</span> 手里的钱：<span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"集合与线程安全\">集合与线程安全</h2>\n<p>多个线程同时操作集合对象时可能会存在覆写(线程不安全)</p>\n<h3 id=\"非线程同步\">非线程同步</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestList</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时,为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：9992</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"线程同步\">线程同步</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestList</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (list) &#123;</span><br><span class=\"line\">          list.add(Thread.currentThread().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时,为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"线程安全集合\">线程安全集合</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JUC</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"死锁\">死锁</h2>\n<p>两线程在各自拥有一个对象的锁时都等待对方线程释放对象的锁 ; 也有可能很多线程产生环形/网状死锁.</p>\n<ul>\n<li>\n<p>如下例子就会产生死锁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//死锁：多个线程互相抱着对方需要的资源</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DeadLock</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Makeup</span> <span class=\"variable\">m1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Makeup</span>(<span class=\"number\">0</span>, <span class=\"string\">&quot;小黑&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Makeup</span> <span class=\"variable\">m2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Makeup</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;小白&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    m1.start();</span><br><span class=\"line\">    m2.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//口红</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Lipstick</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//镜子</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mirror</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//化妆</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Makeup</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//需要的资源只有一份，用static来保证只有一份</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Lipstick</span> <span class=\"variable\">lipstick</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Lipstick</span>();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Mirror</span> <span class=\"variable\">mirror</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Mirror</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> choice; <span class=\"comment\">//选择</span></span><br><span class=\"line\">  String name; <span class=\"comment\">//使用化妆品的人</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Makeup</span><span class=\"params\">(<span class=\"type\">int</span> choice, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.choice = choice;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//化妆</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      makeup();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//化妆，互相持有对方的锁，就是需要拿到对方的资源</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">//获得口红的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">//一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">//获得镜子的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">//两秒钟后想获得口红的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"产生条件\">产生条件</h3>\n<ul>\n<li>\n<p>四个必要条件:</p>\n<ol>\n<li>互斥条件：一个资源每次只能被一个进程使用。</li>\n<li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li>\n<li>不剥夺条件：进程已获得的资源，在未使用完之前不能强行剥夺。</li>\n<li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"解决方案\">解决方案</h3>\n<ul>\n<li>\n<p>使用完同步对象后立即释放</p>\n<ul>\n<li>比如上面的例子中使用完<code>口红</code>或者<code>镜子</code>后未释放,再去获取另一个对象的锁,就会产生死锁了</li>\n<li>修改: 把 makeup 改为如下</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 两秒钟后想获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"可重入锁-ReentrantLock\">可重入锁-ReentrantLock</h2>\n<ul>\n<li>\n<p>ReentrantLock (也叫 RT-Lock) 类实现了 java.util.concurrent.locks.Lock 接口</p>\n<p>与 synchronized 区别:</p>\n<ol>\n<li>\n<p>ReentrantLock 是显式加解锁,它只能锁代码块</p>\n</li>\n<li>\n<p>性能比 synchronized 好</p>\n</li>\n</ol>\n</li>\n<li>\n<p>使用优先度: ReentrantLock &gt; 同步代码块(已经进入了方法体，分配了相应资源) &gt; 同步方法(在方法体之外)</p>\n</li>\n<li>\n<p>注意点: 加解锁最好要在 try-finally 里</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  lock.lock();</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (InterruptedException ignored) &#123;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    lock.unlock();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多线程与循环控制\">多线程与循环控制</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>上面代码 while 循环会存在判断失误</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">0</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第-<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>ticketNums 在判断之后被多次修改</p>\n<p>上面 10~1 次都是 c 线程执行的,它执行后轮到 b 和 a</p>\n<p>但是 b 与 a 线程实际上是在<code>ticketNums=10</code>时进入的循环,所以会导致<code>-1</code>出现</p>\n<p>所以建议遇到多线程循环控制时,直接<code>while(true)</code>,然后在内部用<code>if</code></p>\n<p>(反过来想: 是因为 lock 不能在循环之外加)</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"延迟对多线程的影响\">延迟对多线程的影响</h2>\n<blockquote>\n<p>下面三个例子数据都没错,关键看并发数量和执行时间</p>\n</blockquote>\n<h3 id=\"一\">一</h3>\n<ul>\n<li>\n<p>瞬间执行完,资源被单一线程全部抢占 (并非不合理,只不过是处理器没分配到 B,C)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"comment\">// try &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   Thread.sleep(500);</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125; catch (InterruptedException e) &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   e.printStackTrace();</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"二\">二</h3>\n<ul>\n<li>\n<p>给他加个延迟试试: 三线程并行,资源分配合理</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"三\">三</h3>\n<ul>\n<li>\n<p>再试试延迟之后解开同步锁: 单线执行,资源分配不平衡</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程通信-wait-notify\">线程通信-wait-notify</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Clerk</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> productNumber; <span class=\"comment\">// 售货员手中的商品数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProducterAndCustomer</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Clerk</span> <span class=\"variable\">clerk</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Clerk</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; <span class=\"comment\">//一直生产</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (clerk) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clerk.productNumber == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;产品为0, 开始生产&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (clerk.productNumber &lt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;库存: &quot;</span> + clerk.productNumber++);</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              clerk.notifyAll();</span><br><span class=\"line\">              <span class=\"comment\">//商品数不为0时让clerk等待</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// clerk.wait();</span></span><br><span class=\"line\">              clerk.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;生产者&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; <span class=\"comment\">//一直消费</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (clerk) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clerk.productNumber == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;产品为5,开始消费&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (clerk.productNumber &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;库存: &quot;</span> + clerk.productNumber--);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                  Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                  e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              clerk.notifyAll();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// clerk.wait();</span></span><br><span class=\"line\">              clerk.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;消费者&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">产品为0, 开始生产</span><br><span class=\"line\"><span class=\"section\">库存: 0</span></span><br><span class=\"line\"><span class=\"section\">库存: 1</span></span><br><span class=\"line\"><span class=\"section\">库存: 2</span></span><br><span class=\"line\"><span class=\"section\">库存: 3</span></span><br><span class=\"line\"><span class=\"section\">库存: 4</span></span><br><span class=\"line\">产品为5,开始消费</span><br><span class=\"line\"><span class=\"section\">库存: 5</span></span><br><span class=\"line\"><span class=\"section\">库存: 4</span></span><br><span class=\"line\"><span class=\"section\">库存: 3</span></span><br><span class=\"line\"><span class=\"section\">库存: 2</span></span><br><span class=\"line\"><span class=\"section\">库存: 1</span></span><br><span class=\"line\">产品为0, 开始生产</span><br><span class=\"line\"><span class=\"section\">库存: 0</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程池\">线程池</h2>\n<ul>\n<li>\n<p>线程池的出现是为了方便大量的线程创建,回收和管理</p>\n</li>\n<li>\n<p>需要了解 <code>ExecutorService</code> 线程池接口;以及 <code>Executors</code> 线程池工具类.</p>\n<ul>\n<li>\n<p>corePoolSize: 核心池的大小</p>\n</li>\n<li>\n<p>maximumPoolSize:最大线程数</p>\n</li>\n<li>\n<p>keepAliveTime: 线程没有任务时最多保持多长时间后会终止</p>\n</li>\n<li>\n<p>void execute(Runnable command) :执行任务/命令,没有返回值，一般用来执 Runnable</p>\n</li>\n<li>\n<p><T> Future<T> submit(Callable<T> task) :执行任务,有返回值，一般用来执行 Callable</p>\n</li>\n</ul>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestThreadPool</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.创建服务，创建线程池</span></span><br><span class=\"line\">    <span class=\"type\">ExecutorService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> Executors.newFixedThreadPool(<span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">runnable</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; runnable&quot;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Callable&lt;String&gt; callable = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> Thread.currentThread().getName() + <span class=\"string\">&quot; callable&quot;</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 执行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">      service.execute(runnable);</span><br><span class=\"line\">      System.out.println(service.submit(callable).get());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.关闭连接</span></span><br><span class=\"line\">    service.shutdown();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-1 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-2 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-3 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-4 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-5 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-6 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-7 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-8 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-9 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-10 callable</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "多线程"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/",
            "url": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/",
            "title": "🌭回顾一下多线程-壹",
            "date_published": "2021-02-08T10:59:13.000Z",
            "content_html": "<h1>回顾一下多线程-壹</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @Date: 2021-02-08 18:59:13\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:14:39\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\多线程\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%9B%9E%E9%A1%BE%E4%B8%80%E4%B8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E5%A3%B9\">回顾一下多线程-壹</a>\n<ul>\n<li><a href=\"#maven-%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5-jar-%E5%8C%85\">Maven 自动导入 jar 包</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0-%E5%B9%B6%E8%A1%8C%E4%B8%8B%E8%BD%BD\">多线程实现-并行下载</a>\n<ul>\n<li><a href=\"#extends-thread\">extends-Thread</a></li>\n<li><a href=\"#implements-runnable-%E6%9C%80%E5%B8%B8%E7%94%A8\">implements-Runnable-最常用</a></li>\n<li><a href=\"#implements-callable\">implements-Callable</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86\">静态代理</a></li>\n<li><a href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81\">生命周期-线程状态</a></li>\n<li><a href=\"#thread-%E6%93%8D%E4%BD%9C\">Thread-操作</a>\n<ul>\n<li><a href=\"#%E5%A6%82%E4%BD%95%E5%81%9C%E6%AD%A2%E7%BA%BF%E7%A8%8B\">如何停止线程</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E4%BC%91%E7%9C%A0-sleep\">线程休眠-sleep</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E8%AE%A9%E6%AD%A5-yield\">线程让步-yield</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E6%8F%92%E9%98%9F-join\">线程插队-Join</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7-priority\">线程优先级-Priority</a></li>\n<li><a href=\"#%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B-daemon\">守护线程-daemon</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>main()为主线程，系统的入口</p>\n</li>\n<li>\n<p>一个进程中，如果开辟了多个线程，线程的运行由调度器安排，调度器是与操作系统紧密相关的，先后顺序是不能认为干预的(无法预测线程运行顺序)</p>\n</li>\n<li>\n<p>程序运行时,默认会有多个线程,比如 main 和 gc(垃圾回收器) 等等</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Maven-自动导入-jar-包\">Maven 自动导入 jar 包</h2>\n<ul>\n<li>\n<p>比如我们要用 Maven 导入 <a href=\"https://mvnrepository.com/artifact/commons-io/commons-io\">Apache 的 commons-io</a></p>\n<p>然后选择一个版本点进去</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVP0Qc.png\" alt=\"20210211010341\" />\n<p>复制框里的内容,找到 Java 项目<code>pom.xml</code>文件,粘贴到如下地方</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4ttE.png\" alt=\"20210211010614\" />\n<p>然后右键<code>pom.xml</code>-&gt;Maven-&gt;重新加载项目.</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSRz6.png\" alt=\"20210211010920\" />\n<p>在 VScode 内的话也有这种操作:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVS7C6.png\" alt=\"20210211011109\" />\n<p>当然关闭然后重新打开 IDE 也是可以的,Maven 会自动更新,更新后如下,包就导进来了:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVAD6P.png\" alt=\"20210211011240\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多线程实现-并行下载\">多线程实现-并行下载</h2>\n<h3 id=\"extends-Thread\">extends-Thread</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Downloader1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String fileName;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Downloader1</span><span class=\"params\">(String url, String fileName)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.url = url;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.fileName = fileName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      FileUtils.copyURLToFile(<span class=\"keyword\">new</span> <span class=\"title class_\">URL</span>(url), <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(fileName));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Downloader1 is running&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Downloader1</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>, <span class=\"string\">&quot;divider.png&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"implements-Runnable-最常用\">implements-Runnable-最常用</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.thread.downloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Downloader</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String fileName;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Downloader</span><span class=\"params\">(String url, String fileName)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.url = url;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.fileName = fileName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      FileUtils.copyURLToFile(<span class=\"keyword\">new</span> <span class=\"title class_\">URL</span>(url), <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(fileName));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Download finished.&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Downloader</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;./1.png&quot;</span>)).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Downloader</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;./2.png&quot;</span>)).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"implements-Callable\">implements-Callable</h3>\n<p>Callable 与 Runnable 区别为它可以带有返回值类型,可以抛出异常</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.thread.downloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Callable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Future;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Downloader2</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Callable</span>&lt;Object&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String fileName;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Object <span class=\"title function_\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> MalformedURLException, IOException &#123;</span><br><span class=\"line\">    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> <span class=\"title class_\">URL</span>(url), <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(fileName));</span><br><span class=\"line\">    System.out.println(fileName + <span class=\"string\">&quot;下载完成&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Downloader2</span><span class=\"params\">(String url, String fileName)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.url = url;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.fileName = fileName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建线程池</span></span><br><span class=\"line\">    <span class=\"type\">ExecutorService</span> <span class=\"variable\">ser</span> <span class=\"operator\">=</span> Executors.newFixedThreadPool(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 提交执行</span></span><br><span class=\"line\">    Future&lt;Object&gt; submit1 = ser</span><br><span class=\"line\">        .submit(<span class=\"keyword\">new</span> <span class=\"title class_\">Downloader2</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;./1.png&quot;</span>));</span><br><span class=\"line\">    Future&lt;Object&gt; submit2 = ser</span><br><span class=\"line\">        .submit(<span class=\"keyword\">new</span> <span class=\"title class_\">Downloader2</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;./2.png&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取结果</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">Object</span> <span class=\"variable\">result1</span> <span class=\"operator\">=</span> submit1.get();</span><br><span class=\"line\">      <span class=\"type\">Object</span> <span class=\"variable\">result2</span> <span class=\"operator\">=</span> submit2.get();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭服务</span></span><br><span class=\"line\">    ser.shutdown();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"静态代理\">静态代理</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.proxy.static_proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StaticProxy</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">MarryProxy</span> <span class=\"variable\">proxy</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MarryProxy</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Me</span>(<span class=\"string\">&quot;Weidows&quot;</span>));</span><br><span class=\"line\">    proxy.Marry();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 代理和被代理类都实现Marry接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Marry</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">Marry</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 被代理者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Me</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Marry</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Marry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(name + <span class=\"string\">&quot;结婚了&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Me</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 代理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MarryProxy</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Marry</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Me target;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Marry</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    before();</span><br><span class=\"line\">    target.Marry();</span><br><span class=\"line\">    after();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">after</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(target.name + <span class=\"string\">&quot;结婚后&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">before</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(target.name + <span class=\"string\">&quot;结婚前&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">MarryProxy</span><span class=\"params\">(Me target)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.target = target;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"生命周期-线程状态\">生命周期-线程状态</h2>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmsBA.png\" alt=\"20210219173514\" />\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmJzz.png\" alt=\"20210221232406\" />\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestState</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">thread</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;///&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//观察状态</span></span><br><span class=\"line\">    Thread.<span class=\"type\">State</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> thread.getState();</span><br><span class=\"line\">    System.out.println(state); <span class=\"comment\">//NEW</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//观察后启动</span></span><br><span class=\"line\">    thread.start(); <span class=\"comment\">//启动线程</span></span><br><span class=\"line\">    state = thread.getState();</span><br><span class=\"line\">    System.out.println(); <span class=\"comment\">//Run</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (state != Thread.State.TERMINATED) &#123; <span class=\"comment\">//只要线程不停止，就一直输出状态</span></span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">      state = thread.getState(); <span class=\"comment\">//更新线程状态</span></span><br><span class=\"line\">      System.out.println(state); <span class=\"comment\">//输出状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//thread.start();   报错，因为已经死亡的线程不能再启动</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Thread-操作\">Thread-操作</h2>\n<h3 id=\"如何停止线程\">如何停止线程</h3>\n<ol>\n<li>利用循环计数，不建议死循环</li>\n<li>使用标志位——&gt;设置一个标志位</li>\n<li><code>不要用</code> stop 或者 destroy 等 JDK-deprecated 的方法</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestStop</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//1.设置一个标志位</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; <span class=\"comment\">// 运行次数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Thread.run()运行次数: &quot;</span> + i++);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//2.设置一个公开的方法停止线程，转换标志位</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">stop</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestStop</span> <span class=\"variable\">testStop</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestStop</span>();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testStop).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;main: &quot;</span> + i);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">        testStop.stop();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testStop线程停止了,main线程还在运行&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"线程休眠-sleep\">线程休眠-sleep</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestSleep</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 十秒倒计时</span></span><br><span class=\"line\">      tenSecondsDown();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 每秒输出系统当前时间</span></span><br><span class=\"line\">      countTime();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">tenSecondsDown</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      System.out.println(num--);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">countTime</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Date</span> <span class=\"variable\">startTime</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(System.currentTimeMillis()); <span class=\"comment\">//获取系统当前时间</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class=\"line\">        startTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(System.currentTimeMillis()); <span class=\"comment\">//更新当前时间</span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>测试数据时可以通过延时来放大线程问题的发生性.</li>\n</ul>\n<hr>\n<h3 id=\"线程让步-yield\">线程让步-yield</h3>\n<ul>\n<li>令当前线程<code>暂停但并不阻塞</code>,有可能让步并不成功.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestYield</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// MyYield myYield = new MyYield();</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * 匿名内部类的方式</span></span><br><span class=\"line\">    <span class=\"comment\">// Runnable myYield = new Runnable() &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   @Override</span></span><br><span class=\"line\">    <span class=\"comment\">//   public void run() &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot;线程开始执行&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">//     Thread.yield(); //礼让</span></span><br><span class=\"line\">    <span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot;线程停止执行&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * Lambda表达式方式</span></span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">myYield</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;线程开始执行&quot;</span>);</span><br><span class=\"line\">      Thread.<span class=\"keyword\">yield</span>(); <span class=\"comment\">//礼让</span></span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;线程停止执行&quot;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(myYield, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(myYield, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// * 新建类的方式实现接口</span></span><br><span class=\"line\"><span class=\"comment\">// class MyYield implements Runnable &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   @Override</span></span><br><span class=\"line\"><span class=\"comment\">//   public void run() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot;线程开始执行&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//     Thread.yield(); //礼让</span></span><br><span class=\"line\"><span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot;线程停止执行&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<ul>\n<li>预期结果,让步成功</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>线程开始执行</span><br><span class=\"line\"><span class=\"selector-tag\">b</span>线程开始执行</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>线程停止执行</span><br><span class=\"line\"><span class=\"selector-tag\">b</span>线程停止执行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让步未成功(但也并不能认为是失败,确确实实让了一下)</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>线程开始执行</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>线程停止执行</span><br><span class=\"line\"><span class=\"selector-tag\">b</span>线程开始执行</span><br><span class=\"line\"><span class=\"selector-tag\">b</span>线程停止执行</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"线程插队-Join\">线程插队-Join</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestJoin</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">testJoin</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;vipThread&quot;</span> + i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">vipThread</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testJoin);</span><br><span class=\"line\">    vipThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//主线程</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i == <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        vipThread.join(); <span class=\"comment\">//插队</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;main&quot;</span> + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果<figure class=\"highlight gcode\"><table><tr><td class=\"code\"><pre><span class=\"line\">mai<span class=\"symbol\">n0</span></span><br><span class=\"line\">vipThread<span class=\"number\">0</span></span><br><span class=\"line\">mai<span class=\"symbol\">n1</span></span><br><span class=\"line\">vipThread<span class=\"number\">1</span></span><br><span class=\"line\">vipThread<span class=\"number\">2</span></span><br><span class=\"line\">mai<span class=\"symbol\">n2</span></span><br><span class=\"line\">mai<span class=\"symbol\">n3</span></span><br><span class=\"line\">vipThread<span class=\"number\">3</span></span><br><span class=\"line\">mai<span class=\"symbol\">n4</span></span><br><span class=\"line\">vipThread<span class=\"number\">4</span></span><br><span class=\"line\">mai<span class=\"symbol\">n5</span></span><br><span class=\"line\">vipThread<span class=\"number\">5</span></span><br><span class=\"line\">mai<span class=\"symbol\">n6</span></span><br><span class=\"line\">vipThread<span class=\"number\">6</span></span><br><span class=\"line\">mai<span class=\"symbol\">n7</span></span><br><span class=\"line\">vipThread<span class=\"number\">7</span></span><br><span class=\"line\">mai<span class=\"symbol\">n8</span></span><br><span class=\"line\">vipThread<span class=\"number\">8</span></span><br><span class=\"line\">mai<span class=\"symbol\">n9</span></span><br><span class=\"line\">vipThread<span class=\"number\">9</span></span><br><span class=\"line\">mai<span class=\"symbol\">n10</span></span><br><span class=\"line\">vipThread<span class=\"number\">10</span></span><br><span class=\"line\">mai<span class=\"symbol\">n11</span></span><br><span class=\"line\">vipThread<span class=\"number\">11</span></span><br><span class=\"line\">mai<span class=\"symbol\">n12</span></span><br><span class=\"line\">vipThread<span class=\"number\">12</span></span><br><span class=\"line\">mai<span class=\"symbol\">n13</span></span><br><span class=\"line\">vipThread<span class=\"number\">13</span></span><br><span class=\"line\">mai<span class=\"symbol\">n14</span></span><br><span class=\"line\">vipThread<span class=\"number\">14</span></span><br><span class=\"line\">mai<span class=\"symbol\">n15</span></span><br><span class=\"line\">vipThread<span class=\"number\">15</span></span><br><span class=\"line\">mai<span class=\"symbol\">n16</span></span><br><span class=\"line\">vipThread<span class=\"number\">16</span></span><br><span class=\"line\">mai<span class=\"symbol\">n17</span></span><br><span class=\"line\">vipThread<span class=\"number\">17</span></span><br><span class=\"line\">mai<span class=\"symbol\">n18</span></span><br><span class=\"line\">vipThread<span class=\"number\">18</span></span><br><span class=\"line\">mai<span class=\"symbol\">n19</span></span><br><span class=\"line\">mai<span class=\"symbol\">n20</span></span><br><span class=\"line\">vipThread<span class=\"number\">19</span></span><br><span class=\"line\">mai<span class=\"symbol\">n21</span></span><br><span class=\"line\">vipThread<span class=\"number\">20</span></span><br><span class=\"line\">vipThread<span class=\"number\">21</span></span><br><span class=\"line\">mai<span class=\"symbol\">n22</span></span><br><span class=\"line\">vipThread<span class=\"number\">22</span></span><br><span class=\"line\">mai<span class=\"symbol\">n23</span></span><br><span class=\"line\">vipThread<span class=\"number\">23</span></span><br><span class=\"line\">mai<span class=\"symbol\">n24</span></span><br><span class=\"line\">mai<span class=\"symbol\">n25</span></span><br><span class=\"line\">vipThread<span class=\"number\">24</span></span><br><span class=\"line\">mai<span class=\"symbol\">n26</span></span><br><span class=\"line\">mai<span class=\"symbol\">n27</span></span><br><span class=\"line\">vipThread<span class=\"number\">25</span></span><br><span class=\"line\">vipThread<span class=\"number\">26</span></span><br><span class=\"line\">mai<span class=\"symbol\">n28</span></span><br><span class=\"line\">mai<span class=\"symbol\">n29</span></span><br><span class=\"line\">vipThread<span class=\"number\">27</span></span><br><span class=\"line\">mai<span class=\"symbol\">n30</span></span><br><span class=\"line\">vipThread<span class=\"number\">28</span></span><br><span class=\"line\">mai<span class=\"symbol\">n31</span></span><br><span class=\"line\">mai<span class=\"symbol\">n32</span></span><br><span class=\"line\">vipThread<span class=\"number\">29</span></span><br><span class=\"line\">vipThread<span class=\"number\">30</span></span><br><span class=\"line\">mai<span class=\"symbol\">n33</span></span><br><span class=\"line\">vipThread<span class=\"number\">31</span></span><br><span class=\"line\">vipThread<span class=\"number\">32</span></span><br><span class=\"line\">vipThread<span class=\"number\">33</span></span><br><span class=\"line\">mai<span class=\"symbol\">n34</span></span><br><span class=\"line\">vipThread<span class=\"number\">34</span></span><br><span class=\"line\">mai<span class=\"symbol\">n35</span></span><br><span class=\"line\">mai<span class=\"symbol\">n36</span></span><br><span class=\"line\">vipThread<span class=\"number\">35</span></span><br><span class=\"line\">vipThread<span class=\"number\">36</span></span><br><span class=\"line\">mai<span class=\"symbol\">n37</span></span><br><span class=\"line\">vipThread<span class=\"number\">37</span></span><br><span class=\"line\">mai<span class=\"symbol\">n38</span></span><br><span class=\"line\">vipThread<span class=\"number\">38</span></span><br><span class=\"line\">mai<span class=\"symbol\">n39</span></span><br><span class=\"line\">vipThread<span class=\"number\">39</span></span><br><span class=\"line\">vipThread<span class=\"number\">40</span></span><br><span class=\"line\">mai<span class=\"symbol\">n40</span></span><br><span class=\"line\">vipThread<span class=\"number\">41</span></span><br><span class=\"line\">mai<span class=\"symbol\">n41</span></span><br><span class=\"line\">vipThread<span class=\"number\">42</span></span><br><span class=\"line\">mai<span class=\"symbol\">n42</span></span><br><span class=\"line\">vipThread<span class=\"number\">43</span></span><br><span class=\"line\">mai<span class=\"symbol\">n43</span></span><br><span class=\"line\">vipThread<span class=\"number\">44</span></span><br><span class=\"line\">mai<span class=\"symbol\">n44</span></span><br><span class=\"line\">vipThread<span class=\"number\">45</span></span><br><span class=\"line\">mai<span class=\"symbol\">n45</span></span><br><span class=\"line\">vipThread<span class=\"number\">46</span></span><br><span class=\"line\">mai<span class=\"symbol\">n46</span></span><br><span class=\"line\">vipThread<span class=\"number\">47</span></span><br><span class=\"line\">mai<span class=\"symbol\">n47</span></span><br><span class=\"line\">vipThread<span class=\"number\">48</span></span><br><span class=\"line\">mai<span class=\"symbol\">n48</span></span><br><span class=\"line\">vipThread<span class=\"number\">49</span></span><br><span class=\"line\">mai<span class=\"symbol\">n49</span></span><br><span class=\"line\">vipThread<span class=\"number\">50</span></span><br><span class=\"line\">vipThread<span class=\"number\">51</span></span><br><span class=\"line\">vipThread<span class=\"number\">52</span></span><br><span class=\"line\">vipThread<span class=\"number\">53</span></span><br><span class=\"line\">vipThread<span class=\"number\">54</span></span><br><span class=\"line\">vipThread<span class=\"number\">55</span></span><br><span class=\"line\">vipThread<span class=\"number\">56</span></span><br><span class=\"line\">vipThread<span class=\"number\">57</span></span><br><span class=\"line\">vipThread<span class=\"number\">58</span></span><br><span class=\"line\">vipThread<span class=\"number\">59</span></span><br><span class=\"line\">vipThread<span class=\"number\">60</span></span><br><span class=\"line\">vipThread<span class=\"number\">61</span></span><br><span class=\"line\">vipThread<span class=\"number\">62</span></span><br><span class=\"line\">vipThread<span class=\"number\">63</span></span><br><span class=\"line\">vipThread<span class=\"number\">64</span></span><br><span class=\"line\">vipThread<span class=\"number\">65</span></span><br><span class=\"line\">vipThread<span class=\"number\">66</span></span><br><span class=\"line\">vipThread<span class=\"number\">67</span></span><br><span class=\"line\">vipThread<span class=\"number\">68</span></span><br><span class=\"line\">vipThread<span class=\"number\">69</span></span><br><span class=\"line\">vipThread<span class=\"number\">70</span></span><br><span class=\"line\">vipThread<span class=\"number\">71</span></span><br><span class=\"line\">vipThread<span class=\"number\">72</span></span><br><span class=\"line\">vipThread<span class=\"number\">73</span></span><br><span class=\"line\">vipThread<span class=\"number\">74</span></span><br><span class=\"line\">vipThread<span class=\"number\">75</span></span><br><span class=\"line\">vipThread<span class=\"number\">76</span></span><br><span class=\"line\">vipThread<span class=\"number\">77</span></span><br><span class=\"line\">vipThread<span class=\"number\">78</span></span><br><span class=\"line\">vipThread<span class=\"number\">79</span></span><br><span class=\"line\">vipThread<span class=\"number\">80</span></span><br><span class=\"line\">vipThread<span class=\"number\">81</span></span><br><span class=\"line\">vipThread<span class=\"number\">82</span></span><br><span class=\"line\">vipThread<span class=\"number\">83</span></span><br><span class=\"line\">vipThread<span class=\"number\">84</span></span><br><span class=\"line\">vipThread<span class=\"number\">85</span></span><br><span class=\"line\">vipThread<span class=\"number\">86</span></span><br><span class=\"line\">vipThread<span class=\"number\">87</span></span><br><span class=\"line\">vipThread<span class=\"number\">88</span></span><br><span class=\"line\">vipThread<span class=\"number\">89</span></span><br><span class=\"line\">vipThread<span class=\"number\">90</span></span><br><span class=\"line\">vipThread<span class=\"number\">91</span></span><br><span class=\"line\">vipThread<span class=\"number\">92</span></span><br><span class=\"line\">vipThread<span class=\"number\">93</span></span><br><span class=\"line\">vipThread<span class=\"number\">94</span></span><br><span class=\"line\">vipThread<span class=\"number\">95</span></span><br><span class=\"line\">vipThread<span class=\"number\">96</span></span><br><span class=\"line\">vipThread<span class=\"number\">97</span></span><br><span class=\"line\">vipThread<span class=\"number\">98</span></span><br><span class=\"line\">vipThread<span class=\"number\">99</span></span><br><span class=\"line\">mai<span class=\"symbol\">n50</span></span><br><span class=\"line\">mai<span class=\"symbol\">n51</span></span><br><span class=\"line\">mai<span class=\"symbol\">n52</span></span><br><span class=\"line\">mai<span class=\"symbol\">n53</span></span><br><span class=\"line\">mai<span class=\"symbol\">n54</span></span><br><span class=\"line\">mai<span class=\"symbol\">n55</span></span><br><span class=\"line\">mai<span class=\"symbol\">n56</span></span><br><span class=\"line\">mai<span class=\"symbol\">n57</span></span><br><span class=\"line\">mai<span class=\"symbol\">n58</span></span><br><span class=\"line\">mai<span class=\"symbol\">n59</span></span><br><span class=\"line\">mai<span class=\"symbol\">n60</span></span><br><span class=\"line\">mai<span class=\"symbol\">n61</span></span><br><span class=\"line\">mai<span class=\"symbol\">n62</span></span><br><span class=\"line\">mai<span class=\"symbol\">n63</span></span><br><span class=\"line\">mai<span class=\"symbol\">n64</span></span><br><span class=\"line\">mai<span class=\"symbol\">n65</span></span><br><span class=\"line\">mai<span class=\"symbol\">n66</span></span><br><span class=\"line\">mai<span class=\"symbol\">n67</span></span><br><span class=\"line\">mai<span class=\"symbol\">n68</span></span><br><span class=\"line\">mai<span class=\"symbol\">n69</span></span><br><span class=\"line\">mai<span class=\"symbol\">n70</span></span><br><span class=\"line\">mai<span class=\"symbol\">n71</span></span><br><span class=\"line\">mai<span class=\"symbol\">n72</span></span><br><span class=\"line\">mai<span class=\"symbol\">n73</span></span><br><span class=\"line\">mai<span class=\"symbol\">n74</span></span><br><span class=\"line\">mai<span class=\"symbol\">n75</span></span><br><span class=\"line\">mai<span class=\"symbol\">n76</span></span><br><span class=\"line\">mai<span class=\"symbol\">n77</span></span><br><span class=\"line\">mai<span class=\"symbol\">n78</span></span><br><span class=\"line\">mai<span class=\"symbol\">n79</span></span><br><span class=\"line\">mai<span class=\"symbol\">n80</span></span><br><span class=\"line\">mai<span class=\"symbol\">n81</span></span><br><span class=\"line\">mai<span class=\"symbol\">n82</span></span><br><span class=\"line\">mai<span class=\"symbol\">n83</span></span><br><span class=\"line\">mai<span class=\"symbol\">n84</span></span><br><span class=\"line\">mai<span class=\"symbol\">n85</span></span><br><span class=\"line\">mai<span class=\"symbol\">n86</span></span><br><span class=\"line\">mai<span class=\"symbol\">n87</span></span><br><span class=\"line\">mai<span class=\"symbol\">n88</span></span><br><span class=\"line\">mai<span class=\"symbol\">n89</span></span><br><span class=\"line\">mai<span class=\"symbol\">n90</span></span><br><span class=\"line\">mai<span class=\"symbol\">n91</span></span><br><span class=\"line\">mai<span class=\"symbol\">n92</span></span><br><span class=\"line\">mai<span class=\"symbol\">n93</span></span><br><span class=\"line\">mai<span class=\"symbol\">n94</span></span><br><span class=\"line\">mai<span class=\"symbol\">n95</span></span><br><span class=\"line\">mai<span class=\"symbol\">n96</span></span><br><span class=\"line\">mai<span class=\"symbol\">n97</span></span><br><span class=\"line\">mai<span class=\"symbol\">n98</span></span><br><span class=\"line\">mai<span class=\"symbol\">n99</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>可以见到 main 和 vipThread 两个线程几乎同步执行,到了 main49 时,vipThread 会主动插队,这时 vipThread 之外的线程阻塞.</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"线程优先级-Priority\">线程优先级-Priority</h3>\n<ul>\n<li>\n<p>线程的优先级用数字表示，范围从 1~10.</p>\n<ul>\n<li>Thread.MIN_PRIORITY = 1;</li>\n<li>Thread.MAX_PRIORITY = 10;</li>\n<li>Thread.NORM_PRIORITY = 5;</li>\n</ul>\n</li>\n<li>\n<p>使用一下方法改变或获取优先级</p>\n<ul>\n<li>​.getPriority()</li>\n<li>.setPriority(int xxx)</li>\n</ul>\n<p>不做举例了.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"守护线程-daemon\">守护线程-daemon</h3>\n<ul>\n<li>\n<p>线程分为<code>用户线程</code>和<code>守护线程</code>,用户线程必须执行完毕程序才终止,而守护线程不做要求.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDaemon</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ! 上帝</span></span><br><span class=\"line\">    <span class=\"type\">Thread</span> <span class=\"variable\">godThread</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;上帝保佑你&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//默认false表示是用户线程，正常的线程都是用户线程</span></span><br><span class=\"line\">    godThread.setDaemon(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    godThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ! 你</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;你一生都开心的活着&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;GoodBye World&quot;</span>);</span><br><span class=\"line\">    &#125;).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果: &quot;you&quot;线程终止后 daemon 线程仍执行了一段时间</p>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">你一生都开心的活着</span><br><span class=\"line\">你一生都开心的活着</span><br><span class=\"line\">你一生都开心的活着</span><br><span class=\"line\">你一生都开心的活着</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">GoodBye World</span><br><span class=\"line\">上帝保佑你</span><br><span class=\"line\">上帝保佑你</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "多线程"
            ]
        }
    ]
}