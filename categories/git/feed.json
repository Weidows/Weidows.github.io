{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"git\" category",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/tools/Git/matters.mmd/",
            "url": "https://weidows.github.io/post/tools/Git/matters.mmd/",
            "title": "😒Git-GitHub-操作问题和经验",
            "date_published": "2020-11-21T11:28:51.000Z",
            "content_html": "<h1>Git-GitHub-操作问题和经验</h1>\n<!--\n * @Author: Weidows\n * @Date: 2020-11-21 19:28:51\n * @LastEditors: Weidows\n * @LastEditTime: 2022-03-17 16:05:38\n * @FilePath: \\Blog-private\\source\\_posts\\tools\\Git\\matters.mmd.md\n * @Description:\n--><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#git-github-%E6%93%8D%E4%BD%9C%E9%97%AE%E9%A2%98%E5%92%8C%E7%BB%8F%E9%AA%8C\">Git-GitHub-操作问题和经验</a>\n<ul>\n<li><a href=\"#%E5%AE%9E%E7%94%A8%E6%93%8D%E4%BD%9C\">实用操作</a>\n<ul>\n<li><a href=\"#%E4%B8%89%E7%A7%8D-merge\">三种-merge</a>\n<ul>\n<li><a href=\"#common-merge\">common-merge</a></li>\n<li><a href=\"#squash-merge\">squash-merge</a></li>\n<li><a href=\"#rebase-merge\">rebase-merge</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86\">配置代理</a></li>\n<li><a href=\"#%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80\">版本回退</a></li>\n<li><a href=\"#%E5%88%9B%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%88%86%E6%94%AF\">创建独立分支</a></li>\n<li><a href=\"#%E7%BC%A9%E5%B0%8F%E4%BB%93%E5%BA%93%E4%BD%93%E7%A7%AF\">缩小仓库体积</a>\n<ul>\n<li><a href=\"#%E5%88%A0%E9%99%A4%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95\">删除提交记录</a></li>\n<li><a href=\"#%E5%88%86%E6%94%AF%E7%8B%AC%E7%AB%8B%E6%B3%95\">分支独立法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#github\">GitHub</a>\n<ul>\n<li><a href=\"#%E9%A6%96%E9%A1%B5%E7%BB%BF%E6%A0%BC%E5%AD%90\">首页绿格子</a></li>\n<li><a href=\"#license-%E9%80%89%E6%8B%A9\">License 选择</a></li>\n<li><a href=\"#pages-%E5%9F%9F%E5%90%8D\">pages-域名</a></li>\n<li><a href=\"#%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF\">删除远程分支</a></li>\n<li><a href=\"#github-action\">github-action</a>\n<ul>\n<li><a href=\"#checkout\">checkout</a></li>\n<li><a href=\"#%E5%9B%BD%E5%86%85%E6%97%B6%E5%8C%BA%E9%94%99%E4%BD%8D%E9%97%AE%E9%A2%98\">国内时区错位问题</a></li>\n</ul>\n</li>\n<li><a href=\"#jsdelivr-%E5%88%B7%E6%96%B0%E7%BC%93%E5%AD%98\">JsDelivr-刷新缓存</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%87%AD%E8%AF%81%E5%92%8C%E6%9D%83%E9%99%90\">凭证和权限</a>\n<ul>\n<li><a href=\"#%E9%97%AE%E9%A2%98%E4%B8%80\">问题一</a></li>\n<li><a href=\"#%E9%97%AE%E9%A2%98%E4%BA%8C\">问题二</a></li>\n<li><a href=\"#%E9%97%AE%E9%A2%98%E4%B8%89\">问题三</a></li>\n<li><a href=\"#%E9%97%AE%E9%A2%98%E5%9B%9B\">问题四</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"实用操作\">实用操作</h2>\n<h3 id=\"三种-merge\">三种-merge</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/03/06/GhMkF1.png\" alt=\"\"></p>\n<ul>\n<li>设当前 git-status:<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    A --&gt; B\n\n    B --master--&gt; C --&gt; D --&gt; E --&gt; F --&gt; G\n    B -.dev.-&gt; C1\n\n\n    subgraph merge-target\n      C1 --&gt; D1 --&gt; E1 --&gt; F1\n    end\n  </pre></div></li>\n</ul>\n<hr>\n<h4 id=\"common-merge\">common-merge</h4>\n<p>默认的 merge,保留所有 commit 信息,merge 操作生成一个 merge-commit<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n  A --&gt; B\n\n  B --master--&gt; C\n  B -.dev.-&gt; C1\n\n  C --&gt; D --&gt; E --&gt; F --&gt; C1&#39;\n  subgraph before-merge\n    C1 --&gt; D1 --&gt; E1 --&gt; F1\n  end\n\n  F1 .-&gt; C1&#39;\n\n  subgraph after-merge\n    C1&#39;[C1] --&gt; D1&#39;[D1] --&gt; E1&#39;[E1] --&gt; F1&#39;[F1]\n  end\n\n  F1&#39; --&gt; G\n  </pre></div></p>\n<h4 id=\"squash-merge\">squash-merge</h4>\n<p>压缩合并,将几次提交的信息合并; 需手动提交所以会改变 commit-user<sup id='cite_ref-01'><a href=\"#cite_note-01\">[1]</a></sup></p>\n<p>适用场景为: 同一开发者负责合与被合两 branch, 并且被合并的 branch 记录并不重要<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n  A --&gt; B\n\n  B --master--&gt; C\n  B -.dev.-&gt; C1\n\n\n  subgraph before-merge\n    C1 --&gt; D1 --&gt; E1 --&gt; F1\n  end\n  F1 .-&gt; C1-F1\n\n  C --&gt; D --&gt; E --&gt; F --&gt; G\n\n  subgraph after-merge\n    C1-F1\n  end\n  G --&gt; C1-F1\n  </pre></div></p>\n<h4 id=\"rebase-merge\">rebase-merge</h4>\n<p>rebase 变基不会像 squash 那样变更 commit-user 信息,而且 commit 的合并是手动选择性的</p>\n<p>比如下面合并 commit D1 和 E1,然后 branch-merge</p>\n<ul>\n<li>\n<p>总图<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    A --&gt; B --master--&gt; C --&gt; D --&gt; E --&gt; F\n    F -.dev.-&gt; C1&#39;\n\n    B -.dev.-&gt; C1\n    subgraph before-merge\n      C1 --&gt; D1 --&gt; E1 --&gt; F1\n    end\n\n    F1 .-&gt; C1&#39;\n\n    subgraph rebase\n      C1&#39;[C1] --&gt; D1-E1 --&gt; F1&#39;[F1]\n    end\n\n    F --master--&gt; C1&#39;&#39;\n    F1&#39; .-&gt; C1&#39;&#39;\n\n    subgraph after-merge\n      C1&#39;&#39;[C1] --&gt; D1-E1&#39;[D1-E1] --&gt; F1&#39;&#39;[F1]\n    end\n\n    F1&#39;&#39; --&gt; G\n  </pre></div></p>\n<hr>\n</li>\n<li>\n<p>分三步图<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    A --&gt; B\n\n    B --master--&gt; C --&gt; D --&gt; E --&gt; F\n    B -.dev.-&gt; C1\n\n    subgraph before-merge\n      C1 --&gt; D1 --&gt; E1 --&gt; F1\n    end\n\n    F --&gt; G\n  </pre></div></p>\n</li>\n</ul>\n<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    A --&gt; B --master--&gt; C --&gt; D --&gt; E --&gt; F\n    F -.dev.-&gt; C1&#39;\n\n    B -.dev.-&gt; C1\n    subgraph before-merge\n      C1 --&gt; D1 --&gt; E1 --&gt; F1\n    end\n\n    F1 .-&gt; C1&#39;\n\n    subgraph rebase\n      C1&#39;[C1] --&gt; D1-E1 --&gt; F1&#39;[F1]\n    end\n\n    F --master--&gt; G\n  </pre></div>\n<div class=\"mermaid-wrap\"><pre class=\"mermaid-src\" hidden>\n  graph LR\n    A --&gt; B --master--&gt; C --&gt; D --&gt; E --&gt; F\n    F --&gt; C1&#39;\n\n    B -.dev.-&gt; C1\n    subgraph before-merge\n      C1 --&gt; D1 --&gt; E1 --&gt; F1\n    end\n\n    subgraph after-merge\n      C1&#39; --&gt; D1-E1 --&gt; F1&#39;\n    end\n    F1&#39; --&gt; G\n  </pre></div>\n<hr>\n<h3 id=\"配置代理\">配置代理</h3>\n<ul>\n<li>\n<p>有时候 github 会被墙,导致无法推送,需要挂代理</p>\n</li>\n<li>\n<p>方案:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global https.proxy http://127.0.0.1:1080</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>或者直接修改<code>~/.gitconfig</code>文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[core]</span></span><br><span class=\"line\">  <span class=\"attr\">autocrlf</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">longpaths</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">editor</span> = code.exe</span><br><span class=\"line\"><span class=\"section\">[user]</span></span><br><span class=\"line\">  <span class=\"attr\">name</span> = Weidows</span><br><span class=\"line\">  <span class=\"attr\">email</span> = utsuko27@qq.com</span><br><span class=\"line\"><span class=\"section\">[http]</span></span><br><span class=\"line\">  <span class=\"attr\">proxy</span> = localhost://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">7890</span></span><br><span class=\"line\"><span class=\"section\">[https]</span></span><br><span class=\"line\">  <span class=\"attr\">proxy</span> = localhost://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">7890</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"版本回退\">版本回退</h3>\n<p>不小心把 ssh 私钥 copy 到了 git 库里提到了 github 上,差点 GG</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/yxlshk/article/details/79944535\">Git 恢复之前版本的两种方法 reset、revert（图文详解）</a></p>\n</blockquote>\n<ol>\n<li>reset 到出错提交的前一个提交</li>\n<li>修改,提交</li>\n<li>强制提交(不强制的话不行): git push origin master -f</li>\n</ol>\n<hr>\n<h3 id=\"创建独立分支\">创建独立分支</h3>\n<blockquote>\n<p>git checkout --orphan 新分支名</p>\n</blockquote>\n<hr>\n<h3 id=\"缩小仓库体积\">缩小仓库体积</h3>\n<h4 id=\"删除提交记录\">删除提交记录</h4>\n<p>有的仓库因为有时候会提交图片,导致仓库体积格外的庞大</p>\n<p>而且大到一定程度会被平台检查 (所以要想办法缩小)</p>\n<hr>\n<ul>\n<li>\n<p>我要压缩的是 <a href=\"https://github.com/Weidows-projects/Keeper\">Keeper</a> 项目</p>\n<p>因为每天都要提交一张必应壁纸,所以一年下来体积到了 400+ MB</p>\n<p>我想把壁纸拿走,并且把 git 中提交记录也删掉以抹除体积</p>\n<hr>\n</li>\n<li>\n<p>开始我想的是把现有文件复制到一个新建的库,再把这个库 force push 到 github</p>\n<p>出乎意料,旧的提交并没有消失; 可以看到强推 <code>重构</code> 前面有一个断档,那之前的就是旧提交</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVLue9.png\" alt=\"20211102134046\" />\n<hr>\n</li>\n<li>\n<p>为什么出现这情况? 我给画了个图</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVt8KP.png\" alt=\"20211102144127\" />\n<p>所以,原因是没删除 github 上的 tags,删掉就没了捏</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"分支独立法\">分支独立法</h4>\n<ul>\n<li>\n<p>起初使用的是上面的方法,后来突然想到把这些大文件独立分支</p>\n<p>当需要减小体积时,本地保留好当前内容然后直接删除分支</p>\n<p>再重新拉起一个同名分支 force push</p>\n</li>\n<li>\n<p>这个方法应该更好些,避免删除不必要内容.</p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"GitHub-2\">GitHub</h2>\n<h3 id=\"首页绿格子\">首页绿格子</h3>\n<ul>\n<li>Github 不显示 fork 仓库的 commit, 需要独立出来</li>\n</ul>\n<hr>\n<h3 id=\"License-选择\">License 选择</h3>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVao5P.png\" alt=\"License\"></p>\n<p>一般盲怼 <code>MIT</code> 就好,不过上图没给出</p>\n<blockquote>\n<p>感觉菜鸟教程的文章最详细: <a href=\"https://www.runoob.com/w3cnote/open-source-license.html\">各种开源协议介绍</a></p>\n</blockquote>\n<hr>\n<h3 id=\"pages-域名\">pages-域名</h3>\n<ul>\n<li>\n<p>GitHub 与 Gitee-pages 部署域名规则不同.</p>\n</li>\n<li>\n<p>github 上当且仅当 Repo 名字为<code>userName.github.io</code>时,域名为<code>userName.github.io</code></p>\n<ul>\n<li>其他 Repo 名字为<code>userName.github.io/repoName/</code></li>\n</ul>\n</li>\n<li>\n<p>Gitee 是当且仅当 Repo 名字为<code>userName.gitee.io</code>时,域名为<code>userName.gitee.io</code></p>\n<ul>\n<li>否则类似上面</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"删除远程分支\">删除远程分支</h3>\n<ul>\n<li>不能删除当前默认分支.</li>\n</ul>\n<hr>\n<h3 id=\"github-action\">github-action</h3>\n<h4 id=\"checkout\">checkout</h4>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVtV5z.png\" alt=\"20211124165145\" />\n<ul>\n<li>\n<p>checkout 默认下只会检出默认分支,不会 clone submodules,可以设置自定义</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">  <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">ref:</span> <span class=\"string\">dev</span> <span class=\"comment\"># checkout dev branch</span></span><br><span class=\"line\">    <span class=\"attr\">submodules:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"国内时区错位问题\">国内时区错位问题</h4>\n<ul>\n<li>我在东八区,布置的 GitHub Action 是 0 点执行\n<ul>\n<li>结果是在早上八点多才执行的(大概是八点半左右,误差&lt;5min)</li>\n<li>因为 GitHub 服务器不是在国内,时区不同,其对应的大概是欧洲伦敦那块的标准时区.</li>\n</ul>\n</li>\n<li><code>结论</code>:布置 Action 定时任务时,设置的时间要早八个小时(对应东八区)</li>\n</ul>\n<hr>\n<h3 id=\"JsDelivr-刷新缓存\">JsDelivr-刷新缓存</h3>\n<blockquote>\n<p>把 <code>cdn.jsdelivr.net</code> 换为 <code>purge.jsdelivr.net</code> 访问几次<br>\n<sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n</blockquote>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"凭证和权限\">凭证和权限</h2>\n<h3 id=\"问题一\">问题一</h3>\n<ul>\n<li>\n<p>本地 git 有时候会遇到 github 凭证失效问题</p>\n</li>\n<li>\n<p>在 VScode 里的 git 仓库失效后会老是催你登陆,没完没了</p>\n<ul>\n<li>(VScode 让你登录后只是暂时性的,你关闭后就还是会失效)</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>解决办法: VScode 让登录时一次,然后保存凭证就好了!</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --<span class=\"keyword\">global</span> credential.helper <span class=\"keyword\">store</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"问题二\">问题二</h3>\n<ul>\n<li>\n<p>推送时报:“无权限推送到 xxx 仓库”</p>\n<p>问题原因是<code>本地的认证失效了</code>,但是 Git 并不会自动清除让你重新认证</p>\n</li>\n<li>\n<p>我遇到这个问题是在 Git 某次更新后, <code>credential.helper store</code> 情况下.</p>\n<p>解决办法: 删掉 <code>~/.git-credentials</code> 这个文件,它失效了,重新认证一下就好</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"问题三\">问题三</h3>\n<ul>\n<li>\n<p>push 本地仓库到 github 时遇到:</p>\n<blockquote>\n<p>refusing to allow an OAuth App to create or update workflow `.github/workflo</p>\n</blockquote>\n<p>这是由于仓库中更改了 workflow(github-action) 的内容,而且本地 git 仓库是用 OAuth 方式认证的</p>\n<hr>\n</li>\n<li>\n<p>解决办法的话,网上其他文章是一水的改凭据 (我不想这么干)</p>\n<p>两种办法,配置 ssh-key 或者可以试着安装 <code>github-cli</code> ,然后用 PTA (personal access token) 认证登录 (如果已经登录过就再次刷新登录)</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gh auth login</span><br><span class=\"line\"></span><br><span class=\"line\">是否用<span class=\"function\"><span class=\"title\">github</span>-cli来认证github网站 -&gt;</span> 是</span><br><span class=\"line\">HTTPS/SS<span class=\"function\"><span class=\"title\">h</span> -&gt;</span> 选HTTPS</span><br><span class=\"line\">填入PTA登录成功</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>成功后可以看到 ~/.gitconfig 多了几行</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">[credential</span> <span class=\"string\">&quot;https://github.com&quot;]</span></span><br><span class=\"line\">  <span class=\"attr\">helper</span> = <span class=\"string\">!D:\\\\Game\\\\Scoop\\\\apps\\\\Github-CLI\\\\current\\\\bin\\\\gh.exe auth git-credential</span></span><br></pre></td></tr></table></figure>\n<p>现在再次推送应该没问题了.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"问题四\">问题四</h3>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git pull --<span class=\"keyword\">tags</span> origin master</span><br><span class=\"line\">From http<span class=\"variable\">s:</span>//github.<span class=\"keyword\">com</span>/Weidows-projects/Programming-Configuration</span><br><span class=\"line\"> * branch            master     -&gt; FETCH_HEAD</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> You have divergent branches <span class=\"built_in\">and</span> need <span class=\"keyword\">to</span> specify how <span class=\"keyword\">to</span> reconcile them.</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> You can <span class=\"keyword\">do</span> <span class=\"keyword\">so</span> by running one of the following commands sometime before</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> your <span class=\"keyword\">next</span> pul<span class=\"variable\">l:</span></span><br><span class=\"line\">hin<span class=\"variable\">t:</span></span><br><span class=\"line\">hin<span class=\"variable\">t:</span>   git config pull.rebase false  # merge (the default strategy)</span><br><span class=\"line\">hin<span class=\"variable\">t:</span>   git config pull.rebase true   # rebase</span><br><span class=\"line\">hin<span class=\"variable\">t:</span>   git config pull.ff <span class=\"keyword\">only</span>       # fast-forward <span class=\"keyword\">only</span></span><br><span class=\"line\">hin<span class=\"variable\">t:</span></span><br><span class=\"line\">hin<span class=\"variable\">t:</span> You can replace <span class=\"string\">&quot;git config&quot;</span> with <span class=\"string\">&quot;git config --global&quot;</span> <span class=\"keyword\">to</span> <span class=\"keyword\">set</span> <span class=\"keyword\">a</span> default</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> preference <span class=\"keyword\">for</span> <span class=\"keyword\">all</span> repositories. You can also pass --rebase, --<span class=\"keyword\">no</span>-rebase,</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> <span class=\"built_in\">or</span> --ff-<span class=\"keyword\">only</span> <span class=\"keyword\">on</span> the <span class=\"keyword\">command</span> <span class=\"built_in\">line</span> <span class=\"keyword\">to</span> override the configured default per</span><br><span class=\"line\">hin<span class=\"variable\">t:</span> invocation.</span><br><span class=\"line\">fata<span class=\"variable\">l:</span> Need <span class=\"keyword\">to</span> specify how <span class=\"keyword\">to</span> reconcile divergent branches.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>解决:</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config pull.ff <span class=\"literal\">false</span></span><br><span class=\"line\">git config --global pull.rebase <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><a href=\"https://www.fenovice.com/\">https://www.fenovice.com/</a></p>\n</blockquote>\n<p><code>更好的办法是换一个Git版本</code></p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表-28\">借物表</h2>\n<p><a name='cite_note-01' href='#cite_ref-01'>[1]</a>: <a href=\"https://www.jianshu.com/p/ff1877c5864e\">git merge 的三种操作 merge, squash merge, 和 rebase merge</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://github.com/wayne0926/jsd\">https://github.com/wayne0926/jsd</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "git",
                "github",
                "gitee",
                "action",
                "branch",
                "release",
                "pages"
            ]
        },
        {
            "id": "https://weidows.github.io/post/tools/Git/GitHub-Pages-deploy/",
            "url": "https://weidows.github.io/post/tools/Git/GitHub-Pages-deploy/",
            "title": "一篇扫清:GitHub-Pages自动化部署 + github/gitee选择",
            "date_published": "2020-08-23T02:54:41.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @Date: 2020-08-23 10:54:41\n * @LastEditors: Weidows\n * @LastEditTime: 2021-12-15 19:49:54\n * @FilePath: \\Blog-private\\source\\_posts\\tools\\Git\\GitHub-Pages-deploy.md\n-->\n<ul>\n<li><a href=\"#githubgitee-%E9%80%89%E6%8B%A9\">GitHub/Gitee 选择</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">解决方案</a></li>\n<li><a href=\"#%E5%BC%80%E5%90%AF\">开启</a></li>\n<li><a href=\"#github-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2\">GitHub 自动化部署</a>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85-hexo-deployer\">安装 Hexo-deployer</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%A6%E4%B8%80%E7%A7%8D%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E5%AE%8C%E7%BE%8E%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">另一种更加方便完美的解决方案</a></li>\n<li><a href=\"#github-action-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2\">github-action 自动化部署</a>\n<ul>\n<li><a href=\"#%E8%A7%A3%E9%87%8A\">解释:</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"GitHub-Gitee-选择\">GitHub/Gitee 选择</h2>\n<ul>\n<li>速度来看,GitHub 在加载速度上略超 Gitee,部署速度 Gitee 略快(但是这项几乎不影响体验)</li>\n<li>但是就图片加载来看,GitHub 还是远不如 Gitee,可以考虑图床或者 JsDelivr 做 CDN 来解决</li>\n<li>功能上,都支持 Hexo 部署和选择分支部署\n<ul>\n<li>GitHub 只能识别并部署根目录<code>/</code>或者<code>/docs/</code>,而 Gitee 支持<code>自定义要部署的路径</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"解决方案-4\">解决方案</h2>\n<ul>\n<li>如果你想部署在 GitHub 上但是却因为它不识别那个路径\n<ul>\n<li>尝试修改博客根目录下的<code>_config.yml</code>,把<code>public_dir: public</code>改为<code>public_dir: docs</code></li>\n<li>这样在博客 generate 时会把需要部署的文件生成到 docs/里,可供 GitHub 识别</li>\n<li>注意在 GitHub 的这个仓库的 Settings 里要把 source 的分支,目录对应修改好</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"开启\">开启</h2>\n<ul>\n<li><code>Gitee</code><br>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVaAYT.png\" alt=\"20201122112033\"></li>\n<li><code>Github</code><br>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GValiD.png\" alt=\"20201122112109\"></li>\n</ul>\n<hr>\n<h2 id=\"GitHub-自动化部署\">GitHub 自动化部署</h2>\n<h3 id=\"安装-Hexo-deployer\">安装 Hexo-deployer</h3>\n<ul>\n<li>\n<p>(注意 cnpm 好像不行)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`npm install hexo-deployer-git --save`</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在<code>_config.yml</code> 里添加以下内容(注意缩进不要错)</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">deploy:</span></span><br><span class=\"line\"><span class=\"symbol\">type:</span> git <span class=\"meta\"># 用本项目的 git 进行提交 &amp; 推送</span></span><br><span class=\"line\"><span class=\"symbol\">repo:</span> 这里填入 GitHub 仓库 URL</span><br><span class=\"line\"><span class=\"symbol\">branch:</span> master <span class=\"meta\"># 这里写想要部署到的分支名(没有对应分支的话会自动新建)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在对应仓库的设置里找到 github-pages 然后选择对应分支,系统就会自动部署并发出你的博客链接了</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"另一种更加方便完美的解决方案\">另一种更加方便完美的解决方案</h2>\n<ul>\n<li>因为搭建这个博客的工作目录可能并不是一个独立的 git 仓库</li>\n<li>(就是它被包含在其他仓库里,而非自己是一个独立仓库)</li>\n<li>这种情况下上面的 deployer 就鸡鸡了(没法用了,除非自己改),有没有解决方案呢?</li>\n<li>有,使用 github-action 自动化部署!</li>\n</ul>\n<h2 id=\"github-action-自动化部署\">github-action 自动化部署</h2>\n<p>文件目录: <code>Blogroot/.github/workflows/deploy.yml</code><br>\n(简单点就是.github 跟 public,source 等等同级目录),写入下面内容:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">and</span> <span class=\"string\">Deploy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span> [<span class=\"string\">push</span>] <span class=\"comment\"># 触发条件(git 推送时)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build-and-deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span> <span class=\"string\">🛎️</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># 下面这个最好设成 false</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">and</span> <span class=\"string\">Build</span> <span class=\"string\">🔧</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          cd Website</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\">          npm run build</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">CI:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">🚀</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">JamesIves/github-pages-deploy-action@releases/v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">BRANCH:</span> <span class=\"string\">gh-pages</span> <span class=\"comment\"># 把下面这个文件夹部署到哪个分支(不能是本分支,会覆盖掉)</span></span><br><span class=\"line\">          <span class=\"attr\">FOLDER:</span> <span class=\"string\">Website/public</span> <span class=\"comment\"># 想部署的文件夹</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"解释\">解释:</h3>\n<ul>\n<li>name 随意起</li>\n<li>on:[push]意思是在推送时触发 action</li>\n<li>Build and Deploy 就是触发的 job 名称</li>\n<li>run-on 是运行环境(其自带一些基础的环境,Exp:Node.JS,但是更具体的比如 Hexo 就不会自带了)</li>\n<li>steps 就是步骤了,可以看出下面有三个步骤(步骤内的操作就不细讲了…)</li>\n<li>这样我们写完博客 generate 之后 push 这个仓库,github-action 会自动执行找到你指定的文件夹把它部署到你指定的分支上,然后设置下让 github-pages 部署这个分支,博客就出来了!</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "备忘录",
                "website",
                "hexo",
                "github"
            ]
        }
    ]
}