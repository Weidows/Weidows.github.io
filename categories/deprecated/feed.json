{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"deprecated\" category",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/Java/deprecated/VScode_project_errors/",
            "url": "https://weidows.github.io/post/Java/deprecated/VScode_project_errors/",
            "title": "VScode中Java出现\"none-project\"错误(无法识别Java-Maven项目)",
            "date_published": "2020-10-16T14:24:25.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2021-09-02 15:30:55\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\VScode_project_errors.md\n-->\n<ul>\n<li><a href=\"#%E9%97%AE%E9%A2%98\">问题</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3\">解决</a></li>\n</ul>\n<h2 id=\"问题-3\">问题</h2>\n<ul>\n<li>在打开 VScode 后 Java 虚拟机已经启动,但是并没有识别工作区里面 Maven 的项目</li>\n<li>所以 Java 只能提供语法上的错误检查,无法基于项目提供开发环境(包括编译)</li>\n<li>总之就是—&gt;<code>报错(none-project)</code>,而且大部分功能无法使用</li>\n</ul>\n<h2 id=\"解决\">解决</h2>\n<ul>\n<li>经过一番折腾发现这是 Project 检测机制的问题,如下</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 工作区文件夹</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 文件夹A</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Maven项目A</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 文件夹B</span><br><span class=\"line\"><span class=\"bullet\">    -</span> Maven项目B</span><br></pre></td></tr></table></figure>\n<ul>\n<li>上面那种层级结构会使得 Java 虚拟机在启动构建时 <code>Maven 项目不被识别</code>.</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>VScode 只能识别<code>工作区本身</code>或者<code>工作区向内一层目录</code>是 Maven 项目,这样才能使 Java 项目运行环境成功构建启动.</p>\n</li>\n<li>\n<p>按照以下方法可以解决此问题:</p>\n<ul>\n<li>解决方案层级一</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 工作区文件夹<span class=\"selector-tag\">A</span></span><br><span class=\"line\">  - Maven项目<span class=\"selector-tag\">A</span></span><br><span class=\"line\">- 工作区文件夹<span class=\"selector-tag\">B</span></span><br><span class=\"line\">  - Maven项目<span class=\"selector-tag\">B</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>解决方案层级二</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 工作区文件夹</span><br><span class=\"line\"><span class=\"bullet\">  -</span> Maven项目A</span><br><span class=\"line\"><span class=\"bullet\">  -</span> Maven项目B</span><br></pre></td></tr></table></figure>\n<ul>\n<li>解决方案层级三</li>\n</ul>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">- </span>工作区为Maven项目A</span><br><span class=\"line\"><span class=\"bullet\">- </span>工作区为Maven项目B</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java",
                "vscode",
                "maven"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Java/deprecated/anonymous_object/",
            "url": "https://weidows.github.io/post/Java/deprecated/anonymous_object/",
            "title": "匿名对象 && 使用",
            "date_published": "2020-09-10T09:34:47.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @Date: 2020-09-10 17:34:47\n * @LastEditors: Weidows\n * @LastEditTime: 2021-02-13 17:07:38\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\anonymous_object.md\n-->\n<ul>\n<li><a href=\"#%E5%8C%BF%E5%90%8D%E5%AF%B9%E8%B1%A1%E4%B8%80-testjava\">匿名对象一 (Test.java)</a></li>\n<li><a href=\"#%E5%8C%BF%E5%90%8D%E5%AF%B9%E8%B1%A1%E4%BA%8C-circlejava\">匿名对象二 (Circle.java)</a></li>\n</ul>\n<h2 id=\"匿名对象一-Test-java\">匿名对象一 (Test.java)</h2>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVa3Xz.png\" alt=\"anonymous_object_1\"></p>\n<details>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.september.anonymous_object;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">(<span class=\"keyword\">int</span> count)</span> </span>&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;这是个测试&quot;</span> + count);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 这里new了一个匿名对象,可以直接调用此对象的方法.</span></span><br><span class=\"line\"><span class=\"comment\">    * 如果一个对象只需要进行一次方法调用,可以使用匿名对象</span></span><br><span class=\"line\"><span class=\"comment\">    * 常使用匿名对象作为实参传递给一个方法调用</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Test().test(<span class=\"keyword\">new</span> Test().count);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<hr>\n<h2 id=\"匿名对象二-Circle-java\">匿名对象二 (Circle.java)</h2>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVEDIv.png\" alt=\"anonymous_object_2\"></p>\n<details>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.september.anonymous_object;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> radius;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Circle</span><span class=\"params\">(<span class=\"keyword\">double</span> radius)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.radius = radius;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> ret = <span class=\"number\">3.14</span> * radius * radius;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 可以同时使用构造器初始化类属性然后再调用方法</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">new</span> Circle(<span class=\"number\">5</span>).getArea());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java",
                "对象"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Java/deprecated/static_unstatic_block/",
            "url": "https://weidows.github.io/post/Java/deprecated/static_unstatic_block/",
            "title": "Java(非)静态代码块及其作用",
            "date_published": "2020-09-04T02:49:16.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @Date: 2020-09-04 10:49:16\n * @LastEditors: Weidows\n * @LastEditTime: 2021-02-13 17:14:27\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\static_unstatic_block.md\n-->\n<ul>\n<li><a href=\"#%E5%B0%B1%E4%BF%A9%E6%96%87%E4%BB%B6%E8%B0%A8%E6%AD%A4\">就俩文件,谨此</a></li>\n<li><a href=\"#personjava\">Person.java</a></li>\n<li><a href=\"#testjava\">Test.java</a></li>\n</ul>\n<h2 id=\"就俩文件-谨此\">就俩文件,谨此</h2>\n<p>图片下方给出了源代码,折叠起来了.</p>\n<hr>\n<h2 id=\"Person-java\">Person.java</h2>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVa9vt.png\" alt=\"UpRI1nOdso2Z4ak\"></p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">源代码</summary><div class=\"toggle-content\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* @Author: Weidows</span></span><br><span class=\"line\"><span class=\"comment\">* @Date: 2020-09-04 17:39:50</span></span><br><span class=\"line\"><span class=\"comment\">* @LastEditors: Weidows</span></span><br><span class=\"line\"><span class=\"comment\">* @LastEditTime: 2020-09-07 11:11:06</span></span><br><span class=\"line\"><span class=\"comment\">* @FilePath: \\Weidows\\Java\\src\\main\\java\\twenty\\september\\new_object\\Person.java</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> twenty.september.new_object;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* ! 在new Person()时,执行顺序是</span></span><br><span class=\"line\"><span class=\"comment\">*    1.name这种成员变量的初始化</span></span><br><span class=\"line\"><span class=\"comment\">*    2.执行代码块(多个代码块会按照从上到下顺序执行)</span></span><br><span class=\"line\"><span class=\"comment\">*    3.执行构造函数</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">*  两种代码块都可以用输出语句,可以对类的成员变量做初始化操作</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> TestPerson tp = <span class=\"keyword\">new</span> TestPerson();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;执行的是构造方法&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;这是Person的test方法&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// ! 非静态的代码块</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;执行的是非静态的代码块1&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;执行的是非静态的代码块2&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;执行的是非静态的代码块3&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * ! 静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">  * 里面只能放/调用static变量/方法</span></span><br><span class=\"line\"><span class=\"comment\">  * static代码块在程序运行周期只能被执行一次(new多次对象时共用一个静态类变量,不能被重复调用)</span></span><br><span class=\"line\"><span class=\"comment\">  * 静态代码块运行优先于非静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">  *  实际开发中常用,用来初始化类的静态对象属性(成员对象变量),比如tp那样,或者用在内部类替代构造器使用</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;执行的是静态的代码块&quot;</span>);</span><br><span class=\"line\">    tp.age = <span class=\"number\">1</span>;</span><br><span class=\"line\">    tp.name = <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPerson</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">  String name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</div></details>\n<hr>\n<h2 id=\"Test-java\">Test.java</h2>\n<p><img src=\"https://www.helloimg.com/images/2022/02/27/GVJL6u.png\" alt=\"Q9r36pXoBen4Hcy\"></p>\n<details class=\"toggle\" ><summary class=\"toggle-button\" style=\"\">源代码</summary><div class=\"toggle-content\"><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">* @Author: Weidows</span></span><br><span class=\"line\"><span class=\"comment\">* @Date: 2020-09-04 17:42:06</span></span><br><span class=\"line\"><span class=\"comment\">* @LastEditors: Weidows</span></span><br><span class=\"line\"><span class=\"comment\">* @LastEditTime: 2020-09-07 11:10:02</span></span><br><span class=\"line\"><span class=\"comment\">* @FilePath: \\Weidows\\Java\\src\\main\\java\\twenty\\september\\new_object\\test.java</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> twenty.september.new_object;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    in.close();</span><br><span class=\"line\">    <span class=\"comment\">// new Person();</span></span><br><span class=\"line\">    <span class=\"comment\">// new Person();</span></span><br><span class=\"line\">    Person p = <span class=\"keyword\">new</span> Person() &#123;</span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">      * ! 这是一个匿名内部类</span></span><br><span class=\"line\"><span class=\"comment\">      * 因为这种内部类没有类名,也就无法搞一个新的构造器(用的还是原来Person的)</span></span><br><span class=\"line\"><span class=\"comment\">      * 也就是这个类初始化后的成员变量还是跟原来的Person类的一样</span></span><br><span class=\"line\"><span class=\"comment\">      *  这里就会用到代码块来初始化类的属性</span></span><br><span class=\"line\"><span class=\"comment\">      */</span></span><br><span class=\"line\">      &#123; <span class=\"comment\">///这里这种代码块就可以替代构造器使用</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        * 这里无论写this.name/name/super.name都会变为&quot;李四&quot;</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;执行的是被Override的Person&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;这个类里面的name是:\\t&quot;</span> + p.name);</span><br><span class=\"line\">    p.test();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</div></details>\n<hr>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java"
            ]
        }
    ]
}