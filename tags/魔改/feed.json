{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"魔改\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/Web/Node/Hexo/optimize/",
            "url": "https://weidows.github.io/post/Web/Node/Hexo/optimize/",
            "title": "🚀网站优化记录.",
            "date_published": "2021-02-06T17:11:24.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @Date: 2021-02-07 01:11:24\n * @LastEditors: Weidows\n * @LastEditTime: 2021-08-29 15:15:38\n * @FilePath: \\Blog-private\\source\\_posts\\Web\\Node\\Hexo\\optimize.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#why\">Why?</a>\n<ul>\n<li><a href=\"#why-do-this\"><code>Why do this?</code></a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%A6%82%E8%A7%88\">概览</a></li>\n<li><a href=\"#%E5%A5%91%E5%90%88\">契合</a></li>\n<li><a href=\"#%E4%BC%98%E5%8C%96-css\">优化 css</a></li>\n<li><a href=\"#%E4%BC%98%E5%8C%96-js\">优化 js</a>\n<ul>\n<li><a href=\"#%E5%86%8D%E6%AC%A1%E9%AD%94%E6%94%B9\">再次魔改</a></li>\n</ul>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Why\">Why?</h2>\n<h3 id=\"Why-do-this\"><code>Why do this?</code></h3>\n<ul>\n<li>\n<p>这网站有太多需要简化的东西了,很多样式是<code>直接引入的css和js</code></p>\n</li>\n<li>\n<p>巨耗费渲染性能和时间(可以感觉出来加载这网站挺费劲的)</p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"概览\">概览</h2>\n<ul>\n<li>\n<p>对于 css 的所有修改,全部整合进<code>mine.styl</code></p>\n<ul>\n<li>\n<p>编译时就已经做好美化,额外资源负载几乎降为 0</p>\n</li>\n<li>\n<p>注入到<code>index.styl</code>末尾.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>js 的美化,全部整合到 <code>utils.js</code></p>\n<ul>\n<li>\n<p>请求数加 0,加载策略优化,时间降低; Weidows对象直接全局加载生效且不被GC.</p>\n</li>\n<li>\n<p>把 js 代码全堆在最后,暴露 <code>Weidows.re()</code> 供 pjax 调用.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>pug 的修改降低为 3 处,方便升级换代,都在此目录下: <code>themes\\butterfly\\layout\\includes\\</code></p>\n<ul>\n<li>\n<p><code>additional-js.pug</code> - 末尾追加樱花特效</p>\n</li>\n<li>\n<p><code>footer.pug</code>- 页脚标签+改注脚样式</p>\n</li>\n<li>\n<p><code>third-party\\pjax.pug</code> - 调用 <a href=\"http://Weidows.re\">Weidows.re</a>(),适配 pjax 刷新</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"契合\">契合</h2>\n<blockquote>\n<p>结合 <a href=\"./butterfly_modify\">butterfly 内部魔改记录</a></p>\n</blockquote>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"优化-css\">优化 css</h2>\n<ul>\n<li>\n<p>以往的 css 是直接引入的文件,在客户端加载时还是会耗费一些不菲时间加载+渲染出来</p>\n</li>\n<li>\n<p>优化思路就是把 css 变成<code>styl</code>,使之在编译生成 HTML 文件时就把样式改了,节省客户端耗费.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>如下:</p>\n<ul>\n<li>\n<p>新建一个名为 <code>mine.styl</code> 的文件.</p>\n</li>\n<li>\n<p>原 css 文件就是<code>mine.css</code>,用<a href=\"https://html5beta.com/tools/css2stylus.html\"><code>css2styl</code></a>转换为 styl 格式,粘贴到 <code>mine.styl</code></p>\n</li>\n<li>\n<p>注意这个网站转换成的 styl 有很多 bug(包括缩进和括号,需要人工检验)</p>\n</li>\n</ul>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVFlgb.png\" alt=\"20210207134449\" />\n</li>\n<li>\n<p>包括原先<code>source/css/_global/function.styl</code>之类的内添加或修改的样式,也可以转入 mine.styl.</p>\n</li>\n<li>\n<p>然后在<code>index.styl</code>中引入:</p>\n<ul>\n<li>在末尾加上</li>\n</ul>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//mine</span></span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">&#x27;_mine/mine.styl&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>用 <code>hexo server</code> 测试一下,应该没问题~</p>\n</li>\n<li>\n<p>这样 css 优化就完成了</p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"优化-js\">优化 js</h2>\n<ul>\n<li>\n<p>跟 css 一样,我原先也是直接一个<code>mine.js</code>引入的</p>\n</li>\n<li>\n<p>虽然没啥问题,但是会导致页面第二次加载渲染,而且多了一个请求数</p>\n</li>\n<li>\n<p>于是,我想直接把它淦进<code>main.js</code>中!</p>\n<ul>\n<li>操作不复杂,直接复制<code>mine.js</code>内容,粘贴进<code>main.js</code>最后</li>\n<li>注意不是最末尾</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">// 粘贴到这里</span></span><br><span class=\"line\">  refreshFn();</span><br><span class=\"line\">  unRefreshFn();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"再次魔改\">再次魔改</h3>\n<ul>\n<li>\n<p>因为某些美化函数会被 pjax 功能搞失效,直接把函数放进 main.js 的话,pjax 无法再次使用</p>\n</li>\n<li>\n<p>所以我把美化 js 打包并弄进 <code>butterfly/layout/head.pug</code> 中,在页面编译时就会被添加到 <code>&lt;head&gt;</code> 内,加载时间和请求数不增加!</p>\n<p>现在,加载逻辑是: js 美化代码在 HTML 文件的 head 中,然后在 main.js 最后写一句调用命令; 在页面用了 pjax 加载时,pjax.pug 中的重渲染函数会被调用.</p>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "website",
                "hexo",
                "优化",
                "魔改"
            ]
        }
    ]
}