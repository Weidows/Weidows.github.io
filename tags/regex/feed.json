{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"regex\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/experience/regex/",
            "url": "https://weidows.github.io/post/experience/regex/",
            "title": "🙉修为突破灵药 - 正则表达式",
            "date_published": "2022-02-22T17:34:56.000Z",
            "content_html": "<h1> 修为突破灵药 - 正则表达式 </h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-02-23 14:04:16\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\regex.md\n * @Description:\n * @!: *********************************************************************\n--><blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E4%BF%AE%E4%B8%BA%E7%AA%81%E7%A0%B4%E7%81%B5%E8%8D%AF-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"> 修为突破灵药 - 正则表达式 </a>\n<ul>\n<li><a href=\"#fix-%E8%AE%B0%E5%BD%95\">fix- 记录 </a></li>\n<li><a href=\"#%E5%8F%82%E7%85%A7\"> 参照 </a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>Regular Expressions，缩写为 Regex 或 Regexp</p>\n</blockquote>\n<ul>\n<li>\n<p> 推荐两个学习网址:</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/74136752\"> 手握手教你学会正则表达式 </a></p>\n<p><a href=\"https://regexlearn.com/zh-cn\">https://regexlearn.com/zh-cn</a></p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"fix- 记录\">fix- 记录 </h2>\n<ul>\n<li>\n<p><a href=\"https://github.com/bubkoo/hexo-filter-fenced-code/issues/3\">https://github.com/bubkoo/hexo-filter-fenced-code/issues/3</a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> rFenceCode = <span class=\"regexp\">/(\\s*)(`&#123;3,&#125;|~&#123;3,&#125;) *(.*) *\\n?([\\s\\S]+?)\\s*(\\2)(\\n+|$)/g</span>;</span><br></pre></td></tr></table></figure>\n<p><code>(\\s*)(`&#123;3,&#125;|~&#123;3,&#125;)</code><br>\n``` 或者 ~~~</p>\n<p><code> *(.*)</code><br>\n至少 1 个空格 + 至少 1 个任意字符 </p>\n<p><code> *\\n?</code><br>\n至少 1 个空格 + 可有可无换行; 错误原因就是此, 我习惯 trim, 所以无法正常匹配 </p>\n</li>\n</ul>\n<h2 id=\"参照 -4\"> 参照 </h2>\n<p> 暂无.</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "regex"
            ]
        }
    ]
}