{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"python\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://blog.weidows.tech",
    "items": [
        {
            "id": "https://blog.weidows.tech/post/lang/python/poetry/",
            "url": "https://blog.weidows.tech/post/lang/python/poetry/",
            "title": "poetry",
            "date_published": "2024-05-22T12:15:17.000Z",
            "content_html": "<h1>poetry</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-01 04:46:04\n * @FilePath: \\Blog-private\\source\\_posts\\python\\poetry.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-sm\"><ul>\n<li><a href=\"#poetry\">poetry</a>\n<ul>\n<li><a href=\"#matters\">matters</a>\n<ul>\n<li><a href=\"#%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E5%AE%89%E8%A3%85\">无法直接安装</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"matters\">matters</h2>\n<h3 id=\"无法直接安装\">无法直接安装</h3>\n<p>遇到无法直接通过 poetry 安装的, 可以先用 pip 装, 然后再执行一遍 poetry</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">poetry</span> run pip install torch==<span class=\"number\">2</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span>+cu118 torchvision==<span class=\"number\">0</span>.<span class=\"number\">15</span>.<span class=\"number\">2</span>+cu118 torchaudio==<span class=\"number\">2</span>.<span class=\"number\">0</span>.<span class=\"number\">2</span>+cu118 -f https://download.pytorch.org/whl/torch_stable.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">poetry</span> add torch = <span class=\"string\">&quot;2.0.1&quot;</span> torchvision = <span class=\"string\">&quot;0.15.2&quot;</span> torchaudio = <span class=\"string\">&quot;2.0.2&quot;</span></span><br></pre></td></tr></table></figure>\n<p>切忌尝试该 toml 和 source, 不会成功的…</p>\n<p>通过 poetry run pip 安装的包会在虚拟环境里</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p>暂无.</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "python"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/experience/research/%E6%AF%95%E8%AE%BE/",
            "url": "https://blog.weidows.tech/post/experience/research/%E6%AF%95%E8%AE%BE/",
            "title": "💯本科毕设-基于RGB的YBa色彩空间建模研究",
            "date_published": "2023-06-06T07:58:27.000Z",
            "content_html": "<h1>基于 RGB 的 YBa 色彩空间建模研究</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-07-04 20:29:21\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\research\\毕设.md\n * @Description:\n * 部分公式备份:\n    $$\n    {\\Delta _{RGB}} ={\\sqrt {(R_{dist}-R_{tar})^{2}+(G_{dist}-G_{tar})^{2}+(B_{dist}-B_{tar})^{2}}}\n    $$\n\n    $$\n    \\begin{align}\n    D(RGB_{dist},RGB_{tar})\n    &=  \\frac{\\vert R_{dist}-R_{tar} \\vert + \\vert G_{dist}-G_{tar} \\vert + \\vert B_{dist}-B_{tar} \\vert}{255}\n\n    &=\n    \\end{align}\n    $$\n\n    $$\n    \\alpha_{mixed} = 1 - (1-\\alpha_1) \\times (1-\\alpha_2) = 0.4\n    $$\n\n    $$\n    y_1 = +(256 \\times 3 \\times 0.75) = +576\n    $$\n    $$\n    y_2 = -(256 \\times 3 \\times 0.1) = -76.8\n    $$\n\n    $$\n    Y_{mixed} = Y(y_1 \\times \\alpha_{mixed} + (-y_2)) = 0.53\n    $$\n\n    $$\n    B1 = \\frac{R}{R+G+B} = 0 ,\\ B2 = 1- \\frac{B}{R+G+B}=1\n    $$\n\n    $$\n    Y(RGB) = 1.0000 \\times R +4.5907 \\times G + 0.0601 \\times B\n    $$\n\n    $$\n    RGB_{dist}(YBa) = Y(Y’(Y_1) + Y’(Y_2)) \\times mixbox((B_{11},B_{12}),(B_{21},B_{22})) \\times (1-\\alpha_1 \\alpha_2)\n    $$\n\n    $$\n    a(a_1,a_2) = 1 - (1-a_1) \\times (1-a_2)\n    $$\n\n    $$\n    y = \\frac{6v'}{4u' - 2v' + 12}\n    $$\n * @!: *********************************************************************\n-->\n<h2 id=\"Learning-about\">Learning-about</h2>\n<h3 id=\"色深\">色深</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZVQnQc.png\" alt=\"\"></p>\n<p>当前主流的图片/视频/显示器还是 24 位色深的真彩色, 10bit 以上还有 12bit</p>\n<hr>\n<h3 id=\"色彩模型\">色彩模型</h3>\n<ul>\n<li>\n<p>大多显示器/jpg:</p>\n<p>三原色红绿蓝/RGB, 由于目前显示器都是三原色的, 所以图像视频之类的都是三原色(不算 alpha)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZVDuhc.png\" alt=\"\"></p>\n<p>由于自发光, 红(255,0,0) + 绿(0,255,0) + 蓝(0,0,255) = 白(255,255,255)</p>\n</li>\n<li>\n<p>水彩颜料: 三原色红黄蓝/RYB</p>\n</li>\n<li>\n<p>打印机/TIFF:</p>\n<p>四原色青品黄黑/CMYK (Cyan, Magenta, Yellow, Black)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZVI5xq.png\" alt=\"\"></p>\n<p>由于吸光, 白(255,255,255) - 青(0,255,255) - 品(255,0,255) - 黄(255,255,0) = 黑(0,0,0)</p>\n<p>这里的减法不是数值上, 而是对颜色缺少的值做补充, 比如: 白(255,255,255) - 红(255,0,0) = 红(255,0,0), 红色颜料吸掉了白光里所有的绿蓝光谱, 只剩红光</p>\n<p>这个网站: <a href=\"https://www.ginifab.com.tw/tools/colors/cmyk_to_rgb.html\">印刷四分色(CMYK)轉換三原色(RGB,紅綠藍)</a> 可以进行 CMYK 与 RGB 的转换</p>\n</li>\n<li>\n<p>PNG:</p>\n<p>三原色+透明度 alpha-&gt;RGBA, 所以常见的 png 与 jpg 图片分别为 32/24 位</p>\n</li>\n<li>\n<p>GIF:</p>\n<p>单原色线性模型, 最高支持 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>256</mn></mrow><annotation encoding=\"application/x-tex\">2^8=256</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">8</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">256</span></span></span></span> 个颜色</p>\n</li>\n<li>\n<p>HSB/HSV/HSL:</p>\n<p>色相 Hue, 饱和度 Saturation</p>\n<p>明度 Brightness 或者 Value, 亮度 Lightness</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZfFpJD.png\" alt=\"\"></p>\n</li>\n</ul>\n<!-- TODO\n\n- 光谱模型\n\n  首先是能感受到光 -> 感光度 -> [0,1]\n\n  颜色 -> 频率 -> [0,360°]\n\n  色深 -> 强度 -> [0,无穷] / [0,视觉上限]\n-->\n<p>不同色彩模型区分原因是物理材料是吸/发光性质, 通过固定组合能达到良好的颜色呈现效果 <sup id='cite_ref-8'><a href=\"#cite_note-8\">[8]</a></sup></p>\n<hr>\n<h3 id=\"色彩空间-色域\">色彩空间-色域</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZVp0P5.png\" alt=\"\"></p>\n<p>一般来讲是建立在 RGB 模型上的, 比如有 sRGB (standard RGB), Rec.2020</p>\n<p>Rec.2020 就是 HDR10 的最低色域标准</p>\n<hr>\n<h3 id=\"HDR-SDR\">HDR-SDR</h3>\n<p>High Dynamic Range, 是一套显示标准 (亮度范围, 色域, 色深, 传输…)</p>\n<p>就像&quot;高质量&quot;这个词一样是厂家各自喊的, 有标准但并不统一, 倒是 SDR (standard dynamic range) 比较友好–&gt;没达到 HDR 的都叫 SDR <sup id='cite_ref-7'><a href=\"#cite_note-7\">[7]</a></sup></p>\n<hr>\n<h3 id=\"压缩\">压缩</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZVQW3K.png\" alt=\"\"></p>\n<p>像是 jpg 在被有损压缩后, 交界边缘会有表情包的那种 “绿化电子包浆” 效果, 称为噪声/失真/赝像; 同样可以类比到 mp3/mp4 的压缩 (绿化效果是 Android 的锅)</p>\n<p>而 png/GIF 格式只能无损压缩, 除非把它转成 jpg 才行</p>\n<hr>\n<h3 id=\"相机成像\">相机成像</h3>\n<p><a href=\"https://www.ruanyifeng.com/blog/2012/12/bayer_filter.html\">为什么数码相机可以拍出彩色照片？ - 阮一峰的网络日志</a></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"目-录\">目 录</h2>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%9F%BA%E4%BA%8E-rgb-%E7%9A%84-yba-%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4%E5%BB%BA%E6%A8%A1%E7%A0%94%E7%A9%B6\">基于 RGB 的 YBa 色彩空间建模研究</a>\n<ul>\n<li><a href=\"#learning-about\">Learning-about</a>\n<ul>\n<li><a href=\"#%E8%89%B2%E6%B7%B1\">色深</a></li>\n<li><a href=\"#%E8%89%B2%E5%BD%A9%E6%A8%A1%E5%9E%8B\">色彩模型</a></li>\n<li><a href=\"#%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4-%E8%89%B2%E5%9F%9F\">色彩空间-色域</a></li>\n<li><a href=\"#hdr-sdr\">HDR-SDR</a></li>\n<li><a href=\"#%E5%8E%8B%E7%BC%A9\">压缩</a></li>\n<li><a href=\"#%E7%9B%B8%E6%9C%BA%E6%88%90%E5%83%8F\">相机成像</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9B%AE-%E5%BD%95\">目 录</a></li>\n<li><a href=\"#%E6%91%98-%E8%A6%81\">摘 要</a></li>\n<li><a href=\"#%E7%AC%AC-1-%E7%AB%A0-%E7%BB%AA%E8%AE%BA\">第 1 章 绪论</a>\n<ul>\n<li><a href=\"#11-%E7%A0%94%E7%A9%B6%E8%83%8C%E6%99%AF\"><strong>1.1 研究背景</strong></a></li>\n<li><a href=\"#12-%E5%9B%BD%E5%86%85%E5%A4%96%E7%A0%94%E7%A9%B6%E7%8E%B0%E7%8A%B6%E5%88%86%E6%9E%90\"><strong>1.2 国内外研究现状分析</strong></a>\n<ul>\n<li><a href=\"#121-%E5%9B%BD%E5%A4%96\"><strong>1.2.1 国外</strong></a></li>\n<li><a href=\"#122-%E5%9B%BD%E5%86%85\"><strong>1.2.2 国内</strong></a></li>\n<li><a href=\"#123-%E6%96%87%E7%8C%AE%E8%AF%84%E8%BF%B0\"><strong>1.2.3 文献评述</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#13-%E7%A0%94%E7%A9%B6%E7%9A%84%E7%9B%AE%E7%9A%84%E5%8F%8A%E6%84%8F%E4%B9%89\"><strong>1.3 研究的目的及意义</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%AC%AC-2-%E7%AB%A0-%E8%89%B2%E5%BD%A9%E7%9A%84%E6%84%9F%E7%9F%A5%E5%8F%8A%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4%E6%A8%A1%E5%9E%8B\">第 2 章 色彩的感知及色彩空间模型</a>\n<ul>\n<li><a href=\"#21-%E6%9C%89%E8%89%B2%E5%85%89%E6%BA%90%E5%8F%8A%E9%A2%9C%E8%89%B2%E4%BF%A1%E6%81%AF\"><strong>2.1 有色光源及颜色信息</strong></a></li>\n<li><a href=\"#22-%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4%E6%A8%A1%E5%9E%8B%E5%88%86%E6%94%AF%E7%89%B9%E7%82%B9\"><strong>2.2 色彩空间模型分支特点</strong></a></li>\n<li><a href=\"#23-%E4%BA%AE%E5%BA%A6%E7%9A%84%E6%95%88%E6%9E%9C%E5%8F%8A%E8%89%B2%E5%BD%A9%E7%9A%84%E5%BF%83%E7%90%86%E6%81%92%E5%B8%B8%E6%80%A7\"><strong>2.3 亮度的效果及色彩的心理恒常性</strong></a></li>\n<li><a href=\"#24-%E8%89%B2%E5%BD%A9%E7%9A%84%E6%B7%B7%E5%90%88\"><strong>2.4 色彩的混合</strong></a></li>\n<li><a href=\"#25-posit-%E6%95%B0%E5%80%BC%E7%B3%BB%E7%BB%9F\"><strong>2.5 Posit 数值系统</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%AC%AC-3-%E7%AB%A0-%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1\">第 3 章 模型分析与设计</a>\n<ul>\n<li><a href=\"#31-%E4%BA%AE%E5%BA%A6%E5%8F%82%E6%95%B0%E8%AE%BE%E8%AE%A1\"><strong>3.1 亮度参数设计</strong></a></li>\n<li><a href=\"#32-%E9%A2%9C%E8%89%B2%E4%BF%A1%E6%81%AF%E7%9A%84%E8%A1%A8%E7%A4%BA\"><strong>3.2 颜色信息的表示</strong></a></li>\n<li><a href=\"#33-%E6%B7%B7%E8%89%B2%E7%AE%97%E6%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1\"><strong>3.3 混色算法的设计</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%AC%AC-4-%E7%AB%A0-yba-%E8%89%B2%E5%BD%A9%E6%A8%A1%E5%9E%8B%E5%AE%9E%E7%8E%B0\">第 4 章 YBa 色彩模型实现</a>\n<ul>\n<li><a href=\"#41-%E4%BA%AE%E5%BA%A6%E8%AE%A1%E7%AE%97%E4%B8%8E%E8%A1%A8%E7%A4%BA\"><strong>4.1 亮度计算与表示</strong></a></li>\n<li><a href=\"#42-yba-%E7%9A%84%E6%95%B0%E5%80%BC%E8%BD%AC%E6%8D%A2%E5%8F%8A%E8%A1%A8%E7%A4%BA\"><strong>4.2 YBa 的数值转换及表示</strong></a></li>\n<li><a href=\"#43-%E6%B7%B7%E8%89%B2%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0\"><strong>4.3 混色算法的实现</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%AC%AC-5-%E7%AB%A0-%E7%BB%93%E8%AE%BA%E4%B8%8E%E5%B1%95%E6%9C%9B\">第 5 章 结论与展望</a>\n<ul>\n<li><a href=\"#51-%E5%B7%A5%E4%BD%9C%E7%BB%93%E8%AE%BA\"><strong>5.1 工作结论</strong></a></li>\n<li><a href=\"#52-%E5%B7%A5%E4%BD%9C%E5%B1%95%E6%9C%9B\"><strong>5.2 工作展望</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%87%B4%E8%B0%A2\">致谢</a></li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n\n\n\t<div class=\"row\">\n    <embed src=\"../../../../categories/本科毕设论文.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n<h2 id=\"摘-要\">摘 要</h2>\n<p>随着电子科技的进步，越来越多的电子设备安装配备了显示屏幕，摄影和录像设备也被一体化的结合到了手机电脑之中，其中屏幕所发出的光是我们捕获屏幕信息的唯一途径。可见光的颜色和亮度是我们人类视觉能感受到的最具体和实际的两个光学信息，对于可见光的建模表示以及各种转换算法的迭代过程造就了社会发展中屏幕由黑白向丰富多彩的转变，但通用色彩模型在某些特定领域或特殊场景仍存在亟待改进之处。本研究调研分析了国际照明委员会 CIE 提出的主流色彩空间，分析其在亮度表示和混色算法上的优缺点并展开问题探究并提出 YBa 色彩模型，可有效解决 CIE-RGB 分支模型中对于亮度信息不敏感的问题，并同时提出基于 YBa 的混色算法，可为真实场景中可见光和反光物体的混色进行仿真计算。最后结合实际数据进行实验对比，得出可提供比 RGB 模型更广的亮度表示范围，以及颜色差异更小的混色算法。此研究的意义在于提供一个更加符合亮度的直观描述、混色运算更为合理的模型与算法，同时可以解决现实中已存在的问题。</p>\n<p>关键词：色彩空间；颜色建模；Posit；混色算法</p>\n<p>With the advancement of electronic technology, more and more electronic devices are equipped with display screens, and photography and video equipment are integrated into cell phones and computers, where the light emitted from the screen is the only way we can capture the information on the screen. The color and luminance of visible light are the two most concrete and practical optical information that we can perceive in human vision. The modeling representation of visible light and the iterative process of various conversion algorithms have contributed to the transformation of the screen from black and white to colorful in the development of society, but there are still urgent improvements to the universal color model in some specific areas or special scenarios. This study analyzes the mainstream color space proposed by the International Commission on Illumination (CIE), analyzes the advantages and disadvantages of its luminance representation and color mixing algorithm, and proposes the YBa color model, which can effectively solve the problem of insensitivity to luminance information in the CIE-RGB branch model, and proposes a YBa-based color mixing algorithm, which can be used for color mixing of visible light and reflective objects in real scenes. Simulation calculation. Finally, the experimental comparison with the actual data results in a color mixing algorithm that can provide a wider range of luminance representation and less color variation than the RGB model. The significance of this study is to provide a model and algorithm that is more consistent with the intuitive description of luminance and a more reasonable color mixing operation, as well as to solve the existing problems in reality.</p>\n<p><strong>Key words:</strong> Color space; Color modeling; Posit; Color mixing algorithm</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"第-1-章-绪论\">第 1 章 绪论</h2>\n<h3 id=\"1-1-研究背景\"><strong>1.1 研究背景</strong></h3>\n<p>颜色建模和表示是计算机图形学中的一个重要概念，它涉及到如何用数学方式描述和生成各种颜色。不同的颜色模型有不同的优点和缺点，适用于不同的应用场景。例如，RGB 颜色模型是一种加色模型，它使用红、绿、蓝三原色的亮度来定量表示颜色，适合于显示器等发光体的显示。YUV 颜色模型是一种将亮度信息（Y）与色彩信息（UV）分离的模型，适合于电视系统以及模拟视频领域，它可以减少数据量并保持较好的图像质量。颜色建模和表示对于图像处理、视频编码、颜色匹配、颜色校正等任务都有重要的作用，需要根据不同的需求选择合适的颜色模型，并进行相应的转换和计算。</p>\n<p>在 1931 年国际照明委员会 CIE 通过实验测的人类视觉三刺激值并提出 CIE-RGB 后，人类对于色彩空间建模的研究便打开了大门。然而目前学界与业界并没有一刀切解决所有问题的方案，随着技术的发展，很多新提出的色彩空间模型都尝试在新道路上发掘潜力。取决于人类只有红绿蓝三种色觉视锥感受器，所有人类能看到的颜色都可以用红绿蓝三基色配出。</p>\n<p>在使用 RGB 模型表示时会遇到缺陷：三刺激值会出现负值，影响数值表示和计算，之后 CIE 提出并推荐使用 CIE-XYZ 模型表示颜色，这个系统使用的是虚拟的 XYZ 三基色，XYZ 的基色定义对颜色表示很有效，但是也引来了另一个问题：不符合人类直观感受，因为是虚拟的和强关联的数值表示，人类很难从数值中感受大致颜色，在调色时也会遇到多变量的困难。其后 CIE 提出 CIE-xyY 颜色空间，通过归一化 xyz 可以免去表示 z，定义使用 Y=Y 表示亮度。另外，CIE-XYZ 系统的色度图上表示的两颜色距离于人类观察的直观感受不一致，即会出现感知均匀性问题，为解决此问题 CIE 专家对 XYZ 模型进行非线性变换，制定了 CIE-L*a*b*颜色空间。</p>\n<h3 id=\"1-2-国内外研究现状分析\"><strong>1.2 国内外研究现状分析</strong></h3>\n<h4 id=\"1-2-1-国外\"><strong>1.2.1 国外</strong></h4>\n<p>国外的研究不仅涉及到颜色空间模型的基础理论、应用以及算法等方面，还包括了颜色感知、颜色管理、颜色测量、色彩混合等方面。美国科罗拉多大学的 Mark D. Fairchild 教授的名为《Color Appearance Models》的书籍，对颜色感知和颜色空间模型进行了详细介绍（包括对人类视觉系统、心理的影响以及具体的三刺激值函数）。关于 RGB 的亮度的表示和转换，也有相关文献集中在展示以及硬件工程领域，如光源材料衰老导致的亮度衰减控制。在混色算法的发展上，多来自于工程软件和硬件，如 LED 混色光源设计、屏幕材料以及 Photoshop 绘图软件之类，也有部分工作是受真实环境中物理颜料混色的启发。</p>\n<h4 id=\"1-2-2-国内\"><strong>1.2.2 国内</strong></h4>\n<p>关于颜色空间建模,国内的研究主要集中在颜色空间模型的基础理论、应用以及算法等方面。例如，中国科学院自动化研究所的王宏伟等人在《计算机学报》上发表了一篇名为《颜色空间模型及其应用》的综述，对颜色空间模型的基础理论、应用以及算法等方面进行了详细介绍。图像识别领域中，色彩空间模型也是重要基石之一，随着机器学习和深度学习的快速发展，其在识别以及预测任务上取得较大进展。国内环境近十年互联网的快速发展也带来了视频图像的爆发式发展，其中颜色信息也在图形图像处理中发挥巨大作用。</p>\n<h4 id=\"1-2-3-文献评述\"><strong>1.2.3 文献评述</strong></h4>\n<p>总体来说，现阶段学术界的研究更偏向于在细分领域解决不同种模型的应用弱点，由此细分出了诸如 CIE XYZ、YUV、HSL、HSV 之类的二级模型，以及对更为前沿的 YIQ、YCbCr 这种三级模型的研究。对于 RGB 模型与可见光亮度分析结合领域，仍存在可供研究和解决的亮度问题，以及在常用色彩空间模型的混色算法上，也存在一些体现在模型上的棘手问题。为此本文提出 YBa 色彩空间模型，从亮度表示以及混色算法两个角度入手设计和实现模型。</p>\n<h3 id=\"1-3-研究的目的及意义\"><strong>1.3 研究的目的及意义</strong></h3>\n<p>在一些高科技领域，相机拍摄的原始数据对于机器处理是非常重要的。原始数据可以保留更多的细节和信息，比如光线、色彩、对比度等，这些对于机器学习或深度学习的算法来说是有价值的。然而，如果把原始数据转换成 RGB 格式，虽然可以让人眼看起来更舒服，但是也会损失一些应有的数据，导致机器处理的效果变差。</p>\n<p>例如，在自动驾驶领域，使用 RGB 格式的数据训练模型可能会导致收敛速度变慢，或者在二维码识别时需要做额外的处理。在人脸识别领域，使用 RGB 格式的数据也会遇到一些问题，比如小范围低精度的 Hex 或传统 8bit-RGB 无法准确地区分虹膜的色彩差异，这会降低人脸认证的安全性和准确性。因此在这些领域，色彩空间建模和数据表示方法是需要特别改进的。</p>\n<h2 id=\"第-2-章-色彩的感知及色彩空间模型\">第 2 章 色彩的感知及色彩空间模型</h2>\n<h3 id=\"2-1-有色光源及颜色信息\"><strong>2.1 有色光源及颜色信息</strong></h3>\n<p>颜色就像语言对话，是客观的声音加上人脑主观处理所得到的感受，所以在不同环境下或者不同人对同一种颜色的感受也是略有不同的。我们眼镜接收到的所有颜色信息都是来自于光，我们对光线的物理量（波长、频率、频谱、强度分布）与色彩的人为感受联系起来是为色度学。通过光线的波动方程式可以获取客观的颜色信息（如公式 2-1）。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>u</mi><mrow><mi>t</mi><mi>t</mi></mrow></msub><mo>=</mo><msup><mi>c</mi><mn>2</mn></msup><mrow><mo fence=\"true\">(</mo><msub><mi>u</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>y</mi><mi>y</mi></mrow></msub><mo>+</mo><msub><mi>u</mi><mrow><mi>z</mi><mi>z</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mn>2</mn><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">u_{tt} = c^{2}\\left( u_{xx} + u_{yy} + u_{zz} \\right)\\quad\\quad(2 - 1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">tt</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1502em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">xx</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">yy</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">zz</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中 c 是光速，x:y:z 是空间的坐标，t 是时间的坐标，u(x,y,z,t)是描写光的函数，下标表示取偏导数。通过傅里叶变换可以获得波长分布以及每个波长的振幅，由此我们可以得到这个光在每个波长的强度，由此可以从波动方程式获得一个光谱。</p>\n<p>光的颜色是由它的波长决定的，但是我们看到的颜色并不一定是光的真实波长。这是因为大部分的光源发出的光不是单色的，而是由多种波长和强度的光组合而成的。人眼对于这些混合光的颜色有一种适应性，使得我们能够把它们和单色光源发出的光的颜色相匹配。例如，显示器上显示的橙色，其实是由红色和绿色的光混合而成的，因为显示器不能产生单色的橙色。但是我们的眼睛会把它和 600nm 的单色橙色光视为同一种颜色。另一方面，有些颜色是不存在单色光源的，比如黑色、灰色和白色，以及粉红色或淡紫色。这些颜色只能由多种波长和强度的光混合而成，所以它们没有对应的单一波长。</p>\n<p>卤族元素是指元素周期表中第七 A 族的元素，包括氟、氯、溴、碘和砹。这些元素的最外层电子只有七个，所以它们很容易与其他元素形成化合物，或者捕获一个电子变成负离子。当卤族元素的原子或离子受到电场或热能的激发时，它们的电子会从低能级跃迁到高能级，然后再跃迁回低能级，同时释放出光子。这些光子的波长和能量取决于电子跃迁的能级差。由于卤族元素的能级结构比较简单，所以它们发出的光只有几种特定的波长，形成明亮的单色光或双色光。例如，氯气放电时发出蓝绿色光，碘气放电时发出紫色光。卤族元素因此常被用于制作人造光源，如氖灯、汞灯、卤素灯等。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/oso2Yt.png\" alt=\"图 2-1 不同光谱分布图\"></p>\n<p>实验表明，这四种光在人眼看来都是白光（如图 2-1）。因此看起来 HVS 对光源的具体光谱成分并不是特别在意。一个理想的黑体（如太阳）发射连续光谱，光谱的功率分布取决于黑体的温度，即色温。在上图的(b)~(d)例子中，谱线是分立的，并不符合色温的定义。因此引入相关色温（Correlated Color Temperature, CCT）的概念，任意光源与色温为 T 的黑体激发的颜色知觉相同，则该光源的相关色温定义为 T。</p>\n<h3 id=\"2-2-色彩空间模型分支特点\"><strong>2.2 色彩空间模型分支特点</strong></h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoWXu.png\" alt=\"图 2-2 色彩空间分支\"></p>\n<p>国际照明委员会（CIE）是一个专门研究光学和色彩的国际组织，它在 1931 年制定了一套基于水银光谱的三基色光系统。该系统定义了三种基本的光色，分别是红色、绿色和蓝色，它们的波长分别为 700nm, 546.1nm, 435.8nm。这三种光色的光通量也被规定分别是 1 光瓦、4.5907 光瓦和 0.0601 光瓦，分别用 RGB 表示。这三种光色可以按照不同的比例混合产生各种不同的光色。如图 2-2，主流色彩空间分支都在以 RGB 做为最底层的基础。</p>\n<p>CIE-1931 RGB 颜色空间是一种基于人类视觉系统的颜色表示方法，它将可见光谱分为三个基本的颜色分量：红色（R）、绿色（G）和蓝色（B）。这三个分量可以用三维坐标系来表示，其中每个轴对应一个分量的强度。CIE-1931 RGB 颜色空间的目的是为了能够准确地描述人眼所能感知的所有颜色，但是它也存在一些问题。其中一个问题就是，由于人眼对不同波长的光有不同的敏感度，所以有些颜色不能用正数的 RGB 值来表示，而需要用负数来表示。这就导致了 CIE-1931 RGB 颜色空间的不均匀性和不连续性，给颜色匹配和转换带来了困难。例如，在下图中，我们可以看到红色分量在 435.1~546.1 波段出现了负值，这意味着这些颜色不能用实际的光源来产生，而只能用计算机模拟。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/oso92v.png\" alt=\"图 2-3 CIE-RGB 与 CIE-XYZ 三刺激函数\"></p>\n<p>CIE 1931-XYZ 颜色空间是一种基于人类视觉系统的颜色表示方法，它由 CIE 在同年 1931 年提出，是最早的颜色空间标准之一。它使用三个参数 X、Y、Z 来描述颜色，其中 Y 代表亮度，X 和 Z 代表色度。它的优点是能够包含人眼能够感知的所有颜色，而且不受具体设备的影响，因此可以作为不同颜色空间之间的转换基准。另一方面，缺点是它不符合人类对颜色的直觉感受，因为 X、Y、Z 三个参数是虚拟基色并不对应于颜色的三个基本属性：色相、饱和度和明度。</p>\n<p>CIE-1960 UCS 颜色空间是一种基于 CIE-1931 XYZ 颜色空间的均匀颜色空间，它旨在解决 CIE-1931 XYZ 颜色空间的一个主要问题，即在计算色差时，不同颜色区域的误差容忍度不同。为了使颜色的计算和比较更加一致和准确，CIE 在 1937 年引入了 Mac Adam 的(u,v)色坐标系，该坐标系将 (x, y) 转换为 (u,v)，并在 1960 年正式采用。CIE-1960 UCS 颜色空间的优点是它更接近于人眼对颜色的感知，因此可以更好地反映颜色之间的差异。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoOKE.png\" alt=\"图 2-4 CIE-UCS 1960 与 1976 颜色空间\"></p>\n<p>由于 (u,v) 色坐标系統仍无法与视觉颜色同步化，因此 Mac Adam 继续深化研究，最终在 1973 年决定将 v 坐标再加上 50%，这个系统又被采纳为 CIE 1976 UCS (Uniform Chromaticity Scale) 色度坐标系統，使其形成的色域接近均匀色度空间，让色彩差异得以量化，在各种文献中也称 CIE LUV 颜色空间。 CIE 1976 UCS 的色度坐标 u' 和 v' 可以从三刺激值 X, Y, Z 或从色度坐标 x, y 按照以下公式计算得到（如公式 2-2~2-5）。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>u</mi><mo mathvariant=\"normal\">′</mo><mo>=</mo><mfrac><mrow><mn>4</mn><mi>X</mi></mrow><mrow><mi>X</mi><mo>+</mo><mn>15</mn><mi>Y</mi><mo>+</mo><mn>3</mn><mi>Z</mi></mrow></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>2-2)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>v</mi><mo mathvariant=\"normal\">′</mo><mo>=</mo><mfrac><mrow><mn>9</mn><mi>Y</mi></mrow><mrow><mi>X</mi><mo>+</mo><mn>15</mn><mi>Y</mi><mo>+</mo><mn>3</mn><mi>Z</mi></mrow></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>2-3)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>x</mi><mo>=</mo><mfrac><mrow><mn>9</mn><mi>u</mi><mo mathvariant=\"normal\">′</mo></mrow><mrow><mn>4</mn><mi>u</mi><mo mathvariant=\"normal\">′</mo><mo>−</mo><mn>2</mn><mi>v</mi><mo mathvariant=\"normal\">′</mo><mo>+</mo><mn>12</mn></mrow></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>2-4)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>y</mi><mo>=</mo><mfrac><mrow><mn>6</mn><mi>v</mi><mo mathvariant=\"normal\">′</mo></mrow><mrow><mn>4</mn><mi>u</mi><mo mathvariant=\"normal\">′</mo><mo>−</mo><mn>2</mn><mi>v</mi><mo mathvariant=\"normal\">′</mo><mo>+</mo><mn>12</mn></mrow></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>2-5)</mtext></mrow><annotation encoding=\"application/x-tex\">u\\prime = \\frac{4X}{X + 15Y + 3Z}\\quad\\quad(\\text{2-2}\\text{)}\n\\\\ \\ \\\\\nv\\prime = \\frac{9Y}{X + 15Y + 3Z}\\quad\\quad(\\text{2-3}\\text{)}\n\\\\ \\ \\\\\nx = \\frac{9u\\prime}{4u\\prime - 2v\\prime + 12}\\quad\\quad(\\text{2-4}\\text{)}\n\\\\ \\ \\\\\ny = \\frac{6v\\prime}{4u\\prime - 2v\\prime + 12}\\quad\\quad(\\text{2-5}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">15</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">2-2</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5556em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">15</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">9</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">2-3</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">12</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">9</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">′</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">2-4</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0908em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mord mathnormal\">u</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">′</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">12</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">6</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">′</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">2-5</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<h3 id=\"2-3-亮度的效果及色彩的心理恒常性\"><strong>2.3 亮度的效果及色彩的心理恒常性</strong></h3>\n<p>同一种颜色在不同的亮度中会产生不同的颜色感。这个现象的原因是我们的眼睛中除了有锥状细胞外还有可以感光的杆状细胞。杆状细胞虽然一般被认为只能分辨黑白，但它们对不同的颜色的灵敏度是略微不同的，因此当光暗下来的时候，杆状细胞的感光特性就越来越重要了，它可以改变我们对颜色的感觉。</p>\n<p>根据 Retinex 理论，人类对颜色的感知不仅取决于视网膜上的信号，还取决于大脑皮层的处理。人类的视觉系统可以分离出图像的照度和反射分量，从而实现颜色恒常性，即物体的颜色不随光照条件而改变。Retinex 理论可以用来增强图像的对比度、亮度和色彩。Retinex 图像增强算法有多种，其中一种是多尺度 Retinex 算法（MSR），它通过对原始图像进行不同尺度的高斯滤波，然后将滤波后的结果进行加权求和，得到反射分量。另一种是带色彩恢复的多尺度 Retinex 算法（MSRCR），它在 MSR 的基础上，加入了一个色彩恢复因子，用来保持图像的色彩平衡。</p>\n<p>梵高的部分画作就是典型的 Retinex 效果的例子，如图 2-5 他利用了人类视觉系统对颜色感知的特点，创造了一种独特的艺术风格。通俗理解就是大脑并不会随着亮度的变化而改变对此幅画作色彩的理解，我们可以看出左右两图在环境亮度上的差异，但并没有感觉到了其颜色的变化。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoKFA.png\" alt=\"图 2-5 梵高画作图及高亮对比\"></p>\n<h3 id=\"2-4-色彩的混合\"><strong>2.4 色彩的混合</strong></h3>\n<p>颜色与频率的关系是一个复杂而有趣的话题。一般来说颜色是由光的频率决定的，而不是波长。这是因为光的频率在不同介质中是恒定的，而波长会随着介质的折射率而变化。例如，一束红光从空气射入水中，它的波长会变短，但它的频率不会变，所以它仍然是红光。</p>\n<p>但是，颜色也不是完全由频率决定的，而是受到人眼和大脑的影响。人眼有三种视锥细胞，分别对短波（蓝）、中波（绿）和长波（红）光敏感。当光照射到视网膜上时，视锥细胞会产生不同程度的刺激，然后传递给大脑。大脑会根据视锥细胞的信号，综合判断出颜色。</p>\n<p>因此，颜色是一个主观的概念，不同的人可能对同一种光有不同的感受。有些人甚至可以分辨出几亿种颜色。颜色也会受到环境、心理、文化等因素的影响。所以，颜色与频率之间并不是一一对应的关系，而是大致相似的关系。正确的理解是，颜色是特定频率的光与人眼相互作用而在人大脑中形成的主观幻像。</p>\n<p>光的颜色是由它的频率决定的，而不是波长。因为光在不同的介质中，它的波长会发生变化，但是它的频率不会变。一种频率对应一种颜色，但是一种颜色可以由不同的频率组合而成，这就是加色混合的原理。例如，红光和绿光混合后，我们看到的是黄光，但是它们的频率并没有改变，只是我们的眼睛和大脑对颜色的感知发生了变化。简单地说，混合并没有改变光的频率，而是改变了人眼+人脑对色彩的感知，这是由于人类视觉系统的局限性所致。人眼视网膜上有三种类型的视锥细胞，分别对红、绿、蓝三种基本颜色敏感。当我们看到不同颜色的光时，这些细胞会产生不同程度的神经刺激信号，传递给大脑，大脑根据这些信号来判断我们看到的颜色。</p>\n<p>有色光三原色可以通过不同的比例混合产生人类能够感知的所有颜色。</p>\n<blockquote>\n<p>表 2‑1 不同混色算法</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">序号</th>\n<th style=\"text-align:center\">标签</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">相加混色</td>\n<td style=\"text-align:center\">红色+绿色+蓝色=白色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">红色+绿色=黄色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">红色+蓝色=品红/紫色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">绿色+蓝色=青色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">互补混色</td>\n<td style=\"text-align:center\">黄色+蓝色=白色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">品红+绿色=白色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">青色+红色=白色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">相减混色</td>\n<td style=\"text-align:center\">白色-红色=青色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">白色-绿色=品红</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">白色-蓝色=黄色</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<h3 id=\"2-5-Posit-数值系统\"><strong>2.5 Posit 数值系统</strong></h3>\n<p>训练许多现代人工智能工具背后的大型神经网络需要真正的计算能力:例如，OpenAI 最先进的语言模型 GPT-3 需要惊人的亿万亿次运算来训练，并花费了大约 500 万美元的计算时间。工程师们认为他们已经找到了一种方法，通过使用一种不同的表示数字的方式来减轻负担。</p>\n<p>这种新的数字表示方法被称为 Posit，是对今天使用的标准浮点算术处理器的改进。Posit 是由约翰·古斯塔夫森(John Gustafson)和艾萨克·约内本(Isaac Yonemoto)于 2017 年开发的，作为一种替代 IEEE 754 浮点标准的方案。与浮点数不同，Posit 具有可变宽度的有效位和指数位，以及一个 u 位，用于确定 Posit 是否对应于一个精确的数或一个区间。这使得 Posit 可以覆盖整个扩展实数线。马德里康普顿斯大学的一组研究人员开发了第一个在硬件中实现 Posit 标准的处理器内核，并表明，与使用标准浮点数进行计算相比，逐位基本计算任务的精度提高了四个数量级。此外他们还发现，使用 16 位或 8 位 Posit 可以在保持相同或更高精度的同时，提高机器学习应用程序的效率和内存使用率。英伟达、Arm 和英特尔就机器学习应用程序使用 8 位浮点数而不是通常的 32 位或 16 位浮点数的规范达成了一致。使用更小、精度更低的格式可以提高效率和内存使用率，但代价是降低计算精度。相比之下，Posit 可以在不牺牲精度的情况下，提供更大的动态范围和更多的有效位。因此，Posit 有望成为未来人工智能工具的理想选择。</p>\n<p>实数的精确表示是计算机科学中的一个巨大挑战，因为它们有无限的精度，而硬件只能存储有限的位数。浮点数是一种常用的实数表示方法，它使用一个符号位、一个指数位和一个尾数位来编码一个数字。然而，浮点数有一些缺点，例如舍入误差、不均匀的分布和溢出问题。为了克服这些问题，一种新的实数表示方法被提出，称为 Posit。Posit 是一种基于浮点数的扩展，它增加了一个可变长度的&quot;regime&quot;位，用于调整指数的范围。这样，Posit 可以根据数字的大小自动调整精度，从而在数轴上实现更均匀和优雅的分布。</p>\n<p>Posit 的一个重要应用领域是深度神经网络，它是一种由多层非线性单元组成的机器学习模型。深度神经网络需要大量的计算资源来训练和推理，其中最常见的操作是矩阵乘法。矩阵乘法涉及大量的乘法累加运算，每次运算都可能导致舍入误差和溢出。为了减少这些影响，Posit 提供了一种特殊的寄存器，称为 quire，它可以在不损失精度的情况下累积多个 Posit 值。然而，目前的硬件还没有原生支持 Posit 运算，因此使用 Posit 需要在软件层面进行转换，这会增加计算开销和复杂性。</p>\n<p>为了评估 Posit 在深度神经网络中的性能和准确性，Complutense 团队设计了一种基于 FPGA 的硬件实现，它可以并行执行 32 位浮点和 32 位 Posit 的矩阵乘法。他们将其结果与使用 64 位浮点作为基准的结果进行了比较，并发现 Posit 在精确度方面有显著的提升，达到了四个数量级。此外，他们还发现 Posit 在计算时间方面与浮点相当，只是稍微增加了芯片面积和功耗。这些结果表明 Posit 是一种有前途的实数表示方法，它可以为深度神经网络提供更高的精度和效率。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoUn5.png\" alt=\"图 2-6 Posit 与 float 对比\"></p>\n<h2 id=\"第-3-章-模型分析与设计\">第 3 章 模型分析与设计</h2>\n<h3 id=\"3-1-亮度参数设计\"><strong>3.1 亮度参数设计</strong></h3>\n<p>在 CIE-RGB 色彩模型中，我们对&quot;亮度&quot;这一概念的感知，实际是通过控制 RGB 每个分量的大小（光波振幅）来表示，而不同分量的配比控制的是颜色（也就是光波频率）。这也就导致了在想调整颜色的同时，一定会改变亮度。由于感光视感细胞的存在，使得亮度应为 RGB 之外的维度，对于显示器来说由全局控制，也就是控制的是[0，n]这个波动范围的上限，按比例伸缩。所以在 RGB 色彩表示中，纯白色一定是最亮的，其他颜色一定没有纯白色视觉感受亮度高。</p>\n<p>如图 3-1 为在屏幕上播放电焊机焊接模拟的画面，焊区的闪光不会有格外刺眼的情况（屏幕亮度上限远比电焊机闪光真实亮度小），视觉感受上接近纯白色的铁架（252,252, 250）与电焊机的闪光（254, 254, 233）亮度比较起来相近甚至更耀眼，因为电焊机的光中蓝光部分稍弱，在 RGB 中表示为亮度更弱一些的黄光，这就是 RGB 表示中亮度表示的反常所在。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osogz0.png\" alt=\"图 2-1 特殊环境下亮度对比图\"></p>\n<p>传统 CIE-RGB 色彩空间对于色光的亮度表示还存在其他缺陷，比如两同颜色的光源在叠加后，颜色不变亮度会更高（如图 3-2），但在 CIE-RGB 中只能将其视为另一种颜色表示，单纯的亮度变化会使 RGB 分量都会进行扩缩。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osorBm.png\" alt=\"图 3-2 色光的亮度叠加\"></p>\n<p>现有的含有亮度信息的色彩模型比如 CIE-Yxy，它基于 CIE XYZ 色彩空间，但是更加直观和方便。CIE Yxy 色彩空间定义 Y 参数是颜色的明度或亮度的测量。颜色的色度接着通过两个导出参数 x 和 y 来指定，它们是所有三个三色刺激值 X、Y 和 Z 的函数所规范化的三个值中的两个。x 和 y 可以用来在二维色度图上表示颜色，而 Y 可以用来表示颜色的亮度。CIE-Yxy 在亮度定义和表示上存在一定问题和误差。虽然在数值表示和计算上很方便，但并不符合真实情况和变化感受。</p>\n<p>此处对于亮度信息，采用与 CIE-RGB 不同的方式，单独作为一个分量表示，而隐含在 RGB 中的亮度信息作为先验。在第二章色彩的心理恒常性也侧面验证了，在建立色彩模型时，独立出亮度分量的可行性和有效性。</p>\n<h3 id=\"3-2-颜色信息的表示\"><strong>3.2 颜色信息的表示</strong></h3>\n<p>常用的 CIE-RGB 模型表示中，RGR 常以三个 8 位的整数组合来表示，如（100,50,50），这种表示对于计算机和人类来说都比较直观简易，但同时也使得在色彩表示精度和均匀度上存在不足。而 CIE-XYZ 则是摒弃了人为观测的角度，虚拟 XYZ 分量使得 RGB 在通过矩阵转换后非常不符合直观感受。</p>\n<p>此部分提出使用两个 Posit 数值的 Bias 来替代表示三个 RGB 分量，如（0.375,0.875）。与 RGB 对比同样位数表使用 Posit 数值系统表示颜色, 在精度可以提升很多（与 RGB 的 uint8 相比，Posit8 可以扩大<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>10</mn></msup></mrow><annotation encoding=\"application/x-tex\">2^{10}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span></span></span></span></span></span></span></span>以上的数值表示范围），同时在使用 FPGA 硬件计算时性能也可以得到一定提升。</p>\n<h3 id=\"3-3-混色算法的设计\"><strong>3.3 混色算法的设计</strong></h3>\n<p>在 CIE-RGB 色彩模型基础上，使用传统混色算法，是 RGB 数值分别叠加再除以 2 所得，因为 RGB 三值在物理的数值选择上并不均匀，通过这种简单平均得出的颜色与真实情况会存在肉眼可见的色值差异。如图 3-3 左侧，纯正的黄色与蓝色混合得到了很大程度上偏向灰色的绿色。此处使用 mixbox 优化算法，得到一个更符合真实场景下的混色色值结果（如图 3-3 右侧绿色色值）。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoVsh.png\" alt=\"图 3-3 混色色值非正常的传统算法\"></p>\n<p>传统算法常用于计算机 Web 端含带 Alpha 通道的 RGBA 色彩模型的混色，而对于仿真场景中两颜色混合后亮度的叠加或衰减则缺乏支持。如图 3-4 所示，红色与蓝色混合后，并没有对紫色的亮度造成变化，而在真实场景中两颜色的混色一定会对其亮度产生叠加或衰减变化。</p>\n<p>结合章节 3.1 的亮度表示与 3.2 的颜色表示，可以从亮度混合与颜色混合两条路出发，在经过算法计算后得到最终亮度+颜色色值的组合结果。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoYvc.png\" alt=\"图 3-4 适用于 RGBA 的混色算法\"></p>\n<h2 id=\"第-4-章-YBa-色彩模型实现\">第 4 章 YBa 色彩模型实现</h2>\n<h3 id=\"4-1-亮度计算与表示\"><strong>4.1 亮度计算与表示</strong></h3>\n<p>在第三章模型分析与设计中，设计了比主流模型更合理的亮度参数，通过适用于高精度高范围的 Posit 数值系统表示亮度与颜色，并基于此亮度与颜色表示设计混色算法，结合此三点提出 YBa 色彩空间模型。不同于常见的 CIE-RGB、CIE-L*a*b*色彩空间，YBa 模型并没有对色光三基色直接进行建模和数值表示，而是通过对应的三刺激值通过计算得出的色彩模型。其中 Y 采用类似于 YUV 色彩空间中的亮度计算方法，B 为 RGB 三种中间色在[0,1]中的偏置表示，a 是 Alpha 表示色光或物体的本身光学属性。</p>\n<p>真实场景中色光与颜料的混色算法是相反的，色光符合混合加法，亮度会提升趋近于白色；而颜料的混合符合减法，亮度降低趋近于黑色，此差异在印刷品的颜色表示和检测中尤为重要。如下代码表示，对红色和绿色进行 1:10 混合，在混合 10 次与 20 次后分别输出 RGB 色值并作图对比，如图 4-1 所示，颜色的偏移符合自然混色，但是亮度的变化是相反的，真实场景下颜料的混合不会越混合越亮。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> mixbox</span><br><span class=\"line\"></span><br><span class=\"line\">rgb1 = (<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)  <span class=\"comment\"># red</span></span><br><span class=\"line\">rgb2 = (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>)  <span class=\"comment\"># green</span></span><br><span class=\"line\">rgb3 = (<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>)  <span class=\"comment\"># blue</span></span><br><span class=\"line\"></span><br><span class=\"line\">mixed_color = rgb1</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    mixed_color = mixbox.lerp(mixed_color, rgb2, <span class=\"number\">0.1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mixed_color)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    mixed_color = mixbox.lerp(mixed_color, rgb2, <span class=\"number\">0.1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mixed_color)</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoPMz.png\" alt=\"图 4-1 混色亮度对比\"></p>\n<p>此处使用 Posit 来记录数值，Posit 自带的正负位可作为光源属性位，在支持的场景下使用时（比如在图形学的光照、光线追踪），+代表是光源的光，-代表是物体反射的光。这样做的目的是区分开光线混合时使用的算法。如图 4-2，左右分别为粉色和黄色的灯光交叉照在纸上，亮度为两正叠加。如果为两个不同颜色的彩笔交叉画，则是两负叠加，亮度衰减。例如亮度表示为-20 的纸张被亮度为+100 的光线照射，物体当前状态所表示的亮度应为 80。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoa8A.png\" alt=\"图 4-2 亮度的叠加与衰减\"></p>\n<p>首先假定 YBa 颜色模型的亮度 y 为负无穷到正无穷的实数表示，正数表示有色光，而负数表示反光物体，可通过正负判断光源并支持亮度叠加或衰减，通过 CIE-RGB 模型的数值表示与对应 CIE 标准光通量的相乘后相加作为等能光强度（如公式 4-1）</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo stretchy=\"false\">(</mo><mstyle mathcolor=\"Red\"><mi>R</mi></mstyle><mstyle mathcolor=\"Green\"><mi>G</mi></mstyle><mstyle mathcolor=\"Blue\"><mi>B</mi></mstyle><mo stretchy=\"false\">)</mo><mo>=</mo><mo>±</mo><mo stretchy=\"false\">(</mo><mn>0.299</mn><mstyle mathcolor=\"Red\"><mi>R</mi></mstyle><mo>+</mo><mn>0.587</mn><mstyle mathcolor=\"Green\"><mi>G</mi></mstyle><mo>+</mo><mn>0.114</mn><mstyle mathcolor=\"Blue\"><mi>B</mi></mstyle><mo stretchy=\"false\">)</mo><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-1)</mtext></mrow><annotation encoding=\"application/x-tex\">y({\\color{Red}R}{\\color{Green}G}{\\color{Blue}B}) = \\pm (0.299{\\color{Red}R} + 0.587{\\color{Green}G} + 0.114{\\color{Blue}B})\\quad\\quad(\\text{4-1}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"color:Green;\">G</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">±</span><span class=\"mopen\">(</span><span class=\"mord\">0.299</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0.587</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"color:Green;\">G</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.114</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-1</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<blockquote>\n<p><a href=\"https://zh.numberempire.com/graphingcalculator.php?functions=1%2F(1%2Be%5E(-x))&amp;xmin=-7.944495&amp;xmax=8.68602&amp;ymin=-0.674372&amp;ymax=1.325628&amp;var=x\">图 4-3 Sigmod 激活函数</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://zh.numberempire.com/graphingcalculator.php?functions=2%2F(1%2Be%5E(-x%2F256))-1&amp;xmin=-1765.093165&amp;xmax=1756.671018&amp;ymin=-1.503028&amp;ymax=1.621972&amp;var=x\">图 4-4 亮度 Y 激活函数</a></p>\n</blockquote>\n<p>为了解决物理设备对亮度显示的限制问题，此处采用了一种基于原版 Sigmod（如图 4-3）优化后的激活函数（如图 4-4 及公式 4-2），将亮度的数值表示从无界变为有界。这样既保证了亮度的连续可变性，也可以在数值计算和设备运行时避免亮度过高和过低或者溢出的情况，保证亮度在显示器支持范围[0,1]内变化。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>2</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>y</mi><mi mathvariant=\"normal\">/</mi><mn>128</mn></mrow></msup></mrow></mfrac><mo>−</mo><mn>1</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-2)</mtext></mrow><annotation encoding=\"application/x-tex\">Y(y) = \\frac{2}{1 + e^{- y/128}} - 1\\quad\\quad(\\text{4-2}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1088em;vertical-align:-0.7873em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mtight\">/128</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7873em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-2</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<blockquote>\n<p>表 4‑1 不同模型的色彩表示</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">颜色</th>\n<th style=\"text-align:center\">RGB</th>\n<th style=\"text-align:center\">Y-RGB</th>\n<th style=\"text-align:center\">HSV</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">50%亮度的纯白色</td>\n<td style=\"text-align:center\">（127，127，127）</td>\n<td style=\"text-align:center\">+0.38，（255,255,255）</td>\n<td style=\"text-align:center\">0, 0%, 49.8%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100%亮度的绿色</td>\n<td style=\"text-align:center\">（0，255，0）</td>\n<td style=\"text-align:center\">+0.52，（0,255,0）</td>\n<td style=\"text-align:center\">120, 100%, 100%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5%亮度的粉红色</td>\n<td style=\"text-align:center\">（13, 0, 3）</td>\n<td style=\"text-align:center\">+0.015，（255, 0, 68）</td>\n<td style=\"text-align:center\">344, 100%, 5%</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<p>如表 4-1 与 CIE-RGB 对比，Y-RGB 具有更直观的亮度表示，而不会出现 RGB 中随着亮度改变而产生变色的问题。与含有明度信息的模型（如 HSV）相比，Y-RGB 也能更好的保留三原色分量信息。在 y=64、128、255 的情况下 Y 分别为 0.24、0.46、0.76（y 单色极值为 256），符合人类视觉舒适范围并且变化平稳符合直觉，在混色时也不会遇到亮度瓶颈问题。</p>\n<h3 id=\"4-2-YBa-的数值转换及表示\"><strong>4.2 YBa 的数值转换及表示</strong></h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osojer.png\" alt=\"图 4-5 Posit&lt;8,2&gt;范围及精度\"></p>\n<p>YBa 的亮度信息最终落到[0,235]的范围内，利用开源工具作图分析（如图 4-5），可通过 Posit&lt;8,2&gt;存储表示（高精度范围为 0.00391~384），符合亮度表示所需范围。</p>\n<p>YBa 色彩模型中的 B 代表 Bias，即为色彩偏置。这里并没有如同其他颜色模型（比如 YUV、CIE-XYZ）一样做空间变换，而是继续沿用 CIE-RGB 的色彩空间建模，定义 B1 与 B2 替代 RGB（如公式 4-3、4-4）。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>B</mi><mn>1</mn><mo>=</mo><mfrac><mstyle mathcolor=\"Red\"><mi>R</mi></mstyle><mstyle mathcolor=\"Red\"><mi>R</mi><mo>+</mo><mstyle mathcolor=\"Blue\"><mi>B</mi><mo>+</mo><mstyle mathcolor=\"Green\"><mi>G</mi></mstyle></mstyle></mstyle></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-3)</mtext></mrow><annotation encoding=\"application/x-tex\">B1 = \\frac{\\color{Red}R}{\\color{Red}R + \\color{Blue}B + \\color{Green}G}\\quad\\quad(\\text{4-3}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Red;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Blue;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"color:Green;\">G</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-3</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>B</mi><mn>2</mn><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mstyle mathcolor=\"Blue\"><mi>B</mi></mstyle><mstyle mathcolor=\"Red\"><mi>R</mi><mo>+</mo><mstyle mathcolor=\"Blue\"><mi>B</mi><mo>+</mo><mstyle mathcolor=\"Green\"><mi>G</mi></mstyle></mstyle></mstyle></mfrac><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-4)</mtext></mrow><annotation encoding=\"application/x-tex\">B2 = 1 - \\frac{\\color{Blue}B}{\\color{Red}R + \\color{Blue}B + \\color{Green}G}\\quad\\quad(\\text{4-4}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Red;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Blue;\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"color:Green;\">G</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-4</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>这样，在[0,1]的数值范围之内，通过两个 bias 可以间接获取到 RGB 三个值，作用以及好处是可以将[0,255]的 RGB 整数表示映射到[0,1]的 Posit 数值上，具有更简化的表示和比正数与浮点数更高的表示精度。</p>\n<p>YBa 中的&quot;a&quot;为 Alpha，采用与 RGBA 色彩模型中相同的概念表示，用于描述物体本身不透光率，同时将光线的 Alpha 定义为 0。如图 4-6 中的浅绿色玻璃，Alpha 影响光线的穿透率，同一束光在通过左侧玻璃与右侧空气的对比，左侧在通过光照照射穿透为浅绿色光的同时也会使穿透玻璃的光亮度衰减。使用 Posit&lt;8,0&gt;表示其百分数（在 0~1 提供了较高的动态精度）。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osouTT.png\" alt=\"图 4-6 物体的 Alpha 与光照\"></p>\n<h3 id=\"4-3-混色算法的实现\"><strong>4.3 混色算法的实现</strong></h3>\n<p>两 YBa 颜色混合时，Y 值可通过改良的 Sigmod 函数的反函数求 y，即 y=Y’(Y)，两颜色的 y1、y2 相加再通过 Sigmod 求 Y，可得到两颜色混色后的 Y 值。混合后的 B 值可转换到 RGB 后通过 mixbox 算法库计算，如下为核心代码块，其对 RGB 转换为 latent 后进行数值叠加，再转换为混色后的 RGB 数值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">float_rgb_to_latent</span>(<span class=\"params\">rgb</span>):</span><br><span class=\"line\">    r = _clamp01(rgb[<span class=\"number\">0</span>])</span><br><span class=\"line\">    g = _clamp01(rgb[<span class=\"number\">1</span>])</span><br><span class=\"line\">    b = _clamp01(rgb[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    x = r * <span class=\"number\">63.0</span></span><br><span class=\"line\">    y = g * <span class=\"number\">63.0</span></span><br><span class=\"line\">    z = b * <span class=\"number\">63.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ix = <span class=\"built_in\">int</span>(x)</span><br><span class=\"line\">    iy = <span class=\"built_in\">int</span>(y)</span><br><span class=\"line\">    iz = <span class=\"built_in\">int</span>(z)</span><br><span class=\"line\"></span><br><span class=\"line\">    tx = x - ix</span><br><span class=\"line\">    ty = y - iy</span><br><span class=\"line\">    tz = z - iz</span><br><span class=\"line\"></span><br><span class=\"line\">    xyz = (ix + iy*<span class=\"number\">64</span> + iz*<span class=\"number\">64</span>*<span class=\"number\">64</span>) &amp; <span class=\"number\">0x3FFFF</span></span><br><span class=\"line\"></span><br><span class=\"line\">    c0 = <span class=\"number\">0.0</span></span><br><span class=\"line\">    c1 = <span class=\"number\">0.0</span></span><br><span class=\"line\">    c2 = <span class=\"number\">0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    w = (<span class=\"number\">1.0</span>-tx)*(<span class=\"number\">1.0</span>-ty)*(<span class=\"number\">1.0</span>-tz); c0 += w*_lut[xyz+ <span class=\"number\">192</span>]; c1 += w*_lut[xyz+<span class=\"number\">262336</span>]; c2 += w*_lut[xyz+<span class=\"number\">524480</span>];</span><br><span class=\"line\">    w = (    tx)*(<span class=\"number\">1.0</span>-ty)*(<span class=\"number\">1.0</span>-tz); c0 += w*_lut[xyz+ <span class=\"number\">193</span>]; c1 += w*_lut[xyz+<span class=\"number\">262337</span>]; c2 += w*_lut[xyz+<span class=\"number\">524481</span>];</span><br><span class=\"line\">    w = (<span class=\"number\">1.0</span>-tx)*(    ty)*(<span class=\"number\">1.0</span>-tz); c0 += w*_lut[xyz+ <span class=\"number\">256</span>]; c1 += w*_lut[xyz+<span class=\"number\">262400</span>]; c2 += w*_lut[xyz+<span class=\"number\">524544</span>];</span><br><span class=\"line\">    w = (    tx)*(    ty)*(<span class=\"number\">1.0</span>-tz); c0 += w*_lut[xyz+ <span class=\"number\">257</span>]; c1 += w*_lut[xyz+<span class=\"number\">262401</span>]; c2 += w*_lut[xyz+<span class=\"number\">524545</span>];</span><br><span class=\"line\">    w = (<span class=\"number\">1.0</span>-tx)*(<span class=\"number\">1.0</span>-ty)*(    tz); c0 += w*_lut[xyz+<span class=\"number\">4288</span>]; c1 += w*_lut[xyz+<span class=\"number\">266432</span>]; c2 += w*_lut[xyz+<span class=\"number\">528576</span>];</span><br><span class=\"line\">    w = (    tx)*(<span class=\"number\">1.0</span>-ty)*(    tz); c0 += w*_lut[xyz+<span class=\"number\">4289</span>]; c1 += w*_lut[xyz+<span class=\"number\">266433</span>]; c2 += w*_lut[xyz+<span class=\"number\">528577</span>];</span><br><span class=\"line\">    w = (<span class=\"number\">1.0</span>-tx)*(    ty)*(    tz); c0 += w*_lut[xyz+<span class=\"number\">4352</span>]; c1 += w*_lut[xyz+<span class=\"number\">266496</span>]; c2 += w*_lut[xyz+<span class=\"number\">528640</span>];</span><br><span class=\"line\">    w = (    tx)*(    ty)*(    tz); c0 += w*_lut[xyz+<span class=\"number\">4353</span>]; c1 += w*_lut[xyz+<span class=\"number\">266497</span>]; c2 += w*_lut[xyz+<span class=\"number\">528641</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    c0 /= <span class=\"number\">255.0</span></span><br><span class=\"line\">    c1 /= <span class=\"number\">255.0</span></span><br><span class=\"line\">    c2 /= <span class=\"number\">255.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    c3 = <span class=\"number\">1.0</span> - (c0 + c1 + c2)</span><br><span class=\"line\"></span><br><span class=\"line\">    mixrgb = _eval_polynomial(c0, c1, c2, c3)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">        c0,</span><br><span class=\"line\">        c1,</span><br><span class=\"line\">        c2,</span><br><span class=\"line\">        c3,</span><br><span class=\"line\">        r - mixrgb[<span class=\"number\">0</span>],</span><br><span class=\"line\">        g - mixrgb[<span class=\"number\">1</span>],</span><br><span class=\"line\">        b - mixrgb[<span class=\"number\">2</span>],</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n<p>Alpha 值的计算公式参考 RGBA 混色算法定义（如公式 4-5），利用提出的 YBa 颜色模型进行混色操作，符合光学和物理特性，最终得到的结果公式（如公式 4-6）。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mrow><mo fence=\"true\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-5)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mstyle mathcolor=\"Red\"><mi>R</mi></mstyle><mstyle mathcolor=\"Green\"><mi>G</mi></mstyle><msub><mstyle mathcolor=\"Blue\"><mi>B</mi></mstyle><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>Y</mi><mi>B</mi><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><mi>Y</mi><mtext>’</mtext><mrow><mo fence=\"true\">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mo>+</mo><mi>Y</mi><mtext>’</mtext><mrow><mo fence=\"true\">(</mo><msub><mi>Y</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>×</mo><mi>m</mi><mi>i</mi><mi>x</mi><mi>b</mi><mi>o</mi><mi>x</mi><mrow><mo fence=\"true\">(</mo><mrow><mo fence=\"true\">(</mo><msub><mi>B</mi><mn>11</mn></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>12</mn></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><mrow><mo fence=\"true\">(</mo><msub><mi>B</mi><mn>21</mn></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>22</mn></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>×</mo><mi>a</mi><mrow><mo fence=\"true\">(</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-6)</mtext></mrow><annotation encoding=\"application/x-tex\">a\\left( a_{1},a_{2} \\right) = 1 - \\left( 1 - a_{1} \\right)\\left( 1 - a_{2} \\right)\\quad\\quad(\\text{4-5}\\text{)}\n\\\\ \\ \\\\\n{\\color{Red}R}{\\color{Green}G}{\\color{Blue}B}_{dist}(YBa) = Y\\left( Y’\\left( Y_{1} \\right) + Y’\\left( Y_{2} \\right) \\right) \\times mixbox\\left( \\left( B_{11},B_{12} \\right),\\left( B_{21},B_{22} \\right) \\right) \\times a\\left( a_{1},a_{2} \\right)\\quad\\quad(\\text{4-6}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-5</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"color:Green;\">G</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">’</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mord\">’</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">mi</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">11</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">12</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">21</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">22</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-6</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>如表 4-2，如下为最复杂的第三项的计算过程（如 4-7~4-11）：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>α</mi><mrow><mi>m</mi><mi>i</mi><mi>x</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mn>1</mn><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>α</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>α</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mo>=</mo><mn>0.4</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-7)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mn>256</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>0.75</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo>+</mo><mn>192</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-8)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mn>256</mn><mo>×</mo><mn>1</mn><mo>×</mo><mn>0.1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mn>25.6</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-9)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><msub><mi>Y</mi><mrow><mi>m</mi><mi>i</mi><mi>x</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>Y</mi><mrow><mo fence=\"true\">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>×</mo><msub><mi>α</mi><mrow><mi>m</mi><mi>i</mi><mi>x</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>+</mo><mrow><mo fence=\"true\">(</mo><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>=</mo><mo>−</mo><mn>0.379</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-10)</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>B</mi><mn>1</mn><mo>=</mo><mfrac><mi>R</mi><mrow><mi>R</mi><mo>+</mo><mi>G</mi><mo>+</mo><mi>B</mi></mrow></mfrac><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mtext> </mtext><mi>B</mi><mn>2</mn><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mi>B</mi><mrow><mi>R</mi><mo>+</mo><mi>G</mi><mo>+</mo><mi>B</mi></mrow></mfrac><mo>=</mo><mn>1</mn><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-11)</mtext></mrow><annotation encoding=\"application/x-tex\">\\alpha_{mixed} = 1 - \\left( 1 - \\alpha_{1} \\right)\\left( 1 - \\alpha_{2} \\right) = 0.4\\quad\\quad(\\text{4-7}\\text{)}\n\\\\ \\ \\\\\ny_{1} = + (256 \\times 1 \\times 0.75) = + 192\\quad\\quad(\\text{4-8}\\text{)}\n\\\\ \\ \\\\\ny_{2} = - (256 \\times 1 \\times 0.1) = - 25.6\\quad\\quad(\\text{4-9}\\text{)}\n\\\\ \\ \\\\\nY_{mixed} = Y\\left( y_{1} \\times \\alpha_{mixed} + \\left( - y_{2} \\right) \\right) = - 0.379\\quad\\quad(\\text{4-10}\\text{)}\n\\\\ \\ \\\\\nB1 = \\frac{R}{R + G + B} = 0,\\ B2 = 1 - \\frac{B}{R + G + B} = 1\\quad\\quad(\\text{4-11}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">mi</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.4</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-7</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">+</span><span class=\"mopen\">(</span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.75</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">+</span><span class=\"mord\">192</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-8</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord\">256</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\">25.6</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-9</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">mi</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">mi</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\">0.379</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-10</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1297em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-11</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<blockquote>\n<p>表 4‑2 不同模型的色彩表示</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">RGBA</th>\n<th style=\"text-align:center\">YBa（亮度|色值|Alpha）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100%亮度的红色光与绿色光混合</td>\n<td style=\"text-align:center\">（128，128，0，0）</td>\n<td style=\"text-align:center\">+0.707，（0.5，1），0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50%亮度的绿色与 25%的白色光混合</td>\n<td style=\"text-align:center\">（32，96，32，0）</td>\n<td style=\"text-align:center\">+0.543，（0.2，0.8），0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">75%亮度的纯白光照在 10%白色环境亮度、Alpha 为 0.4 的绿色玻璃上</td>\n<td style=\"text-align:center\">无法直接计算</td>\n<td style=\"text-align:center\">-0.379，（0, 1），0.4</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<blockquote>\n<p>图 4-7 混色算法结果对比</p>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(128, 128, 0, 1);\">RGBA</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(144, 113, 7);\">mixbox</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(180, 180, 0, 1);\">YBa</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(255, 255, 0, 1);\">GroundTruth</div>\n<div></div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(32,96,32, 1);\">RGBA</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(37, 96, 30);\">mixbox</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(46,139, 46, 1);\">YBa</div>\n<div style=\"width: 150px;height: 150px;display: inline-block;background-color: rgba(64,192,64, 1);\">GroundTruth</div>\n</blockquote>\n<p>对表 4-2 前两项进行作图对比（如图 4-7 所示），RGBA 混色算法在对颜色混合后，灰度显示会更加突出，直观感受是色彩不鲜艳。使用 Photoshop 中叠加变亮混色算法，在混色后很容易达到亮度阈值 255，在进一步混合亮度更高的色光时就会无法做到变更色值，YBa 通过改良 Sigmod 算法处理后，在保留了一部分亮度瓶颈的同时，可以完好地表示和呈现原色值。</p>\n<p>如图 4-7，mixbox 算法同样也会遇到如在章节 4.1 的亮度问题，无法正常处理色光的亮度叠加式混色。此处提出的算法（公式 4-6）可有效解决色光和仿真混色中遇到的亮度异常问题，并且可模拟色光加物理材料以及环境光的混色（如表 4-2 第三行），而在 RGBA 混色算法或者通过 mixbox 算法库则无法直接对其直接进行合理的混色。</p>\n<p>使用公式 4-1 的对应等能亮度权重，加权计算表 4-2 前两项的等能亮度，对比如表 4-3：</p>\n<blockquote>\n<p>表 4‑3 等能亮度对比</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">RGBA</th>\n<th style=\"text-align:center\">mixbox</th>\n<th style=\"text-align:center\">YBa</th>\n<th style=\"text-align:center\">实际亮度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100%亮度的红色光与绿色光混合</td>\n<td style=\"text-align:center\">0.443</td>\n<td style=\"text-align:center\">0.395</td>\n<td style=\"text-align:center\">0.707</td>\n<td style=\"text-align:center\">2.000</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50%亮度的绿色与 25%的白色光混合</td>\n<td style=\"text-align:center\">0.160</td>\n<td style=\"text-align:center\">0.158</td>\n<td style=\"text-align:center\">0.543</td>\n<td style=\"text-align:center\">0.750</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<p>使用欧氏距离色值差异（如公式 4-12）对表格 4-2 前两项数据进行评估对比，如表 4-4 所示，YBa 混色算法与 RGBA 混色、mixbox 混色对比，可以取得更小的色值差异。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi mathvariant=\"normal\">Δ</mi><mstyle mathcolor=\"Red\"><mi>R</mi><mstyle mathcolor=\"Green\"><mi>G</mi><mstyle mathcolor=\"Blue\"><mi>B</mi></mstyle></mstyle></mstyle></msub><mo>=</mo><msqrt><mrow><msup><mrow><mo fence=\"true\">(</mo><mstyle mathcolor=\"Red\"><msub><mi>R</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>−</mo><mstyle mathcolor=\"Red\"><msub><mi>R</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mo fence=\"true\" mathcolor=\"Red\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence=\"true\">(</mo><mstyle mathcolor=\"Green\"><msub><mi>G</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>−</mo><mstyle mathcolor=\"Green\"><msub><mi>G</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mo fence=\"true\" mathcolor=\"Green\">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence=\"true\">(</mo><mstyle mathcolor=\"Blue\"><msub><mi>B</mi><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>−</mo><mstyle mathcolor=\"Blue\"><msub><mi>B</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mo fence=\"true\" mathcolor=\"Blue\">)</mo></mrow><mn>2</mn></msup></mrow></msqrt><mspace width=\"1em\"/><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mtext>4-12)</mtext></mrow><annotation encoding=\"application/x-tex\">\\Delta_{\\color{Red}R\\color{Green}G\\color{Blue}B} = \\sqrt{\\left( \\color{Red}R_{dist} - \\color{Red}R_{tar} \\right)^{2} + \\left( \\color{Green}G_{dist} - \\color{Green}G_{tar} \\right)^{2} + \\left( \\color{Blue}B_{dist} - \\color{Blue}B_{tar} \\right)^{2}}\\quad\\quad(\\text{4-12}\\text{)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;color:Red;\">R</span><span class=\"mord mathnormal mtight\" style=\"color:Green;\">G</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;color:Blue;\">B</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.84em;vertical-align:-0.4541em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3859em;\"><span class=\"svg-align\" style=\"top:-3.8em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\" style=\"color:Red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Red;\"><span class=\"mord mtight\" style=\"color:Red;\"><span class=\"mord mathnormal mtight\" style=\"color:Red;\">d</span><span class=\"mord mathnormal mtight\" style=\"color:Red;\">i</span><span class=\"mord mathnormal mtight\" style=\"color:Red;\">s</span><span class=\"mord mathnormal mtight\" style=\"color:Red;\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Red;\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\" style=\"color:Red;\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;color:Red;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Red;\"><span class=\"mord mtight\" style=\"color:Red;\"><span class=\"mord mathnormal mtight\" style=\"color:Red;\">t</span><span class=\"mord mathnormal mtight\" style=\"color:Red;\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;color:Red;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"color:Red;top:0em;\"><span style=\"color:Red;\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\" style=\"color:Green;\"><span class=\"mord mathnormal\" style=\"color:Green;\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Green;\"><span class=\"mord mtight\" style=\"color:Green;\"><span class=\"mord mathnormal mtight\" style=\"color:Green;\">d</span><span class=\"mord mathnormal mtight\" style=\"color:Green;\">i</span><span class=\"mord mathnormal mtight\" style=\"color:Green;\">s</span><span class=\"mord mathnormal mtight\" style=\"color:Green;\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Green;\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\" style=\"color:Green;\"><span class=\"mord mathnormal\" style=\"color:Green;\">G</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Green;\"><span class=\"mord mtight\" style=\"color:Green;\"><span class=\"mord mathnormal mtight\" style=\"color:Green;\">t</span><span class=\"mord mathnormal mtight\" style=\"color:Green;\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;color:Green;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"color:Green;top:0em;\"><span style=\"color:Green;\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\" style=\"color:Blue;\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Blue;\"><span class=\"mord mtight\" style=\"color:Blue;\"><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">d</span><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">i</span><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">s</span><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\" style=\"color:Blue;\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\" style=\"color:Blue;\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;color:Blue;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\" style=\"color:Blue;\"><span class=\"mord mtight\" style=\"color:Blue;\"><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">t</span><span class=\"mord mathnormal mtight\" style=\"color:Blue;\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;color:Blue;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"color:Blue;top:0em;\"><span style=\"color:Blue;\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.3459em;\"><span class=\"pstrut\" style=\"height:3.8em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.88em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.88em\" viewBox=\"0 0 400000 1944\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M983 90\nl0 -0\nc4,-6.7,10,-10,18,-10 H400000v40\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM1001 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4541em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">4-12</span></span><span class=\"mord text\"><span class=\"mord\">)</span></span></span></span></span></span></p>\n<blockquote>\n<p>表 4‑4 色值差异对比</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">RGBA</th>\n<th style=\"text-align:center\">mixbox</th>\n<th style=\"text-align:center\">YBa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100%亮度的红色光与绿色光混合</td>\n<td style=\"text-align:center\">181</td>\n<td style=\"text-align:center\">201</td>\n<td style=\"text-align:center\">107</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50%亮度的绿色与 25%的白色光混合</td>\n<td style=\"text-align:center\">106</td>\n<td style=\"text-align:center\">105</td>\n<td style=\"text-align:center\">58.8</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<hr>\n<p>使用天文模拟软件 Stellarium 获得仿真图（如图 4-8 所示），图中土星与月球视星等分别为 0.83 与-11.59，根据普森公式可知其亮度相差近 70000 倍。在 RGB 中其亮度差值为 6%，在 YBa 图像中，其亮度差值为 76%，有了显著提升，更适用于工程与计算领域的处理。此外由于亮度非均匀变化，RGB 图像无法通过图像的亮度反推真实场景下的亮度差异（如图中土星与月球的亮度差），而在 YBa 图像中可以利用亮度公式 4-2 的反函数推导出真实的亮度差异。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/osoyU1.png\" alt=\"图 4-8 RGB（上）与 YBa（下）图像对比\"></p>\n<h2 id=\"第-5-章-结论与展望\">第 5 章 结论与展望</h2>\n<h3 id=\"5-1-工作结论\"><strong>5.1 工作结论</strong></h3>\n<p>本论文研究以可见光的 RGB 的表示和建模为出发点，目的是解决可见光在颜色表示和转换上遇到的一些的困难。通过作图对比分析模型之间的差异以及优缺点，剖析现有 RGB、YUV 模型内存在的特定问题：亮度的可靠表示以及混色算法的缺陷，展开模型算法设计，并进行实现、实验数据分析和对比，本文的主要工作如下：</p>\n<ol>\n<li>\n<p>通过结合 YUV 色彩空间的亮度表示、CIE-Yxy 的色度值表示换算、引入 RGBA 色彩空间的 Alpha 通道作为透明度表示，形成一个四维的颜色向量，得到一个在亮度表示上更加科学有效、符合数学转换和人类直观感受的 YBa 色彩表示模型，通过实验数据作图分析，评估 RGBA、mixbox 以及 YBa 在亮度表示上的可靠性。</p>\n</li>\n<li>\n<p>通过引入使用 Posit 数值系统可以更精确高效的表示颜色参数，分析数值范围以及高精度表示区域，设计实现 YBa 色彩模型的 Posit 数值表示。</p>\n</li>\n<li>\n<p>最后本文提出了一种基于 YBa 模型的混色算法，该算法可以实现多种颜色之间的混合，并考虑了亮度和透明度的变化。本文通过实验展示了混色算法的效果，并与其他混色算法在欧氏距离色值差异上进行了评估分析和比较。</p>\n</li>\n</ol>\n<h3 id=\"5-2-工作展望\"><strong>5.2 工作展望</strong></h3>\n<p>为了更加科学和准确的表示颜色，需要更深入的研究来改进。本文提出的 YBa 色彩模型与其支持的混色算法在解决亮度表示问题上、混色结果与的真实场景的差异性上都取得了一定的提升。但此模型在设计和实现上仍存在亟待优化的方面：</p>\n<ol>\n<li>\n<p>更多数据组合的实验探究，从实际数据出发，评估和改进算法的合理性。</p>\n</li>\n<li>\n<p>对 Posit 数值系统的深入使用和性能优化，改进运算流程和公式加快计算时间。</p>\n</li>\n<li>\n<p>更加深入和广度地研究相关颜色模型并分析其优缺点，对 YBa 混色算法的流程改进和细节调整。</p>\n</li>\n<li>\n<p>对更多角度的模型参数和结果进行标准的实验评估，通过真实有力的数据验证模型和算法的可靠程度，并从不足之处回溯算法的缺陷。</p>\n</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"致谢\">致谢</h2>\n<p>回望过去四年，简短得像是刚刚路过的路灯，没有多么明亮却是刚好足够看清前方每一步路；说起来也很漫长，每一段旅程仍在记忆中历历在目。</p>\n<p>大一确实在荒废前程，调整高中状态，在课业和游戏社团中度日，寒暑假打零工的经历倒是稍许改变了交际能力和性格。大二虽也是课业繁重，组织忙的不可开交，但也乐在结识了很多同学，抽空自学了一些开发课程。感谢学长与外聘教师引荐，与 Drincann 去市公安局的机房实训了几次。后入职在用友畅捷通实习呆了不长时日，也是很感谢 leader 与小师傅的指导。大三后基本所有时间都留给了学习和少许娱乐，很幸运的结识杨 Sir 并被引荐到清华大学实验室实习至今，与师兄师姐一起的工作机会学到了很多科研知识。与此同时脚步迈到了大四，面试进入智周未来公司做开发小半年，感谢工作过程中架构师的引导和同事们的帮助。</p>\n<p>大四下也算得落叶归根，半年的 gap 时间在学校忙于自己的学业事业。真挚地感谢辅导员胡杨峰老师，导师王栋轩以及各科的任课老师的辅导和教学，在学校的课业生活中总能被老师们各方面帮助。也感谢一路上陪伴或多或少的朋友们，为我的前行提供了恰到好处的动力和助力，更是要好好感谢舍友同学们的帮助陪伴，没有你们吃饭都没那么香。当然最是无可替代的后盾莫过于家人，衣食住行都离不开父母和姐姐的照顾。</p>\n<p>最后引用奥托的铭言，“Life is too long to end at a grave”，虽是不合时宜但也显得恰到好处了。感谢各位灯塔参与我四年的大学时光，惜是天下无不散之筵席，若是有缘我愿一同照亮大家明天的路，感谢大家！</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://zhuanlan.zhihu.com/p/24281841\">色彩空间表示与转换</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://blog.csdn.net/aa13058219642/article/details/80953341\">透明颜色混合算法_A.A 的博客-CSDN 博客</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.jianshu.com/p/3a6ce7761507\">聊聊颜色的技术实现（二）—— CIE 1931 XYZ 系统</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://www.jianshu.com/p/facdbab5ac20\">Color Space (1)</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://www.academia.edu/8313696/%E7%AC%AC%E4%BA%8C%E7%AB%A0_CIE%E6%A0%87%E5%87%86%E8%89%B2%E5%BA%A6%E7%B3%BB%E7%BB%9F1\">第二章 CIE 标准色度系统 1</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Python",
                "Math",
                "Color"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/lang/python/%E6%9D%82/",
            "url": "https://blog.weidows.tech/post/lang/python/%E6%9D%82/",
            "title": "😑python-mess-code",
            "date_published": "2022-04-22T08:22:34.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:38:53\n * @FilePath: \\Blog-private\\source\\_posts\\python\\杂.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"basic\">basic</h2>\n<h3 id=\"static-method\">static-method</h3>\n<p>python 中并没有像是 Java 里的 static 关键字,取代的是 <code>@classmethod</code> 和 <code>@staticmethod</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    name = <span class=\"string\">&#x27;A&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 至少有一个隐式形参 (本类 cls 对象), 可以访问类属性</span></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">a</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(cls.name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 无形参, 也就是说拿不到类属性</span></span><br><span class=\"line\"><span class=\"meta\">    @staticmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">b</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A.a()</span><br><span class=\"line\">A.b()</span><br></pre></td></tr></table></figure>\n<pre><code>A\nb\n</code></pre>\n<h3 id=\"multi-condition\">multi-condition</h3>\n<p>if(a||b)当 a 为真时，还会对 b 求值吗?</p>\n<blockquote>\n<p>不会</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">name, t</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;calculating: &quot;</span>, name, <span class=\"string\">&quot;seconds needs: &quot;</span>, t)</span><br><span class=\"line\">    time.sleep(t)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (calculate(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">2</span>) <span class=\"keyword\">or</span> calculate(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">2</span>)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Done&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>calculating:  A seconds needs:  2\nDone\n</code></pre>\n<h3 id=\"下划线\">下划线</h3>\n<p>教程来自: <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<h4 id=\"\">_</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单个 _ 指向最后一次执行表达式 (结果)</span></span><br><span class=\"line\"><span class=\"comment\"># 在 python 命令行中可以跑, 在这里不行</span></span><br><span class=\"line\"><span class=\"comment\"># 1 + 2</span></span><br><span class=\"line\"><span class=\"comment\"># _</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式化数字</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">114_514_1919_810</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类似 golang 的遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(_)</span><br></pre></td></tr></table></figure>\n<pre><code>1145141919810\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n<h4 id=\"xxx\">__xxx__</h4>\n<p>魔术方法 / 魔法函数, 一般作为内置方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">random.__name__</span><br></pre></td></tr></table></figure>\n<pre><code>'random'\n</code></pre>\n<h4 id=\"xxx-2\">_xxx</h4>\n<p>私有化, 仅提供模块内部调用, 类似Java里的 protect</p>\n<h4 id=\"xxx-3\">__xxx</h4>\n<p>也是私有化, 类似 Java 内的 private, 无法直接访问此变量/方法, 但可以间接访问</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name, age</span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.name = name</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.__age = age</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_age</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>.__age</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">me = Person(<span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">18</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(me.name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(me.age)</span></span><br><span class=\"line\"><span class=\"comment\"># print(me.__age)</span></span><br><span class=\"line\"><span class=\"comment\"># 上面两种都会报错, __age -&gt; _Person__age</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(me._Person__age)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(me.get_age())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">dir</span>(me))</span><br></pre></td></tr></table></figure>\n<pre><code>张三\n18\n18\n['_Person__age', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'get_age', 'name']\n</code></pre>\n<h4 id=\"xxx-xxx\">_xxx__xxx</h4>\n<p>从上面例子可以看到, 能通过这个访问类私有化属性</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">you = Person(<span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">20</span>)</span><br><span class=\"line\">you._Person__age += <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(you.get_age())</span><br></pre></td></tr></table></figure>\n<pre><code>21\n</code></pre>\n<h4 id=\"xxx-4\">xxx_</h4>\n<p>类似转义, 让某些关键词无效化</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">max_ = <span class=\"built_in\">max</span>(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(max_)</span><br></pre></td></tr></table></figure>\n<pre><code>3\n</code></pre>\n<h3 id=\"闭包\">闭包</h3>\n<p>听起来挺抽象的, 下面这个例子实现的静态代理的功能, 只不过这种通过函数包裹函数并且回传函数的形式称为闭包</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_1</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>():</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> running&#x27;</span>)</span><br><span class=\"line\">        func()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;func&#125;</span> finished&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">my_func = func_1(<span class=\"keyword\">lambda</span>: <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;hello&#x27;</span>))</span><br><span class=\"line\">my_func()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;function &lt;lambda&gt; at 0x000002C6132A50D0&gt; running\nhello\n&lt;function &lt;lambda&gt; at 0x000002C6132A50D0&gt; finished\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_user</span>(<span class=\"params\">username, password</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;login success&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 这里的 argv 可以直接获取 func 的</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">username, password</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> username == <span class=\"string\">&#x27;user&#x27;</span> <span class=\"keyword\">and</span> password == <span class=\"string\">&#x27;password&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> func(username, password)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;login failed&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">login_user = check(login_user)</span><br><span class=\"line\">login_user(<span class=\"string\">&#x27;user&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>login success\n</code></pre>\n<h3 id=\"装饰器\">装饰器</h3>\n<p>decorator-@, 从Java里叫注解, 上面的例子可写成下面这样</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@check</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_user</span>(<span class=\"params\">username, password</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;login success&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 这里的 argv 可以直接获取 func 的</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">username, password</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> username == <span class=\"string\">&#x27;user&#x27;</span> <span class=\"keyword\">and</span> password == <span class=\"string\">&#x27;password&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> func(username, password)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;login failed&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">login_user(<span class=\"string\">&#x27;user&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>login success\n</code></pre>\n<h2 id=\"modules\">modules</h2>\n<h3 id=\"base64\">base64</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">username = <span class=\"string\">&#x27;Weidows&#x27;</span></span><br><span class=\"line\">password = <span class=\"string\">&#x27;123456&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">encode = base64.b64encode((username + <span class=\"string\">&quot;:&quot;</span> + password).encode())</span><br><span class=\"line\"><span class=\"comment\"># Basic V2VpZG93czoxMjM0NTY==</span></span><br><span class=\"line\">headers = &#123;<span class=\"string\">&quot;Authorization&quot;</span>: <span class=\"string\">&quot;Basic &quot;</span> + encode.decode()&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(headers)</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;'Authorization': 'Basic V2VpZG93czoxMjM0NTY='&#125;\n</code></pre>\n<h3 id=\"多线程-进程\">多线程-进程</h3>\n<blockquote>\n<p>Python 多线程不能利用 CPU 多核优势，IO 密集型可用多线程，CPU 密集型适合用多进程 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n</blockquote>\n<p>也就是说只有 IO 密集型任务适用多线程,其他情况: <code>多进程 &gt; 不用 &gt; 多线程</code>, API 区别如下:<sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R9zQZh.png\" alt=\"R9zQZh.png\"></p>\n<p>虽然但是,很多情况下涉及到资源共享, 多进程处理起来比较麻烦,还是多线程舒服.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> concurrent.futures <span class=\"keyword\">import</span> ThreadPoolExecutor</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"><span class=\"keyword\">import</span> multiprocessing</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">multi_num = multiprocessing.cpu_count() * <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">counter</span>(<span class=\"params\">num</span>):</span><br><span class=\"line\">    time.sleep(num)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(threading.currentThread().name, num, end=<span class=\"string\">&#x27;\\t&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> ThreadPoolExecutor(max_workers=multi_num) <span class=\"keyword\">as</span> thread_pool:</span><br><span class=\"line\">        start = time.time()</span><br><span class=\"line\">        thread_pool.<span class=\"built_in\">map</span>(counter, <span class=\"built_in\">range</span>(<span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 等待任务执行完再跳回 main</span></span><br><span class=\"line\">        thread_pool.shutdown(wait=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;多线程: &quot;</span>, time.time() - start)</span><br></pre></td></tr></table></figure>\n<pre><code>ThreadPoolExecutor-0_0 0\tThreadPoolExecutor-0_1 1\tThreadPoolExecutor-0_0 2\tThreadPoolExecutor-0_2 3\tThreadPoolExecutor-0_3 4\tThreadPoolExecutor-0_4 5\tThreadPoolExecutor-0_5 6\tThreadPoolExecutor-0_6 7\tThreadPoolExecutor-0_7 8\tThreadPoolExecutor-0_8 9\t多线程:  9.009207010269165\n</code></pre>\n<h2 id=\"opengl\">opengl</h2>\n<h3 id=\"彩色三角形\">彩色三角形</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># quidam_01.py 三维空间的世界坐标系和三角形</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>():</span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glBegin(GL_LINES)  <span class=\"comment\"># 开始绘制线段（世界坐标系）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以红色绘制x轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为红色不透明</span></span><br><span class=\"line\">    glVertex3f(-<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置x轴顶点（x轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置x轴顶点（x轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以绿色绘制y轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为绿色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, -<span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置y轴顶点（y轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.8</span>, <span class=\"number\">0.0</span>)  <span class=\"comment\"># 设置y轴顶点（y轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以蓝色绘制z轴</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为蓝色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, -<span class=\"number\">0.8</span>)  <span class=\"comment\"># 设置z轴顶点（z轴负方向）</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.8</span>)  <span class=\"comment\"># 设置z轴顶点（z轴正方向）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glEnd()  <span class=\"comment\"># 结束绘制线段</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glBegin(GL_TRIANGLES)  <span class=\"comment\"># 开始绘制三角形（z轴负半区）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glColor4f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为红色不透明</span></span><br><span class=\"line\">    glVertex3f(-<span class=\"number\">0.5</span>, -<span class=\"number\">0.366</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为绿色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.5</span>, -<span class=\"number\">0.366</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\">    glColor4f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)  <span class=\"comment\"># 设置当前颜色为蓝色不透明</span></span><br><span class=\"line\">    glVertex3f(<span class=\"number\">0.0</span>, <span class=\"number\">0.5</span>, -<span class=\"number\">0.5</span>)  <span class=\"comment\"># 设置三角形顶点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    glEnd()  <span class=\"comment\"># 结束绘制三角形</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ---------------------------------------------------------------</span></span><br><span class=\"line\">    glFlush()  <span class=\"comment\"># 清空缓冲区，将指令送往硬件立即执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    glutInit()  <span class=\"comment\"># 1. 初始化glut库</span></span><br><span class=\"line\">    glutCreateWindow(<span class=\"string\">&#x27;Quidam Of OpenGL&#x27;</span>)  <span class=\"comment\"># 2. 创建glut窗口</span></span><br><span class=\"line\">    glutDisplayFunc(draw)  <span class=\"comment\"># 3. 注册回调函数draw()</span></span><br><span class=\"line\">    glutMainLoop()  <span class=\"comment\"># 4. 进入glut主循环</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"点线抛物线\">点线抛物线</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init</span>():</span><br><span class=\"line\">    glClearColor(<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>)</span><br><span class=\"line\">    gluOrtho2D(-<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">plotfunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glColor3f(<span class=\"number\">1.0</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.6</span>)</span><br><span class=\"line\">    glPointSize(<span class=\"number\">3.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    glBegin(GL_POINTS)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> arange(-<span class=\"number\">5.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">0.1</span>):  <span class=\"comment\">#from -5.0 to 5.0 plus 0.1 every time</span></span><br><span class=\"line\">        y = x * x</span><br><span class=\"line\">        glVertex2f(x, y)</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    glutInit(sys.argv)</span><br><span class=\"line\">    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)</span><br><span class=\"line\">    glutInitWindowPosition(<span class=\"number\">50</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">    glutCreateWindow(<span class=\"string\">&quot;Function Plotter&quot;</span>)</span><br><span class=\"line\">    glutDisplayFunc(plotfunc)</span><br><span class=\"line\"></span><br><span class=\"line\">    init()</span><br><span class=\"line\">    glutMainLoop()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h3 id=\"转动时钟\">转动时钟</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">h = <span class=\"number\">0</span></span><br><span class=\"line\">m = <span class=\"number\">0</span></span><br><span class=\"line\">s = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Draw</span>():</span><br><span class=\"line\">    PI = <span class=\"number\">3.1415926</span></span><br><span class=\"line\">    R = <span class=\"number\">0.5</span></span><br><span class=\"line\">    TR = R - <span class=\"number\">0.05</span></span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">5</span>)</span><br><span class=\"line\">    glBegin(GL_LINE_LOOP)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glVertex2f(R * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i),</span><br><span class=\"line\">                   R * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glBegin(GL_LINES)</span><br><span class=\"line\">        glVertex2f(TR * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i),</span><br><span class=\"line\">                   TR * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i))</span><br><span class=\"line\">        glVertex2f(R * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i),</span><br><span class=\"line\">                   R * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">12</span> * i))</span><br><span class=\"line\">        glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    h_Length = <span class=\"number\">0.2</span></span><br><span class=\"line\">    m_Length = <span class=\"number\">0.3</span></span><br><span class=\"line\">    s_Length = <span class=\"number\">0.4</span></span><br><span class=\"line\">    count = <span class=\"number\">60.0</span></span><br><span class=\"line\">    s_Angle = s / count</span><br><span class=\"line\">    count *= <span class=\"number\">60</span></span><br><span class=\"line\">    m_Angle = (m * <span class=\"number\">60</span> + s) / count</span><br><span class=\"line\">    count *= <span class=\"number\">12</span></span><br><span class=\"line\">    h_Angle = (h * <span class=\"number\">60</span> * <span class=\"number\">60</span> + m * <span class=\"number\">60</span> + s) / count</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(s_Length * math.sin(<span class=\"number\">2</span> * PI * s_Angle),</span><br><span class=\"line\">               s_Length * math.cos(<span class=\"number\">2</span> * PI * s_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">5</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(h_Length * math.sin(<span class=\"number\">2</span> * PI * h_Angle),</span><br><span class=\"line\">               h_Length * math.cos(<span class=\"number\">2</span> * PI * h_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">3</span>)</span><br><span class=\"line\">    glBegin(GL_LINES)</span><br><span class=\"line\">    glVertex2f(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glVertex2f(m_Length * math.sin(<span class=\"number\">2</span> * PI * m_Angle),</span><br><span class=\"line\">               m_Length * math.cos(<span class=\"number\">2</span> * PI * m_Angle))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glLineWidth(<span class=\"number\">1</span>)</span><br><span class=\"line\">    glBegin(GL_POLYGON)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">        glVertex2f(<span class=\"number\">0.03</span> * math.cos(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i),</span><br><span class=\"line\">                   <span class=\"number\">0.03</span> * math.sin(<span class=\"number\">2</span> * PI / <span class=\"number\">100</span> * i))</span><br><span class=\"line\">    glEnd()</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Update</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> h, m, s</span><br><span class=\"line\">    t = time.localtime(time.time())</span><br><span class=\"line\">    h = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%H&#x27;</span>, t))</span><br><span class=\"line\">    m = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%M&#x27;</span>, t))</span><br><span class=\"line\">    s = <span class=\"built_in\">int</span>(time.strftime(<span class=\"string\">&#x27;%S&#x27;</span>, t))</span><br><span class=\"line\">    glutPostRedisplay()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">&quot;My clock&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(Draw)</span><br><span class=\"line\">glutIdleFunc(Update)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hello-World-pyglet\">Hello-World-pyglet</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pyglet</span><br><span class=\"line\"></span><br><span class=\"line\">window = pyglet.window.Window()</span><br><span class=\"line\"></span><br><span class=\"line\">label = pyglet.text.Label(<span class=\"string\">&#x27;Hello, world&#x27;</span>,</span><br><span class=\"line\">                          font_name=<span class=\"string\">&#x27;Times New Roman&#x27;</span>,</span><br><span class=\"line\">                          font_size=<span class=\"number\">36</span>,</span><br><span class=\"line\">                          x=window.width // <span class=\"number\">2</span>,</span><br><span class=\"line\">                          y=window.height // <span class=\"number\">2</span>,</span><br><span class=\"line\">                          anchor_x=<span class=\"string\">&#x27;center&#x27;</span>,</span><br><span class=\"line\">                          anchor_y=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@window.event</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">on_draw</span>():</span><br><span class=\"line\">    window.clear()</span><br><span class=\"line\">    label.draw()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pyglet.app.run()</span><br></pre></td></tr></table></figure>\n<h3 id=\"茶壶\">茶壶</h3>\n<h4 id=\"动态\">动态</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    <span class=\"comment\">#清楚之前画面</span></span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glRotatef(<span class=\"number\">0.1</span>, <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>)  <span class=\"comment\">#(角度,x,y,z)</span></span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"comment\">#刷新显示</span></span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用glut初始化OpenGL</span></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\"><span class=\"comment\">#显示模式:GLUT_SINGLE无缓冲直接显示|GLUT_RGBA采用RGB(A非alpha)</span></span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\"><span class=\"comment\">#窗口位置及大小-生成</span></span><br><span class=\"line\">glutInitWindowPosition(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;first&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#调用函数绘制图像</span></span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutIdleFunc(drawFunc)</span><br><span class=\"line\"><span class=\"comment\">#主循环</span></span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h4 id=\"静态\">静态</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    <span class=\"comment\"># 设置为红色</span></span><br><span class=\"line\">    glColor3f(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)</span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数为b类型而不是string</span></span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;Teapot&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据分析\">数据分析</h2>\n<h3 id=\"numpy\">numpy</h3>\n<h4 id=\"newaxis\">newaxis</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">A = np.array([[<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(A)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;A.shape: &quot;</span>, A.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># new 一个一维数组,然后把 A 整个怼进去</span></span><br><span class=\"line\">B = A[np.newaxis, :]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(B)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;B.shape: &quot;</span>, B.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">C = A[:, np.newaxis]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(C)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;C.shape: &quot;</span>, C.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把每个第二维第四位的元素怼进一个新数组,把原第二位替换为此新数组</span></span><br><span class=\"line\">D = A[:, np.newaxis, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(D)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;D.shape: &quot;</span>, D.shape)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[2 0 2 1]\n [2 0 2 2]]\nA.shape:  (2, 4)\n[[[2 0 2 1]\n  [2 0 2 2]]]\nB.shape:  (1, 2, 4)\n[[[2 0 2 1]]\n\n [[2 0 2 2]]]\nC.shape:  (2, 1, 4)\n[[1]\n [2]]\nD.shape:  (2, 1)\n</code></pre>\n<h3 id=\"Matplotlib\">Matplotlib</h3>\n<h4 id=\"figure\">figure</h4>\n<p>可以用 figure 对输出的图片进行缩放</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.imshow(plt.imread(<span class=\"string\">&#x27;./_data_set/kitti_000008_pred.png&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;matplotlib.image.AxesImage at 0x22c4640aa90&gt;\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"%E6%9D%82_files/%E6%9D%82_40_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">25</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\">plt.imshow(plt.imread(<span class=\"string\">&#x27;./_data_set/kitti_000008_pred.png&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;matplotlib.image.AxesImage at 0x22c4651a1c0&gt;\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"%E6%9D%82_files/%E6%9D%82_41_1.png\" alt=\"png\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://stackoverflow.com/questions/29241056/how-does-numpy-newaxis-work-and-when-to-use-it\">How does numpy.newaxis work and when to use it?</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://blog.csdn.net/gzmgzm_ming/article/details/81783450\">Python threadpool与multiprocessing</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.bilibili.com/video/BV1yp4y1679u\">Python并发实战，怎样使用多进程multiprocessing加速程序运行</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://www.bilibili.com/video/BV1z94y1U7j9?vd_source=bc13275071d678583f4bfdd8d344efda\">Python 中各种下划线的骚操作：_、<em>xx、xx</em>、__xx、<strong>xx</strong>、_classname__xx</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "多线程",
                "人工智能",
                "python",
                "opengl"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/lang/python/code/DL/",
            "url": "https://blog.weidows.tech/post/lang/python/code/DL/",
            "title": "👩‍❤️‍💋‍👨Code-4-Deep-Learning",
            "date_published": "2022-04-20T16:26:11.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 12:54:47\n * @FilePath: \\Blog-private\\source\\_posts\\python\\code\\DL.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"序\">序</h2>\n<p>此文为其他文章的代码部分:</p>\n<blockquote>\n<p><a href=\"../../AI/DL\">⚡再啃-Deep-Learning</a></p>\n</blockquote>\n<p>也提供了 notebook 形式: <a href=\"https://github.com/Weidows-projects/public-post/blob/main/notebook/DL/DL.ipynb\">代码地址</a></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"神经网络\">神经网络</h2>\n<h3 id=\"感知器\">感知器</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">AND</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.7</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2</span><br><span class=\"line\">    <span class=\"keyword\">if</span> tmp &lt;= theta:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">OR</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = <span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">0.2</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2</span><br><span class=\"line\">    <span class=\"keyword\">if</span> tmp &lt;= theta:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 非门只取一个输入,另一个不管</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">NOT</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    w1, w2, theta = -<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span></span><br><span class=\"line\">    tmp = x1 * w1 + x2 * w2 + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 异或门是非线性运算, 需要多层感知器组合</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">XOR</span>(<span class=\"params\">x1, x2</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 异或门 = (与非门 与 或门)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> AND(OR(x1, x2), <span class=\"keyword\">not</span> AND(x1, x2))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(AND(<span class=\"number\">0</span>, <span class=\"number\">1</span>), AND(<span class=\"number\">1</span>, <span class=\"number\">1</span>), OR(<span class=\"number\">0</span>, <span class=\"number\">1</span>), OR(<span class=\"number\">0</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(NOT(<span class=\"number\">0</span>, <span class=\"number\">1</span>), NOT(<span class=\"number\">1</span>, <span class=\"number\">1</span>), NOT(<span class=\"number\">0</span>, <span class=\"number\">0</span>), NOT(<span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(XOR(<span class=\"number\">0</span>, <span class=\"number\">1</span>), XOR(<span class=\"number\">1</span>, <span class=\"number\">1</span>), XOR(<span class=\"number\">0</span>, <span class=\"number\">0</span>), XOR(<span class=\"number\">1</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>0 1 1 0\n1 0 1 0\n1 0 0 1\n</code></pre>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Pytorch\">Pytorch</h2>\n<h3 id=\"MNIST-手写数字识别\">MNIST-手写数字识别</h3>\n<p>入门典中典 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup>, 具体教程推荐 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup> <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torchvision</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 超参</span></span><br><span class=\"line\">n_epochs = <span class=\"number\">3</span></span><br><span class=\"line\">batch_size_train = <span class=\"number\">64</span></span><br><span class=\"line\">batch_size_test = <span class=\"number\">1000</span></span><br><span class=\"line\">learning_rate = <span class=\"number\">0.01</span></span><br><span class=\"line\">momentum = <span class=\"number\">0.5</span></span><br><span class=\"line\">log_interval = <span class=\"number\">10</span></span><br><span class=\"line\">random_seed = <span class=\"number\">42</span></span><br><span class=\"line\">torch.manual_seed(random_seed)</span><br><span class=\"line\">MINST_mean = <span class=\"number\">0.1307</span></span><br><span class=\"line\">MINST_std = <span class=\"number\">0.3081</span></span><br><span class=\"line\"></span><br><span class=\"line\">train_loader = torch.utils.data.DataLoader(torchvision.datasets.MNIST(</span><br><span class=\"line\">    <span class=\"string\">&#x27;./_data_set/&#x27;</span>,</span><br><span class=\"line\">    train=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    download=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    transform=torchvision.transforms.Compose([</span><br><span class=\"line\">        torchvision.transforms.ToTensor(),</span><br><span class=\"line\">        torchvision.transforms.Normalize((MINST_mean, ), (MINST_std, ))</span><br><span class=\"line\">    ])),</span><br><span class=\"line\">                                           batch_size=batch_size_train,</span><br><span class=\"line\">                                           shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">test_loader = torch.utils.data.DataLoader(torchvision.datasets.MNIST(</span><br><span class=\"line\">    <span class=\"string\">&#x27;./_data_set/&#x27;</span>,</span><br><span class=\"line\">    train=<span class=\"literal\">False</span>,</span><br><span class=\"line\">    download=<span class=\"literal\">True</span>,</span><br><span class=\"line\">    transform=torchvision.transforms.Compose([</span><br><span class=\"line\">        torchvision.transforms.ToTensor(),</span><br><span class=\"line\">        torchvision.transforms.Normalize((MINST_mean, ), (MINST_std, ))</span><br><span class=\"line\">    ])),</span><br><span class=\"line\">                                          batch_size=batch_size_test,</span><br><span class=\"line\">                                          shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">batch_idx, (example_data, example_targets) = <span class=\"built_in\">next</span>(<span class=\"built_in\">enumerate</span>(train_loader))</span><br><span class=\"line\"><span class=\"comment\"># 每批次有 64 张单通道 28x28 大小的图片</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(example_data.shape)</span><br><span class=\"line\"><span class=\"comment\"># 每个图片实际的数字标签</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(example_targets)</span><br><span class=\"line\"></span><br><span class=\"line\">fig = plt.figure()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">9</span>):</span><br><span class=\"line\">    plt.subplot(<span class=\"number\">3</span>, <span class=\"number\">3</span>, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    plt.tight_layout()</span><br><span class=\"line\">    plt.imshow(example_data[i][<span class=\"number\">0</span>], cmap=<span class=\"string\">&#x27;gray&#x27;</span>, interpolation=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># plt.title(&quot;数字: &#123;&#125;&quot;.format(example_targets[i]))</span></span><br><span class=\"line\">    plt.title(<span class=\"string\">f&#x27;number: <span class=\"subst\">&#123;example_targets[i]&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    plt.xticks([])</span><br><span class=\"line\">    plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>torch.Size([64, 1, 28, 28])\ntensor([1, 2, 8, 5, 2, 6, 9, 9, 9, 4, 0, 3, 9, 9, 5, 6, 7, 8, 8, 9, 2, 6, 9, 3,\n        0, 5, 0, 7, 6, 1, 2, 0, 7, 4, 6, 0, 6, 9, 7, 0, 7, 3, 2, 5, 9, 0, 4, 8,\n        3, 6, 4, 0, 3, 2, 6, 6, 3, 2, 2, 3, 6, 7, 8, 4])\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"DL_files/DL_4_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Net</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Net, <span class=\"variable language_\">self</span>).__init__()</span><br><span class=\"line\">        <span class=\"comment\"># 卷积层</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.conv1 = nn.Conv2d(<span class=\"number\">1</span>, <span class=\"number\">10</span>, kernel_size=<span class=\"number\">5</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.conv2 = nn.Conv2d(<span class=\"number\">10</span>, <span class=\"number\">20</span>, kernel_size=<span class=\"number\">5</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 加一层 dropout (删除神经元), 防止过拟合; 不要直接用 F.dropout2d</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.conv2_drop = nn.Dropout2d()</span><br><span class=\"line\">        <span class=\"comment\"># 全连接层</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.fc1 = nn.Linear(<span class=\"number\">320</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.fc2 = nn.Linear(<span class=\"number\">50</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 原28x28x1 -&gt; 卷积24x24x10 -&gt; 池化12x12x10 -&gt; 激活12x12x10</span></span><br><span class=\"line\">        x = F.relu(F.max_pool2d(<span class=\"variable language_\">self</span>.conv1(x), <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 原12x12x10 -&gt; 卷积8x8x20 -&gt; 池化4x4x20 -&gt; 激活4x4x20</span></span><br><span class=\"line\">        x = F.relu(F.max_pool2d(<span class=\"variable language_\">self</span>.conv2_drop(<span class=\"variable language_\">self</span>.conv2(x)), <span class=\"number\">2</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 320 = 4x4x20 将张量x变形成一维向量形式，总特征数不变，为全连接层做准备</span></span><br><span class=\"line\">        x = x.view(-<span class=\"number\">1</span>, <span class=\"number\">320</span>)</span><br><span class=\"line\">        x = F.relu(<span class=\"variable language_\">self</span>.fc1(x))</span><br><span class=\"line\">        x = F.dropout(x, training=<span class=\"variable language_\">self</span>.training)</span><br><span class=\"line\">        x = <span class=\"variable language_\">self</span>.fc2(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> F.log_softmax(x)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">network = Net()</span><br><span class=\"line\">optimizer = optim.SGD(network.parameters(),</span><br><span class=\"line\">                      lr=learning_rate,</span><br><span class=\"line\">                      momentum=momentum)</span><br><span class=\"line\"></span><br><span class=\"line\">train_losses = []</span><br><span class=\"line\">train_counter = []</span><br><span class=\"line\">test_losses = []</span><br><span class=\"line\">test_counter = [i * <span class=\"built_in\">len</span>(train_loader.dataset) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n_epochs + <span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">train</span>(<span class=\"params\">epoch</span>):</span><br><span class=\"line\">    network.train()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> batch_idx, (data, target) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(train_loader):</span><br><span class=\"line\">        optimizer.zero_grad()</span><br><span class=\"line\">        output = network(data)</span><br><span class=\"line\">        loss = F.nll_loss(output, target)</span><br><span class=\"line\">        loss.backward()</span><br><span class=\"line\">        optimizer.step()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> batch_idx % log_interval == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;&#x27;</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">                epoch + <span class=\"number\">1</span>, batch_idx * <span class=\"built_in\">len</span>(data), <span class=\"built_in\">len</span>(train_loader.dataset),</span><br><span class=\"line\">                <span class=\"number\">100.</span> * batch_idx / <span class=\"built_in\">len</span>(train_loader), loss.item()))</span><br><span class=\"line\">            train_losses.append(loss.item())</span><br><span class=\"line\">            train_counter.append((batch_idx * <span class=\"number\">64</span>) +</span><br><span class=\"line\">                                 (epoch * <span class=\"built_in\">len</span>(train_loader.dataset)))</span><br><span class=\"line\">            torch.save(network.state_dict(), <span class=\"string\">&#x27;./_data_set/MNIST/model.pth&#x27;</span>)</span><br><span class=\"line\">            torch.save(optimizer.state_dict(),</span><br><span class=\"line\">                       <span class=\"string\">&#x27;./_data_set/MNIST/optimizer.pth&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>():</span><br><span class=\"line\">    network.<span class=\"built_in\">eval</span>()</span><br><span class=\"line\">    test_loss = <span class=\"number\">0</span></span><br><span class=\"line\">    correct = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\"># 测试集不需要反向传播，所以使用 torch.no_grad() 方法关闭计算图</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">        <span class=\"keyword\">for</span> data, target <span class=\"keyword\">in</span> test_loader:</span><br><span class=\"line\">            output = network(data)</span><br><span class=\"line\">            test_loss += F.nll_loss(output, target, reduction=<span class=\"string\">&#x27;sum&#x27;</span>).item()</span><br><span class=\"line\">            pred = output.data.<span class=\"built_in\">max</span>(<span class=\"number\">1</span>, keepdim=<span class=\"literal\">True</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">            correct += pred.eq(target.data.view_as(pred)).<span class=\"built_in\">sum</span>()</span><br><span class=\"line\">    test_loss /= <span class=\"built_in\">len</span>(test_loader.dataset)</span><br><span class=\"line\">    test_losses.append(test_loss)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\nTest set: Avg. loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n&#x27;</span>.<span class=\"built_in\">format</span>(</span><br><span class=\"line\">        test_loss, correct, <span class=\"built_in\">len</span>(test_loader.dataset),</span><br><span class=\"line\">        <span class=\"number\">100.</span> * correct / <span class=\"built_in\">len</span>(test_loader.dataset)))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># train(0)</span></span><br><span class=\"line\">    <span class=\"comment\"># 不加这个，后面画图就会报错：x and y must be the same size</span></span><br><span class=\"line\">    test()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n_epochs):</span><br><span class=\"line\">        train(epoch)</span><br><span class=\"line\">        test()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>C:\\Users\\Administrator\\AppData\\Local\\Temp\\ipykernel_18752\\2337744027.py:29: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  return F.log_softmax(x)\n\n\nTrain Epoch: 1 [0/60000 (0%)]\tLoss: 2.306355\nTrain Epoch: 1 [640/60000 (1%)]\tLoss: 2.309732\nTrain Epoch: 1 [1280/60000 (2%)]\tLoss: 2.263060\nTrain Epoch: 1 [1920/60000 (3%)]\tLoss: 2.253021\nTrain Epoch: 1 [2560/60000 (4%)]\tLoss: 2.239486\nTrain Epoch: 1 [3200/60000 (5%)]\tLoss: 2.232780\nTrain Epoch: 1 [3840/60000 (6%)]\tLoss: 2.223558\nTrain Epoch: 1 [4480/60000 (7%)]\tLoss: 2.174626\nTrain Epoch: 1 [5120/60000 (9%)]\tLoss: 2.122881\nTrain Epoch: 1 [5760/60000 (10%)]\tLoss: 2.025848\nTrain Epoch: 1 [6400/60000 (11%)]\tLoss: 1.923471\nTrain Epoch: 1 [7040/60000 (12%)]\tLoss: 1.832063\nTrain Epoch: 1 [7680/60000 (13%)]\tLoss: 1.906025\nTrain Epoch: 1 [8320/60000 (14%)]\tLoss: 1.673950\nTrain Epoch: 1 [8960/60000 (15%)]\tLoss: 1.537203\nTrain Epoch: 1 [9600/60000 (16%)]\tLoss: 1.439621\nTrain Epoch: 1 [10240/60000 (17%)]\tLoss: 1.275429\nTrain Epoch: 1 [10880/60000 (18%)]\tLoss: 1.183242\nTrain Epoch: 1 [11520/60000 (19%)]\tLoss: 1.182200\nTrain Epoch: 1 [12160/60000 (20%)]\tLoss: 1.154036\nTrain Epoch: 1 [12800/60000 (21%)]\tLoss: 0.921464\nTrain Epoch: 1 [13440/60000 (22%)]\tLoss: 0.877538\nTrain Epoch: 1 [14080/60000 (23%)]\tLoss: 0.917646\nTrain Epoch: 1 [14720/60000 (25%)]\tLoss: 0.928683\nTrain Epoch: 1 [15360/60000 (26%)]\tLoss: 0.883320\nTrain Epoch: 1 [16000/60000 (27%)]\tLoss: 0.829271\nTrain Epoch: 1 [16640/60000 (28%)]\tLoss: 0.843372\nTrain Epoch: 1 [17280/60000 (29%)]\tLoss: 0.962177\nTrain Epoch: 1 [17920/60000 (30%)]\tLoss: 0.816695\nTrain Epoch: 1 [18560/60000 (31%)]\tLoss: 0.803838\nTrain Epoch: 1 [19200/60000 (32%)]\tLoss: 0.706732\nTrain Epoch: 1 [19840/60000 (33%)]\tLoss: 0.697531\nTrain Epoch: 1 [20480/60000 (34%)]\tLoss: 0.748919\nTrain Epoch: 1 [21120/60000 (35%)]\tLoss: 0.599384\nTrain Epoch: 1 [21760/60000 (36%)]\tLoss: 0.873525\nTrain Epoch: 1 [22400/60000 (37%)]\tLoss: 0.730187\nTrain Epoch: 1 [23040/60000 (38%)]\tLoss: 0.780188\nTrain Epoch: 1 [23680/60000 (39%)]\tLoss: 0.688149\nTrain Epoch: 1 [24320/60000 (41%)]\tLoss: 0.578381\nTrain Epoch: 1 [24960/60000 (42%)]\tLoss: 0.679022\nTrain Epoch: 1 [25600/60000 (43%)]\tLoss: 0.597318\nTrain Epoch: 1 [26240/60000 (44%)]\tLoss: 0.885319\nTrain Epoch: 1 [26880/60000 (45%)]\tLoss: 0.586243\nTrain Epoch: 1 [27520/60000 (46%)]\tLoss: 0.832649\nTrain Epoch: 1 [28160/60000 (47%)]\tLoss: 0.541850\nTrain Epoch: 1 [28800/60000 (48%)]\tLoss: 0.997807\nTrain Epoch: 1 [29440/60000 (49%)]\tLoss: 0.680030\nTrain Epoch: 1 [30080/60000 (50%)]\tLoss: 0.546325\nTrain Epoch: 1 [30720/60000 (51%)]\tLoss: 0.812084\nTrain Epoch: 1 [31360/60000 (52%)]\tLoss: 0.659495\nTrain Epoch: 1 [32000/60000 (53%)]\tLoss: 0.880883\nTrain Epoch: 1 [32640/60000 (54%)]\tLoss: 0.788217\nTrain Epoch: 1 [33280/60000 (55%)]\tLoss: 0.810931\nTrain Epoch: 1 [33920/60000 (57%)]\tLoss: 0.572216\nTrain Epoch: 1 [34560/60000 (58%)]\tLoss: 0.481873\nTrain Epoch: 1 [35200/60000 (59%)]\tLoss: 0.502513\nTrain Epoch: 1 [35840/60000 (60%)]\tLoss: 0.410055\nTrain Epoch: 1 [36480/60000 (61%)]\tLoss: 0.489813\nTrain Epoch: 1 [37120/60000 (62%)]\tLoss: 0.507667\nTrain Epoch: 1 [37760/60000 (63%)]\tLoss: 0.497175\nTrain Epoch: 1 [38400/60000 (64%)]\tLoss: 0.433524\nTrain Epoch: 1 [39040/60000 (65%)]\tLoss: 0.448550\nTrain Epoch: 1 [39680/60000 (66%)]\tLoss: 0.451818\nTrain Epoch: 1 [40320/60000 (67%)]\tLoss: 0.501129\nTrain Epoch: 1 [40960/60000 (68%)]\tLoss: 0.605211\nTrain Epoch: 1 [41600/60000 (69%)]\tLoss: 0.332027\nTrain Epoch: 1 [42240/60000 (70%)]\tLoss: 0.483988\nTrain Epoch: 1 [42880/60000 (71%)]\tLoss: 0.887791\nTrain Epoch: 1 [43520/60000 (72%)]\tLoss: 0.273152\nTrain Epoch: 1 [44160/60000 (74%)]\tLoss: 0.590317\nTrain Epoch: 1 [44800/60000 (75%)]\tLoss: 0.459316\nTrain Epoch: 1 [45440/60000 (76%)]\tLoss: 0.492083\nTrain Epoch: 1 [46080/60000 (77%)]\tLoss: 0.477218\nTrain Epoch: 1 [46720/60000 (78%)]\tLoss: 0.421333\nTrain Epoch: 1 [47360/60000 (79%)]\tLoss: 0.576612\nTrain Epoch: 1 [48000/60000 (80%)]\tLoss: 0.359032\nTrain Epoch: 1 [48640/60000 (81%)]\tLoss: 0.434221\nTrain Epoch: 1 [49280/60000 (82%)]\tLoss: 0.506898\nTrain Epoch: 1 [49920/60000 (83%)]\tLoss: 0.342816\nTrain Epoch: 1 [50560/60000 (84%)]\tLoss: 0.287471\nTrain Epoch: 1 [51200/60000 (85%)]\tLoss: 0.250604\nTrain Epoch: 1 [51840/60000 (86%)]\tLoss: 0.386828\nTrain Epoch: 1 [52480/60000 (87%)]\tLoss: 0.331759\nTrain Epoch: 1 [53120/60000 (88%)]\tLoss: 0.388772\nTrain Epoch: 1 [53760/60000 (90%)]\tLoss: 0.509017\nTrain Epoch: 1 [54400/60000 (91%)]\tLoss: 0.517717\nTrain Epoch: 1 [55040/60000 (92%)]\tLoss: 0.393285\nTrain Epoch: 1 [55680/60000 (93%)]\tLoss: 0.341990\nTrain Epoch: 1 [56320/60000 (94%)]\tLoss: 0.434098\nTrain Epoch: 1 [56960/60000 (95%)]\tLoss: 0.342924\nTrain Epoch: 1 [57600/60000 (96%)]\tLoss: 0.617892\nTrain Epoch: 1 [58240/60000 (97%)]\tLoss: 0.488426\nTrain Epoch: 1 [58880/60000 (98%)]\tLoss: 0.356584\nTrain Epoch: 1 [59520/60000 (99%)]\tLoss: 0.548745\n\nTest set: Avg. loss: 0.1674, Accuracy: 9512/10000 (95%)\n\nTrain Epoch: 2 [0/60000 (0%)]\tLoss: 0.315766\nTrain Epoch: 2 [640/60000 (1%)]\tLoss: 0.468051\nTrain Epoch: 2 [1280/60000 (2%)]\tLoss: 0.464737\nTrain Epoch: 2 [1920/60000 (3%)]\tLoss: 0.357223\nTrain Epoch: 2 [2560/60000 (4%)]\tLoss: 0.317739\nTrain Epoch: 2 [3200/60000 (5%)]\tLoss: 0.684018\nTrain Epoch: 2 [3840/60000 (6%)]\tLoss: 0.464855\nTrain Epoch: 2 [4480/60000 (7%)]\tLoss: 0.420857\nTrain Epoch: 2 [5120/60000 (9%)]\tLoss: 0.508732\nTrain Epoch: 2 [5760/60000 (10%)]\tLoss: 0.318191\nTrain Epoch: 2 [6400/60000 (11%)]\tLoss: 0.346217\nTrain Epoch: 2 [7040/60000 (12%)]\tLoss: 0.559674\nTrain Epoch: 2 [7680/60000 (13%)]\tLoss: 0.409686\nTrain Epoch: 2 [8320/60000 (14%)]\tLoss: 0.535685\nTrain Epoch: 2 [8960/60000 (15%)]\tLoss: 0.480220\nTrain Epoch: 2 [9600/60000 (16%)]\tLoss: 0.519283\nTrain Epoch: 2 [10240/60000 (17%)]\tLoss: 0.329807\nTrain Epoch: 2 [10880/60000 (18%)]\tLoss: 0.393071\nTrain Epoch: 2 [11520/60000 (19%)]\tLoss: 0.444064\nTrain Epoch: 2 [12160/60000 (20%)]\tLoss: 0.533698\nTrain Epoch: 2 [12800/60000 (21%)]\tLoss: 0.511128\nTrain Epoch: 2 [13440/60000 (22%)]\tLoss: 0.346371\nTrain Epoch: 2 [14080/60000 (23%)]\tLoss: 0.307755\nTrain Epoch: 2 [14720/60000 (25%)]\tLoss: 0.536841\nTrain Epoch: 2 [15360/60000 (26%)]\tLoss: 0.310219\nTrain Epoch: 2 [16000/60000 (27%)]\tLoss: 0.493684\nTrain Epoch: 2 [16640/60000 (28%)]\tLoss: 0.395575\nTrain Epoch: 2 [17280/60000 (29%)]\tLoss: 0.252499\nTrain Epoch: 2 [17920/60000 (30%)]\tLoss: 0.238181\nTrain Epoch: 2 [18560/60000 (31%)]\tLoss: 0.323044\nTrain Epoch: 2 [19200/60000 (32%)]\tLoss: 0.421634\nTrain Epoch: 2 [19840/60000 (33%)]\tLoss: 0.409919\nTrain Epoch: 2 [20480/60000 (34%)]\tLoss: 0.325331\nTrain Epoch: 2 [21120/60000 (35%)]\tLoss: 0.396984\nTrain Epoch: 2 [21760/60000 (36%)]\tLoss: 0.395612\nTrain Epoch: 2 [22400/60000 (37%)]\tLoss: 0.378807\nTrain Epoch: 2 [23040/60000 (38%)]\tLoss: 0.368943\nTrain Epoch: 2 [23680/60000 (39%)]\tLoss: 0.525262\nTrain Epoch: 2 [24320/60000 (41%)]\tLoss: 0.227805\nTrain Epoch: 2 [24960/60000 (42%)]\tLoss: 0.278575\nTrain Epoch: 2 [25600/60000 (43%)]\tLoss: 0.404145\nTrain Epoch: 2 [26240/60000 (44%)]\tLoss: 0.467817\nTrain Epoch: 2 [26880/60000 (45%)]\tLoss: 0.279880\nTrain Epoch: 2 [27520/60000 (46%)]\tLoss: 0.539638\nTrain Epoch: 2 [28160/60000 (47%)]\tLoss: 0.257472\nTrain Epoch: 2 [28800/60000 (48%)]\tLoss: 0.220950\nTrain Epoch: 2 [29440/60000 (49%)]\tLoss: 0.448459\nTrain Epoch: 2 [30080/60000 (50%)]\tLoss: 0.280728\nTrain Epoch: 2 [30720/60000 (51%)]\tLoss: 0.321694\nTrain Epoch: 2 [31360/60000 (52%)]\tLoss: 0.234594\nTrain Epoch: 2 [32000/60000 (53%)]\tLoss: 0.249877\nTrain Epoch: 2 [32640/60000 (54%)]\tLoss: 0.443569\nTrain Epoch: 2 [33280/60000 (55%)]\tLoss: 0.358985\nTrain Epoch: 2 [33920/60000 (57%)]\tLoss: 0.350358\nTrain Epoch: 2 [34560/60000 (58%)]\tLoss: 0.240932\nTrain Epoch: 2 [35200/60000 (59%)]\tLoss: 0.400578\nTrain Epoch: 2 [35840/60000 (60%)]\tLoss: 0.451478\nTrain Epoch: 2 [36480/60000 (61%)]\tLoss: 0.366277\nTrain Epoch: 2 [37120/60000 (62%)]\tLoss: 0.464619\nTrain Epoch: 2 [37760/60000 (63%)]\tLoss: 0.219236\nTrain Epoch: 2 [38400/60000 (64%)]\tLoss: 0.310383\nTrain Epoch: 2 [39040/60000 (65%)]\tLoss: 0.318048\nTrain Epoch: 2 [39680/60000 (66%)]\tLoss: 0.598020\nTrain Epoch: 2 [40320/60000 (67%)]\tLoss: 0.248990\nTrain Epoch: 2 [40960/60000 (68%)]\tLoss: 0.153452\nTrain Epoch: 2 [41600/60000 (69%)]\tLoss: 0.155354\nTrain Epoch: 2 [42240/60000 (70%)]\tLoss: 0.249885\nTrain Epoch: 2 [42880/60000 (71%)]\tLoss: 0.198647\nTrain Epoch: 2 [43520/60000 (72%)]\tLoss: 0.394697\nTrain Epoch: 2 [44160/60000 (74%)]\tLoss: 0.450222\nTrain Epoch: 2 [44800/60000 (75%)]\tLoss: 0.202541\nTrain Epoch: 2 [45440/60000 (76%)]\tLoss: 0.268529\nTrain Epoch: 2 [46080/60000 (77%)]\tLoss: 0.348173\nTrain Epoch: 2 [46720/60000 (78%)]\tLoss: 0.359101\nTrain Epoch: 2 [47360/60000 (79%)]\tLoss: 0.522160\nTrain Epoch: 2 [48000/60000 (80%)]\tLoss: 0.488034\nTrain Epoch: 2 [48640/60000 (81%)]\tLoss: 0.350620\nTrain Epoch: 2 [49280/60000 (82%)]\tLoss: 0.523037\nTrain Epoch: 2 [49920/60000 (83%)]\tLoss: 0.124925\nTrain Epoch: 2 [50560/60000 (84%)]\tLoss: 0.299917\nTrain Epoch: 2 [51200/60000 (85%)]\tLoss: 0.302186\nTrain Epoch: 2 [51840/60000 (86%)]\tLoss: 0.323338\nTrain Epoch: 2 [52480/60000 (87%)]\tLoss: 0.256383\nTrain Epoch: 2 [53120/60000 (88%)]\tLoss: 0.313699\nTrain Epoch: 2 [53760/60000 (90%)]\tLoss: 0.442143\nTrain Epoch: 2 [54400/60000 (91%)]\tLoss: 0.234823\nTrain Epoch: 2 [55040/60000 (92%)]\tLoss: 0.356765\nTrain Epoch: 2 [55680/60000 (93%)]\tLoss: 0.425722\nTrain Epoch: 2 [56320/60000 (94%)]\tLoss: 0.260159\nTrain Epoch: 2 [56960/60000 (95%)]\tLoss: 0.307709\nTrain Epoch: 2 [57600/60000 (96%)]\tLoss: 0.368729\nTrain Epoch: 2 [58240/60000 (97%)]\tLoss: 0.554495\nTrain Epoch: 2 [58880/60000 (98%)]\tLoss: 0.151344\nTrain Epoch: 2 [59520/60000 (99%)]\tLoss: 0.332558\n\nTest set: Avg. loss: 0.1095, Accuracy: 9664/10000 (97%)\n\nTrain Epoch: 3 [0/60000 (0%)]\tLoss: 0.606901\nTrain Epoch: 3 [640/60000 (1%)]\tLoss: 0.217843\nTrain Epoch: 3 [1280/60000 (2%)]\tLoss: 0.225650\nTrain Epoch: 3 [1920/60000 (3%)]\tLoss: 0.359506\nTrain Epoch: 3 [2560/60000 (4%)]\tLoss: 0.380754\nTrain Epoch: 3 [3200/60000 (5%)]\tLoss: 0.283387\nTrain Epoch: 3 [3840/60000 (6%)]\tLoss: 0.318688\nTrain Epoch: 3 [4480/60000 (7%)]\tLoss: 0.335678\nTrain Epoch: 3 [5120/60000 (9%)]\tLoss: 0.157370\nTrain Epoch: 3 [5760/60000 (10%)]\tLoss: 0.220007\nTrain Epoch: 3 [6400/60000 (11%)]\tLoss: 0.291860\nTrain Epoch: 3 [7040/60000 (12%)]\tLoss: 0.464692\nTrain Epoch: 3 [7680/60000 (13%)]\tLoss: 0.229839\nTrain Epoch: 3 [8320/60000 (14%)]\tLoss: 0.342332\nTrain Epoch: 3 [8960/60000 (15%)]\tLoss: 0.313431\nTrain Epoch: 3 [9600/60000 (16%)]\tLoss: 0.341073\nTrain Epoch: 3 [10240/60000 (17%)]\tLoss: 0.208354\nTrain Epoch: 3 [10880/60000 (18%)]\tLoss: 0.188568\nTrain Epoch: 3 [11520/60000 (19%)]\tLoss: 0.213437\nTrain Epoch: 3 [12160/60000 (20%)]\tLoss: 0.327615\nTrain Epoch: 3 [12800/60000 (21%)]\tLoss: 0.240687\nTrain Epoch: 3 [13440/60000 (22%)]\tLoss: 0.347590\nTrain Epoch: 3 [14080/60000 (23%)]\tLoss: 0.367349\nTrain Epoch: 3 [14720/60000 (25%)]\tLoss: 0.270027\nTrain Epoch: 3 [15360/60000 (26%)]\tLoss: 0.549701\nTrain Epoch: 3 [16000/60000 (27%)]\tLoss: 0.265491\nTrain Epoch: 3 [16640/60000 (28%)]\tLoss: 0.264681\nTrain Epoch: 3 [17280/60000 (29%)]\tLoss: 0.259617\nTrain Epoch: 3 [17920/60000 (30%)]\tLoss: 0.193016\nTrain Epoch: 3 [18560/60000 (31%)]\tLoss: 0.405925\nTrain Epoch: 3 [19200/60000 (32%)]\tLoss: 0.230640\nTrain Epoch: 3 [19840/60000 (33%)]\tLoss: 0.298929\nTrain Epoch: 3 [20480/60000 (34%)]\tLoss: 0.508493\nTrain Epoch: 3 [21120/60000 (35%)]\tLoss: 0.253897\nTrain Epoch: 3 [21760/60000 (36%)]\tLoss: 0.201565\nTrain Epoch: 3 [22400/60000 (37%)]\tLoss: 0.276484\nTrain Epoch: 3 [23040/60000 (38%)]\tLoss: 0.447977\nTrain Epoch: 3 [23680/60000 (39%)]\tLoss: 0.542686\nTrain Epoch: 3 [24320/60000 (41%)]\tLoss: 0.340117\nTrain Epoch: 3 [24960/60000 (42%)]\tLoss: 0.238209\nTrain Epoch: 3 [25600/60000 (43%)]\tLoss: 0.151151\nTrain Epoch: 3 [26240/60000 (44%)]\tLoss: 0.365213\nTrain Epoch: 3 [26880/60000 (45%)]\tLoss: 0.362948\nTrain Epoch: 3 [27520/60000 (46%)]\tLoss: 0.237704\nTrain Epoch: 3 [28160/60000 (47%)]\tLoss: 0.398583\nTrain Epoch: 3 [28800/60000 (48%)]\tLoss: 0.397255\nTrain Epoch: 3 [29440/60000 (49%)]\tLoss: 0.262200\nTrain Epoch: 3 [30080/60000 (50%)]\tLoss: 0.152108\nTrain Epoch: 3 [30720/60000 (51%)]\tLoss: 0.372339\nTrain Epoch: 3 [31360/60000 (52%)]\tLoss: 0.372472\nTrain Epoch: 3 [32000/60000 (53%)]\tLoss: 0.259656\nTrain Epoch: 3 [32640/60000 (54%)]\tLoss: 0.435441\nTrain Epoch: 3 [33280/60000 (55%)]\tLoss: 0.378388\nTrain Epoch: 3 [33920/60000 (57%)]\tLoss: 0.177515\nTrain Epoch: 3 [34560/60000 (58%)]\tLoss: 0.283689\nTrain Epoch: 3 [35200/60000 (59%)]\tLoss: 0.131174\nTrain Epoch: 3 [35840/60000 (60%)]\tLoss: 0.171783\nTrain Epoch: 3 [36480/60000 (61%)]\tLoss: 0.104585\nTrain Epoch: 3 [37120/60000 (62%)]\tLoss: 0.389055\nTrain Epoch: 3 [37760/60000 (63%)]\tLoss: 0.360526\nTrain Epoch: 3 [38400/60000 (64%)]\tLoss: 0.259271\nTrain Epoch: 3 [39040/60000 (65%)]\tLoss: 0.525336\nTrain Epoch: 3 [39680/60000 (66%)]\tLoss: 0.196208\nTrain Epoch: 3 [40320/60000 (67%)]\tLoss: 0.374461\nTrain Epoch: 3 [40960/60000 (68%)]\tLoss: 0.216166\nTrain Epoch: 3 [41600/60000 (69%)]\tLoss: 0.221857\nTrain Epoch: 3 [42240/60000 (70%)]\tLoss: 0.223318\nTrain Epoch: 3 [42880/60000 (71%)]\tLoss: 0.185287\nTrain Epoch: 3 [43520/60000 (72%)]\tLoss: 0.382659\nTrain Epoch: 3 [44160/60000 (74%)]\tLoss: 0.262684\nTrain Epoch: 3 [44800/60000 (75%)]\tLoss: 0.388742\nTrain Epoch: 3 [45440/60000 (76%)]\tLoss: 0.286496\nTrain Epoch: 3 [46080/60000 (77%)]\tLoss: 0.301708\nTrain Epoch: 3 [46720/60000 (78%)]\tLoss: 0.451360\nTrain Epoch: 3 [47360/60000 (79%)]\tLoss: 0.279125\nTrain Epoch: 3 [48000/60000 (80%)]\tLoss: 0.197034\nTrain Epoch: 3 [48640/60000 (81%)]\tLoss: 0.240700\nTrain Epoch: 3 [49280/60000 (82%)]\tLoss: 0.594597\nTrain Epoch: 3 [49920/60000 (83%)]\tLoss: 0.108885\nTrain Epoch: 3 [50560/60000 (84%)]\tLoss: 0.199601\nTrain Epoch: 3 [51200/60000 (85%)]\tLoss: 0.184297\nTrain Epoch: 3 [51840/60000 (86%)]\tLoss: 0.175885\nTrain Epoch: 3 [52480/60000 (87%)]\tLoss: 0.365624\nTrain Epoch: 3 [53120/60000 (88%)]\tLoss: 0.236363\nTrain Epoch: 3 [53760/60000 (90%)]\tLoss: 0.508030\nTrain Epoch: 3 [54400/60000 (91%)]\tLoss: 0.379145\nTrain Epoch: 3 [55040/60000 (92%)]\tLoss: 0.304528\nTrain Epoch: 3 [55680/60000 (93%)]\tLoss: 0.184158\nTrain Epoch: 3 [56320/60000 (94%)]\tLoss: 0.323510\nTrain Epoch: 3 [56960/60000 (95%)]\tLoss: 0.192909\nTrain Epoch: 3 [57600/60000 (96%)]\tLoss: 0.275473\nTrain Epoch: 3 [58240/60000 (97%)]\tLoss: 0.397780\nTrain Epoch: 3 [58880/60000 (98%)]\tLoss: 0.159153\nTrain Epoch: 3 [59520/60000 (99%)]\tLoss: 0.231473\n\nTest set: Avg. loss: 0.0909, Accuracy: 9709/10000 (97%)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">12</span>))</span><br><span class=\"line\">plt.plot(train_counter, train_losses, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\">plt.scatter(test_counter, test_losses, color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Train Loss&#x27;</span>, <span class=\"string\">&#x27;Test Loss&#x27;</span>], loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;number of training examples seen&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;negative log likelihood loss&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"DL_files/DL_6_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">continued_network = Net()</span><br><span class=\"line\">continued_optimizer = optim.SGD(network.parameters(),</span><br><span class=\"line\">                                lr=learning_rate,</span><br><span class=\"line\">                                momentum=momentum)</span><br><span class=\"line\"></span><br><span class=\"line\">network_state_dict = torch.load(<span class=\"string\">&#x27;./_data_set/MNIST/model.pth&#x27;</span>)</span><br><span class=\"line\">continued_network.load_state_dict(network_state_dict)</span><br><span class=\"line\">optimizer_state_dict = torch.load(<span class=\"string\">&#x27;./_data_set/MNIST/optimizer.pth&#x27;</span>)</span><br><span class=\"line\">continued_optimizer.load_state_dict(optimizer_state_dict)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>, <span class=\"number\">9</span>):</span><br><span class=\"line\">    train(i)</span><br><span class=\"line\">    test()</span><br><span class=\"line\">    test_counter.append(i * <span class=\"built_in\">len</span>(train_loader.dataset))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>C:\\Users\\Administrator\\AppData\\Local\\Temp\\ipykernel_18752\\2337744027.py:29: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  return F.log_softmax(x)\n\n\nTrain Epoch: 4 [0/60000 (0%)]\tLoss: 0.180916\nTrain Epoch: 4 [640/60000 (1%)]\tLoss: 0.188782\nTrain Epoch: 4 [1280/60000 (2%)]\tLoss: 0.250786\nTrain Epoch: 4 [1920/60000 (3%)]\tLoss: 0.185484\nTrain Epoch: 4 [2560/60000 (4%)]\tLoss: 0.295455\nTrain Epoch: 4 [3200/60000 (5%)]\tLoss: 0.172000\nTrain Epoch: 4 [3840/60000 (6%)]\tLoss: 0.117650\nTrain Epoch: 4 [4480/60000 (7%)]\tLoss: 0.423349\nTrain Epoch: 4 [5120/60000 (9%)]\tLoss: 0.285250\nTrain Epoch: 4 [5760/60000 (10%)]\tLoss: 0.360192\nTrain Epoch: 4 [6400/60000 (11%)]\tLoss: 0.362748\nTrain Epoch: 4 [7040/60000 (12%)]\tLoss: 0.292238\nTrain Epoch: 4 [7680/60000 (13%)]\tLoss: 0.238687\nTrain Epoch: 4 [8320/60000 (14%)]\tLoss: 0.150868\nTrain Epoch: 4 [8960/60000 (15%)]\tLoss: 0.427452\nTrain Epoch: 4 [9600/60000 (16%)]\tLoss: 0.230040\nTrain Epoch: 4 [10240/60000 (17%)]\tLoss: 0.275437\nTrain Epoch: 4 [10880/60000 (18%)]\tLoss: 0.158874\nTrain Epoch: 4 [11520/60000 (19%)]\tLoss: 0.162058\nTrain Epoch: 4 [12160/60000 (20%)]\tLoss: 0.177609\nTrain Epoch: 4 [12800/60000 (21%)]\tLoss: 0.416331\nTrain Epoch: 4 [13440/60000 (22%)]\tLoss: 0.255415\nTrain Epoch: 4 [14080/60000 (23%)]\tLoss: 0.150464\nTrain Epoch: 4 [14720/60000 (25%)]\tLoss: 0.285846\nTrain Epoch: 4 [15360/60000 (26%)]\tLoss: 0.175966\nTrain Epoch: 4 [16000/60000 (27%)]\tLoss: 0.385556\nTrain Epoch: 4 [16640/60000 (28%)]\tLoss: 0.217486\nTrain Epoch: 4 [17280/60000 (29%)]\tLoss: 0.243101\nTrain Epoch: 4 [17920/60000 (30%)]\tLoss: 0.182876\nTrain Epoch: 4 [18560/60000 (31%)]\tLoss: 0.094987\nTrain Epoch: 4 [19200/60000 (32%)]\tLoss: 0.225338\nTrain Epoch: 4 [19840/60000 (33%)]\tLoss: 0.145325\nTrain Epoch: 4 [20480/60000 (34%)]\tLoss: 0.165757\nTrain Epoch: 4 [21120/60000 (35%)]\tLoss: 0.218088\nTrain Epoch: 4 [21760/60000 (36%)]\tLoss: 0.085633\nTrain Epoch: 4 [22400/60000 (37%)]\tLoss: 0.122317\nTrain Epoch: 4 [23040/60000 (38%)]\tLoss: 0.272857\nTrain Epoch: 4 [23680/60000 (39%)]\tLoss: 0.155769\nTrain Epoch: 4 [24320/60000 (41%)]\tLoss: 0.212894\nTrain Epoch: 4 [24960/60000 (42%)]\tLoss: 0.117393\nTrain Epoch: 4 [25600/60000 (43%)]\tLoss: 0.211204\nTrain Epoch: 4 [26240/60000 (44%)]\tLoss: 0.071398\nTrain Epoch: 4 [26880/60000 (45%)]\tLoss: 0.091613\nTrain Epoch: 4 [27520/60000 (46%)]\tLoss: 0.267689\nTrain Epoch: 4 [28160/60000 (47%)]\tLoss: 0.194783\nTrain Epoch: 4 [28800/60000 (48%)]\tLoss: 0.207981\nTrain Epoch: 4 [29440/60000 (49%)]\tLoss: 0.367123\nTrain Epoch: 4 [30080/60000 (50%)]\tLoss: 0.179464\nTrain Epoch: 4 [30720/60000 (51%)]\tLoss: 0.204890\nTrain Epoch: 4 [31360/60000 (52%)]\tLoss: 0.219245\nTrain Epoch: 4 [32000/60000 (53%)]\tLoss: 0.229217\nTrain Epoch: 4 [32640/60000 (54%)]\tLoss: 0.139216\nTrain Epoch: 4 [33280/60000 (55%)]\tLoss: 0.300938\nTrain Epoch: 4 [33920/60000 (57%)]\tLoss: 0.133212\nTrain Epoch: 4 [34560/60000 (58%)]\tLoss: 0.352936\nTrain Epoch: 4 [35200/60000 (59%)]\tLoss: 0.153349\nTrain Epoch: 4 [35840/60000 (60%)]\tLoss: 0.208317\nTrain Epoch: 4 [36480/60000 (61%)]\tLoss: 0.164447\nTrain Epoch: 4 [37120/60000 (62%)]\tLoss: 0.227367\nTrain Epoch: 4 [37760/60000 (63%)]\tLoss: 0.241028\nTrain Epoch: 4 [38400/60000 (64%)]\tLoss: 0.307894\nTrain Epoch: 4 [39040/60000 (65%)]\tLoss: 0.461609\nTrain Epoch: 4 [39680/60000 (66%)]\tLoss: 0.381326\nTrain Epoch: 4 [40320/60000 (67%)]\tLoss: 0.135251\nTrain Epoch: 4 [40960/60000 (68%)]\tLoss: 0.518683\nTrain Epoch: 4 [41600/60000 (69%)]\tLoss: 0.210409\nTrain Epoch: 4 [42240/60000 (70%)]\tLoss: 0.187576\nTrain Epoch: 4 [42880/60000 (71%)]\tLoss: 0.115259\nTrain Epoch: 4 [43520/60000 (72%)]\tLoss: 0.259883\nTrain Epoch: 4 [44160/60000 (74%)]\tLoss: 0.177242\nTrain Epoch: 4 [44800/60000 (75%)]\tLoss: 0.345635\nTrain Epoch: 4 [45440/60000 (76%)]\tLoss: 0.213670\nTrain Epoch: 4 [46080/60000 (77%)]\tLoss: 0.193606\nTrain Epoch: 4 [46720/60000 (78%)]\tLoss: 0.173757\nTrain Epoch: 4 [47360/60000 (79%)]\tLoss: 0.215879\nTrain Epoch: 4 [48000/60000 (80%)]\tLoss: 0.171952\nTrain Epoch: 4 [48640/60000 (81%)]\tLoss: 0.119270\nTrain Epoch: 4 [49280/60000 (82%)]\tLoss: 0.324480\nTrain Epoch: 4 [49920/60000 (83%)]\tLoss: 0.104771\nTrain Epoch: 4 [50560/60000 (84%)]\tLoss: 0.163072\nTrain Epoch: 4 [51200/60000 (85%)]\tLoss: 0.160245\nTrain Epoch: 4 [51840/60000 (86%)]\tLoss: 0.249122\nTrain Epoch: 4 [52480/60000 (87%)]\tLoss: 0.282949\nTrain Epoch: 4 [53120/60000 (88%)]\tLoss: 0.152365\nTrain Epoch: 4 [53760/60000 (90%)]\tLoss: 0.102036\nTrain Epoch: 4 [54400/60000 (91%)]\tLoss: 0.162332\nTrain Epoch: 4 [55040/60000 (92%)]\tLoss: 0.182912\nTrain Epoch: 4 [55680/60000 (93%)]\tLoss: 0.468722\nTrain Epoch: 4 [56320/60000 (94%)]\tLoss: 0.421446\nTrain Epoch: 4 [56960/60000 (95%)]\tLoss: 0.254925\nTrain Epoch: 4 [57600/60000 (96%)]\tLoss: 0.345340\nTrain Epoch: 4 [58240/60000 (97%)]\tLoss: 0.293855\nTrain Epoch: 4 [58880/60000 (98%)]\tLoss: 0.200609\nTrain Epoch: 4 [59520/60000 (99%)]\tLoss: 0.045524\n\nTest set: Avg. loss: 0.0696, Accuracy: 9772/10000 (98%)\n\nTrain Epoch: 5 [0/60000 (0%)]\tLoss: 0.270343\nTrain Epoch: 5 [640/60000 (1%)]\tLoss: 0.275511\nTrain Epoch: 5 [1280/60000 (2%)]\tLoss: 0.209185\nTrain Epoch: 5 [1920/60000 (3%)]\tLoss: 0.172124\nTrain Epoch: 5 [2560/60000 (4%)]\tLoss: 0.176122\nTrain Epoch: 5 [3200/60000 (5%)]\tLoss: 0.469673\nTrain Epoch: 5 [3840/60000 (6%)]\tLoss: 0.113855\nTrain Epoch: 5 [4480/60000 (7%)]\tLoss: 0.241289\nTrain Epoch: 5 [5120/60000 (9%)]\tLoss: 0.123443\nTrain Epoch: 5 [5760/60000 (10%)]\tLoss: 0.153661\nTrain Epoch: 5 [6400/60000 (11%)]\tLoss: 0.069777\nTrain Epoch: 5 [7040/60000 (12%)]\tLoss: 0.372212\nTrain Epoch: 5 [7680/60000 (13%)]\tLoss: 0.158761\nTrain Epoch: 5 [8320/60000 (14%)]\tLoss: 0.231457\nTrain Epoch: 5 [8960/60000 (15%)]\tLoss: 0.235761\nTrain Epoch: 5 [9600/60000 (16%)]\tLoss: 0.208866\nTrain Epoch: 5 [10240/60000 (17%)]\tLoss: 0.511828\nTrain Epoch: 5 [10880/60000 (18%)]\tLoss: 0.333603\nTrain Epoch: 5 [11520/60000 (19%)]\tLoss: 0.254337\nTrain Epoch: 5 [12160/60000 (20%)]\tLoss: 0.260536\nTrain Epoch: 5 [12800/60000 (21%)]\tLoss: 0.263866\nTrain Epoch: 5 [13440/60000 (22%)]\tLoss: 0.483610\nTrain Epoch: 5 [14080/60000 (23%)]\tLoss: 0.178215\nTrain Epoch: 5 [14720/60000 (25%)]\tLoss: 0.137731\nTrain Epoch: 5 [15360/60000 (26%)]\tLoss: 0.177714\nTrain Epoch: 5 [16000/60000 (27%)]\tLoss: 0.132543\nTrain Epoch: 5 [16640/60000 (28%)]\tLoss: 0.146177\nTrain Epoch: 5 [17280/60000 (29%)]\tLoss: 0.398970\nTrain Epoch: 5 [17920/60000 (30%)]\tLoss: 0.120811\nTrain Epoch: 5 [18560/60000 (31%)]\tLoss: 0.147756\nTrain Epoch: 5 [19200/60000 (32%)]\tLoss: 0.317457\nTrain Epoch: 5 [19840/60000 (33%)]\tLoss: 0.310727\nTrain Epoch: 5 [20480/60000 (34%)]\tLoss: 0.144468\nTrain Epoch: 5 [21120/60000 (35%)]\tLoss: 0.515887\nTrain Epoch: 5 [21760/60000 (36%)]\tLoss: 0.113731\nTrain Epoch: 5 [22400/60000 (37%)]\tLoss: 0.326223\nTrain Epoch: 5 [23040/60000 (38%)]\tLoss: 0.275539\nTrain Epoch: 5 [23680/60000 (39%)]\tLoss: 0.261113\nTrain Epoch: 5 [24320/60000 (41%)]\tLoss: 0.198070\nTrain Epoch: 5 [24960/60000 (42%)]\tLoss: 0.380463\nTrain Epoch: 5 [25600/60000 (43%)]\tLoss: 0.130256\nTrain Epoch: 5 [26240/60000 (44%)]\tLoss: 0.234225\nTrain Epoch: 5 [26880/60000 (45%)]\tLoss: 0.284392\nTrain Epoch: 5 [27520/60000 (46%)]\tLoss: 0.168175\nTrain Epoch: 5 [28160/60000 (47%)]\tLoss: 0.346845\nTrain Epoch: 5 [28800/60000 (48%)]\tLoss: 0.206521\nTrain Epoch: 5 [29440/60000 (49%)]\tLoss: 0.149305\nTrain Epoch: 5 [30080/60000 (50%)]\tLoss: 0.248684\nTrain Epoch: 5 [30720/60000 (51%)]\tLoss: 0.245173\nTrain Epoch: 5 [31360/60000 (52%)]\tLoss: 0.201854\nTrain Epoch: 5 [32000/60000 (53%)]\tLoss: 0.182244\nTrain Epoch: 5 [32640/60000 (54%)]\tLoss: 0.160925\nTrain Epoch: 5 [33280/60000 (55%)]\tLoss: 0.251155\nTrain Epoch: 5 [33920/60000 (57%)]\tLoss: 0.137573\nTrain Epoch: 5 [34560/60000 (58%)]\tLoss: 0.305431\nTrain Epoch: 5 [35200/60000 (59%)]\tLoss: 0.260936\nTrain Epoch: 5 [35840/60000 (60%)]\tLoss: 0.298855\nTrain Epoch: 5 [36480/60000 (61%)]\tLoss: 0.209435\nTrain Epoch: 5 [37120/60000 (62%)]\tLoss: 0.152100\nTrain Epoch: 5 [37760/60000 (63%)]\tLoss: 0.322987\nTrain Epoch: 5 [38400/60000 (64%)]\tLoss: 0.245070\nTrain Epoch: 5 [39040/60000 (65%)]\tLoss: 0.079185\nTrain Epoch: 5 [39680/60000 (66%)]\tLoss: 0.286104\nTrain Epoch: 5 [40320/60000 (67%)]\tLoss: 0.134519\nTrain Epoch: 5 [40960/60000 (68%)]\tLoss: 0.256614\nTrain Epoch: 5 [41600/60000 (69%)]\tLoss: 0.230492\nTrain Epoch: 5 [42240/60000 (70%)]\tLoss: 0.081532\nTrain Epoch: 5 [42880/60000 (71%)]\tLoss: 0.174270\nTrain Epoch: 5 [43520/60000 (72%)]\tLoss: 0.123896\nTrain Epoch: 5 [44160/60000 (74%)]\tLoss: 0.126517\nTrain Epoch: 5 [44800/60000 (75%)]\tLoss: 0.333949\nTrain Epoch: 5 [45440/60000 (76%)]\tLoss: 0.369903\nTrain Epoch: 5 [46080/60000 (77%)]\tLoss: 0.207948\nTrain Epoch: 5 [46720/60000 (78%)]\tLoss: 0.080965\nTrain Epoch: 5 [47360/60000 (79%)]\tLoss: 0.117344\nTrain Epoch: 5 [48000/60000 (80%)]\tLoss: 0.419863\nTrain Epoch: 5 [48640/60000 (81%)]\tLoss: 0.265613\nTrain Epoch: 5 [49280/60000 (82%)]\tLoss: 0.256468\nTrain Epoch: 5 [49920/60000 (83%)]\tLoss: 0.509733\nTrain Epoch: 5 [50560/60000 (84%)]\tLoss: 0.144000\nTrain Epoch: 5 [51200/60000 (85%)]\tLoss: 0.174094\nTrain Epoch: 5 [51840/60000 (86%)]\tLoss: 0.335760\nTrain Epoch: 5 [52480/60000 (87%)]\tLoss: 0.363208\nTrain Epoch: 5 [53120/60000 (88%)]\tLoss: 0.199396\nTrain Epoch: 5 [53760/60000 (90%)]\tLoss: 0.276358\nTrain Epoch: 5 [54400/60000 (91%)]\tLoss: 0.063482\nTrain Epoch: 5 [55040/60000 (92%)]\tLoss: 0.107777\nTrain Epoch: 5 [55680/60000 (93%)]\tLoss: 0.273694\nTrain Epoch: 5 [56320/60000 (94%)]\tLoss: 0.111036\nTrain Epoch: 5 [56960/60000 (95%)]\tLoss: 0.242194\nTrain Epoch: 5 [57600/60000 (96%)]\tLoss: 0.192879\nTrain Epoch: 5 [58240/60000 (97%)]\tLoss: 0.140068\nTrain Epoch: 5 [58880/60000 (98%)]\tLoss: 0.053538\nTrain Epoch: 5 [59520/60000 (99%)]\tLoss: 0.282342\n\nTest set: Avg. loss: 0.0648, Accuracy: 9794/10000 (98%)\n\nTrain Epoch: 6 [0/60000 (0%)]\tLoss: 0.157271\nTrain Epoch: 6 [640/60000 (1%)]\tLoss: 0.125083\nTrain Epoch: 6 [1280/60000 (2%)]\tLoss: 0.324760\nTrain Epoch: 6 [1920/60000 (3%)]\tLoss: 0.233483\nTrain Epoch: 6 [2560/60000 (4%)]\tLoss: 0.305379\nTrain Epoch: 6 [3200/60000 (5%)]\tLoss: 0.133055\nTrain Epoch: 6 [3840/60000 (6%)]\tLoss: 0.308374\nTrain Epoch: 6 [4480/60000 (7%)]\tLoss: 0.361411\nTrain Epoch: 6 [5120/60000 (9%)]\tLoss: 0.263687\nTrain Epoch: 6 [5760/60000 (10%)]\tLoss: 0.136558\nTrain Epoch: 6 [6400/60000 (11%)]\tLoss: 0.187681\nTrain Epoch: 6 [7040/60000 (12%)]\tLoss: 0.249220\nTrain Epoch: 6 [7680/60000 (13%)]\tLoss: 0.206636\nTrain Epoch: 6 [8320/60000 (14%)]\tLoss: 0.151353\nTrain Epoch: 6 [8960/60000 (15%)]\tLoss: 0.195330\nTrain Epoch: 6 [9600/60000 (16%)]\tLoss: 0.361656\nTrain Epoch: 6 [10240/60000 (17%)]\tLoss: 0.366321\nTrain Epoch: 6 [10880/60000 (18%)]\tLoss: 0.166131\nTrain Epoch: 6 [11520/60000 (19%)]\tLoss: 0.075402\nTrain Epoch: 6 [12160/60000 (20%)]\tLoss: 0.151120\nTrain Epoch: 6 [12800/60000 (21%)]\tLoss: 0.115874\nTrain Epoch: 6 [13440/60000 (22%)]\tLoss: 0.144778\nTrain Epoch: 6 [14080/60000 (23%)]\tLoss: 0.063986\nTrain Epoch: 6 [14720/60000 (25%)]\tLoss: 0.174532\nTrain Epoch: 6 [15360/60000 (26%)]\tLoss: 0.261803\nTrain Epoch: 6 [16000/60000 (27%)]\tLoss: 0.251123\nTrain Epoch: 6 [16640/60000 (28%)]\tLoss: 0.145080\nTrain Epoch: 6 [17280/60000 (29%)]\tLoss: 0.354523\nTrain Epoch: 6 [17920/60000 (30%)]\tLoss: 0.187603\nTrain Epoch: 6 [18560/60000 (31%)]\tLoss: 0.082521\nTrain Epoch: 6 [19200/60000 (32%)]\tLoss: 0.154904\nTrain Epoch: 6 [19840/60000 (33%)]\tLoss: 0.165881\nTrain Epoch: 6 [20480/60000 (34%)]\tLoss: 0.115822\nTrain Epoch: 6 [21120/60000 (35%)]\tLoss: 0.603689\nTrain Epoch: 6 [21760/60000 (36%)]\tLoss: 0.164415\nTrain Epoch: 6 [22400/60000 (37%)]\tLoss: 0.107442\nTrain Epoch: 6 [23040/60000 (38%)]\tLoss: 0.196783\nTrain Epoch: 6 [23680/60000 (39%)]\tLoss: 0.220013\nTrain Epoch: 6 [24320/60000 (41%)]\tLoss: 0.207349\nTrain Epoch: 6 [24960/60000 (42%)]\tLoss: 0.178466\nTrain Epoch: 6 [25600/60000 (43%)]\tLoss: 0.149325\nTrain Epoch: 6 [26240/60000 (44%)]\tLoss: 0.169802\nTrain Epoch: 6 [26880/60000 (45%)]\tLoss: 0.205438\nTrain Epoch: 6 [27520/60000 (46%)]\tLoss: 0.121831\nTrain Epoch: 6 [28160/60000 (47%)]\tLoss: 0.169774\nTrain Epoch: 6 [28800/60000 (48%)]\tLoss: 0.138925\nTrain Epoch: 6 [29440/60000 (49%)]\tLoss: 0.183873\nTrain Epoch: 6 [30080/60000 (50%)]\tLoss: 0.108401\nTrain Epoch: 6 [30720/60000 (51%)]\tLoss: 0.087508\nTrain Epoch: 6 [31360/60000 (52%)]\tLoss: 0.114378\nTrain Epoch: 6 [32000/60000 (53%)]\tLoss: 0.124145\nTrain Epoch: 6 [32640/60000 (54%)]\tLoss: 0.368228\nTrain Epoch: 6 [33280/60000 (55%)]\tLoss: 0.353432\nTrain Epoch: 6 [33920/60000 (57%)]\tLoss: 0.239896\nTrain Epoch: 6 [34560/60000 (58%)]\tLoss: 0.341117\nTrain Epoch: 6 [35200/60000 (59%)]\tLoss: 0.280842\nTrain Epoch: 6 [35840/60000 (60%)]\tLoss: 0.303140\nTrain Epoch: 6 [36480/60000 (61%)]\tLoss: 0.340119\nTrain Epoch: 6 [37120/60000 (62%)]\tLoss: 0.165236\nTrain Epoch: 6 [37760/60000 (63%)]\tLoss: 0.113621\nTrain Epoch: 6 [38400/60000 (64%)]\tLoss: 0.313772\nTrain Epoch: 6 [39040/60000 (65%)]\tLoss: 0.258854\nTrain Epoch: 6 [39680/60000 (66%)]\tLoss: 0.158878\nTrain Epoch: 6 [40320/60000 (67%)]\tLoss: 0.160731\nTrain Epoch: 6 [40960/60000 (68%)]\tLoss: 0.166837\nTrain Epoch: 6 [41600/60000 (69%)]\tLoss: 0.226772\nTrain Epoch: 6 [42240/60000 (70%)]\tLoss: 0.160613\nTrain Epoch: 6 [42880/60000 (71%)]\tLoss: 0.157473\nTrain Epoch: 6 [43520/60000 (72%)]\tLoss: 0.279009\nTrain Epoch: 6 [44160/60000 (74%)]\tLoss: 0.157638\nTrain Epoch: 6 [44800/60000 (75%)]\tLoss: 0.202747\nTrain Epoch: 6 [45440/60000 (76%)]\tLoss: 0.123593\nTrain Epoch: 6 [46080/60000 (77%)]\tLoss: 0.164986\nTrain Epoch: 6 [46720/60000 (78%)]\tLoss: 0.285264\nTrain Epoch: 6 [47360/60000 (79%)]\tLoss: 0.211086\nTrain Epoch: 6 [48000/60000 (80%)]\tLoss: 0.125422\nTrain Epoch: 6 [48640/60000 (81%)]\tLoss: 0.076380\nTrain Epoch: 6 [49280/60000 (82%)]\tLoss: 0.274299\nTrain Epoch: 6 [49920/60000 (83%)]\tLoss: 0.128968\nTrain Epoch: 6 [50560/60000 (84%)]\tLoss: 0.100312\nTrain Epoch: 6 [51200/60000 (85%)]\tLoss: 0.173260\nTrain Epoch: 6 [51840/60000 (86%)]\tLoss: 0.375576\nTrain Epoch: 6 [52480/60000 (87%)]\tLoss: 0.359121\nTrain Epoch: 6 [53120/60000 (88%)]\tLoss: 0.137199\nTrain Epoch: 6 [53760/60000 (90%)]\tLoss: 0.280192\nTrain Epoch: 6 [54400/60000 (91%)]\tLoss: 0.345643\nTrain Epoch: 6 [55040/60000 (92%)]\tLoss: 0.213638\nTrain Epoch: 6 [55680/60000 (93%)]\tLoss: 0.142949\nTrain Epoch: 6 [56320/60000 (94%)]\tLoss: 0.188716\nTrain Epoch: 6 [56960/60000 (95%)]\tLoss: 0.067698\nTrain Epoch: 6 [57600/60000 (96%)]\tLoss: 0.227284\nTrain Epoch: 6 [58240/60000 (97%)]\tLoss: 0.141719\nTrain Epoch: 6 [58880/60000 (98%)]\tLoss: 0.166098\nTrain Epoch: 6 [59520/60000 (99%)]\tLoss: 0.251494\n\nTest set: Avg. loss: 0.0615, Accuracy: 9814/10000 (98%)\n\nTrain Epoch: 7 [0/60000 (0%)]\tLoss: 0.091176\nTrain Epoch: 7 [640/60000 (1%)]\tLoss: 0.269873\nTrain Epoch: 7 [1280/60000 (2%)]\tLoss: 0.132484\nTrain Epoch: 7 [1920/60000 (3%)]\tLoss: 0.181744\nTrain Epoch: 7 [2560/60000 (4%)]\tLoss: 0.119089\nTrain Epoch: 7 [3200/60000 (5%)]\tLoss: 0.172001\nTrain Epoch: 7 [3840/60000 (6%)]\tLoss: 0.288416\nTrain Epoch: 7 [4480/60000 (7%)]\tLoss: 0.282734\nTrain Epoch: 7 [5120/60000 (9%)]\tLoss: 0.274102\nTrain Epoch: 7 [5760/60000 (10%)]\tLoss: 0.224655\nTrain Epoch: 7 [6400/60000 (11%)]\tLoss: 0.227839\nTrain Epoch: 7 [7040/60000 (12%)]\tLoss: 0.202125\nTrain Epoch: 7 [7680/60000 (13%)]\tLoss: 0.176258\nTrain Epoch: 7 [8320/60000 (14%)]\tLoss: 0.198535\nTrain Epoch: 7 [8960/60000 (15%)]\tLoss: 0.119568\nTrain Epoch: 7 [9600/60000 (16%)]\tLoss: 0.204526\nTrain Epoch: 7 [10240/60000 (17%)]\tLoss: 0.259647\nTrain Epoch: 7 [10880/60000 (18%)]\tLoss: 0.216371\nTrain Epoch: 7 [11520/60000 (19%)]\tLoss: 0.098282\nTrain Epoch: 7 [12160/60000 (20%)]\tLoss: 0.156163\nTrain Epoch: 7 [12800/60000 (21%)]\tLoss: 0.194898\nTrain Epoch: 7 [13440/60000 (22%)]\tLoss: 0.172166\nTrain Epoch: 7 [14080/60000 (23%)]\tLoss: 0.231052\nTrain Epoch: 7 [14720/60000 (25%)]\tLoss: 0.135253\nTrain Epoch: 7 [15360/60000 (26%)]\tLoss: 0.144452\nTrain Epoch: 7 [16000/60000 (27%)]\tLoss: 0.162540\nTrain Epoch: 7 [16640/60000 (28%)]\tLoss: 0.136042\nTrain Epoch: 7 [17280/60000 (29%)]\tLoss: 0.236265\nTrain Epoch: 7 [17920/60000 (30%)]\tLoss: 0.208569\nTrain Epoch: 7 [18560/60000 (31%)]\tLoss: 0.158493\nTrain Epoch: 7 [19200/60000 (32%)]\tLoss: 0.161767\nTrain Epoch: 7 [19840/60000 (33%)]\tLoss: 0.066611\nTrain Epoch: 7 [20480/60000 (34%)]\tLoss: 0.322254\nTrain Epoch: 7 [21120/60000 (35%)]\tLoss: 0.233296\nTrain Epoch: 7 [21760/60000 (36%)]\tLoss: 0.086176\nTrain Epoch: 7 [22400/60000 (37%)]\tLoss: 0.125919\nTrain Epoch: 7 [23040/60000 (38%)]\tLoss: 0.148241\nTrain Epoch: 7 [23680/60000 (39%)]\tLoss: 0.108953\nTrain Epoch: 7 [24320/60000 (41%)]\tLoss: 0.223288\nTrain Epoch: 7 [24960/60000 (42%)]\tLoss: 0.243924\nTrain Epoch: 7 [25600/60000 (43%)]\tLoss: 0.224430\nTrain Epoch: 7 [26240/60000 (44%)]\tLoss: 0.230509\nTrain Epoch: 7 [26880/60000 (45%)]\tLoss: 0.326988\nTrain Epoch: 7 [27520/60000 (46%)]\tLoss: 0.229315\nTrain Epoch: 7 [28160/60000 (47%)]\tLoss: 0.315817\nTrain Epoch: 7 [28800/60000 (48%)]\tLoss: 0.137005\nTrain Epoch: 7 [29440/60000 (49%)]\tLoss: 0.116640\nTrain Epoch: 7 [30080/60000 (50%)]\tLoss: 0.167090\nTrain Epoch: 7 [30720/60000 (51%)]\tLoss: 0.173242\nTrain Epoch: 7 [31360/60000 (52%)]\tLoss: 0.191092\nTrain Epoch: 7 [32000/60000 (53%)]\tLoss: 0.134305\nTrain Epoch: 7 [32640/60000 (54%)]\tLoss: 0.138862\nTrain Epoch: 7 [33280/60000 (55%)]\tLoss: 0.125831\nTrain Epoch: 7 [33920/60000 (57%)]\tLoss: 0.129372\nTrain Epoch: 7 [34560/60000 (58%)]\tLoss: 0.120971\nTrain Epoch: 7 [35200/60000 (59%)]\tLoss: 0.268926\nTrain Epoch: 7 [35840/60000 (60%)]\tLoss: 0.170120\nTrain Epoch: 7 [36480/60000 (61%)]\tLoss: 0.455412\nTrain Epoch: 7 [37120/60000 (62%)]\tLoss: 0.182606\nTrain Epoch: 7 [37760/60000 (63%)]\tLoss: 0.085986\nTrain Epoch: 7 [38400/60000 (64%)]\tLoss: 0.229982\nTrain Epoch: 7 [39040/60000 (65%)]\tLoss: 0.165970\nTrain Epoch: 7 [39680/60000 (66%)]\tLoss: 0.125090\nTrain Epoch: 7 [40320/60000 (67%)]\tLoss: 0.149905\nTrain Epoch: 7 [40960/60000 (68%)]\tLoss: 0.382724\nTrain Epoch: 7 [41600/60000 (69%)]\tLoss: 0.155642\nTrain Epoch: 7 [42240/60000 (70%)]\tLoss: 0.059763\nTrain Epoch: 7 [42880/60000 (71%)]\tLoss: 0.305220\nTrain Epoch: 7 [43520/60000 (72%)]\tLoss: 0.209007\nTrain Epoch: 7 [44160/60000 (74%)]\tLoss: 0.309034\nTrain Epoch: 7 [44800/60000 (75%)]\tLoss: 0.049236\nTrain Epoch: 7 [45440/60000 (76%)]\tLoss: 0.305584\nTrain Epoch: 7 [46080/60000 (77%)]\tLoss: 0.187595\nTrain Epoch: 7 [46720/60000 (78%)]\tLoss: 0.117563\nTrain Epoch: 7 [47360/60000 (79%)]\tLoss: 0.147911\nTrain Epoch: 7 [48000/60000 (80%)]\tLoss: 0.233994\nTrain Epoch: 7 [48640/60000 (81%)]\tLoss: 0.198659\nTrain Epoch: 7 [49280/60000 (82%)]\tLoss: 0.302784\nTrain Epoch: 7 [49920/60000 (83%)]\tLoss: 0.204405\nTrain Epoch: 7 [50560/60000 (84%)]\tLoss: 0.053611\nTrain Epoch: 7 [51200/60000 (85%)]\tLoss: 0.635807\nTrain Epoch: 7 [51840/60000 (86%)]\tLoss: 0.101712\nTrain Epoch: 7 [52480/60000 (87%)]\tLoss: 0.097702\nTrain Epoch: 7 [53120/60000 (88%)]\tLoss: 0.257620\nTrain Epoch: 7 [53760/60000 (90%)]\tLoss: 0.121270\nTrain Epoch: 7 [54400/60000 (91%)]\tLoss: 0.191442\nTrain Epoch: 7 [55040/60000 (92%)]\tLoss: 0.127309\nTrain Epoch: 7 [55680/60000 (93%)]\tLoss: 0.148693\nTrain Epoch: 7 [56320/60000 (94%)]\tLoss: 0.073504\nTrain Epoch: 7 [56960/60000 (95%)]\tLoss: 0.184949\nTrain Epoch: 7 [57600/60000 (96%)]\tLoss: 0.072307\nTrain Epoch: 7 [58240/60000 (97%)]\tLoss: 0.296258\nTrain Epoch: 7 [58880/60000 (98%)]\tLoss: 0.415298\nTrain Epoch: 7 [59520/60000 (99%)]\tLoss: 0.309931\n\nTest set: Avg. loss: 0.0576, Accuracy: 9823/10000 (98%)\n\nTrain Epoch: 8 [0/60000 (0%)]\tLoss: 0.411129\nTrain Epoch: 8 [640/60000 (1%)]\tLoss: 0.082472\nTrain Epoch: 8 [1280/60000 (2%)]\tLoss: 0.232263\nTrain Epoch: 8 [1920/60000 (3%)]\tLoss: 0.184606\nTrain Epoch: 8 [2560/60000 (4%)]\tLoss: 0.082728\nTrain Epoch: 8 [3200/60000 (5%)]\tLoss: 0.173117\nTrain Epoch: 8 [3840/60000 (6%)]\tLoss: 0.111649\nTrain Epoch: 8 [4480/60000 (7%)]\tLoss: 0.442360\nTrain Epoch: 8 [5120/60000 (9%)]\tLoss: 0.227383\nTrain Epoch: 8 [5760/60000 (10%)]\tLoss: 0.288936\nTrain Epoch: 8 [6400/60000 (11%)]\tLoss: 0.227669\nTrain Epoch: 8 [7040/60000 (12%)]\tLoss: 0.238741\nTrain Epoch: 8 [7680/60000 (13%)]\tLoss: 0.276109\nTrain Epoch: 8 [8320/60000 (14%)]\tLoss: 0.173926\nTrain Epoch: 8 [8960/60000 (15%)]\tLoss: 0.167442\nTrain Epoch: 8 [9600/60000 (16%)]\tLoss: 0.178728\nTrain Epoch: 8 [10240/60000 (17%)]\tLoss: 0.181267\nTrain Epoch: 8 [10880/60000 (18%)]\tLoss: 0.213851\nTrain Epoch: 8 [11520/60000 (19%)]\tLoss: 0.130871\nTrain Epoch: 8 [12160/60000 (20%)]\tLoss: 0.074143\nTrain Epoch: 8 [12800/60000 (21%)]\tLoss: 0.090848\nTrain Epoch: 8 [13440/60000 (22%)]\tLoss: 0.262355\nTrain Epoch: 8 [14080/60000 (23%)]\tLoss: 0.112236\nTrain Epoch: 8 [14720/60000 (25%)]\tLoss: 0.237863\nTrain Epoch: 8 [15360/60000 (26%)]\tLoss: 0.128822\nTrain Epoch: 8 [16000/60000 (27%)]\tLoss: 0.325940\nTrain Epoch: 8 [16640/60000 (28%)]\tLoss: 0.059681\nTrain Epoch: 8 [17280/60000 (29%)]\tLoss: 0.297807\nTrain Epoch: 8 [17920/60000 (30%)]\tLoss: 0.193296\nTrain Epoch: 8 [18560/60000 (31%)]\tLoss: 0.101481\nTrain Epoch: 8 [19200/60000 (32%)]\tLoss: 0.319415\nTrain Epoch: 8 [19840/60000 (33%)]\tLoss: 0.221697\nTrain Epoch: 8 [20480/60000 (34%)]\tLoss: 0.128780\nTrain Epoch: 8 [21120/60000 (35%)]\tLoss: 0.365089\nTrain Epoch: 8 [21760/60000 (36%)]\tLoss: 0.114066\nTrain Epoch: 8 [22400/60000 (37%)]\tLoss: 0.178602\nTrain Epoch: 8 [23040/60000 (38%)]\tLoss: 0.198497\nTrain Epoch: 8 [23680/60000 (39%)]\tLoss: 0.113458\nTrain Epoch: 8 [24320/60000 (41%)]\tLoss: 0.084631\nTrain Epoch: 8 [24960/60000 (42%)]\tLoss: 0.220370\nTrain Epoch: 8 [25600/60000 (43%)]\tLoss: 0.112375\nTrain Epoch: 8 [26240/60000 (44%)]\tLoss: 0.180620\nTrain Epoch: 8 [26880/60000 (45%)]\tLoss: 0.174218\nTrain Epoch: 8 [27520/60000 (46%)]\tLoss: 0.220530\nTrain Epoch: 8 [28160/60000 (47%)]\tLoss: 0.322495\nTrain Epoch: 8 [28800/60000 (48%)]\tLoss: 0.108935\nTrain Epoch: 8 [29440/60000 (49%)]\tLoss: 0.302106\nTrain Epoch: 8 [30080/60000 (50%)]\tLoss: 0.143926\nTrain Epoch: 8 [30720/60000 (51%)]\tLoss: 0.132183\nTrain Epoch: 8 [31360/60000 (52%)]\tLoss: 0.295584\nTrain Epoch: 8 [32000/60000 (53%)]\tLoss: 0.153446\nTrain Epoch: 8 [32640/60000 (54%)]\tLoss: 0.356207\nTrain Epoch: 8 [33280/60000 (55%)]\tLoss: 0.049660\nTrain Epoch: 8 [33920/60000 (57%)]\tLoss: 0.134523\nTrain Epoch: 8 [34560/60000 (58%)]\tLoss: 0.107794\nTrain Epoch: 8 [35200/60000 (59%)]\tLoss: 0.152601\nTrain Epoch: 8 [35840/60000 (60%)]\tLoss: 0.183556\nTrain Epoch: 8 [36480/60000 (61%)]\tLoss: 0.139419\nTrain Epoch: 8 [37120/60000 (62%)]\tLoss: 0.217243\nTrain Epoch: 8 [37760/60000 (63%)]\tLoss: 0.067120\nTrain Epoch: 8 [38400/60000 (64%)]\tLoss: 0.140370\nTrain Epoch: 8 [39040/60000 (65%)]\tLoss: 0.118206\nTrain Epoch: 8 [39680/60000 (66%)]\tLoss: 0.068067\nTrain Epoch: 8 [40320/60000 (67%)]\tLoss: 0.390102\nTrain Epoch: 8 [40960/60000 (68%)]\tLoss: 0.362602\nTrain Epoch: 8 [41600/60000 (69%)]\tLoss: 0.151053\nTrain Epoch: 8 [42240/60000 (70%)]\tLoss: 0.329660\nTrain Epoch: 8 [42880/60000 (71%)]\tLoss: 0.030132\nTrain Epoch: 8 [43520/60000 (72%)]\tLoss: 0.214005\nTrain Epoch: 8 [44160/60000 (74%)]\tLoss: 0.177053\nTrain Epoch: 8 [44800/60000 (75%)]\tLoss: 0.270380\nTrain Epoch: 8 [45440/60000 (76%)]\tLoss: 0.160427\nTrain Epoch: 8 [46080/60000 (77%)]\tLoss: 0.152326\nTrain Epoch: 8 [46720/60000 (78%)]\tLoss: 0.173051\nTrain Epoch: 8 [47360/60000 (79%)]\tLoss: 0.213168\nTrain Epoch: 8 [48000/60000 (80%)]\tLoss: 0.148429\nTrain Epoch: 8 [48640/60000 (81%)]\tLoss: 0.179701\nTrain Epoch: 8 [49280/60000 (82%)]\tLoss: 0.115524\nTrain Epoch: 8 [49920/60000 (83%)]\tLoss: 0.203157\nTrain Epoch: 8 [50560/60000 (84%)]\tLoss: 0.092355\nTrain Epoch: 8 [51200/60000 (85%)]\tLoss: 0.241119\nTrain Epoch: 8 [51840/60000 (86%)]\tLoss: 0.214614\nTrain Epoch: 8 [52480/60000 (87%)]\tLoss: 0.133498\nTrain Epoch: 8 [53120/60000 (88%)]\tLoss: 0.139286\nTrain Epoch: 8 [53760/60000 (90%)]\tLoss: 0.271059\nTrain Epoch: 8 [54400/60000 (91%)]\tLoss: 0.126945\nTrain Epoch: 8 [55040/60000 (92%)]\tLoss: 0.098850\nTrain Epoch: 8 [55680/60000 (93%)]\tLoss: 0.224279\nTrain Epoch: 8 [56320/60000 (94%)]\tLoss: 0.166734\nTrain Epoch: 8 [56960/60000 (95%)]\tLoss: 0.143847\nTrain Epoch: 8 [57600/60000 (96%)]\tLoss: 0.146182\nTrain Epoch: 8 [58240/60000 (97%)]\tLoss: 0.226856\nTrain Epoch: 8 [58880/60000 (98%)]\tLoss: 0.049229\nTrain Epoch: 8 [59520/60000 (99%)]\tLoss: 0.534476\n\nTest set: Avg. loss: 0.0554, Accuracy: 9817/10000 (98%)\n\nTrain Epoch: 9 [0/60000 (0%)]\tLoss: 0.054686\nTrain Epoch: 9 [640/60000 (1%)]\tLoss: 0.235064\nTrain Epoch: 9 [1280/60000 (2%)]\tLoss: 0.106654\nTrain Epoch: 9 [1920/60000 (3%)]\tLoss: 0.234180\nTrain Epoch: 9 [2560/60000 (4%)]\tLoss: 0.198757\nTrain Epoch: 9 [3200/60000 (5%)]\tLoss: 0.162267\nTrain Epoch: 9 [3840/60000 (6%)]\tLoss: 0.271285\nTrain Epoch: 9 [4480/60000 (7%)]\tLoss: 0.080265\nTrain Epoch: 9 [5120/60000 (9%)]\tLoss: 0.122332\nTrain Epoch: 9 [5760/60000 (10%)]\tLoss: 0.217631\nTrain Epoch: 9 [6400/60000 (11%)]\tLoss: 0.185639\nTrain Epoch: 9 [7040/60000 (12%)]\tLoss: 0.168876\nTrain Epoch: 9 [7680/60000 (13%)]\tLoss: 0.112571\nTrain Epoch: 9 [8320/60000 (14%)]\tLoss: 0.125877\nTrain Epoch: 9 [8960/60000 (15%)]\tLoss: 0.188810\nTrain Epoch: 9 [9600/60000 (16%)]\tLoss: 0.105145\nTrain Epoch: 9 [10240/60000 (17%)]\tLoss: 0.188370\nTrain Epoch: 9 [10880/60000 (18%)]\tLoss: 0.117349\nTrain Epoch: 9 [11520/60000 (19%)]\tLoss: 0.069228\nTrain Epoch: 9 [12160/60000 (20%)]\tLoss: 0.162447\nTrain Epoch: 9 [12800/60000 (21%)]\tLoss: 0.108819\nTrain Epoch: 9 [13440/60000 (22%)]\tLoss: 0.263229\nTrain Epoch: 9 [14080/60000 (23%)]\tLoss: 0.292624\nTrain Epoch: 9 [14720/60000 (25%)]\tLoss: 0.248468\nTrain Epoch: 9 [15360/60000 (26%)]\tLoss: 0.119649\nTrain Epoch: 9 [16000/60000 (27%)]\tLoss: 0.109907\nTrain Epoch: 9 [16640/60000 (28%)]\tLoss: 0.580101\nTrain Epoch: 9 [17280/60000 (29%)]\tLoss: 0.177047\nTrain Epoch: 9 [17920/60000 (30%)]\tLoss: 0.178420\nTrain Epoch: 9 [18560/60000 (31%)]\tLoss: 0.221444\nTrain Epoch: 9 [19200/60000 (32%)]\tLoss: 0.133854\nTrain Epoch: 9 [19840/60000 (33%)]\tLoss: 0.282360\nTrain Epoch: 9 [20480/60000 (34%)]\tLoss: 0.136910\nTrain Epoch: 9 [21120/60000 (35%)]\tLoss: 0.280332\nTrain Epoch: 9 [21760/60000 (36%)]\tLoss: 0.174279\nTrain Epoch: 9 [22400/60000 (37%)]\tLoss: 0.083278\nTrain Epoch: 9 [23040/60000 (38%)]\tLoss: 0.188579\nTrain Epoch: 9 [23680/60000 (39%)]\tLoss: 0.102640\nTrain Epoch: 9 [24320/60000 (41%)]\tLoss: 0.163085\nTrain Epoch: 9 [24960/60000 (42%)]\tLoss: 0.158967\nTrain Epoch: 9 [25600/60000 (43%)]\tLoss: 0.192901\nTrain Epoch: 9 [26240/60000 (44%)]\tLoss: 0.163242\nTrain Epoch: 9 [26880/60000 (45%)]\tLoss: 0.157237\nTrain Epoch: 9 [27520/60000 (46%)]\tLoss: 0.088420\nTrain Epoch: 9 [28160/60000 (47%)]\tLoss: 0.094397\nTrain Epoch: 9 [28800/60000 (48%)]\tLoss: 0.156636\nTrain Epoch: 9 [29440/60000 (49%)]\tLoss: 0.150083\nTrain Epoch: 9 [30080/60000 (50%)]\tLoss: 0.077640\nTrain Epoch: 9 [30720/60000 (51%)]\tLoss: 0.172498\nTrain Epoch: 9 [31360/60000 (52%)]\tLoss: 0.228058\nTrain Epoch: 9 [32000/60000 (53%)]\tLoss: 0.162368\nTrain Epoch: 9 [32640/60000 (54%)]\tLoss: 0.278008\nTrain Epoch: 9 [33280/60000 (55%)]\tLoss: 0.256715\nTrain Epoch: 9 [33920/60000 (57%)]\tLoss: 0.196984\nTrain Epoch: 9 [34560/60000 (58%)]\tLoss: 0.205926\nTrain Epoch: 9 [35200/60000 (59%)]\tLoss: 0.103880\nTrain Epoch: 9 [35840/60000 (60%)]\tLoss: 0.053308\nTrain Epoch: 9 [36480/60000 (61%)]\tLoss: 0.117932\nTrain Epoch: 9 [37120/60000 (62%)]\tLoss: 0.080018\nTrain Epoch: 9 [37760/60000 (63%)]\tLoss: 0.423203\nTrain Epoch: 9 [38400/60000 (64%)]\tLoss: 0.088841\nTrain Epoch: 9 [39040/60000 (65%)]\tLoss: 0.157737\nTrain Epoch: 9 [39680/60000 (66%)]\tLoss: 0.196193\nTrain Epoch: 9 [40320/60000 (67%)]\tLoss: 0.164245\nTrain Epoch: 9 [40960/60000 (68%)]\tLoss: 0.199979\nTrain Epoch: 9 [41600/60000 (69%)]\tLoss: 0.188702\nTrain Epoch: 9 [42240/60000 (70%)]\tLoss: 0.199731\nTrain Epoch: 9 [42880/60000 (71%)]\tLoss: 0.102235\nTrain Epoch: 9 [43520/60000 (72%)]\tLoss: 0.087075\nTrain Epoch: 9 [44160/60000 (74%)]\tLoss: 0.128069\nTrain Epoch: 9 [44800/60000 (75%)]\tLoss: 0.148430\nTrain Epoch: 9 [45440/60000 (76%)]\tLoss: 0.232641\nTrain Epoch: 9 [46080/60000 (77%)]\tLoss: 0.082571\nTrain Epoch: 9 [46720/60000 (78%)]\tLoss: 0.283418\nTrain Epoch: 9 [47360/60000 (79%)]\tLoss: 0.233733\nTrain Epoch: 9 [48000/60000 (80%)]\tLoss: 0.096537\nTrain Epoch: 9 [48640/60000 (81%)]\tLoss: 0.109687\nTrain Epoch: 9 [49280/60000 (82%)]\tLoss: 0.216523\nTrain Epoch: 9 [49920/60000 (83%)]\tLoss: 0.181914\nTrain Epoch: 9 [50560/60000 (84%)]\tLoss: 0.139312\nTrain Epoch: 9 [51200/60000 (85%)]\tLoss: 0.238586\nTrain Epoch: 9 [51840/60000 (86%)]\tLoss: 0.109351\nTrain Epoch: 9 [52480/60000 (87%)]\tLoss: 0.076942\nTrain Epoch: 9 [53120/60000 (88%)]\tLoss: 0.221999\nTrain Epoch: 9 [53760/60000 (90%)]\tLoss: 0.178757\nTrain Epoch: 9 [54400/60000 (91%)]\tLoss: 0.219890\nTrain Epoch: 9 [55040/60000 (92%)]\tLoss: 0.136030\nTrain Epoch: 9 [55680/60000 (93%)]\tLoss: 0.238617\nTrain Epoch: 9 [56320/60000 (94%)]\tLoss: 0.195722\nTrain Epoch: 9 [56960/60000 (95%)]\tLoss: 0.252661\nTrain Epoch: 9 [57600/60000 (96%)]\tLoss: 0.149977\nTrain Epoch: 9 [58240/60000 (97%)]\tLoss: 0.061803\nTrain Epoch: 9 [58880/60000 (98%)]\tLoss: 0.105117\nTrain Epoch: 9 [59520/60000 (99%)]\tLoss: 0.054359\n\nTest set: Avg. loss: 0.0508, Accuracy: 9843/10000 (98%)\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">12</span>))</span><br><span class=\"line\">plt.plot(train_counter, train_losses, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\">plt.scatter(test_counter, test_losses, color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Train Loss&#x27;</span>, <span class=\"string\">&#x27;Test Loss&#x27;</span>], loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;number of training examples seen&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;negative log likelihood loss&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"DL_files/DL_8_0.png\" alt=\"png\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://zhuanlan.zhihu.com/p/137571225\">用 PyTorch 实现 MNIST 手写数字识别(非常详细)</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.bilibili.com/video/BV1cL411V7Gh?p=6\">PyTorch 深度学习入门与实战 2022 最简明易懂的 PyTorch 代码精讲 最新版本 PyTorch PyTorch 安装</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.jianshu.com/p/45a26d278473\">PyTorch 中的 nn.Conv1d 与 nn.Conv2d</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "人工智能",
                "深度学习",
                "python"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/lang/python/AI/ML/",
            "url": "https://blog.weidows.tech/post/lang/python/AI/ML/",
            "title": "🥵硬啃-Machine-Learning",
            "date_published": "2022-04-20T12:21:09.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-09-17 17:11:52\n * @FilePath: \\Blog-private\\source\\_posts\\python\\AI\\ML.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>机器学习\n<ul>\n<li><a href=\"#%E4%BD%95%E4%B8%BA%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\">何为机器学习</a></li>\n<li><a href=\"#%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F\">学习方式</a>\n<ul>\n<li>深度学习</li>\n<li>监督\n<ul>\n<li>监督学习</li>\n<li>无监督学习</li>\n</ul>\n</li>\n<li>强化学习</li>\n</ul>\n</li>\n<li>一般流程\n<ul>\n<li>1.原始数据</li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86\">2.数据预处理</a>\n<ul>\n<li>问题\n<ul>\n<li>完整性</li>\n<li>噪声</li>\n<li>是否匹配</li>\n<li>重复</li>\n<li>连续/离散</li>\n<li>样本分布是否平衡</li>\n</ul>\n</li>\n<li>方法\n<ul>\n<li>标准化/均值移除</li>\n<li>范围缩放</li>\n<li>归一化</li>\n<li>二值化</li>\n<li>独热编码</li>\n<li>标签编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>3.特征处理\n<ul>\n<li>特征提取\n<ul>\n<li>原始特征的线性组合获取新特征</li>\n</ul>\n</li>\n<li>特征转换\n<ul>\n<li>升维</li>\n<li>降维</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>4.训练模型</li>\n<li>5.预测</li>\n<li>6.参数调整</li>\n<li>7.模型评估与优化\n<ul>\n<li><a href=\"#%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95\">评估方法</a></li>\n<li>优化方法</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E9%97%AE%E9%A2%98\">基本问题</a>\n<ul>\n<li>回归问题</li>\n<li>分类问题</li>\n<li>聚类问题</li>\n<li>降维问题</li>\n<li>强化问题</li>\n</ul>\n</li>\n<li>三要素\n<ul>\n<li>模型\n<ul>\n<li>线性方法</li>\n<li>非线性方法/广义线性方法</li>\n</ul>\n</li>\n<li><a href=\"#%E8%B6%85%E5%8F%82%E7%9A%84%E5%AD%A6%E4%B9%A0-%E6%9B%B4%E6%96%B0\">超参的学习-更新</a>\n<ul>\n<li>损失函数</li>\n<li>期望风险\n<ul>\n<li>期望风险未知,通过经验风险近似</li>\n<li>机器学习问题 -&gt; 经验风险最小化问题</li>\n</ul>\n</li>\n<li>过-欠拟合及处理</li>\n<li>参数学习\n<ul>\n<li>经验风险最小化(最小二乘法)</li>\n<li>结构风险最小化(岭回归)</li>\n<li>最大似然估计</li>\n<li>最大后验估计</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95\">优化算法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"代码\">代码</h2>\n<blockquote>\n<p>本篇所用到的代码在这: <a href=\"../../code/ML\">👀Code-4-Machine-Learning</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"何为机器学习\">何为机器学习</h2>\n<ul>\n<li>\n<p>随机取市场上一些芒果样本为训练数据,教给机器怎么判断好坏</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>品质</mtext><mo>=</mo><mi>f</mi><mi>u</mi><mi>n</mi><mi>c</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">[</mo><mtext>特征</mtext><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">品质 = func([特征])\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">品质</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">([</span><span class=\"mord cjk_fallback\">特征</span><span class=\"mclose\">])</span></span></span></span></span></p>\n<p><code>输入为特征</code>: [颜色, 大小, 形状, 产地, 品牌]</p>\n<p><code>输出为品质</code>: [好, 坏]</p>\n<hr>\n</li>\n</ul>\n<p>训练模型时, 输入输出都告诉它, 让它自动学会建立 <code>特征&lt;-&gt;品质</code> 之间的关系</p>\n<p>下次买芒果时可以根据要购买芒果的特征,使用此模型预测芒果的品质</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"学习方式\">学习方式</h2>\n<h3 id=\"区分有-无监督学习\">区分有-无监督学习</h3>\n<p>三方面区别: <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup>, 也有混合形式的半监督学习</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">监督学习(supervised)</th>\n<th style=\"text-align:center\">无监督学习(self-supervised)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">训练数据</td>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mtext>样本</mtext></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mtext>标签</mtext></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_{样本}, y_{标签})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">样本</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">标签</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mtext>样本</mtext></msub></mrow><annotation encoding=\"application/x-tex\">x_{样本}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">样本</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">学习目标</td>\n<td style=\"text-align:center\">映射关系 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>⇒</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x \\rArr y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span></td>\n<td style=\"text-align:center\">x 的内在结构</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">适用场景</td>\n<td style=\"text-align:center\">分割/检测/回归(标签连续)/分类(离散)</td>\n<td style=\"text-align:center\">聚类、特征学习或密度估计</td>\n</tr>\n</tbody>\n</table>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"强化学习-RL\">强化学习-RL</h3>\n<ul>\n<li>\n<p>Reinforcement Learning:</p>\n<p>我们不清楚如何标记样本/无法说明什么样本数据特征是更好的,但是可以指明什么是好的终点</p>\n<p>比如围棋,没啥可标记的数据, 也很难说明哪一步更好,只能指明<code>快点赢</code>为最终结果</p>\n<p>对不同决策结果进行赏罚,使结果趋近期望结果</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据预处理\">数据预处理</h2>\n<h3 id=\"均值移除\">均值移除</h3>\n<p>把一组数据的<code>均值和标准差</code>由 <code>x, y -&gt; 0, 1</code></p>\n<p>例如有一组数据 sample = [a,b,c]</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>均值</mtext><mi>m</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow><mn>3</mn></mfrac><mo>=</mo><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>标准差</mtext><mi>s</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mi>m</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mn>3</mn></mfrac></msqrt><mo>=</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>令</mtext><mi>s</mi><mi>t</mi><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>c</mi><mo>−</mo><mi>m</mi></mrow><mi>s</mi></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>数据标准化后</mtext><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><mn>3</mn></mfrac><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mo>−</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mn>3</mn><mi>s</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>s</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mfrac><mrow><mo stretchy=\"false\">(</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>−</mo><msup><mi>m</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mn>3</mn></mfrac></msqrt><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  均值 m\n  &amp;= \\frac{a+b+c}{3} = x\n\n  \\\\ \\ \\\\\n\n  标准差 s\n  &amp;= \\sqrt{\\frac{(a-m)^2 + (b-m)^2 + (c-m)^2}{3}} = y\n\n  \\\\ \\ \\\\\n\n  令std\\_sample\n  &amp;= [a&#x27;,b&#x27;,c&#x27;]\n  \\\\ &amp;= [ \\frac{a - m}{s} , \\frac{b - m}{s} , \\frac{c - m}{s} ]\n\n  \\\\ \\ \\\\\n\n  数据标准化后 m&#x27;\n  &amp;= \\frac{a&#x27; + b&#x27; + c&#x27; }{3} = \\frac{(a-m) + (b -m) + (c - m) }{3s} = 0\n\n  \\\\ \\ \\\\\n\n  s&#x27;\n  &amp;= \\sqrt{\\frac{(a&#x27;-m&#x27;)^2 + (b&#x27;-m&#x27;)^2 + (c&#x27;-m&#x27;)^2}{3}} = 1\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:20.1098em;vertical-align:-9.8049em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.3049em;\"><span style=\"top:-12.6378em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">均值</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-10.8118em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-8.4474em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">标准差</span><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-6.5718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-5.0718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">令</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord mathnormal\">e</span></span></span><span style=\"top:-3.0404em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.2144em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:0.8745em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">数据标准化后</span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:2.7005em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:5.0649em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.8049em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:10.3049em;\"><span style=\"top:-12.6378em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-8.4474em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7044em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6644em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"2.48em\" viewBox=\"0 0 400000 2592\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7356em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-5.0718em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.0404em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:0.8745em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord mathnormal\">s</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:5.0649em;\"><span class=\"pstrut\" style=\"height:3.7044em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7044em;\"><span class=\"svg-align\" style=\"top:-4.4em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.6644em;\"><span class=\"pstrut\" style=\"height:4.4em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:2.48em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"2.48em\" viewBox=\"0 0 400000 2592\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7356em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:9.8049em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"范围缩放\">范围缩放</h3>\n<p>对于 sample = [a,b,c] , min=a, max=c</p>\n<ol>\n<li>\n<p>兜底,让 min=0</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><msup><mi>e</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">[</mo><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo separator=\"true\">,</mo><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">]</mo><mo>=</mo><mo stretchy=\"false\">[</mo><mi>a</mi><mo>−</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>c</mi><mo>−</mo><mi>a</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">sample&#x27; = [a&#x27; , b&#x27; , c&#x27; ] = [a-a, b-a, c-a]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9963em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0519em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">]</span></span></span></span></span></p>\n</li>\n<li>\n<p>缩放,把范围控制在 [0,1]</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><msup><mi>e</mi><mrow><mo mathvariant=\"normal\">′</mo><mo mathvariant=\"normal\">′</mo></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo separator=\"true\">,</mo><mfrac><msup><mi>b</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo separator=\"true\">,</mo><mfrac><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mi>c</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mfrac><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow><mrow><mi>c</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nsample&#x27;&#x27; &amp;= [\\frac{a&#x27;}{c&#x27;}, \\frac{b&#x27;}{c&#x27;}, \\frac{c&#x27;}{c&#x27;} ]\n\\\\ &amp;= [\\frac{a-a}{c-a}, \\frac{b-a}{c-a}, \\frac{c-a}{c-a} ]\n\\\\ &amp;= [0, \\frac{b-a}{c-a}, 1 ]\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.2964em;vertical-align:-3.3982em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8982em;\"><span style=\"top:-5.8982em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">am</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">pl</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.5408em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.1em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3982em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8982em;\"><span style=\"top:-5.8982em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4289em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6779em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-3.5408em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">]</span></span></span><span style=\"top:-1.1em;\"><span class=\"pstrut\" style=\"height:3.4289em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3982em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"归一化\">归一化</h3>\n<p>转化后的数据在 [0,1] , 反应某数据在当前行所占比重</p>\n<p>例:对于 sample 某 row 中的值 a</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>a</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mfrac><mi>a</mi><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>o</mi><mi>w</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">∣</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">a&#x27; = \\frac{a}{\\sum_{i=1}^n |row[i]|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8019em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1016em;vertical-align:-0.994em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.3057em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"二值化\">二值化</h3>\n<p>设置阈值,大于阈值的设为 1,小于阈值的设为 0</p>\n<p>没啥可说的…不举例了</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"OneHot-独热编码\">OneHot-独热编码</h3>\n<p>独热编码是稀疏矩阵的一种应用 <sup id='cite_ref-8'><a href=\"#cite_note-8\">[8]</a></sup></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>男</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>足球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>女</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>篮球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>20</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>男</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>桌球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>30</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>女</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>网球</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\n  男 &amp; 足球 &amp; 10\\\\\n  女 &amp; 篮球 &amp; 20\\\\\n  男 &amp; 桌球 &amp; 30\\\\\n  女 &amp; 网球 &amp; 10\\\\\n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">男</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">女</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">男</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">女</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">足球</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">篮球</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">桌球</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">网球</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">20</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">30</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>对于离散数据的分类任务, 我们常需要做<code>特征数字化</code>: <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<p>对于某一列数据中有 n 种类型, 就用 n 位编码表示,不同类型使用不同激活位,如下:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1000</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>01</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0100</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>010</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>10</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0010</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>001</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>01</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0001</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>100</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}\n  10 &amp; 1000 &amp; 100\\\\\n  01 &amp; 0100 &amp; 010\\\\\n  10 &amp; 0010 &amp; 001\\\\\n  01 &amp; 0001 &amp; 100\\\\\n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.8em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">01</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">10</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">01</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1000</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0100</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0010</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0001</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">100</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">010</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">001</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">100</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.65em;\"><span class=\"pstrut\" style=\"height:6.8em;\"></span><span style=\"width:0.667em;height:4.800em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"4.800em\" viewBox=\"0 0 667 4800\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v1200 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>关于为什么这么做? 直接[0,0,0], [0,1,2] 这种表示不行吗?</p>\n<p>上面 row1 和 row3 都是男, 问题在于我们无法单纯通过 1 和 3 这俩数字来判断他俩是否是同一类型的</p>\n<p>对于编码后的,想找’男’这个类型,只需要查找第一位是’1’的数据</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"标签编码\">标签编码</h3>\n<p>可以理解为上面独热编码的子步骤,一言以蔽之:</p>\n<p>[红,黄,蓝,黄] -&gt; [1,2,3,2]</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"评估方法\">评估方法</h2>\n<ul>\n<li>\n<p>平均绝对误差</p>\n</li>\n<li>\n<p>均方误差</p>\n</li>\n<li>\n<p>中位数绝对误差</p>\n</li>\n<li>\n<p>R2 决定系数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>令</mtext><msub><mi>y</mi><mi>i</mi></msub><mtext>表示真实值</mtext><mo separator=\"true\">,</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mtext>表示预测值</mtext><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><mtext>为平均值</mtext><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>回归平方和</mtext><mi>S</mi><mi>S</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>残差平方和</mtext><mi>S</mi><mi>S</mi><mi>E</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>总离差平方和</mtext><mi>S</mi><mi>S</mi><mi>T</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>S</mi><mi>S</mi><mi>R</mi><mo>+</mo><mi>S</mi><mi>S</mi><mi>E</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">‾</mo></mover><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi>R</mi><mn>2</mn><mtext>决定系数</mtext><mo>:</mo><msup><mi>R</mi><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>S</mi><mi>S</mi><mi>E</mi></mrow><mrow><mi>S</mi><mi>S</mi><mi>T</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">令 y_i 表示真实值, \\hat y_i 表示预测值, \\overline y 为平均值\n\n\\\\ \\ \\\\\n\n\\begin{aligned}\n  回归平方和 SSR\n  &amp;= \\sum_{i=1}^n (\\hat y_i - \\overline y)^2 \\\\\n\n  残差平方和 SSE\n  &amp;= \\sum_{i=1}^n (y_i - \\hat y_i)^2 \\\\\n\n  总离差平方和 SST\n  &amp;= SSR + SSE \\\\\n  &amp;= \\sum_{i=1}^n (y_i - \\overline y)^2\n\n  \\\\ \\ \\\\\n\n  R2决定系数: R^2\n  &amp;= 1 - \\frac{SSE}{SST}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表示真实值</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表示预测值</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mord cjk_fallback\">为平均值</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:15.0335em;vertical-align:-7.2668em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.7668em;\"><span style=\"top:-9.7668em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">回归平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">SSR</span></span></span><span style=\"top:-6.5377em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">残差平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span><span style=\"top:-4.12em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">总离差平方和</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">SST</span></span></span><span style=\"top:-1.8086em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.609em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:2.6294em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">决定系数</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.2668em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.7668em;\"><span style=\"top:-9.7668em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-6.5377em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-4.12em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">SSR</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span><span style=\"top:-1.8086em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6306em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.5506em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:2.6294em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">SST</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">SSE</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.2668em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"基本问题\">基本问题</h2>\n<ul>\n<li>\n<p>回归-分类问题</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RsMidr.png\" alt=\"\"></p>\n<p>回归: 输出连续, 例如预测房价股价</p>\n<p>分类: 输出离散, 例如产品质量好坏检测,手写体识别</p>\n</li>\n<li>\n<p>聚类: 把输入数据相似度高的堆一起</p>\n<p>例如把各种水果照片聚类出来,分出品种</p>\n<p>对于购物网站, 可以根据用户对商品的喜好度, 搞出<code>推荐算法</code></p>\n</li>\n<li>\n<p>降维问题</p>\n</li>\n</ul>\n<blockquote>\n<p>借个图 <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup> &gt; <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RlX7Tb.png\" alt=\"\"></p>\n</blockquote>\n<hr>\n<h3 id=\"回归问题\">回归问题</h3>\n<h4 id=\"线性回归\">线性回归</h4>\n<p>对于输入的属性 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x=(x_1,x_2,x_3...x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,输出 y 为:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>+</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo stretchy=\"false\">(</mo><mtext>多项式形式</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo stretchy=\"false\">(</mo><mtext>向量形式</mtext><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  y\n  &amp;= w_1 x_1 + w_2 x_2 + ... w_n x_n + b &amp; (多项式形式) \\\\\n  &amp;= w^T x + b &amp; (向量形式)\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.0513em;vertical-align:-1.2757em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7757em;\"><span style=\"top:-3.9357em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">多项式形式</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.3843em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">向量形式</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2757em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中 权重 w 与 b 是通过学习后模型确定的</p>\n<p>学习: 寻找最小的损失函数 loss -&gt; 最优线性模型</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"多项式回归\">多项式回归</h4>\n<p>从几何角度理解就是把直线变成了曲线</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><msup><mi>x</mi><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msup><mi>x</mi><mi>i</mi></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  y\n  &amp;= w_0 + w_1 x + w_2 x^2 + ... w_n x^n \\\\\n  &amp;= \\sum_{i=1}^{n} w_i x^i\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.7532em;vertical-align:-2.1266em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6266em;\"><span style=\"top:-5.4139em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3.1025em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1266em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6266em;\"><span style=\"top:-5.4139em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1025em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8747em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1266em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"Lasso-岭回归\">Lasso-岭回归</h4>\n<p>Lasso 和 岭 这两种都是在线性回归基础上对损失函数正则化的回归算法, 降低了偏差大的样本权重, <code>防止过拟合</code></p>\n<ul>\n<li>\n<p>Lasso (Least absolute shrinkage and selection operator, 最小绝对值收敛和选择算法/套索算法), 使用 L1 正则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{2} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n+ \\lambda ||w||_1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n</li>\n<li>\n<p>岭回归 (Ridge regression), 用 L2 正则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{2} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n+ \\lambda ||w||_2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"决策树-随机森林\">决策树-随机森林</h3>\n<p>decision tree, 决策树可用于 classification + regression; 学习决策树需要用到<a href=\"../../../experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF#%E4%BF%A1%E6%81%AF%E7%86%B5-%E5%A6%82%E4%BD%95%E5%BA%A6%E9%87%8F%E4%BF%A1%E6%81%AF\">信息论知识</a> 参考课程: <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<h4 id=\"简化概念\">简化概念</h4>\n<ul>\n<li>\n<p>CART 决策树选择算法</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RtsbJ9.png\" alt=\"\"></p>\n</li>\n<li>\n<p>随机森林</p>\n<p>不同的特征选择方式产生不同的决策树,组在一起就是随机森林</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RtsWMP.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"分类\">分类</h4>\n<ul>\n<li>\n<p>我们想对一组 iris 数据做花种分类</p>\n<p>有 setosa,versicolor,virginica 三类</p>\n<p>鉴于 2d 展示图易观察,我们只取前两列 (花萼长度,宽度) 作为输入,最后一列作为输出,训练模型</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">4</span>.<span class=\"number\">8</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">3</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">3</span>.<span class=\"number\">8</span>,<span class=\"number\">1</span>.<span class=\"number\">6</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">4</span>.<span class=\"number\">6</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">0</span>,<span class=\"number\">3</span>.<span class=\"number\">3</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,<span class=\"number\">0</span>.<span class=\"number\">2</span>,Iris-setosa</span><br><span class=\"line\"><span class=\"attribute\">7</span>.<span class=\"number\">0</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">4</span>.<span class=\"number\">7</span>,<span class=\"number\">1</span>.<span class=\"number\">4</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">4</span>,<span class=\"number\">3</span>.<span class=\"number\">2</span>,<span class=\"number\">4</span>.<span class=\"number\">5</span>,<span class=\"number\">1</span>.<span class=\"number\">5</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">2</span>,<span class=\"number\">2</span>.<span class=\"number\">9</span>,<span class=\"number\">4</span>.<span class=\"number\">3</span>,<span class=\"number\">1</span>.<span class=\"number\">3</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">2</span>.<span class=\"number\">5</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">1</span>.<span class=\"number\">1</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">7</span>,<span class=\"number\">2</span>.<span class=\"number\">8</span>,<span class=\"number\">4</span>.<span class=\"number\">1</span>,<span class=\"number\">1</span>.<span class=\"number\">3</span>,Iris-versicolor</span><br><span class=\"line\"><span class=\"attribute\">5</span>.<span class=\"number\">8</span>,<span class=\"number\">2</span>.<span class=\"number\">7</span>,<span class=\"number\">5</span>.<span class=\"number\">1</span>,<span class=\"number\">1</span>.<span class=\"number\">9</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">7</span>.<span class=\"number\">1</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">5</span>.<span class=\"number\">9</span>,<span class=\"number\">2</span>.<span class=\"number\">1</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">3</span>,<span class=\"number\">2</span>.<span class=\"number\">9</span>,<span class=\"number\">5</span>.<span class=\"number\">6</span>,<span class=\"number\">1</span>.<span class=\"number\">8</span>,Iris-virginica</span><br><span class=\"line\"><span class=\"attribute\">6</span>.<span class=\"number\">5</span>,<span class=\"number\">3</span>.<span class=\"number\">0</span>,<span class=\"number\">5</span>.<span class=\"number\">8</span>,<span class=\"number\">2</span>.<span class=\"number\">2</span>,Iris-virginica</span><br></pre></td></tr></table></figure>\n<p>下图为训练数据(点) 和 测试数据(星) 的分布</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R4evt0.png\" alt=\"\"></p>\n<p>模型的决策树如下 (颜色表示类别, 颜色深度表示确定程度)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R4edC5.png\" alt=\"\"></p>\n<hr>\n</li>\n<li>\n<p>下面来分析一下决策树如何分类的:</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R4eQqc.png\" alt=\"\"></p>\n<p>根节点选取了 105 个输入, 其中最多的是 virginica 37 个, class=virginica</p>\n<p>暂且不看每个节点的熵 entropy 是怎么计算的,看一下比较:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>H</mi><mtext>差</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><msub><mo stretchy=\"false\">)</mo><mtext>根节点熵</mtext></msub><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><msub><mo stretchy=\"false\">)</mo><mtext>子节点条件熵和</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1.58</mn><msub><mn>2</mn><mtext>根节点熵</mtext></msub><mo>−</mo><msub><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mn>33</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>1</mn></mrow><mn>105</mn></mfrac><mo>⋅</mo><mn>0.657</mn><mo>+</mo><mfrac><mrow><mn>3</mn><mo>+</mo><mn>28</mn><mo>+</mo><mn>36</mn></mrow><mn>105</mn></mfrac><mo>⋅</mo><mn>1.208</mn><mo fence=\"true\">)</mo></mrow><mtext>子节点条件熵和</mtext></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.573</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  H_差\n  &amp;= H(X)_{根节点熵} - H(X|Y)_{子节点条件熵和} \\\\\n  &amp;= 1.582_{根节点熵} - \\left( \\frac{33+4+1}{105} \\cdot 0.657 + \\frac{3+28+36}{105} \\cdot 1.208 \\right)_{子节点条件熵和} \\\\\n  &amp;= 0.573\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.7497em;vertical-align:-2.6249em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1249em;\"><span style=\"top:-5.7349em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">差</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6249em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4851em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6249em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1249em;\"><span style=\"top:-5.7349em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">根节点熵</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">子节点条件熵和</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.6249em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1.58</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">根节点熵</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">105</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">33</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.657</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">105</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">28</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">36</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1.208</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.5214em;\"><span style=\"top:-1.7003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">子节点条件熵和</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9997em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.4851em;\"><span class=\"pstrut\" style=\"height:3.45em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.573</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6249em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>决策树就是通过一层层的 <code>条件 Y</code> (如 sepal lenth &lt;= 5.45) 来减小熵,增大确定性来解决分类确定度问题</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R4tSlC.png\" alt=\"\"></p>\n<p>最后的叶子节点的熵会趋近于 0 (非常确定) 和 1 (非常不确定) 的两点分布</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"信息增益\">信息增益</h4>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>杜撰一个概念</mtext><mo>:</mo><mtext>信息增益</mtext><mi>g</mi><mi>a</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mi mathvariant=\"normal\">∣</mi><mi>Y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">杜撰一个概念: 信息增益 gain(X,Y) = H(X) - H(X|Y)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">杜撰一个概念</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">信息增益</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ain</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>\n<p>通过上面分类的例子可知, <code>gain(X,Y)</code> 就是熵下降/确定度增加的关键</p>\n<p>回过头来,条件 Y (如 sepal lenth &lt;= 5.45) 是怎么选取的?</p>\n<p>遍历特征组和取值区间,找到 max( gain(X,Y) ),即为熵下降最多的条件;</p>\n<p>(当然也需要考虑到类似贪心-DP 的区别, 全是贪心的话会让模型单一化, 所以很多时候需要<code>随机筛掉一部分条件</code>来使得条件<code>较优</code>而不是<code>最优</code>)</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"深度与过拟合\">深度与过拟合</h4>\n<p>深度增加虽然能降低训练集错误率,但泛化能力会减弱-&gt;过拟合</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R4453D.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"随机森林\">随机森林</h4>\n<ul>\n<li>\n<p>自动聚合-BootStrap</p>\n<p>对训练数据集进行多次有放回的随机采样 (有的样本可能从未采样,有的可能采样多次) -&gt; 随机森林 [DT1, DT2… DTn]</p>\n</li>\n<li>\n<p>如何 roll 出来数据集中部分随机数据? (比如取 80%)</p>\n<ol>\n<li>\n<p>for i in dataset</p>\n</li>\n<li>\n<p>if Math.random() &lt; 0.8: random_set.append(i)</p>\n</li>\n</ol>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"分类问题\">分类问题</h3>\n<p>从思想和实现角度看, 有下面很多种分类</p>\n<ul>\n<li>线性模型 (Linear Models)\n<ul>\n<li>逻辑回归 (Logistic Regression)</li>\n</ul>\n</li>\n<li>朴素贝叶斯 (Naive Bayes)</li>\n<li>决策树 (Decision Trees)</li>\n<li>支持向量机 (Support Vector Machines)</li>\n<li>随机梯度下降 (Stochastic Gradient Descent)</li>\n<li>最近邻 (Nearest Neighbors)</li>\n<li>高斯过程 (Gaussian Processes)</li>\n<li>集成方法/投票分类器 (Ensemble methods / voting classifier)</li>\n<li>多类别多输出 / 多类别多标签分类 (Multiclass and multioutput algorithms / multiclass and multilabel classification)</li>\n</ul>\n<hr>\n<h4 id=\"逻辑回归\">逻辑回归</h4>\n<p>虽然叫回归,但其实是<code>二分类模型</code>,是在线性回归输出基础上使用 Sigmoid/逻辑函数,将线性回归输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(-\\infty,\\infty)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">∞</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∞</span><span class=\"mclose\">)</span></span></span></span> 映射到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>线性回归</mtext><mi>y</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>逻辑回归</mtext><msup><mi>y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>y</mi></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  线性回归 y\n  &amp;= w^Tx + b \\\\\n  &amp;= w_1x_1 + w_2x_2 + w_3x_3 + ... +  b\n\n  \\\\ \\ \\\\\n  逻辑回归 y&#x27;\n  &amp;= Sigmoid(y) \\\\\n  &amp;= \\frac{1}{1 + e^{-y}}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.4421em;vertical-align:-3.9711em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.4711em;\"><span style=\"top:-6.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">线性回归</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-5.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-2.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">逻辑回归</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-0.4197em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9711em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.4711em;\"><span style=\"top:-6.9012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-5.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.4012em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.4197em;\"><span class=\"pstrut\" style=\"height:3.3214em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6973em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.9711em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>逻辑回归也是可以做多分类的, 原理就是多个二分类叠加起来</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"支持向量机-SVM\">支持向量机-SVM</h4>\n<h5 id=\"target\">target</h5>\n<p>SVM 目标就是找到如下红色实线 (与线两边样本点距离最大的线)</p>\n<p>两条虚线上的点叫做 <code>support vector / 支持向量</code>, 通过支持向量构造出的分类器就是 <code>支持向量机 SVM</code></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RSmQRP.png\" alt=\"\"></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>如有直线</mtext><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>10</mn><mo>=</mo><mn>0</mn><mtext>可转换为向量形式</mtext><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>5</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">如有直线 2x_1 + 5x_2 - 10 = 0 可转换为向量形式 \\\\\n\\vec{w} = (2,5) \\\\\n\\vec{x} = (x_1,x_2) \\\\\n\\vec{w} \\cdot \\vec{x} + b = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord cjk_fallback\">如有直线</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7944em;vertical-align:-0.15em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">10</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">可转换为向量形式</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<hr>\n<h5 id=\"线性可分-不可分\">线性可分-不可分</h5>\n<p>如上面的图示, 样本可被直线/超平面分开 (线性可分), 支持向量所在两虚线之间没有其他向量,即为 <code>线性可分 SVM</code></p>\n<p>如果两虚线间存在样本, 即为 <code>线性 SVM</code>; 如果样本无法被直线/超平面分开 (线性不可分), 即为 <code>非线性 SVM</code></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Riakiv.png\" alt=\"\"></p>\n<p>对于线性不可分问题,可通过 <code>核函数</code> 进行特征变换来 <code>升维</code></p>\n<hr>\n<h5 id=\"核函数\">核函数</h5>\n<p>常用的有为 1 和 3, 多项式核函数用处较少</p>\n<ol>\n<li>\n<p>线性核函数 Linear</p>\n<p>不做升维,直接找直线/超平面; 类似美国地图,分割直来直去的</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RiXoc0.png\" alt=\"\"></p>\n</li>\n<li>\n<p>多项式核函数 poly (Polynomial Kernel)</p>\n<p>通过增加高次项升维, 此函数复杂度升的很快</p>\n</li>\n<li>\n<p>径向基核函数-高斯核函数 rbf (Radial Basis Function Kernel)</p>\n<p>相对于多项式核函数,大多数情况下参数更少性能更高; 直线分不了的无脑冲 rbf</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RiXFVm.png\" alt=\"\"></p>\n</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"朴素贝叶斯\">朴素贝叶斯</h4>\n<p>Naive Bayes classification,理论基础是大学必修课-概率论知识</p>\n<ul>\n<li>\n<p>&quot;朴素&quot;指的是 A,B 为独立事件, 有贝叶斯公式:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(A|B) = \\frac{P(A)P(B|A)}{P(B)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><code>先验概率</code> P(A) : 已知或可推断出事件 A 发生的概率</p>\n<p><code>后验概率</code> P(A|B) : 已知 B 发生条件下,A 发生的概率</p>\n<hr>\n</li>\n<li>\n<p>对于样本特征 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>w</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[w_1, w_2, w_3 ... w_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> 得出每个特征的概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>W</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[W_1, W_2, W_3 ... W_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>, 判断所属分类 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[A, B, C ...]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\">...</span><span class=\"mclose\">]</span></span></span></span> 的概率:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>P</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>C</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>W</mi><mn>1</mn></msub><msub><mi>W</mi><mn>2</mn></msub><msub><mi>W</mi><mn>3</mn></msub><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>W</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">P(A | W_1 W_2 W_3 ... W_n)\n= \\frac{P(A) \\cdot P(W_1|A) \\cdot P(W_2|A) ... P(W_n|A)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\nP(B | W_1 W_2 W_3 ... W_n)\n= \\frac{P(B) \\cdot P(W_1|B) \\cdot P(W_2|B) ... P(W_n|B)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\nP(C | W_1 W_2 W_3 ... W_n)\n= \\frac{P(C) \\cdot P(W_1|C) \\cdot P(W_2|C) ... P(W_n|C)  }{P(W_1 W_2 W_3 ... W_n)} \\\\\n\n......\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span><span class=\"mord\">...</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.1056em;\"></span><span class=\"mord\">......</span></span></span></span></span></p>\n<hr>\n</li>\n<li>\n<p>特点</p>\n<p>必要的前提条件是特征间互不相关 (相互独立), 很多情况下难以满足,无法对特征关联性强的样本进行分类</p>\n<p>逻辑简单,性能起伏小且稳定,特征独立性越强分类效果越好</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"聚类问题-cluster\">聚类问题-cluster</h3>\n<p>就像是人群根据 hobby 扎堆, 输入的数据根据某些特征的相似度分出多个&quot;簇&quot;</p>\n<p>聚类问题属于无监督学习 (无需指明训练样本所属类别)</p>\n<hr>\n<h4 id=\"样本-相似度度量\">样本-相似度度量</h4>\n<p>对于两点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_1,y_1,...n_1),(x_2,y_2,...n_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<h5 id=\"欧氏距离\">欧氏距离</h5>\n<p>无视路径阻碍的空间绝对 distance</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence=\"true\">∣</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo fence=\"true\">∣</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= \\left| (x_1, y_1, ..., n_1), (x_2, y_2, ..., n_2) \\right| \\\\\n  &amp;= \\sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2 + ... + (n_1 - n_2)^2} \\\\\n  &amp;= \\sqrt{\\sum_{i=x}^n (i_1 - i_2)^2}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.6007em;vertical-align:-3.0503em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5503em;\"><span style=\"top:-6.5895em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-4.9456em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.4065em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0503em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.5503em;\"><span style=\"top:-6.5895em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span><span style=\"top:-4.9456em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9839em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.9439em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"1.28em\" viewBox=\"0 0 400000 1296\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2561em;\"><span></span></span></span></span></span></span></span><span style=\"top:-2.4065em;\"><span class=\"pstrut\" style=\"height:3.8791em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"3.1968em\" viewBox=\"0 0 400000 3196\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0503em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"曼哈顿距离\">曼哈顿距离</h5>\n<p>计量阻碍,可以理解为寻路问题,同一曼哈顿距离可有多种路径解法</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>y</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>+</mo><mi mathvariant=\"normal\">∣</mi><msub><mi>n</mi><mn>1</mn></msub><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>x</mi></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= |x_1 - x_2| + |y_1 - y_2| + ... + |n_1 - n_2| \\\\\n  &amp;= \\sum_{i=x}^n | i_1 - i_2 |\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.7291em;vertical-align:-2.1145em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6145em;\"><span style=\"top:-5.4259em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-3.1145em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1145em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6145em;\"><span style=\"top:-5.4259em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">...</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.1145em;\"><span class=\"pstrut\" style=\"height:3.6514em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1145em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h5 id=\"余弦相似度\">余弦相似度</h5>\n<p>cosine similarity, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mtext>在</mtext><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>π</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">cos 在 [0, \\pi]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mord cjk_fallback\">在</span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">]</span></span></span></span> 上为减函数, 在 [45°, 135°] 区间下降快</p>\n<p>余弦相似度对向量敏感度: 方向 &gt; 长度</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>b</mi><mo>⃗</mo></mover></mrow><mrow><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∣</mi><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>b</mi><mo>⃗</mo></mover><mi mathvariant=\"normal\">∣</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">cos(\\theta) = \\frac{\\vec a \\cdot \\vec b}{|\\vec a| \\cdot |\\vec b|}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">cos</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.7719em;vertical-align:-1.1174em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6544em;\"><span style=\"top:-2.1326em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">b</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9774em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">b</span></span><span style=\"top:-3.2634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.471em\" height=\"0.714em\" style=\"width:0.471em\" viewBox=\"0 0 471 714\" preserveAspectRatio=\"xMinYMin\"><path d=\"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z\"/></svg></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1174em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h5 id=\"以上对比\">以上对比</h5>\n<p>如下欧氏距离(绿色直线) 与哈曼顿距离(褐色折现) 与余弦相似度(红色向量) 对比</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnsRZm.png\" alt=\"\"></p>\n<h5 id=\"闵可夫斯基距离\">闵可夫斯基距离</h5>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo>−</mo><msub><mi>i</mi><mn>2</mn></msub><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup><mo fence=\"true\">)</mo></mrow><mfrac><mn>1</mn><mi>p</mi></mfrac></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  d\n  &amp;= \\left( \\sum_{i=1}^n |i_1 - i_2|^p \\right)^{\\frac{1}{p}}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6716em;vertical-align:-1.5858em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0858em;\"><span style=\"top:-4.0858em;\"><span class=\"pstrut\" style=\"height:4.0939em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5858em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0858em;\"><span style=\"top:-4.0858em;\"><span class=\"pstrut\" style=\"height:4.0939em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.0939em;\"><span style=\"top:-4.5029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4829em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5858em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>\n<p>改变 p 的值,可以转化为其他距离:</p>\n<p>p=1 : 哈曼顿距离</p>\n<p>p=2 : 欧氏距离</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>⇒</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">p \\rArr \\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⇒</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span> : 切比雪夫距离</p>\n</li>\n</ul>\n<h5 id=\"交并比-IOU-杰卡德相似系数\">交并比-IOU-杰卡德相似系数</h5>\n<p>Jaccard 相似系数/交并比可用于目标检测中 <code>目标位置-预测位置</code> 的相似度分析</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mspace width=\"2em\"/><mi>B</mi><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>J</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">A = [a_1, a_2, ..., a_n] \\qquad B = [b_1, b_2, ..., b_n]\n\\\\ \\ \\\\\nJ(A,B) = \\frac{A \\cap B}{A \\cup B}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0463em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Rnm1a9.png\" alt=\"\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZCYX1g.png\" alt=\"\"></p>\n<p>上面假定的是 A,B 中样本权重相同, 实际聚类中需要考量样本的权重</p>\n<h5 id=\"相对熵\">相对熵</h5>\n<blockquote>\n<p>参见 <a href=\"../../../../experience/basic/%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF#%E7%9B%B8%E5%AF%B9%E7%86%B5\">👽 通信-信息论-开坑自埋</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"聚类算法划分\">聚类算法划分</h4>\n<h5 id=\"原型-K-Means\">原型-K-Means</h5>\n<p>prototype-based clustering, 用原型表示聚类结构, 然后通过对原型的更新来完善聚类算法</p>\n<ul>\n<li>\n<p>常用 <code>K-均值 / K-Means 算法</code>: 若干样本聚类为 k 个簇, k 为指定参数</p>\n<ol>\n<li>\n<p>随机挑选 k 个样本, 计算其他所有样本与此 k 个样本的欧氏距离,离谁近就归为哪一簇</p>\n</li>\n<li>\n<p>对每一个簇, 计算其中所有样本的均值中心, 并将这 k 个均值中心作为 1. 中的样本再次重复</p>\n</li>\n<li>\n<p>直到均值中心不再变化/变化小于阈值</p>\n</li>\n</ol>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RntO7D.png\" alt=\"\"></p>\n</li>\n<li>\n<p>K-Means 对 <code>距离很远的异常点</code> 和 <code>初始样本点的选择</code> 是敏感的</p>\n<p>遇到影响大的异常点时可以换为 <code>K-中位数/ K-Mediods 算法</code></p>\n<p>当初始样本点选择不当时,会使聚类结果不好,如下图</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Rn4BGm.png\" alt=\"\"></p>\n<hr>\n</li>\n<li>\n<p>改良 -&gt; K-Means++</p>\n<p>初始样本点的选取: 要选择的样本点与已选择样本点距离越远越好</p>\n<p>方案: 每选择样本点后计算 <code>未选择样本</code> 与 <code>已选择样本组</code> 的距离, 使未选择样本下一次的选择概率与距离成正比</p>\n</li>\n<li>\n<p>数据分布对 K-Means 的影响:</p>\n<p>数据分布不平衡几乎没影响</p>\n<p>但是数据<code>几何畸变</code>对聚类影响很大; K-Means 对符合高斯/正态分布的样本 (大致是圈的样子) 的聚类效果最好, 对带状样本聚类效果差</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Rn44kv.png\" alt=\"\"></p>\n<p>无论如何调参, K-Means 都不适用于如下情况:</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Rnn4H1.png\" alt=\"\"></p>\n</li>\n<li>\n<p>Mini-Batch K-Means:</p>\n<p>对所有样本求均值计算量还是蛮大的, Mini-Batch 思想大致是抽取一部分样本求均值来近似总均值</p>\n</li>\n<li>\n<p>特点:</p>\n<p>简单快速, 可解决大批量聚类,对于符合高斯分布的数据聚类效果较优</p>\n<p>需要预先给出聚类簇数量 k; 对于异常点和初始样本选取敏感; 对非高斯分布样本聚类效果差</p>\n</li>\n</ul>\n<hr>\n<h5 id=\"层次-AGNES\">层次-AGNES</h5>\n<p>hierarchical clustering, 通过分层 -&gt; 树形聚类结构 -&gt; 聚类结果</p>\n<ul>\n<li>\n<p>可采用 <code>自顶向下DIANA / 自底向上AGNES</code> 的划分方式</p>\n<p>AGNES (AGglomerative NESting)最初将每个对象作为一个簇,然后这些簇一步步地合并。两个簇间的距离由这两个不同簇中距离最近的数据点对的相似度来确定；聚类的合并过程反复进行直到所有的对象最终满足簇数目。</p>\n<p>DIANA (DIvisive ANAlysis)算法是上述过程的反过程,属于分裂的层次聚类,首先将所有的对象初始化到一个簇中,然后根据一些原则(比如最大的欧式距离),将该簇分类。直到到达用户指定的簇数目或者两个簇之间的距离超过了某个阈值。</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnH3bu.png\" alt=\"\"></p>\n<p>常用 <code>凝聚层次AGNES算法</code>.</p>\n</li>\n<li>\n<p>AGNES 簇间距离不同定义/合并策略</p>\n<ul>\n<li>\n<p>最小距离 prime</p>\n<p>两个集合中最近的两个样本的距离</p>\n<p>容易形成链状结构</p>\n</li>\n<li>\n<p>最大距离 complete</p>\n<p>两个集合中最远的两个样本的距离</p>\n<p>若存在异常值则不稳定</p>\n</li>\n<li>\n<p>平均距离 average</p>\n<p>两个集合中样本间两两距离的平均值</p>\n</li>\n<li>\n<p>方差 Ward</p>\n<p>使得簇内距离平方和最小,簇间平方和最大</p>\n</li>\n</ul>\n<hr>\n<p>如下为以上四类对于含噪点样本的聚类效果,最小距离聚类效果最好</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnHSln.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h5 id=\"密度-DBSCAN\">密度-DBSCAN</h5>\n<p>density-based clustering, 通过样本分布密度来考察样本间的可连接性, 逐步拓展连接成最终聚类结果</p>\n<ul>\n<li>\n<p>几种密度聚类实现算法:</p>\n<p>噪声密度 DBSCAN 聚类算法</p>\n<p>密度最大值聚类</p>\n<p>AP (Affinity Propagation)</p>\n<p>谱聚类</p>\n</li>\n<li>\n<p>常用 <code>噪声密度 / DBSCAN 算法</code></p>\n<p>允许噪声的基于密度的空间聚类 DBSCAN (Density-Based Spatial Clustering of Applications with Noise)</p>\n<p>只要样本点的密度大于某阈值,则将该样本添加到最近的簇中。这类算法能克服基于距离的算法只能发现 <code>高斯分布/类圆形(凸)</code> 的聚类缺点,可发现任意形状的聚类,且对噪声数据不敏感。但计算密度单元的计算复杂度大,需要建立空间索引来降低计算量</p>\n<p>使用方面, DBSCAN 不仅可以避免噪声影响,也可以专门找噪声/剔除噪声</p>\n<hr>\n</li>\n<li>\n<p>概念</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">学名</th>\n<th style=\"text-align:left\">概念</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-邻域</td>\n<td style=\"text-align:left\">样本点在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> 半径内的区域</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">核心对象</td>\n<td style=\"text-align:left\">对于给定的阈值 m, 如果某样本点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-邻域中其他样本点数量 n&gt;=m,那么此样本点就是核心对象</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">直接密度可达</td>\n<td style=\"text-align:left\">对于核心对象 q, p 在其圈内, 那么 p 从 q 出发是直接密度可达的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">密度相连</td>\n<td style=\"text-align:left\">一串密度可达对象的串联</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">簇</td>\n<td style=\"text-align:left\">最大的密度相连对象集合</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>半径<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span> 与 阈值 m 的影响 (调参侠石锤)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnTRWm.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"模型-衡量指标\">模型-衡量指标</h4>\n<h5 id=\"均一性-homogeneity\">均一性-homogeneity</h5>\n<p>一个簇中只包含一个类别的样本</p>\n<h5 id=\"完整性-completeness\">完整性-completeness</h5>\n<p>同类别样本被归类到相同簇中</p>\n<h5 id=\"V-measure\">V-measure</h5>\n<p>均一性与完整性的加权平均</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>V</mi><mo stretchy=\"false\">(</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mi>h</mi><mi>c</mi></mrow><mrow><mi>β</mi><mi>h</mi><mo>+</mo><mi>c</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">V(\\beta) = \\frac{(1+\\beta)hc}{\\beta h +c}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.8804em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h5 id=\"ARI-AMI\">ARI-AMI</h5>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnnlxC.png\" alt=\"\"></p>\n<h5 id=\"轮廓系数-Silhouette\">轮廓系数-Silhouette</h5>\n<p>a: 当前样本与簇内样本距离均值</p>\n<p>b: min(当前样本与其他簇样本距离均值)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RnndCY.png\" alt=\"\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"降维问题\">降维问题</h3>\n<p>比如在 3 维空间 xyz 内有一条线段, 我们只想知道线段的 x 信息, 可以把线段映射到 x-axis 上 (损失 yz-axis 上的信息)</p>\n<p>降维作用: 降低时间-空间复杂度,使数据易于分析展示 (维度越高的图人类越难理解) <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h4 id=\"缺失值比率\">缺失值比率</h4>\n<p>Missing Value Ratio, 去掉缺失值大于某一阈值的特征列</p>\n<hr>\n<h4 id=\"低方差过滤\">低方差过滤</h4>\n<p>Low Variance Filter, 对于某些列, 所有值的方差很小/样本没啥区别, 可以不用其做特征</p>\n<hr>\n<h4 id=\"随机森林-2\">随机森林</h4>\n<p>Random Forest, 随机森林可以自动计算各个特征的重要性, 便于寻找最优+最小的特征子集</p>\n<hr>\n<h4 id=\"反向特征消除\">反向特征消除</h4>\n<p>Backward Feature Elimination, 用数据集中 n 个样本训练模型, 每次删除一个样本, 找出对模型影响最小的样本删除</p>\n<hr>\n<h4 id=\"前向特征选择\">前向特征选择</h4>\n<p>Forward Feature Selection,前向特征选择其实就是反向特征消除的相反过程,即找到能改善模型性能的最佳特征,而不是删除弱影响特征.它背后的思路如下所述：</p>\n<ol>\n<li>选择一个特征,用每个特征训练模型 n 次,得到 n 个模型.</li>\n<li>选择模型性能最佳的变量作为初始变量.</li>\n<li>每次添加一个变量继续训练,重复上一过程,最后保留性能提升最大的变量.</li>\n<li>一直添加,一直筛选,直到模型性能不再有明显提高.</li>\n</ol>\n<hr>\n<h4 id=\"因子分析\">因子分析</h4>\n<p>Factor Analysis, 因子分析是一种常见的统计方法,它能从多个变量中提取共性因子,并得到最优解.</p>\n<p>在因子分析中,我们将变量按其相关性分组,即特定组内所有变量的相关性较高,组间变量的相关性较低.我们把每个组称为一个因子,它是多个变量的组合.和原始数据集的变量相比,这些因子在数量上更少,但携带的信息基本一致.</p>\n<hr>\n<h4 id=\"主成分分析-PCA\">主成分分析-PCA</h4>\n<p>通过正交变换将原始的 n 维数据集变换到一个新的被称做主成分的数据集中,即从现有的大量变量中提取一组新的变量.下面是关于 PCA 的一些要点：</p>\n<ol>\n<li>主成分是原始变量的线性组合.</li>\n<li>第一个主成分具有最大的方差值.</li>\n<li>第二主成分试图解释数据集中的剩余方差,并且与第一主成分不相关 (正交).</li>\n<li>第三主成分试图解释前两个主成分等没有解释的方差.</li>\n</ol>\n<p>映射不包含任何数据内部的分类信息, 因此一般 PCA 降维后数据表示更有效但或许分类更加困难</p>\n<hr>\n<h4 id=\"LDA\">LDA</h4>\n<p>Linear Discriminant Analysis / Fisher Linear Discriminant 是一种有监督的 supervised 线性降维算法</p>\n<p>LDA 充分利用数据的标签信息, 一般 LDA 降维后可以直接分类</p>\n<p>假设原始数据集表示为 X,(m*n 矩阵,m 是维度,n 是 sample 的数量), 目标是找到映射向量 a, 使得 a‘X 后的数据点能够保持以下两种性质：</p>\n<ol>\n<li>\n<p>同类的数据点尽可能的接近 (within class)</p>\n</li>\n<li>\n<p>不同类的数据点尽可能的分开 (between class)</p>\n</li>\n</ol>\n<hr>\n<h4 id=\"局部线性嵌入-LLE\">局部线性嵌入-LLE</h4>\n<p>非线性降维, 可使数据降维后较好的保持 <code>流形结构</code> ,适用于 flow-learninh</p>\n<hr>\n<h4 id=\"拉普拉斯特征映射-LE\">拉普拉斯特征映射-LE</h4>\n<p>Laplacian-Eigenmaps, 也是一种常用的流形降维算法, 思想也近似 LLE</p>\n<!-- TODO 暂时搁置\nhttps://zhuanlan.zhihu.com/p/100002630 -->\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"超参的学习-更新\">超参的学习-更新</h2>\n<h3 id=\"损失函数-loss\">损失函数-loss</h3>\n<p>loss function, 也叫代价函数 cost function</p>\n<p>用于衡量样本给出的 <code>真实值</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> 与 模型输出的 <code>预测值</code>y 之间的差异</p>\n<blockquote>\n<p>损失函数将 <code>寻找最优参数</code> 问题转换为了 <code>寻找损失函数最小值</code> 问题</p>\n</blockquote>\n<hr>\n<h4 id=\"均方差损失函数-MSE\">均方差损失函数-MSE</h4>\n<p>mean squared error, 常用于回归问题, 对于真实值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span> 和预测值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>,其均方差</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L} = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>均方差在几何意义上对应欧几里得距离 (欧氏距离)</p>\n<ul>\n<li>\n<p>基于 min(均方差 loss) 寻找最优模型的方法叫 <code>最小二乘法</code></p>\n<p>在线性回归中应用的解释为: 寻找一条距所有真实值样本点 几何距离之和 最小的直线</p>\n<p>如何求 min(均方差 loss) ? -&gt; 一种方法是求导,令导函数 = 0 求解</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"交叉熵损失函数\">交叉熵损失函数</h4>\n<ul>\n<li>\n<p>分类问题常用交叉熵作为损失函数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">y</mi><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><msup><mi mathvariant=\"bold-italic\">y</mi><mi mathvariant=\"normal\">⊤</mi></msup><mi>log</mi><mo>⁡</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><msub><mi>y</mi><mi>c</mi></msub><mi>log</mi><mo>⁡</mo><msub><mi>f</mi><mi>c</mi></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"bold-italic\">x</mi><mo separator=\"true\">;</mo><mi>θ</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext> </mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mtext>二分类</mtext><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>:</mo><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>+</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n  \\mathcal{L}(\\boldsymbol{y}, f(\\boldsymbol{x} ; \\theta))\n  &amp;=-\\boldsymbol{y}^{\\top} \\log f(\\boldsymbol{x} ; \\theta) \\\\\n  &amp;=-\\sum_{c=1}^{C} y_{c} \\log f_{c}(\\boldsymbol{x} ; \\theta)\n\n  \\\\ \\ \\\\\n\n  二分类loss: \\mathcal{L}(y, \\hat{y})\n  &amp;= - \\left[ y \\log \\hat y + (1  - y) \\log (1 - \\hat y) \\right]\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.9546em;vertical-align:-3.7273em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2273em;\"><span style=\"top:-7.1565em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">))</span></span></span><span style=\"top:-4.6682em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.2611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mspace\"> </span></span></span><span style=\"top:-0.7611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">二分类</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.7273em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2273em;\"><span style=\"top:-7.1565em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\" style=\"margin-right:0.03704em;\">y</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">⊤</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span><span style=\"top:-4.6682em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord boldsymbol\">x</span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span></span></span><span style=\"top:-0.7611em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.7273em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>比如下图的二分类模型 <sup id='cite_ref-9'><a href=\"#cite_note-9\">[9]</a></sup></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZzsJYR.png\" alt=\"\"></p>\n</li>\n<li>\n<p>例题</p>\n<p>对于期末考试三种结果,假设 one-hot 标签编码:</p>\n<p>优秀 [1,0,0]<br>\n合格 [0,1,0]<br>\n不合格 [0,0,1]</p>\n<p>假设优秀,合格,不合格概率分别为:</p>\n<p>甲 [0.2,0.5,0.3]<br>\n乙 [0.2,0.2,0.6]</p>\n<p>实际二位都不合格</p>\n<hr>\n<p>分别求交叉熵:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mtext>甲</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.5</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.3</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>=</mo><mn>1.2</mn><mspace linebreak=\"newline\"></mspace><mtext> </mtext><mspace linebreak=\"newline\"></mspace><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mtext>乙</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mrow><mo fence=\"true\">[</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>0</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo>⋅</mo><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>0.6</mn><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow><mo>=</mo><mn>0.51</mn></mrow><annotation encoding=\"application/x-tex\">loss(甲) = -\\left[0 \\cdot \\ln(0.2) + 0 \\cdot \\ln(0.5) + 1 \\cdot \\ln(0.3)\\right] = 1.2\n\\\\ \\ \\\\\nloss(乙) = -\\left[0 \\cdot \\ln(0.2) + 0 \\cdot \\ln(0.2) + 1 \\cdot \\ln(0.6)\\right] = 0.51\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">甲</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.5</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.3</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.2</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\"> </span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord cjk_fallback\">乙</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord\">0.6</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.51</span></span></span></span></span></p>\n<p>预测值越接近真实标签,损失函数越小</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"过-欠拟合及处理\">过-欠拟合及处理</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RtRLGQ.png\" alt=\"\"></p>\n<p>一种是啥都没背过; 一种是背过了但只会死记硬背,不会其他的</p>\n<ul>\n<li>\n<p>可以用泛化误差来衡量拟合程度 <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/RtRSAt.png\" alt=\"\"></p>\n<hr>\n</li>\n</ul>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>处理\n<ul>\n<li>过拟合\n<ul>\n<li>训练数据++, 数据增广</li>\n<li>早停</li>\n<li>降维</li>\n<li>正则化</li>\n<li>集成学习方法</li>\n</ul>\n</li>\n<li>欠拟合\n<ul>\n<li>添加新特征</li>\n<li>增加模型复杂度</li>\n<li>减小正则化系数</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"早停\">早停</h3>\n<p>Early Stopping <sup id='cite_ref-7'><a href=\"#cite_note-7\">[7]</a></sup></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Ry4m8h.png\" alt=\"\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"优化算法\">优化算法</h2>\n<h3 id=\"梯度下降法\">梯度下降法</h3>\n<p>在使用最小二乘法计算 min(均方差 loss) 时,有可能会遇到逆矩阵不存在或者计算量巨大的情况</p>\n<p>这时就可以用梯度下降法求 loss 极小值,进而找最小值</p>\n<ul>\n<li>\n<p>分类</p>\n<ul>\n<li>批量梯度下降法 BGD</li>\n<li>随机剃度下降法 SGD</li>\n<li>小批量随机梯度下降法 MBSGD</li>\n</ul>\n</li>\n</ul>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/R7AFVm.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>步骤: 对于 梯度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span> 和其对应的 loss</p>\n<ol>\n<li>\n<p>loss 是否足够小/迭代次数是否达到? -&gt; 如果不够,就更新参数,继续迭代</p>\n</li>\n<li>\n<p>梯度下降</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msub><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi mathvariant=\"script\">R</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>t</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi mathvariant=\"script\">L</mi><mrow><mo fence=\"true\">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo separator=\"true\">;</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nw_{t+1}\n&amp;=w_{t}-\\alpha \\frac{\\partial \\mathcal{R}(w)}{\\partial w_{t}} \\\\\n&amp;=w_{t}-\\alpha \\frac{1}{N} \\sum_{i=1}^{N} \\frac{\\partial \\mathcal{L}\\left(w_{t} ; x^{(i)}, y^{(i)}\\right)}{\\partial w}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.969em;vertical-align:-2.7345em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2345em;\"><span style=\"top:-5.6358em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.6715em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7345em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2345em;\"><span style=\"top:-5.6358em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathcal\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.6715em;\"><span class=\"pstrut\" style=\"height:3.8283em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.628em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.74em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathcal\">L</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7345em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>循环 1.</p>\n</li>\n</ol>\n<hr>\n</li>\n<li>\n<details>\n  <summary> 例题 </summary>\n<hr>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>假设函数</mtext><mo>:</mo><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>w</mi><mn>2</mn></msup><mspace width=\"1em\"/><mtext>假设起点</mtext><mo>:</mo><msup><mi>w</mi><mn>0</mn></msup><mo>=</mo><mn>1</mn><mspace width=\"1em\"/><mtext>学习率为</mtext><mo>:</mo><mi>α</mi><mo>=</mo><mn>0.4</mn><mspace linebreak=\"newline\"></mspace><mtext>根据梯度下降公式迭代寻优</mtext></mrow><annotation encoding=\"application/x-tex\">假设函数: J(w)=w^2 \\quad\n假设起点: w^0=1 \\quad\n学习率为: \\alpha = 0.4 \\\\\n根据梯度下降公式迭代寻优\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">假设函数</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord cjk_fallback\">假设起点</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord cjk_fallback\">学习率为</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.4</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord cjk_fallback\">根据梯度下降公式迭代寻优</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>0</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>1</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mn>0</mn></msup><mo>−</mo><mi>α</mi><mo>⋅</mo><msup><mi>J</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mn>0</mn></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mn>0.4</mn><mo>⋅</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>2</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>w</mi><mn>1</mn></msup><mo>−</mo><mi>α</mi><mo>⋅</mo><msup><mi>J</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mn>1</mn></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.04</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>3</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.008</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><msup><mi>w</mi><mn>4</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mn>0.0016</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\nw^0\n  &amp;= 1 \\\\\nw^1\n  &amp;= w^0 - \\alpha \\cdot J&#x27;(w^0) \\\\\n  &amp;= 1 - 0.4 \\cdot 2 \\\\\n  &amp;= 0.2 \\\\\nw^2\n  &amp;= w^1 - \\alpha \\cdot J&#x27;(w^1) \\\\\n  &amp;= 0.04 \\\\\nw^3\n  &amp;= 0.008 \\\\\nw^4\n  &amp;= 0.0016 \\\\\n...\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:13.6205em;vertical-align:-6.5603em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.0603em;\"><span style=\"top:-9.1962em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span><span style=\"top:-7.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span><span style=\"top:-6.1721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.1479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.6479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.1238em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span><span style=\"top:1.4003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span><span style=\"top:2.9003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">...</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.5603em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.0603em;\"><span style=\"top:-9.1962em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-7.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-6.1721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0.4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">2</span></span></span><span style=\"top:-4.6721em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.2</span></span></span><span style=\"top:-3.1479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.6479em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.04</span></span></span><span style=\"top:-0.1238em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.008</span></span></span><span style=\"top:1.4003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0.0016</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.0603em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Rsusaq.png\" alt=\"\"></p>\n</details>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"学习率\">学习率</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Ry4edA.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>学习率退火</p>\n<p>如果学习率不变,对于初期来说学习率偏低, 收敛慢 loss 下降慢</p>\n<p>对于后期来说又偏大,导致难以收敛, loss 止步不降</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Ry4EX0.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"正则化\">正则化</h3>\n<p>保留所有特征 x,减少参数 w 大小 (给高次项或者所有项加上系数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>来压制)</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>θ</mi><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>θ</mi><msub><mi>w</mi><mn>4</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mspace width=\"2em\"/><mn>0</mn><mo>&lt;</mo><mi>θ</mi><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y = w_1 x + w_2 x^2 + \\theta x^3 + \\theta w_4 x^4 \\qquad 0 &lt; \\theta &lt;= 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0141em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<ul>\n<li>\n<p>实际操作就是在目标函数(如损失函数)后加上一个范数:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mrow><mo fence=\"true\">∥</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">∥</mo></mrow><mi>p</mi></msub><mo>=</mo><mroot><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><msup><mi mathvariant=\"normal\">∣</mi><mi>p</mi></msup></mrow><mi>p</mi></mroot></mrow><annotation encoding=\"application/x-tex\">\\begin{Vmatrix} x \\end{Vmatrix}_p\n= \\sqrt[p]{\\sum_{i=1}^{n} |x_i|^p}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3858em;vertical-align:-0.5358em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-2.85em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span style=\"width:0.556em;height:1.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.556em\" height=\"1.200em\" viewBox=\"0 0 556 1200\"><path d=\"M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z\nM367 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-2.85em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span style=\"width:0.556em;height:1.200em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.556em\" height=\"1.200em\" viewBox=\"0 0 556 1200\"><path d=\"M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z\nM367 15 v585 v0 v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.0983em;\"><span style=\"top:-2.3003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1568em;vertical-align:-1.2777em;\"></span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5762em;\"><span style=\"top:-2.8609em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"3.1968em\" viewBox=\"0 0 400000 3196\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>p = 0 时为 <code>L0 范数</code>, 为非零元素个数, 很难优化求解</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><msup><mi mathvariant=\"normal\">∣</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^{n} |x_i|^0\n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>p = 1 时为 <code>L1 范数 (曼哈顿范数)</code>,所有系数绝对值之和, 用于特征选择</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^{n} |x_i|\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span></span></span></span></span></p>\n<p>p = 2 时为 <code>L2 范数 (欧几里得范数)</code>,所有系数平方和的开方, 可以防止过拟合提升模型的泛化能力</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant=\"normal\">∣</mi><msub><mi>x</mi><mi>i</mi></msub><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{\\sum_{i=1}^{n} |x_i|^2}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.1568em;vertical-align:-1.2777em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8791em;\"><span class=\"svg-align\" style=\"top:-5.1168em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"mord\" style=\"padding-left:1.056em;\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7401em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.8391em;\"><span class=\"pstrut\" style=\"height:5.1168em;\"></span><span class=\"hide-tail\" style=\"min-width:0.742em;height:3.1968em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"3.1968em\" viewBox=\"0 0 400000 3196\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M702 80H40000040\nH742v3062l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v40H742z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"权重初始化\">权重初始化</h3>\n<p>就像是 KMeans 一样, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w,b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 的初始化对训练的性能和结果也会有很大影响</p>\n<ul>\n<li>\n<p>一种方法是随机初始化</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Ry4J2m.png\" alt=\"\"></p>\n</li>\n<li>\n<p>另一种就是参考已经训练好的优秀模型的调参</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"图像增广-DataAugmentation\">图像增广-DataAugmentation</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Ry4toc.png\" alt=\"\"></p>\n<ol>\n<li>防止过拟合</li>\n<li>增强模型泛化能力</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6\">【上海交大】【腾讯】强强联合 机器学习+深度学习</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://zhuanlan.zhihu.com/p/43225794\">12 种降维方法终极指南 (含 Python 代码)</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://zhuanlan.zhihu.com/p/146600360\">05-生成网络总结 (VAE, GAN)</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://blog.csdn.net/qq_38651469/article/details/121100275\">独热编码 (One-Hot)及其代码</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://zhuanlan.zhihu.com/p/72038532\">欠拟合、过拟合及如何防止过拟合</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://scikit-learn.org/stable/tutorial/machine_learning_map/\">https://scikit-learn.org/stable/tutorial/machine_learning_map/</a></p>\n<p><a name='cite_note-7' href='#cite_ref-7'>[7]</a>: <a href=\"https://www.bilibili.com/video/BV1ou411k7fD?p=6\">4 小时入门深度学习+实操 MMDetection 第一课</a></p>\n<p><a name='cite_note-8' href='#cite_ref-8'>[8]</a>: <a href=\"https://zhuanlan.zhihu.com/p/34534763\">一篇关于机器学习中的稀疏矩阵的介绍</a></p>\n<p><a name='cite_note-9' href='#cite_ref-9'>[9]</a>: <a href=\"https://www.bilibili.com/video/BV15V411W7VB/?t=1499.6\">“交叉熵”如何做损失函数？打包理解“信息量”、“比特”、“熵”、“KL 散度”、“交叉熵”</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "doing",
                "人工智能",
                "信息论",
                "math",
                "python",
                "机器学习"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/lang/python/code/ML/",
            "url": "https://blog.weidows.tech/post/lang/python/code/ML/",
            "title": "👀Code-4-Machine-Learning",
            "date_published": "2022-04-11T07:07:22.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:34:18\n * @FilePath: \\Blog-private\\source\\_posts\\python\\code\\ML.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h2 id=\"序\">序</h2>\n<p>此文为其他文章的代码部分:</p>\n<blockquote>\n<p><a href=\"../../AI/ML\">🥵硬啃-Machine-Learning</a></p>\n</blockquote>\n<p>也提供了 notebook 形式: <a href=\"https://github.com/Weidows-projects/public-post/blob/main/notebook/ML/_ML.ipynb\">代码地址</a></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"数据预处理方法\">数据预处理方法</h2>\n<h3 id=\"标准化-均值移除\">标准化-均值移除</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据预处理之：均值移除示例</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">3.0</span>, -<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">0.0</span>, <span class=\"number\">4.0</span>, <span class=\"number\">3.0</span>], \\</span><br><span class=\"line\">    [<span class=\"number\">1.0</span>, -<span class=\"number\">4.0</span>, <span class=\"number\">2.0</span>]]\\</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 求每列的平均值 axis=0为列, =1为行 不填就计算所有值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(raw_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"comment\"># 求每列标准差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(raw_samples.std(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">std_samples = raw_samples.copy()  <span class=\"comment\"># 复制样本数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> std_samples.T:  <span class=\"comment\"># .T为转置,遍历每列</span></span><br><span class=\"line\">    col_mean = col.mean()  <span class=\"comment\"># 计算平均数</span></span><br><span class=\"line\">    col_std = col.std()  <span class=\"comment\"># 求标准差</span></span><br><span class=\"line\">    col -= col_mean  <span class=\"comment\"># 减平均值</span></span><br><span class=\"line\">    col /= col_std  <span class=\"comment\"># 除标准差</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 均值无限趋近0,但可能不是0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.std(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># scale 标准移除,与上面功能相同</span></span><br><span class=\"line\">std_samples = sp.scale(raw_samples)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.mean(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(std_samples.std(axis=<span class=\"number\">0</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>[ 1.33333333 -0.33333333  2.33333333]\n[1.24721913 3.29983165 0.47140452]\n[ 5.55111512e-17  0.00000000e+00 -2.96059473e-16]\n[1. 1. 1.]\n[ 5.55111512e-17  0.00000000e+00 -2.96059473e-16]\n[1. 1. 1.]\n</code></pre>\n<h3 id=\"范围缩放\">范围缩放</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据预处理之：范围缩放</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">7.0</span>, <span class=\"number\">8.0</span>, <span class=\"number\">9.0</span>]]).astype(<span class=\"string\">&quot;float64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mms_samples = raw_samples.copy()  <span class=\"comment\"># 复制样本数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> mms_samples.T:</span><br><span class=\"line\">    col_min = col.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">    col_max = col.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">    col -= col_min</span><br><span class=\"line\">    col /= (col_max - col_min)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(mms_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据给定范围创建一个范围缩放器对象</span></span><br><span class=\"line\"><span class=\"comment\"># 使用范围缩放器实现特征值范围缩放</span></span><br><span class=\"line\">mms_samples = sp.MinMaxScaler(feature_range=(<span class=\"number\">0</span>, <span class=\"number\">1</span>))\\</span><br><span class=\"line\">  .fit_transform(raw_samples)  <span class=\"comment\"># 缩放</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mms_samples)</span><br></pre></td></tr></table></figure>\n<pre><code>[[0.  0.  0. ]\n [0.5 0.5 0.5]\n [1.  1.  1. ]]\n[[0.  0.  0. ]\n [0.5 0.5 0.5]\n [1.  1.  1. ]]\n</code></pre>\n<h3 id=\"归一化\">归一化</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样本数据</span></span><br><span class=\"line\">raw_samples = np.array([</span><br><span class=\"line\">    [<span class=\"number\">10.0</span>, <span class=\"number\">20.0</span>, <span class=\"number\">5.0</span>],\\</span><br><span class=\"line\">    [<span class=\"number\">8.0</span>, <span class=\"number\">10.0</span>, <span class=\"number\">1.0</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">nor_samples = raw_samples.copy()</span><br><span class=\"line\"><span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> nor_samples:</span><br><span class=\"line\">    row /= <span class=\"built_in\">abs</span>(row).<span class=\"built_in\">sum</span>()  <span class=\"comment\"># 先对行求绝对值，再求和，再除以绝对值之和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(nor_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># norm=l1  /=绝对值之和</span></span><br><span class=\"line\"><span class=\"comment\"># norm=l2  /=平方之和</span></span><br><span class=\"line\">nor_samples = sp.normalize(raw_samples.copy(), norm=<span class=\"string\">&#x27;l1&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(nor_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[0.28571429 0.57142857 0.14285714]\n [0.42105263 0.52631579 0.05263158]]\n[[0.28571429 0.57142857 0.14285714]\n [0.42105263 0.52631579 0.05263158]]\n</code></pre>\n<h3 id=\"二值化\">二值化</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 二值化</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([[<span class=\"number\">65.5</span>, <span class=\"number\">89.0</span>, <span class=\"number\">73.0</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">55.0</span>, <span class=\"number\">99.0</span>, <span class=\"number\">98.5</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">45.0</span>, <span class=\"number\">22.5</span>, <span class=\"number\">60.0</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">bin_samples = raw_samples.copy()  <span class=\"comment\"># 复制数组</span></span><br><span class=\"line\"><span class=\"comment\"># 生成掩码数组</span></span><br><span class=\"line\">mask1 = bin_samples &lt; <span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mask1)</span><br><span class=\"line\">mask2 = bin_samples &gt;= <span class=\"number\">60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过掩码进行二值化处理 (只转换True的位置)</span></span><br><span class=\"line\">bin_samples[mask1] = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)</span><br><span class=\"line\">bin_samples[mask2] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)  <span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">bin_transformer = sp.Binarizer(threshold=<span class=\"number\">60</span> - <span class=\"number\">1</span>)  <span class=\"comment\"># 创建二值化对象(注意边界值)</span></span><br><span class=\"line\">bin_samples = bin_transformer.transform(raw_samples.copy())  <span class=\"comment\"># 二值化预处理</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(bin_samples)</span><br></pre></td></tr></table></figure>\n<pre><code>[[False False False]\n [ True False False]\n [ True  True False]]\n[[65.5 89.  73. ]\n [ 0.  99.  98.5]\n [ 0.   0.  60. ]]\n[[1. 1. 1.]\n [0. 1. 1.]\n [0. 0. 1.]]\n[[1. 1. 1.]\n [0. 1. 1.]\n [0. 0. 1.]]\n</code></pre>\n<h3 id=\"独热编码示例\">独热编码示例</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([[<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">7</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>],\\</span><br><span class=\"line\">                        [<span class=\"number\">7</span>, <span class=\"number\">3</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">one_hot_encoder = sp.OneHotEncoder(</span><br><span class=\"line\">    sparse=<span class=\"literal\">False</span>,  <span class=\"comment\"># 是否采用稀疏格式</span></span><br><span class=\"line\">    dtype=<span class=\"string\">&quot;int32&quot;</span>,</span><br><span class=\"line\">    categories=<span class=\"string\">&quot;auto&quot;</span>)  <span class=\"comment\"># 自动编码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行独热编码</span></span><br><span class=\"line\">oh_samples = one_hot_encoder.fit_transform(raw_samples.copy())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(oh_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(one_hot_encoder.inverse_transform(oh_samples))  <span class=\"comment\"># 解码</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[[1 0 1 0 0 1 0 0 0]\n [0 1 0 1 0 0 1 0 0]\n [1 0 0 0 1 0 0 1 0]\n [0 1 1 0 0 0 0 0 1]]\n[[1 3 2]\n [7 5 4]\n [1 8 6]\n [7 3 9]]\n</code></pre>\n<h3 id=\"标签编码\">标签编码</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\">raw_samples = np.array([<span class=\"string\">&#x27;audi&#x27;</span>, <span class=\"string\">&#x27;ford&#x27;</span>, <span class=\"string\">&#x27;audi&#x27;</span>, <span class=\"string\">&#x27;bmw&#x27;</span>, <span class=\"string\">&#x27;ford&#x27;</span>, <span class=\"string\">&#x27;bmw&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">lb_encoder = sp.LabelEncoder()  <span class=\"comment\"># 定义标签编码对象</span></span><br><span class=\"line\">lb_samples = lb_encoder.fit_transform(raw_samples.copy())  <span class=\"comment\"># 执行标签编码</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lb_samples)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(lb_encoder.inverse_transform(lb_samples))  <span class=\"comment\"># 逆向转换</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>[0 2 0 1 2 1]\n['audi' 'ford' 'audi' 'bmw' 'ford' 'bmw']\n</code></pre>\n<h2 id=\"基本问题\">基本问题</h2>\n<h3 id=\"回归问题\">回归问题</h3>\n<h4 id=\"线性回归\">线性回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> axes3d</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.preprocessing <span class=\"keyword\">as</span> sp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练数据集</span></span><br><span class=\"line\">train_x = np.array([<span class=\"number\">0.5</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.8</span>, <span class=\"number\">1.1</span>, <span class=\"number\">1.4</span>])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">train_y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\">n_epochs = <span class=\"number\">30</span>  <span class=\"comment\"># 迭代次数</span></span><br><span class=\"line\">l_rate = <span class=\"number\">0.01</span>  <span class=\"comment\"># 学习率</span></span><br><span class=\"line\">epochs = []  <span class=\"comment\"># 记录迭代次数</span></span><br><span class=\"line\">losses = []  <span class=\"comment\"># 记录损失值</span></span><br><span class=\"line\"></span><br><span class=\"line\">w0, w1 = [<span class=\"number\">1</span>], [<span class=\"number\">1</span>]  <span class=\"comment\"># 模型初始值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, n_epochs + <span class=\"number\">1</span>):</span><br><span class=\"line\">    epochs.append(i)  <span class=\"comment\"># 记录第几次迭代</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = w0[-<span class=\"number\">1</span>] + w1[-<span class=\"number\">1</span>] * train_x  <span class=\"comment\"># 取出最新的w0,w1计算线性方程输出</span></span><br><span class=\"line\">    <span class=\"comment\"># 损失函数(均方差)</span></span><br><span class=\"line\">    loss = (((train_y - y)**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>()) / <span class=\"number\">2</span></span><br><span class=\"line\">    losses.append(loss)  <span class=\"comment\"># 记录每次迭代的损失值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d: w0=%f, w1=%f, loss=%f&quot;</span> % (i, w0[-<span class=\"number\">1</span>], w1[-<span class=\"number\">1</span>], loss))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算w0,w1的偏导数</span></span><br><span class=\"line\">    d0 = -(train_y - y).<span class=\"built_in\">sum</span>()</span><br><span class=\"line\">    d1 = -(train_x * (train_y - y)).<span class=\"built_in\">sum</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 更新w0,w1</span></span><br><span class=\"line\">    w0.append(w0[-<span class=\"number\">1</span>] - (d0 * l_rate))</span><br><span class=\"line\">    w1.append(w1[-<span class=\"number\">1</span>] - (d1 * l_rate))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###################### 训练过程可视化 ######################</span></span><br><span class=\"line\"><span class=\"comment\">## 损失函数收敛过程</span></span><br><span class=\"line\">w0 = np.array(w0[:-<span class=\"number\">1</span>])</span><br><span class=\"line\">w1 = np.array(w1[:-<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&quot;Losses&quot;</span>, facecolor=<span class=\"string\">&quot;lightgray&quot;</span>)  <span class=\"comment\"># 创建一个窗体</span></span><br><span class=\"line\">mp.title(<span class=\"string\">&quot;epoch&quot;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&quot;loss&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&quot;:&quot;</span>)  <span class=\"comment\"># 网格线：虚线</span></span><br><span class=\"line\">mp.plot(epochs, losses, c=<span class=\"string\">&quot;blue&quot;</span>, label=<span class=\"string\">&quot;loss&quot;</span>)</span><br><span class=\"line\">mp.legend()  <span class=\"comment\"># 图例</span></span><br><span class=\"line\">mp.tight_layout()  <span class=\"comment\"># 紧凑格式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 显示模型直线</span></span><br><span class=\"line\">pred_y = w0[-<span class=\"number\">1</span>] + w1[-<span class=\"number\">1</span>] * train_x  <span class=\"comment\"># 根据x预测y</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&quot;Linear Regression&quot;</span>, facecolor=<span class=\"string\">&quot;lightgray&quot;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&quot;Linear Regression&quot;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&quot;x&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&quot;y&quot;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&quot;:&quot;</span>)</span><br><span class=\"line\">mp.scatter(train_x, train_y, c=<span class=\"string\">&quot;blue&quot;</span>, label=<span class=\"string\">&quot;Traing&quot;</span>)  <span class=\"comment\"># 绘制样本散点图</span></span><br><span class=\"line\">mp.plot(train_x, pred_y, c=<span class=\"string\">&quot;red&quot;</span>, label=<span class=\"string\">&quot;Regression&quot;</span>)</span><br><span class=\"line\">mp.legend()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示梯度下降过程(复制粘贴即可，不需要编写)</span></span><br><span class=\"line\"><span class=\"comment\"># 计算损失函数曲面上的点 loss = f(w0, w1)</span></span><br><span class=\"line\">arr1 = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>)  <span class=\"comment\"># 0~9间产生500个元素的均匀列表</span></span><br><span class=\"line\">arr2 = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">3.5</span>, <span class=\"number\">500</span>)  <span class=\"comment\"># 0~3.5间产生500个元素的均匀列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">grid_w0, grid_w1 = np.meshgrid(arr1, arr2)  <span class=\"comment\"># 产生二维矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">flat_w0, flat_w1 = grid_w0.ravel(), grid_w1.ravel()  <span class=\"comment\"># 二维矩阵扁平化</span></span><br><span class=\"line\">loss_metrix = train_y.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)  <span class=\"comment\"># 生成误差矩阵（-1,1）表示自动计算维度</span></span><br><span class=\"line\">outer = np.outer(train_x, flat_w1)  <span class=\"comment\"># 求外积（train_x和flat_w1元素两两相乘的新矩阵）</span></span><br><span class=\"line\"><span class=\"comment\"># 计算损失：((w0 + w1*x - y)**2)/2</span></span><br><span class=\"line\">flat_loss = (((flat_w0 + outer - loss_metrix)**<span class=\"number\">2</span>).<span class=\"built_in\">sum</span>(axis=<span class=\"number\">0</span>)) / <span class=\"number\">2</span></span><br><span class=\"line\">grid_loss = flat_loss.reshape(grid_w0.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Loss Function&#x27;</span>)</span><br><span class=\"line\">ax = mp.axes(projection=<span class=\"string\">&#x27;3d&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Loss Function&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_xlabel(<span class=\"string\">&#x27;w0&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_ylabel(<span class=\"string\">&#x27;w1&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.set_zlabel(<span class=\"string\">&#x27;loss&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">ax.plot_surface(grid_w0,</span><br><span class=\"line\">                grid_w1,</span><br><span class=\"line\">                grid_loss,</span><br><span class=\"line\">                rstride=<span class=\"number\">10</span>,</span><br><span class=\"line\">                cstride=<span class=\"number\">10</span>,</span><br><span class=\"line\">                cmap=<span class=\"string\">&#x27;jet&#x27;</span>)</span><br><span class=\"line\">ax.plot(w0, w1, losses, <span class=\"string\">&#x27;o-&#x27;</span>, c=<span class=\"string\">&#x27;orangered&#x27;</span>, label=<span class=\"string\">&#x27;BGD&#x27;</span>, zorder=<span class=\"number\">5</span>)</span><br><span class=\"line\">mp.legend(loc=<span class=\"string\">&#x27;lower left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>1: w0=1.000000, w1=1.000000, loss=44.175000\n2: w0=1.209000, w1=1.190600, loss=36.538828\n3: w0=1.399164, w1=1.363579, loss=30.231687\n4: w0=1.572208, w1=1.520546, loss=25.022227\n5: w0=1.729693, w1=1.662961, loss=20.719373\n6: w0=1.873039, w1=1.792151, loss=17.165309\n7: w0=2.003532, w1=1.909325, loss=14.229691\n8: w0=2.122345, w1=2.015577, loss=11.804865\n9: w0=2.230542, w1=2.111905, loss=9.801916\n10: w0=2.329091, w1=2.199215, loss=8.147408\n11: w0=2.418871, w1=2.278330, loss=6.780688\n12: w0=2.500681, w1=2.349997, loss=5.651660\n13: w0=2.575247, w1=2.414898, loss=4.718950\n14: w0=2.643230, w1=2.473648, loss=3.948384\n15: w0=2.705228, w1=2.526811, loss=3.311740\n16: w0=2.761786, w1=2.574896, loss=2.785706\n17: w0=2.813402, w1=2.618367, loss=2.351029\n18: w0=2.860524, w1=2.657645, loss=1.991807\n19: w0=2.903561, w1=2.693114, loss=1.694907\n20: w0=2.942886, w1=2.725122, loss=1.449482\n21: w0=2.978836, w1=2.753985, loss=1.246572\n22: w0=3.011719, w1=2.779990, loss=1.078777\n23: w0=3.041814, w1=2.803399, loss=0.939987\n24: w0=3.069373, w1=2.824449, loss=0.825153\n25: w0=3.094629, w1=2.843355, loss=0.730107\n26: w0=3.117790, w1=2.860315, loss=0.651405\n27: w0=3.139046, w1=2.875507, loss=0.586204\n28: w0=3.158572, w1=2.889091, loss=0.532154\n29: w0=3.176523, w1=2.901216, loss=0.487315\n30: w0=3.193044, w1=2.912016, loss=0.450086\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_13_1.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_13_2.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_13_3.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 利用LinearRegression实现线性回归</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm  <span class=\"comment\"># 线性模型# 线性模型</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.metrics <span class=\"keyword\">as</span> sm  <span class=\"comment\"># 模型性能评价模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\">train_x = np.array([[<span class=\"number\">0.5</span>], [<span class=\"number\">0.6</span>], [<span class=\"number\">0.8</span>], [<span class=\"number\">1.1</span>], [<span class=\"number\">1.4</span>]])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">train_y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建线性回归器</span></span><br><span class=\"line\">line_model = lm.LinearRegression()</span><br><span class=\"line\"><span class=\"comment\"># 用已知输入、输出数据集训练回归器</span></span><br><span class=\"line\">line_model.fit(train_x, train_y)</span><br><span class=\"line\"><span class=\"comment\"># 根据训练模型预测输出</span></span><br><span class=\"line\">pred_y = line_model.predict(train_x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;coef_:&quot;</span>, line_model.coef_)  <span class=\"comment\"># 系数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;intercept_:&quot;</span>, line_model.intercept_)  <span class=\"comment\"># 截距</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化回归曲线</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制样本点</span></span><br><span class=\"line\">mp.scatter(train_x, train_y, c=<span class=\"string\">&#x27;blue&#x27;</span>, alpha=<span class=\"number\">0.8</span>, s=<span class=\"number\">60</span>, label=<span class=\"string\">&#x27;Sample&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制拟合直线</span></span><br><span class=\"line\">mp.plot(</span><br><span class=\"line\">    train_x,  <span class=\"comment\"># x坐标数据</span></span><br><span class=\"line\">    pred_y,  <span class=\"comment\"># y坐标数据</span></span><br><span class=\"line\">    c=<span class=\"string\">&#x27;orangered&#x27;</span>,</span><br><span class=\"line\">    label=<span class=\"string\">&#x27;Regression Line&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.legend()  <span class=\"comment\"># 左上角的图例</span></span><br><span class=\"line\">mp.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>coef_: [2.2189781]\nintercept_: 4.107299270072994\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_14_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets, linear_model, model_selection</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># science kit learn 自带的糖尿病数据</span></span><br><span class=\"line\">X, y = datasets.load_diabetes(return_X_y=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># 442 * 10 大小的二维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(X.shape)</span><br><span class=\"line\"><span class=\"comment\"># No.1 * 10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(X[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只取第二维的第三列作为特征输入 (也就是0.06169621这一列)</span></span><br><span class=\"line\">X = X[:, np.newaxis, <span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># train : test = 2 : 1</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = model_selection.train_test_split(</span><br><span class=\"line\">    X, y, test_size=<span class=\"number\">0.33</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model = linear_model.LinearRegression()</span><br><span class=\"line\">model.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X_test, y_test, color=<span class=\"string\">&#x27;black&#x27;</span>)</span><br><span class=\"line\">plt.plot(X_test, y_pred, color=<span class=\"string\">&#x27;blue&#x27;</span>, linewidth=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>(442, 10)\n[ 0.03807591  0.05068012  0.06169621  0.02187235 -0.0442235  -0.03482076\n -0.04340085 -0.00259226  0.01990842 -0.01764613]\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_15_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pumpkins[pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;bushel&#x27;</span>,</span><br><span class=\"line\">                                                     <span class=\"keyword\">case</span>=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                     regex=<span class=\"literal\">True</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pumpkins.head()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pumpkins.isnull().sum()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A set of new columns for a new dataframe. Filter out nonmatching columns</span></span><br><span class=\"line\">pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [</span><br><span class=\"line\">        <span class=\"string\">&#x27;Package&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Month&#x27;</span>, <span class=\"string\">&#x27;Low Price&#x27;</span>, <span class=\"string\">&#x27;High Price&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Date&#x27;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">],</span><br><span class=\"line\">                         axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get an average between low and high price for the base pumpkin price</span></span><br><span class=\"line\">price = (pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>] + pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create a new dataframe with this basic data</span></span><br><span class=\"line\">new_pumpkins = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"comment\"># Convert the date to its month only</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;Month&#x27;</span>:</span><br><span class=\"line\">    pd.DatetimeIndex(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).month,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DayOfYear&#x27;</span>:</span><br><span class=\"line\">    pd.to_datetime(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).apply(</span><br><span class=\"line\">        <span class=\"keyword\">lambda</span> dt: (dt - datetime(dt.year, <span class=\"number\">1</span>, <span class=\"number\">1</span>)).days),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Variety&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;City&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;City Name&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Package&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Low Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;High Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Price&#x27;</span>:</span><br><span class=\"line\">    price</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Convert the price if the Package contains fractional bushel values</span></span><br><span class=\"line\"><span class=\"comment\"># loc 遍历Package列中包含 &#x27;1 1/9&#x27; 的行, 对每行的 Price 列进行操作</span></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1 1/9&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / (<span class=\"number\">1</span> + <span class=\"number\">1</span> / <span class=\"number\">9</span>)</span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1/2&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / (<span class=\"number\">1</span> / <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 散点图</span></span><br><span class=\"line\">plt.scatter(new_pumpkins.Price, new_pumpkins.Month)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Price&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Month&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 柱状图</span></span><br><span class=\"line\">new_pumpkins.groupby([<span class=\"string\">&#x27;Month&#x27;</span>])[<span class=\"string\">&#x27;Price&#x27;</span>].mean().plot(kind=<span class=\"string\">&#x27;bar&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Month&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ax = <span class=\"literal\">None</span></span><br><span class=\"line\">colors = [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>, <span class=\"string\">&#x27;yellow&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, var <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>].unique()):</span><br><span class=\"line\">    ax = new_pumpkins[new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>] == var].plot.scatter(<span class=\"string\">&#x27;DayOfYear&#x27;</span>,</span><br><span class=\"line\">                                                                   <span class=\"string\">&#x27;Price&#x27;</span>,</span><br><span class=\"line\">                                                                   ax=ax,</span><br><span class=\"line\">                                                                   c=colors[i],</span><br><span class=\"line\">                                                                   label=var)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_16_0.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_16_1.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_16_2.png\" alt=\"png\"></p>\n<h4 id=\"多项式回归\">多项式回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score, mean_squared_error, mean_absolute_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.pipeline <span class=\"keyword\">import</span> make_pipeline</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\">pumpkins = pumpkins[pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;bushel&#x27;</span>,</span><br><span class=\"line\">                                                     <span class=\"keyword\">case</span>=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                                     regex=<span class=\"literal\">True</span>)]</span><br><span class=\"line\">pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> [</span><br><span class=\"line\">        <span class=\"string\">&#x27;Package&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Month&#x27;</span>, <span class=\"string\">&#x27;Low Price&#x27;</span>, <span class=\"string\">&#x27;High Price&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Date&#x27;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">],</span><br><span class=\"line\">                         axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">price = (pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>] + pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>]) / <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Month&#x27;</span>:</span><br><span class=\"line\">    pd.DatetimeIndex(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).month,</span><br><span class=\"line\">    <span class=\"string\">&#x27;DayOfYear&#x27;</span>:</span><br><span class=\"line\">    pd.to_datetime(pumpkins[<span class=\"string\">&#x27;Date&#x27;</span>]).apply(</span><br><span class=\"line\">        <span class=\"keyword\">lambda</span> dt: (dt - datetime(dt.year, <span class=\"number\">1</span>, <span class=\"number\">1</span>)).days),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Variety&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;City&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;City Name&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Package&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Low Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;Low Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;High Price&#x27;</span>:</span><br><span class=\"line\">    pumpkins[<span class=\"string\">&#x27;High Price&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Price&#x27;</span>:</span><br><span class=\"line\">    price</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1 1/9&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price / <span class=\"number\">1.1</span></span><br><span class=\"line\">new_pumpkins.loc[new_pumpkins[<span class=\"string\">&#x27;Package&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;1/2&#x27;</span>),</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Price&#x27;</span>] = price * <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">pie_pumpkins = new_pumpkins[new_pumpkins[<span class=\"string\">&#x27;Variety&#x27;</span>] == <span class=\"string\">&#x27;PIE TYPE&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    pie_pumpkins[<span class=\"string\">&#x27;DayOfYear&#x27;</span>].to_numpy().reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">    pie_pumpkins[<span class=\"string\">&#x27;Price&#x27;</span>],</span><br><span class=\"line\">    test_size=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pipeline = make_pipeline(PolynomialFeatures(<span class=\"number\">2</span>), LinearRegression())</span><br><span class=\"line\"></span><br><span class=\"line\">pipeline.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">pred = pipeline.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">mse = np.sqrt(mean_squared_error(y_test, pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Mean error: <span class=\"subst\">&#123;mse:<span class=\"number\">3.3</span>&#125;</span> (<span class=\"subst\">&#123;mse/np.mean(pred)*<span class=\"number\">100</span>:<span class=\"number\">3.3</span>&#125;</span>%)&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">score = pipeline.score(X_train, y_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Model determination: &#x27;</span>, score)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X_test, y_test)</span><br><span class=\"line\">plt.plot(<span class=\"built_in\">sorted</span>(X_test), pipeline.predict(<span class=\"built_in\">sorted</span>(X_test)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Mean error: 2.73 (17.0%)\nModel determination:  0.07639977655280084\n\n\n\n\n\n[&lt;matplotlib.lines.Line2D at 0x19b75ee76d0&gt;]\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_18_2.png\" alt=\"png\"></p>\n<h3 id=\"决策树-随机森林\">决策树-随机森林</h3>\n<h4 id=\"决策树分类\">决策树分类</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> tree</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydotplus</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;simHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature_E = <span class=\"string\">&#x27;sepal length&#x27;</span>, <span class=\"string\">&#x27;sepal width&#x27;</span>, <span class=\"string\">&#x27;petal length&#x27;</span>, <span class=\"string\">&#x27;petal width&#x27;</span></span><br><span class=\"line\">iris_feature = <span class=\"string\">&#x27;花萼长度&#x27;</span>, <span class=\"string\">&#x27;花萼宽度&#x27;</span>, <span class=\"string\">&#x27;花瓣长度&#x27;</span>, <span class=\"string\">&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">iris_class = <span class=\"string\">&#x27;Iris-setosa&#x27;</span>, <span class=\"string\">&#x27;Iris-versicolor&#x27;</span>, <span class=\"string\">&#x27;Iris-virginica&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x = data[<span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>))]</span><br><span class=\"line\"><span class=\"comment\"># y = pd.Categorical(data[4]).codes</span></span><br><span class=\"line\">y = LabelEncoder().fit_transform(data[<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"comment\"># 为了可视化，仅使用前两列特征</span></span><br><span class=\"line\">x = x[[<span class=\"number\">0</span>, <span class=\"number\">1</span>]]</span><br><span class=\"line\"><span class=\"comment\"># x = x.iloc[:, :2]</span></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 决策树参数估计</span></span><br><span class=\"line\"><span class=\"comment\"># min_samples_split = 10：如果该结点包含的样本数目大于10，则(有可能)对其分支</span></span><br><span class=\"line\"><span class=\"comment\"># min_samples_leaf = 10：若将某结点分支后，得到的每个子结点样本数目都大于10，则完成分支；否则，不进行分支</span></span><br><span class=\"line\">model = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>)</span><br><span class=\"line\">model.fit(x_train, y_train)</span><br><span class=\"line\">y_train_pred = model.predict(x_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;训练集正确率：&#x27;</span>, accuracy_score(y_train, y_train_pred))</span><br><span class=\"line\">y_test_hat = model.predict(x_test)  <span class=\"comment\"># 测试数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;测试集正确率：&#x27;</span>, accuracy_score(y_test, y_test_hat))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存</span></span><br><span class=\"line\"><span class=\"comment\"># dot -Tpng my.dot -o my.png</span></span><br><span class=\"line\"><span class=\"comment\"># 1、输出</span></span><br><span class=\"line\"><span class=\"comment\"># with open(&#x27;iris.dot&#x27;, &#x27;w&#x27;) as f:</span></span><br><span class=\"line\"><span class=\"comment\">#     tree.export_graphviz(model, out_file=f, feature_names=iris_feature_E[0:2], class_names=iris_class,</span></span><br><span class=\"line\"><span class=\"comment\">#                          filled=True, rounded=True, special_characters=True)</span></span><br><span class=\"line\">tree.export_graphviz(model,</span><br><span class=\"line\">                     out_file=<span class=\"string\">&#x27;./_data_set/iris_classification/iris.dot&#x27;</span>,</span><br><span class=\"line\">                     feature_names=iris_feature_E[<span class=\"number\">0</span>:<span class=\"number\">2</span>],</span><br><span class=\"line\">                     class_names=iris_class,</span><br><span class=\"line\">                     filled=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                     rounded=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                     special_characters=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># 2、给定文件名</span></span><br><span class=\"line\"><span class=\"comment\"># tree.export_graphviz(model, out_file=&#x27;iris.dot&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># tree.export_graphviz(model, out_file=&#x27;iris.dot&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># 3、输出为pdf格式</span></span><br><span class=\"line\">dot_data = tree.export_graphviz(model,</span><br><span class=\"line\">                                out_file=<span class=\"literal\">None</span>,</span><br><span class=\"line\">                                feature_names=iris_feature_E[<span class=\"number\">0</span>:<span class=\"number\">2</span>],</span><br><span class=\"line\">                                class_names=iris_class,</span><br><span class=\"line\">                                filled=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                rounded=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                                special_characters=<span class=\"literal\">True</span>)</span><br><span class=\"line\">graph = pydotplus.graph_from_dot_data(dot_data)</span><br><span class=\"line\">graph.write_pdf(<span class=\"string\">&#x27;./_data_set/iris_classification/iris.pdf&#x27;</span>)</span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./_data_set/iris_classification/iris.png&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">f.write(graph.create_png())</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画图</span></span><br><span class=\"line\">N, M = <span class=\"number\">50</span>, <span class=\"number\">50</span>  <span class=\"comment\"># 横纵各采样多少个值</span></span><br><span class=\"line\">x1_min, x2_min = x.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">x1_max, x2_max = x.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">t1 = np.linspace(x1_min, x1_max, N)</span><br><span class=\"line\">t2 = np.linspace(x2_min, x2_max, M)</span><br><span class=\"line\">x1, x2 = np.meshgrid(t1, t2)  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">x_show = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x_show.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;x_show = \\n&#x27;</span>, x_show)</span><br><span class=\"line\"></span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">y_show_hat = model.predict(x_show)  <span class=\"comment\"># 预测值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat)</span><br><span class=\"line\">y_show_hat = y_show_hat.reshape(x1.shape)  <span class=\"comment\"># 使之与输入的形状相同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_show_hat)</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, y_show_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)  <span class=\"comment\"># 预测值的显示</span></span><br><span class=\"line\">plt.scatter(x_test[<span class=\"number\">0</span>],</span><br><span class=\"line\">            x_test[<span class=\"number\">1</span>],</span><br><span class=\"line\">            c=y_test.ravel(),</span><br><span class=\"line\">            edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">            s=<span class=\"number\">100</span>,</span><br><span class=\"line\">            zorder=<span class=\"number\">10</span>,</span><br><span class=\"line\">            cmap=cm_dark,</span><br><span class=\"line\">            marker=<span class=\"string\">&#x27;*&#x27;</span>)  <span class=\"comment\"># 测试数据</span></span><br><span class=\"line\">plt.scatter(x[<span class=\"number\">0</span>], x[<span class=\"number\">1</span>], c=y.ravel(), edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, s=<span class=\"number\">20</span>,</span><br><span class=\"line\">            cmap=cm_dark)  <span class=\"comment\"># 全部数据</span></span><br><span class=\"line\">plt.xlabel(iris_feature[<span class=\"number\">0</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(iris_feature[<span class=\"number\">1</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;鸢尾花数据的决策树分类&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 训练集上的预测结果</span></span><br><span class=\"line\">y_test = y_test.reshape(-<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_test_hat)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_test)</span><br><span class=\"line\">result = (y_test_hat == y_test)  <span class=\"comment\"># True则预测正确，False则预测错误</span></span><br><span class=\"line\">acc = np.mean(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;准确度: %.2f%%&#x27;</span> % (<span class=\"number\">100</span> * acc))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 过拟合：错误率</span></span><br><span class=\"line\">depth = np.arange(<span class=\"number\">1</span>, <span class=\"number\">15</span>)</span><br><span class=\"line\">err_train_list = []</span><br><span class=\"line\">err_test_list = []</span><br><span class=\"line\">clf = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> depth:</span><br><span class=\"line\">    clf.set_params(max_depth=d)</span><br><span class=\"line\">    clf.fit(x_train, y_train)</span><br><span class=\"line\">    y_train_pred = clf.predict(x_train)</span><br><span class=\"line\">    err_train = <span class=\"number\">1</span> - accuracy_score(y_train, y_train_pred)</span><br><span class=\"line\">    err_train_list.append(err_train)</span><br><span class=\"line\">    y_test_pred = clf.predict(x_test)</span><br><span class=\"line\">    err_test = <span class=\"number\">1</span> - accuracy_score(y_test, y_test_pred)</span><br><span class=\"line\">    err_test_list.append(err_test)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(d, <span class=\"string\">&#x27; 测试集错误率: %.2f%%&#x27;</span> % (<span class=\"number\">100</span> * err_test))</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(depth,</span><br><span class=\"line\">         err_test_list,</span><br><span class=\"line\">         <span class=\"string\">&#x27;ro-&#x27;</span>,</span><br><span class=\"line\">         markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">         lw=<span class=\"number\">2</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;测试集错误率&#x27;</span>)</span><br><span class=\"line\">plt.plot(depth,</span><br><span class=\"line\">         err_train_list,</span><br><span class=\"line\">         <span class=\"string\">&#x27;go-&#x27;</span>,</span><br><span class=\"line\">         markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">         lw=<span class=\"number\">2</span>,</span><br><span class=\"line\">         label=<span class=\"string\">&#x27;训练集错误率&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;决策树深度&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;错误率&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;lower left&#x27;</span>, fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树深度与过拟合&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>训练集正确率： 0.9523809523809523\n测试集正确率： 0.6222222222222222\n(2500, 2)\nx_show =\n [[4.3        2.        ]\n [4.37346939 2.        ]\n [4.44693878 2.        ]\n ...\n [7.75306122 4.4       ]\n [7.82653061 4.4       ]\n [7.9        4.4       ]]\n(2500,)\n[0 0 0 ... 2 2 2]\n[[0 0 0 ... 1 1 1]\n [0 0 0 ... 1 1 1]\n [0 0 0 ... 1 1 1]\n ...\n [0 0 0 ... 2 2 2]\n [0 0 0 ... 2 2 2]\n [0 0 0 ... 2 2 2]]\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_20_1.png\" alt=\"png\"></p>\n<pre><code>[0 1 2 0 2 2 1 0 0 2 2 0 1 2 1 0 2 1 0 0 1 0 2 0 2 1 0 0 1 1 2 2 2 2 1 0 1\n 0 2 1 2 0 1 1 1]\n[0 1 1 0 2 1 2 0 0 2 1 0 2 1 1 0 1 1 0 0 1 1 1 0 2 1 0 0 1 2 1 2 1 2 2 0 1\n 0 1 2 2 0 2 2 1]\n准确度: 62.22%\n1  测试集错误率: 44.44%\n2  测试集错误率: 40.00%\n3  测试集错误率: 20.00%\n4  测试集错误率: 24.44%\n5  测试集错误率: 24.44%\n6  测试集错误率: 28.89%\n7  测试集错误率: 37.78%\n8  测试集错误率: 40.00%\n9  测试集错误率: 37.78%\n10  测试集错误率: 40.00%\n11  测试集错误率: 37.78%\n12  测试集错误率: 37.78%\n13  测试集错误率: 40.00%\n14  测试集错误率: 37.78%\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_20_3.png\" alt=\"png\"></p>\n<h4 id=\"随机森林\">随机森林</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature = <span class=\"string\">u&#x27;花萼长度&#x27;</span>, <span class=\"string\">u&#x27;花萼宽度&#x27;</span>, <span class=\"string\">u&#x27;花瓣长度&#x27;</span>, <span class=\"string\">u&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x_prime = data[<span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>))]</span><br><span class=\"line\">y = pd.Categorical(data[<span class=\"number\">4</span>]).codes</span><br><span class=\"line\">x_prime_train, x_prime_test, y_train, y_test = train_test_split(x_prime,</span><br><span class=\"line\">                                                                y,</span><br><span class=\"line\">                                                                train_size=<span class=\"number\">0.7</span>,</span><br><span class=\"line\">                                                                random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">feature_pairs = [[<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">2</span>], [<span class=\"number\">0</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">3</span>]]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>), facecolor=<span class=\"string\">&#x27;#FFFFFF&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, pair <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(feature_pairs):</span><br><span class=\"line\">    <span class=\"comment\"># 准备数据</span></span><br><span class=\"line\">    x_train = x_prime_train[pair]</span><br><span class=\"line\">    x_test = x_prime_test[pair]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 决策树学习</span></span><br><span class=\"line\">    model = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>, min_samples_leaf=<span class=\"number\">3</span>)</span><br><span class=\"line\">    model.fit(x_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">    N, M = <span class=\"number\">500</span>, <span class=\"number\">500</span>  <span class=\"comment\"># 横纵各采样多少个值</span></span><br><span class=\"line\">    x1_min, x2_min = x_train.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">    x1_max, x2_max = x_train.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">    t1 = np.linspace(x1_min, x1_max, N)</span><br><span class=\"line\">    t2 = np.linspace(x2_min, x2_max, M)</span><br><span class=\"line\">    x1, x2 = np.meshgrid(t1, t2)  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">    x_show = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 训练集上的预测结果</span></span><br><span class=\"line\">    y_train_pred = model.predict(x_train)</span><br><span class=\"line\">    acc_train = accuracy_score(y_train, y_train_pred)</span><br><span class=\"line\">    y_test_pred = model.predict(x_test)</span><br><span class=\"line\">    acc_test = accuracy_score(y_test, y_test_pred)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;特征：&#x27;</span>, iris_feature[pair[<span class=\"number\">0</span>]], <span class=\"string\">&#x27; + &#x27;</span>, iris_feature[pair[<span class=\"number\">1</span>]])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\t训练集准确率: %.4f%%&#x27;</span> % (<span class=\"number\">100</span> * acc_train))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\t测试集准确率: %.4f%%\\n&#x27;</span> % (<span class=\"number\">100</span> * acc_test))</span><br><span class=\"line\"></span><br><span class=\"line\">    cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">    cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">    y_hat = model.predict(x_show)</span><br><span class=\"line\">    y_hat = y_hat.reshape(x1.shape)</span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    plt.contour(x1,</span><br><span class=\"line\">                x2,</span><br><span class=\"line\">                y_hat,</span><br><span class=\"line\">                colors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                levels=[<span class=\"number\">0</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">                antialiased=<span class=\"literal\">True</span>,</span><br><span class=\"line\">                linewidths=<span class=\"number\">1</span>)</span><br><span class=\"line\">    plt.pcolormesh(x1, x2, y_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)  <span class=\"comment\"># 预测值</span></span><br><span class=\"line\">    plt.scatter(x_train[pair[<span class=\"number\">0</span>]],</span><br><span class=\"line\">                x_train[pair[<span class=\"number\">1</span>]],</span><br><span class=\"line\">                c=y_train,</span><br><span class=\"line\">                s=<span class=\"number\">20</span>,</span><br><span class=\"line\">                edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                cmap=cm_dark,</span><br><span class=\"line\">                label=<span class=\"string\">u&#x27;训练集&#x27;</span>)</span><br><span class=\"line\">    plt.scatter(x_test[pair[<span class=\"number\">0</span>]],</span><br><span class=\"line\">                x_test[pair[<span class=\"number\">1</span>]],</span><br><span class=\"line\">                c=y_test,</span><br><span class=\"line\">                s=<span class=\"number\">80</span>,</span><br><span class=\"line\">                marker=<span class=\"string\">&#x27;*&#x27;</span>,</span><br><span class=\"line\">                edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                cmap=cm_dark,</span><br><span class=\"line\">                label=<span class=\"string\">u&#x27;测试集&#x27;</span>)</span><br><span class=\"line\">    plt.xlabel(iris_feature[pair[<span class=\"number\">0</span>]], fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">    plt.ylabel(iris_feature[pair[<span class=\"number\">1</span>]], fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">    <span class=\"comment\"># plt.legend(loc=&#x27;upper right&#x27;, fancybox=True, framealpha=0.3)</span></span><br><span class=\"line\">    plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">    plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">    plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.suptitle(<span class=\"string\">u&#x27;决策树对鸢尾花数据两特征组合的分类结果&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">1</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.94</span>))  <span class=\"comment\"># (left, bottom, right, top)</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>特征： 花萼长度  +  花萼宽度\n\t训练集准确率: 85.7143%\n\t测试集准确率: 71.1111%\n\n特征： 花萼长度  +  花瓣长度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 91.1111%\n\n特征： 花萼长度  +  花瓣宽度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 86.6667%\n\n特征： 花萼宽度  +  花瓣长度\n\t训练集准确率: 97.1429%\n\t测试集准确率: 95.5556%\n\n特征： 花萼宽度  +  花瓣宽度\n\t训练集准确率: 96.1905%\n\t测试集准确率: 84.4444%\n\n特征： 花瓣长度  +  花瓣宽度\n\t训练集准确率: 98.0952%\n\t测试集准确率: 97.7778%\n\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2108356862.py:83: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(1, rect=(0, 0, 1, 0.94))  # (left, bottom, right, top)\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_22_2.png\" alt=\"png\"></p>\n<h4 id=\"决策树-随机森林回归\">决策树-随机森林回归</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [-3,3)</span></span><br><span class=\"line\">x = np.random.rand(N) * <span class=\"number\">6</span> - <span class=\"number\">3</span></span><br><span class=\"line\">x.sort()</span><br><span class=\"line\">y = np.sin(x) + np.random.randn(N) * <span class=\"number\">0.05</span></span><br><span class=\"line\">x = x.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># model = DecisionTreeRegressor(criterion=&#x27;mse&#x27;, max_depth=10)</span></span><br><span class=\"line\">model = RandomForestRegressor(n_estimators=<span class=\"number\">20</span>, criterion=<span class=\"string\">&#x27;mse&#x27;</span>, max_depth=<span class=\"number\">10</span>)</span><br><span class=\"line\">model.fit(x, y)</span><br><span class=\"line\">x_test = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">50</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">y_hat = model.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;r*&#x27;</span>, markersize=<span class=\"number\">10</span>, markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>, label=<span class=\"string\">&#x27;实际值&#x27;</span>)</span><br><span class=\"line\">plt.plot(x_test, y_hat, <span class=\"string\">&#x27;g-&#x27;</span>, linewidth=<span class=\"number\">2</span>, label=<span class=\"string\">&#x27;预测值&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;X&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Y&#x27;</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树-随机森林回归&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较决策树的深度影响</span></span><br><span class=\"line\">depth = [<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">clr = <span class=\"string\">&#x27;rgbmy&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># model = DecisionTreeRegressor(criterion=&#x27;mse&#x27;)</span></span><br><span class=\"line\">model = RandomForestRegressor(n_estimators=<span class=\"number\">20</span>, criterion=<span class=\"string\">&#x27;mse&#x27;</span>)</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y, <span class=\"string\">&#x27;ro&#x27;</span>, ms=<span class=\"number\">5</span>, mec=<span class=\"string\">&#x27;k&#x27;</span>, label=<span class=\"string\">&#x27;实际值&#x27;</span>)</span><br><span class=\"line\">x_test = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">50</span>).reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> d, c <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(depth, clr):</span><br><span class=\"line\">    model.set_params(max_depth=d)</span><br><span class=\"line\">    model.fit(x, y)</span><br><span class=\"line\">    y_hat = model.predict(x_test)</span><br><span class=\"line\">    plt.plot(x_test,</span><br><span class=\"line\">             y_hat,</span><br><span class=\"line\">             <span class=\"string\">&#x27;-&#x27;</span>,</span><br><span class=\"line\">             color=c,</span><br><span class=\"line\">             linewidth=<span class=\"number\">2</span>,</span><br><span class=\"line\">             markeredgecolor=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">             label=<span class=\"string\">&#x27;Depth=%d&#x27;</span> % d)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper left&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;X&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Y&#x27;</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;#606060&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;决策树-随机森林回归&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>[[-2.95013857]\n [-2.91406777]\n [-2.90709403]\n [-2.90375999]\n [-2.87745415]\n [-2.86685497]\n [-2.84070033]\n [-2.81375697]\n [-2.77943784]\n [-2.77745775]\n [-2.66347611]\n [-2.65986762]\n [-2.64217075]\n [-2.63778267]\n [-2.63639243]\n [-2.60165162]\n [-2.48896096]\n [-2.43041085]\n [-2.39941506]\n [-2.38779079]\n [-2.37856289]\n [-2.32809632]\n [-2.29426051]\n [-2.25524085]\n [-2.23914776]\n [-2.16578847]\n [-2.0055294 ]\n [-1.9885004 ]\n [-1.73199798]\n [-1.61893958]\n [-1.58908223]\n [-1.54966302]\n [-1.49074428]\n [-1.46530843]\n [-1.40362808]\n [-1.3935955 ]\n [-1.3928819 ]\n [-1.37684247]\n [-1.3377295 ]\n [-1.33035029]\n [-1.24577529]\n [-1.15561278]\n [-1.12976361]\n [-0.92771942]\n [-0.91536325]\n [-0.83851709]\n [-0.54828961]\n [-0.54587447]\n [-0.54456521]\n [-0.51610774]\n [-0.38078143]\n [-0.27298529]\n [-0.20898971]\n [-0.20866835]\n [ 0.01703485]\n [ 0.03203468]\n [ 0.06107388]\n [ 0.07358949]\n [ 0.07361575]\n [ 0.10676155]\n [ 0.15818226]\n [ 0.20123638]\n [ 0.3410772 ]\n [ 0.45680655]\n [ 0.52384169]\n [ 0.65741898]\n [ 0.68306354]\n [ 0.82845395]\n [ 0.83952908]\n [ 0.99278446]\n [ 1.04865533]\n [ 1.16809926]\n [ 1.21294563]\n [ 1.44659934]\n [ 1.47606149]\n [ 1.48031876]\n [ 1.54476213]\n [ 1.54542061]\n [ 1.60452852]\n [ 1.85706958]\n [ 1.9814776 ]\n [ 2.07801869]\n [ 2.08420295]\n [ 2.08974078]\n [ 2.09458999]\n [ 2.21547939]\n [ 2.2354401 ]\n [ 2.2824592 ]\n [ 2.39313024]\n [ 2.4822308 ]\n [ 2.5275393 ]\n [ 2.56392915]\n [ 2.63696096]\n [ 2.65318554]\n [ 2.66286196]\n [ 2.67531127]\n [ 2.69337798]\n [ 2.78329004]\n [ 2.83409465]\n [ 2.94897411]]\n[-0.16517944 -0.2651016  -0.26383212 -0.2408083  -0.21137157 -0.30729908\n -0.24489794 -0.42738593 -0.39536257 -0.34762803 -0.55252409 -0.40629331\n -0.47658554 -0.47459876 -0.50897455 -0.58933727 -0.57144697 -0.61564276\n -0.76543047 -0.64009055 -0.79612233 -0.77625958 -0.82824783 -0.74228023\n -0.6882561  -0.85479709 -0.9210133  -0.88824326 -0.94228155 -1.04205908\n -1.01456756 -1.0150173  -1.01319155 -0.93942161 -1.0101109  -1.00949492\n -1.00669835 -1.02762794 -0.90526463 -1.04873446 -0.98356087 -0.96345712\n -0.90790305 -0.78617335 -0.8215092  -0.7756252  -0.62805774 -0.61416394\n -0.55438357 -0.54877048 -0.24409899 -0.24654351 -0.22139215 -0.31816396\n -0.00948097  0.03731195  0.07871564  0.06089414  0.091661    0.10130855\n  0.05916354  0.284293    0.32301758  0.47390064  0.43774825  0.59439442\n  0.62285701  0.78479681  0.7888438   0.91498224  0.91654605  0.84583033\n  0.90598404  0.99494553  1.05048367  0.97256267  1.04768316  1.09246729\n  0.92367061  0.97097779  0.98148804  0.86766162  0.87249721  0.81545132\n  0.80772307  0.75639662  0.73792794  0.75909448  0.71239606  0.63892773\n  0.6373865   0.53978973  0.47836416  0.47544309  0.4156747   0.46233128\n  0.43384357  0.32001956  0.2980857   0.16211947]\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2984870596.py:33: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2)\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_24_2.png\" alt=\"png\"></p>\n<pre><code>C:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_25000\\2984870596.py:60: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2)\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_24_4.png\" alt=\"png\"></p>\n<h3 id=\"分类问题\">分类问题</h3>\n<h4 id=\"逻辑回归\">逻辑回归</h4>\n<h5 id=\"二分类\">二分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.array([[<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>], [<span class=\"number\">6</span>, <span class=\"number\">4</span>],\\</span><br><span class=\"line\">              [<span class=\"number\">5</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">5</span>], [<span class=\"number\">4</span>, <span class=\"number\">7</span>], [<span class=\"number\">4</span>, -<span class=\"number\">1</span>]])</span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建逻辑分类器对象</span></span><br><span class=\"line\"><span class=\"comment\"># C参数：正则强度，越大拟合效果越小，通过调整该参数防止过拟合</span></span><br><span class=\"line\"><span class=\"comment\"># solver参数：逻辑函数中指数的函数关系（liblinear表示线性关系）</span></span><br><span class=\"line\">model = lm.LogisticRegression()</span><br><span class=\"line\">model.fit(x, y)  <span class=\"comment\"># 训练</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 预测</span></span><br><span class=\"line\">test_x = np.array([[<span class=\"number\">3</span>, <span class=\"number\">9</span>], [<span class=\"number\">6</span>, <span class=\"number\">1</span>]])</span><br><span class=\"line\">test_y = model.predict(test_x)  <span class=\"comment\"># 预测</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算显示坐标的边界</span></span><br><span class=\"line\"><span class=\"comment\"># x[:, 0].min()   x 中所有数组的第一位</span></span><br><span class=\"line\">left = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">right = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">buttom = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">top = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 产生网格化矩阵</span></span><br><span class=\"line\">grid_x, grid_y = np.meshgrid(np.arange(left, right, <span class=\"number\">0.01</span>),</span><br><span class=\"line\">                             np.arange(buttom, top, <span class=\"number\">0.01</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;grid_x.shape:&quot;</span>, grid_x.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;grid_y.shape:&quot;</span>, grid_y.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将x,y坐标合并成两列</span></span><br><span class=\"line\">mesh_x = np.column_stack((grid_x.ravel(), grid_y.ravel()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;mesh_x.shape:&quot;</span>, mesh_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据每个点的xy坐标进行预测，并还原成二维形状</span></span><br><span class=\"line\">mesh_z = model.predict(mesh_x)</span><br><span class=\"line\">mesh_z = mesh_z.reshape(grid_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Logistic Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Logistic Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.pcolormesh(grid_x, grid_y, mesh_z, cmap=<span class=\"string\">&#x27;gray&#x27;</span>, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">mp.scatter(</span><br><span class=\"line\">    x[:, <span class=\"number\">0</span>],  <span class=\"comment\"># 样本x坐标</span></span><br><span class=\"line\">    x[:, <span class=\"number\">1</span>],  <span class=\"comment\"># 样本y坐标</span></span><br><span class=\"line\">    c=y,</span><br><span class=\"line\">    cmap=<span class=\"string\">&#x27;brg&#x27;</span>,</span><br><span class=\"line\">    s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.scatter(test_x[:, <span class=\"number\">0</span>], test_x[:, <span class=\"number\">1</span>], c=<span class=\"string\">&quot;red&quot;</span>, marker=<span class=\"string\">&#x27;s&#x27;</span>, s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<pre><code>[1 0]\ngrid_x.shape: (1100, 700)\ngrid_y.shape: (1100, 700)\nmesh_x.shape: (770000, 2)\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_27_1.png\" alt=\"png\"></p>\n<h5 id=\"多分类\">多分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入</span></span><br><span class=\"line\">x = np.array([[<span class=\"number\">4</span>, <span class=\"number\">7</span>], [<span class=\"number\">3.5</span>, <span class=\"number\">8</span>], [<span class=\"number\">3.1</span>, <span class=\"number\">6.2</span>], [<span class=\"number\">0.5</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">1.2</span>, <span class=\"number\">1.9</span>],</span><br><span class=\"line\">              [<span class=\"number\">6</span>, <span class=\"number\">2</span>], [<span class=\"number\">5.7</span>, <span class=\"number\">1.5</span>], [<span class=\"number\">5.4</span>, <span class=\"number\">2.2</span>]])</span><br><span class=\"line\"><span class=\"comment\"># 输出（多个类别）</span></span><br><span class=\"line\">y = np.array([<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建逻辑分类器对象</span></span><br><span class=\"line\">model = lm.LogisticRegression(C=<span class=\"number\">200</span>)  <span class=\"comment\"># 调整该值为1看效果</span></span><br><span class=\"line\">model.fit(x, y)  <span class=\"comment\"># 训练</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 坐标轴范围</span></span><br><span class=\"line\">left = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">right = x[:, <span class=\"number\">0</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">h = <span class=\"number\">0.005</span></span><br><span class=\"line\"></span><br><span class=\"line\">buttom = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">min</span>() - <span class=\"number\">1</span></span><br><span class=\"line\">top = x[:, <span class=\"number\">1</span>].<span class=\"built_in\">max</span>() + <span class=\"number\">1</span></span><br><span class=\"line\">v = <span class=\"number\">0.005</span></span><br><span class=\"line\"></span><br><span class=\"line\">grid_x, grid_y = np.meshgrid(np.arange(left, right, h),</span><br><span class=\"line\">                             np.arange(buttom, top, v))</span><br><span class=\"line\"></span><br><span class=\"line\">mesh_x = np.column_stack((grid_x.ravel(), grid_y.ravel()))</span><br><span class=\"line\">mesh_z = model.predict(mesh_x)</span><br><span class=\"line\">mesh_z = mesh_z.reshape(grid_x.shape)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Logistic Classification&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Logistic Classification&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.pcolormesh(grid_x, grid_y, mesh_z, cmap=<span class=\"string\">&#x27;gray&#x27;</span>, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">mp.scatter(x[:, <span class=\"number\">0</span>], x[:, <span class=\"number\">1</span>], c=y, cmap=<span class=\"string\">&#x27;brg&#x27;</span>, s=<span class=\"number\">80</span>)</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_29_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score, mean_squared_error, mean_absolute_error</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures, LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.pipeline <span class=\"keyword\">import</span> make_pipeline</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\">pumpkins = pd.read_csv(<span class=\"string\">&#x27;./_data_set/US-pumpkins.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># pumpkins = pumpkins[pumpkins[&#x27;Package&#x27;].str.contains(&#x27;bushel&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#                                                      case=True,</span></span><br><span class=\"line\"><span class=\"comment\">#                                                      regex=True)]</span></span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = pumpkins.drop([</span><br><span class=\"line\">    c <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> pumpkins.columns <span class=\"keyword\">if</span> c <span class=\"keyword\">not</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    [<span class=\"string\">&#x27;Color&#x27;</span>, <span class=\"string\">&#x27;Origin&#x27;</span>, <span class=\"string\">&#x27;Item Size&#x27;</span>, <span class=\"string\">&#x27;Variety&#x27;</span>, <span class=\"string\">&#x27;City Name&#x27;</span>, <span class=\"string\">&#x27;Package&#x27;</span>]</span><br><span class=\"line\">],</span><br><span class=\"line\">                             axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins.dropna(inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">new_pumpkins = new_pumpkins.apply(LabelEncoder().fit_transform)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 颜色数据与其他列的关系</span></span><br><span class=\"line\">sns.PairGrid(new_pumpkins).<span class=\"built_in\">map</span>(sns.scatterplot)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分类散点图</span></span><br><span class=\"line\"><span class=\"comment\"># sns.swarmplot(x=&quot;Color&quot;, y=&quot;Item Size&quot;, data=new_pumpkins)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 小提琴图</span></span><br><span class=\"line\">sns.catplot(x=<span class=\"string\">&quot;Color&quot;</span>, y=<span class=\"string\">&quot;Item Size&quot;</span>, kind=<span class=\"string\">&quot;violin&quot;</span>, data=new_pumpkins)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x19b7ed39fd0&gt;\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_30_1.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_30_2.png\" alt=\"png\"></p>\n<h4 id=\"支持向量机-SVM\">支持向量机-SVM</h4>\n<h5 id=\"核函数\">核函数</h5>\n<ol>\n<li>\n<p>线性</p>\n</li>\n<li>\n<p>径向基-高斯</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">iris_feature = <span class=\"string\">&#x27;花萼长度&#x27;</span>, <span class=\"string\">&#x27;花萼宽度&#x27;</span>, <span class=\"string\">&#x27;花瓣长度&#x27;</span>, <span class=\"string\">&#x27;花瓣宽度&#x27;</span></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./_data_set/iris_classification/iris.data&#x27;</span>  <span class=\"comment\"># 数据文件路径</span></span><br><span class=\"line\">data = pd.read_csv(path, header=<span class=\"literal\">None</span>)</span><br><span class=\"line\">x, y = data[[<span class=\"number\">0</span>, <span class=\"number\">1</span>]], pd.Categorical(data[<span class=\"number\">4</span>]).codes</span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">1</span>,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分类器</span></span><br><span class=\"line\"><span class=\"comment\"># svm_clf = svm.SVC(C=10, gamma=1, kernel=&#x27;rbf&#x27;, decision_function_shape=&#x27;ovo&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># svm_clf = svm.SVC(C=3, kernel=&#x27;poly&#x27;, degree=3)</span></span><br><span class=\"line\">svm_clf = svm.SVC(C=<span class=\"number\">3</span>, kernel=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;GridSearchCV begin...&#x27;</span>)</span><br><span class=\"line\">t = time()</span><br><span class=\"line\">clf = svm_clf</span><br><span class=\"line\"><span class=\"comment\"># clf = GridSearchCV(svm_clf, param_grid=&#123;&#x27;gamma&#x27;:np.logspace(-2, 2, 10), &#x27;C&#x27;:np.logspace(-2, 2, 10)&#125;, cv=3)</span></span><br><span class=\"line\">clf.fit(x_train, y_train.ravel())</span><br><span class=\"line\">t_end = time()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;耗时：%d秒&#x27;</span> % (t_end - t))</span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;最优参数：&#x27;, clf.best_params_)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准确率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.score(x_train, y_train))  <span class=\"comment\"># 精度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;训练集准确率：&#x27;</span>, accuracy_score(y_train, clf.predict(x_train)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.score(x_test, y_test))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;测试集准确率：&#x27;</span>, accuracy_score(y_test, clf.predict(x_test)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># decision_function</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(x_train[:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;decision_function:\\n&#x27;</span>, clf.decision_function(x_train))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\npredict:\\n&#x27;</span>, clf.predict(x_train))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 画图</span></span><br><span class=\"line\">x1_min, x2_min = x.<span class=\"built_in\">min</span>()</span><br><span class=\"line\">x1_max, x2_max = x.<span class=\"built_in\">max</span>()</span><br><span class=\"line\">x1, x2 = np.mgrid[x1_min:x1_max:<span class=\"number\">300j</span>, x2_min:x2_max:<span class=\"number\">300j</span>]  <span class=\"comment\"># 生成网格采样点</span></span><br><span class=\"line\">grid_test = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)  <span class=\"comment\"># 测试点</span></span><br><span class=\"line\">grid_hat = clf.predict(grid_test)  <span class=\"comment\"># 预测分类值</span></span><br><span class=\"line\">grid_hat = grid_hat.reshape(x1.shape)  <span class=\"comment\"># 使之与输入的形状相同</span></span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap([<span class=\"string\">&#x27;#A0FFA0&#x27;</span>, <span class=\"string\">&#x27;#FFA0A0&#x27;</span>, <span class=\"string\">&#x27;#A0A0FF&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>])</span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, grid_hat, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">plt.scatter(x[<span class=\"number\">0</span>], x[<span class=\"number\">1</span>], c=y, edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, s=<span class=\"number\">50</span>, cmap=cm_dark)  <span class=\"comment\"># 样本</span></span><br><span class=\"line\">plt.scatter(x_test[<span class=\"number\">0</span>], x_test[<span class=\"number\">1</span>], s=<span class=\"number\">120</span>, facecolors=<span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">            zorder=<span class=\"number\">10</span>)  <span class=\"comment\"># 圈中测试集样本</span></span><br><span class=\"line\">plt.xlabel(iris_feature[<span class=\"number\">0</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.ylabel(iris_feature[<span class=\"number\">1</span>], fontsize=<span class=\"number\">13</span>)</span><br><span class=\"line\">plt.xlim(x1_min, x1_max)</span><br><span class=\"line\">plt.ylim(x2_min, x2_max)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;鸢尾花SVM二特征分类&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout(pad=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>GridSearchCV begin...\n耗时：0秒\n0.7888888888888889\n训练集准确率： 0.7888888888888889\n0.7833333333333333\n测试集准确率： 0.7833333333333333\n       0    1\n11   4.8  3.4\n113  5.7  2.5\n123  6.3  2.7\n12   4.8  3.0\n2    4.7  3.2\ndecision_function:\n [[ 2.27077043  0.77466667 -0.23050192]\n [-0.26084184  2.25751125  1.0560141 ]\n [-0.28293421  2.25843306  1.22796515]\n [ 2.24308998  0.92588576 -0.2355186 ]\n [ 2.26643883  0.80879936 -0.24170145]\n [-0.28069428  1.23581332  2.24817619]\n [ 2.28018898  0.76457517 -0.24714914]\n [-0.25832462  1.21350955  2.20811726]\n [-0.27289547  1.20094518  2.249947  ]\n [-0.28479994  1.2318958   2.26058535]\n [-0.23449614  2.22389578  1.08207816]\n [-0.27824598  1.19362022  2.2618816 ]\n [-0.24940836  1.20624284  2.19142888]\n [ 2.2732283  -0.2577432   0.82271427]\n [-0.2872948   2.27977562  1.1680301 ]\n [-0.28016055  1.24346593  2.23969255]\n [-0.28069428  1.23581332  2.24817619]\n [-0.17539161  2.25364746  0.77515212]\n [-0.25325305  1.14281388  2.23566431]\n [-0.2421088   2.25159667  0.90072452]\n [ 2.24374936 -0.23761503  0.93581753]\n [ 2.24150985  0.87804111 -0.2241573 ]\n [ 2.28041834 -0.27382086  0.86293615]\n [-0.27824598  1.19362022  2.2618816 ]\n [ 2.27361996  0.84008337 -0.26180365]\n [-0.26919985  2.24943754  1.18347413]\n [-0.28629221  2.26101768  1.23745359]\n [-0.23808639  1.19803786  2.16960812]\n [ 2.24670891 -0.21840299  0.83780678]\n [ 2.23817757  0.82105098 -0.19112107]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.24150985  0.87804111 -0.2241573 ]\n [-0.30409023  1.27536123  2.28319903]\n [-0.27073104  1.23503534  2.2197061 ]\n [-0.30441277  1.26883084  2.28803158]\n [-0.28752494  1.24411663  2.25991942]\n [-0.29292012  2.28000741  1.22212062]\n [-0.23176304  1.04104242  2.22722296]\n [-0.28694643  1.15125962  2.28088265]\n [-0.19956441  2.19653578  1.01742803]\n [ 2.26878977 -0.27918692  1.16597018]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.18519501  1.23494087 -0.26146238]\n [-0.2512831   2.2597216   0.89408741]\n [-0.29066599  1.240849    2.26933123]\n [ 2.25729439 -0.2129225   0.79411601]\n [-0.29441953  1.26382422  2.26345809]\n [ 2.26377705 -0.22976306  0.79617407]\n [ 2.27077043  0.77466667 -0.23050192]\n [-0.2445374   1.07681969  2.23683943]\n [-0.21840757  2.21786592  1.00447438]\n [-0.28524498  1.22203776  2.26581127]\n [ 2.24947915  0.81045802 -0.20787766]\n [ 2.2684482  -0.24915018  0.81973595]\n [-0.20907334  1.12013512  2.17603067]\n [ 2.26728139  0.82893904 -0.24984081]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.25207771  0.85867453 -0.23431088]\n [-0.28069428  1.23581332  2.24817619]\n [ 1.05055292  2.22662497 -0.23240122]\n [ 2.2722284   0.7997718  -0.24896247]\n [-0.26723747  1.19201787  2.24286157]\n [ 2.27827649  0.82682975 -0.26630655]\n [-0.17333043  2.16553945  1.02939988]\n [ 2.26890439  0.89311197 -0.26243597]\n [-0.2512831   2.2597216   0.89408741]\n [-0.23341849  2.27309387  0.7709214 ]\n [ 2.25617562 -0.22437834  0.81410784]\n [ 2.22986475  0.96247553 -0.22562355]\n [ 0.93771503  2.24006469 -0.23365567]\n [ 2.28631446 -0.25590025  0.75474384]\n [-0.23808639  1.19803786  2.16960812]\n [-0.2646401   1.23019768  2.20613126]\n [ 2.25729439 -0.2129225   0.79411601]\n [-0.28479994  1.2318958   2.26058535]\n [-0.22087216  2.20491832  1.08971052]\n [-0.29260626  2.28238001  1.20719635]\n [-0.29101034  1.23272406  2.27341138]\n [-0.2549617   2.24213564  1.1247623 ]\n [ 2.19974418 -0.17699012  0.91119813]\n [ 2.21209755  1.01040036 -0.21350121]\n [-0.27849238  2.26059076  1.19977637]\n [-0.26997469  2.24280567  1.20408124]\n [-0.29874557  1.25977449  2.27874043]\n [-0.25377271  2.24886239  1.06528288]\n [-0.27961589  2.2500049   1.22933155]\n [-0.27219081  1.21466357  2.24182934]\n [-0.2884762   2.2710352   1.22512174]\n [-0.28479994  1.2318958   2.26058535]\n [ 2.24150985  0.87804111 -0.2241573 ]]\n\npredict:\n [0 1 1 0 0 2 0 2 2 2 1 2 2 0 1 2 2 1 2 1 0 0 0 2 0 1 1 2 0 0 1 0 2 2 2 2 1\n 2 2 1 0 1 0 1 2 0 2 0 0 2 1 2 0 0 2 0 1 0 2 1 0 2 0 1 0 1 1 0 0 1 0 2 2 0\n 2 1 1 2 1 0 0 1 1 2 1 1 2 1 2 0]\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_32_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> stats</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">extend</span>(<span class=\"params\">a, b, r=<span class=\"number\">0.01</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * (<span class=\"number\">1</span> + r) - b * r, -a * r + b * (<span class=\"number\">1</span> + r)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">N = <span class=\"number\">200</span></span><br><span class=\"line\">x = np.empty((<span class=\"number\">4</span> * N, <span class=\"number\">2</span>))</span><br><span class=\"line\">means = [(-<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, -<span class=\"number\">1</span>), (-<span class=\"number\">1</span>, -<span class=\"number\">1</span>)]</span><br><span class=\"line\">sigmas = [</span><br><span class=\"line\">    np.eye(<span class=\"number\">2</span>), <span class=\"number\">2</span> * np.eye(<span class=\"number\">2</span>),</span><br><span class=\"line\">    np.diag((<span class=\"number\">1</span>, <span class=\"number\">2</span>)),</span><br><span class=\"line\">    np.array(((<span class=\"number\">3</span>, <span class=\"number\">2</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>)))</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    mn = stats.multivariate_normal(means[i], sigmas[i] * <span class=\"number\">0.07</span>)</span><br><span class=\"line\">    x[i * N:(i + <span class=\"number\">1</span>) * N, :] = mn.rvs(N)</span><br><span class=\"line\">a = np.array((<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)).reshape((-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">y = np.tile(a, N).flatten()</span><br><span class=\"line\">clf = svm.SVC(C=<span class=\"number\">1</span>, kernel=<span class=\"string\">&#x27;rbf&#x27;</span>, gamma=<span class=\"number\">1</span>, decision_function_shape=<span class=\"string\">&#x27;ovo&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># clf = svm.SVC(C=1, kernel=&#x27;linear&#x27;, decision_function_shape=&#x27;ovr&#x27;)</span></span><br><span class=\"line\">clf.fit(x, y)</span><br><span class=\"line\">y_hat = clf.predict(x)</span><br><span class=\"line\">acc = accuracy_score(y, y_hat)</span><br><span class=\"line\">np.set_printoptions(suppress=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;预测正确的样本个数：%d，正确率：%.2f%%&#x27;</span> % (<span class=\"built_in\">round</span>(acc * <span class=\"number\">4</span> * N), <span class=\"number\">100</span> * acc))</span><br><span class=\"line\"><span class=\"comment\"># decision_function</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.decision_function(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_hat)</span><br><span class=\"line\"></span><br><span class=\"line\">x1_min, x2_min = np.<span class=\"built_in\">min</span>(x, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">x1_max, x2_max = np.<span class=\"built_in\">max</span>(x, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">x1_min, x1_max = extend(x1_min, x1_max)</span><br><span class=\"line\">x2_min, x2_max = extend(x2_min, x2_max)</span><br><span class=\"line\">x1, x2 = np.mgrid[x1_min:x1_max:<span class=\"number\">500j</span>, x2_min:x2_max:<span class=\"number\">500j</span>]</span><br><span class=\"line\">x_test = np.stack((x1.flat, x2.flat), axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y_test = clf.predict(x_test)</span><br><span class=\"line\">y_test = y_test.reshape(x1.shape)</span><br><span class=\"line\">cm_light = mpl.colors.ListedColormap(</span><br><span class=\"line\">    [<span class=\"string\">&#x27;#FF8080&#x27;</span>, <span class=\"string\">&#x27;#80FF80&#x27;</span>, <span class=\"string\">&#x27;#8080FF&#x27;</span>, <span class=\"string\">&#x27;#F0F080&#x27;</span>])</span><br><span class=\"line\">cm_dark = mpl.colors.ListedColormap([<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;y&#x27;</span>])</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">plt.figure(facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">plt.pcolormesh(x1, x2, y_test, cmap=cm_light, shading=<span class=\"string\">&#x27;auto&#x27;</span>)</span><br><span class=\"line\">plt.contour(x1, x2, y_test, levels=(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>), colors=<span class=\"string\">&#x27;k&#x27;</span>, linestyles=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">plt.scatter(x[:, <span class=\"number\">0</span>],</span><br><span class=\"line\">            x[:, <span class=\"number\">1</span>],</span><br><span class=\"line\">            s=<span class=\"number\">20</span>,</span><br><span class=\"line\">            c=y,</span><br><span class=\"line\">            cmap=cm_dark,</span><br><span class=\"line\">            edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">            alpha=<span class=\"number\">0.7</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;$X_1$&#x27;</span>, fontsize=<span class=\"number\">11</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;$X_2$&#x27;</span>, fontsize=<span class=\"number\">11</span>)</span><br><span class=\"line\">plt.xlim((x1_min, x1_max))</span><br><span class=\"line\">plt.ylim((x2_min, x2_max))</span><br><span class=\"line\">plt.grid(b=<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.tight_layout(pad=<span class=\"number\">2.5</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;SVM多分类方法：One/One or One/Other&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>预测正确的样本个数：793，正确率：99.12%\n[[ 1.30403817  1.18371967  1.61069453  0.53379555  0.10282667 -0.6639782 ]\n [ 1.20484592  1.00041165  1.13023042  0.32840742  0.16888308 -0.33559223]\n [ 1.28448754  1.15305262  1.24310512  0.59725054 -0.31474389 -0.97622623]\n ...\n [-0.23584035 -0.08224918 -1.09483656  0.1554822  -1.12200744 -1.12840424]\n [ 0.2447751   0.34444513 -1.55255237  0.17064062 -1.24348982 -1.41973039]\n [-0.03070327 -0.15566364 -1.9254549  -0.09600454 -1.23897289 -1.44257329]]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_33_1.png\" alt=\"png\"></p>\n<h4 id=\"朴素贝叶斯\">朴素贝叶斯</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NBClassify</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, fillNa=<span class=\"number\">1</span></span>):</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.fillNa = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">train</span>(<span class=\"params\">self, trainSet</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 计算每种类别的概率</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存所有tag的所有种类，及它们出现的频次</span></span><br><span class=\"line\">        dictTag = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            dictTag[<span class=\"built_in\">str</span>(</span><br><span class=\"line\">                subTuple[<span class=\"number\">1</span>])] = <span class=\"number\">1</span> <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(subTuple[<span class=\"number\">1</span>]) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictTag.keys(</span><br><span class=\"line\">                ) <span class=\"keyword\">else</span> dictTag[<span class=\"built_in\">str</span>(subTuple[<span class=\"number\">1</span>])] + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存每个tag本身的概率</span></span><br><span class=\"line\">        tagProbablity = &#123;&#125;</span><br><span class=\"line\">        totalFreq = <span class=\"built_in\">sum</span>([value <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> dictTag.values()])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> dictTag.items():</span><br><span class=\"line\">            tagProbablity[key] = value / totalFreq</span><br><span class=\"line\">        <span class=\"comment\"># print(tagProbablity)</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.tagProbablity = tagProbablity</span><br><span class=\"line\">        <span class=\"comment\">##############################################################################</span></span><br><span class=\"line\">        <span class=\"comment\"># 计算特征的条件概率</span></span><br><span class=\"line\">        <span class=\"comment\"># 保存特征属性基本信息&#123;特征1:&#123;值1:出现5次, 值2:出现1次&#125;, 特征2:&#123;值1:出现1次, 值2:出现5次&#125;&#125;</span></span><br><span class=\"line\">        dictFeaturesBase = &#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> subTuple[<span class=\"number\">0</span>].items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> key <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictFeaturesBase.keys():</span><br><span class=\"line\">                    dictFeaturesBase[key] = &#123;value: <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> value <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> dictFeaturesBase[key].keys():</span><br><span class=\"line\">                        dictFeaturesBase[key][value] = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        dictFeaturesBase[key][value] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># dictFeaturesBase = &#123;</span></span><br><span class=\"line\">        <span class=\"comment\"># &#x27;职业&#x27;: &#123;&#x27;农夫&#x27;: 1, &#x27;教师&#x27;: 2, &#x27;建筑工人&#x27;: 2, &#x27;护士&#x27;: 1&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\"># &#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: 3, &#x27;头痛&#x27;: 3&#125;</span></span><br><span class=\"line\">        <span class=\"comment\"># &#125;</span></span><br><span class=\"line\">        dictFeatures = &#123;&#125;.fromkeys([key <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictTag])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictFeatures.keys():</span><br><span class=\"line\">            dictFeatures[key] = &#123;&#125;.fromkeys([key <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> dictFeaturesBase])</span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> subkey <span class=\"keyword\">in</span> value.keys():</span><br><span class=\"line\">                value[subkey] = &#123;&#125;.fromkeys(</span><br><span class=\"line\">                    [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dictFeaturesBase[subkey].keys()])</span><br><span class=\"line\">        <span class=\"comment\"># dictFeatures = &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;感冒 &#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;脑震荡&#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;,</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#x27;过敏 &#x27;: &#123;&#x27;症状&#x27;: &#123;&#x27;打喷嚏&#x27;: None, &#x27;头痛&#x27;: None&#125;, &#x27;职业&#x27;: &#123;&#x27;护士&#x27;: None, &#x27;农夫&#x27;: None, &#x27;建筑工人&#x27;: None, &#x27;教师&#x27;: None&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">#  &#125;</span></span><br><span class=\"line\">        <span class=\"comment\"># initialise dictFeatures</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> subTuple <span class=\"keyword\">in</span> trainSet:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> subTuple[<span class=\"number\">0</span>].items():</span><br><span class=\"line\">                dictFeatures[subTuple[<span class=\"number\">1</span>]][key][value] = <span class=\"number\">1</span> <span class=\"keyword\">if</span> dictFeatures[</span><br><span class=\"line\">                    subTuple[<span class=\"number\">1</span>]][key][value] == <span class=\"literal\">None</span> <span class=\"keyword\">else</span> dictFeatures[</span><br><span class=\"line\">                        subTuple[<span class=\"number\">1</span>]][key][value] + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># print(dictFeatures)</span></span><br><span class=\"line\">        <span class=\"comment\"># 将驯良样本中没有的项目，由None改为一个非常小的数值，表示其概率极小而并非是零</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> tag, featuresDict <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> featureName, fetureValueDict <span class=\"keyword\">in</span> featuresDict.items():</span><br><span class=\"line\">                <span class=\"keyword\">for</span> featureKey, featureValues <span class=\"keyword\">in</span> fetureValueDict.items():</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> featureValues == <span class=\"literal\">None</span>:</span><br><span class=\"line\">                        fetureValueDict[featureKey] = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 由特征频率计算特征的条件概率P(feature|tag)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> tag, featuresDict <span class=\"keyword\">in</span> dictFeatures.items():</span><br><span class=\"line\">            <span class=\"keyword\">for</span> featureName, fetureValueDict <span class=\"keyword\">in</span> featuresDict.items():</span><br><span class=\"line\">                totalCount = <span class=\"built_in\">sum</span>(</span><br><span class=\"line\">                    [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> fetureValueDict.values() <span class=\"keyword\">if</span> x != <span class=\"literal\">None</span>])</span><br><span class=\"line\">                <span class=\"keyword\">for</span> featureKey, featureValues <span class=\"keyword\">in</span> fetureValueDict.items():</span><br><span class=\"line\">                    fetureValueDict[</span><br><span class=\"line\">                        featureKey] = featureValues / totalCount <span class=\"keyword\">if</span> featureValues != <span class=\"literal\">None</span> <span class=\"keyword\">else</span> <span class=\"literal\">None</span></span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.featuresProbablity = dictFeatures</span><br><span class=\"line\">        <span class=\"comment\">##############################################################################</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">classify</span>(<span class=\"params\">self, featureDict</span>):</span><br><span class=\"line\">        resultDict = &#123;&#125;</span><br><span class=\"line\">        <span class=\"comment\"># 计算每个tag的条件概率</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.tagProbablity.items():</span><br><span class=\"line\">            iNumList = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> f, v <span class=\"keyword\">in</span> featureDict.items():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"variable language_\">self</span>.featuresProbablity[key][f][v]:</span><br><span class=\"line\">                    iNumList.append(<span class=\"variable language_\">self</span>.featuresProbablity[key][f][v])</span><br><span class=\"line\">            conditionPr = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> iNum <span class=\"keyword\">in</span> iNumList:</span><br><span class=\"line\">                conditionPr *= iNum</span><br><span class=\"line\">            resultDict[key] = value * conditionPr</span><br><span class=\"line\">        <span class=\"comment\"># 对比每个tag的条件概率的大小</span></span><br><span class=\"line\">        resultList = <span class=\"built_in\">sorted</span>(resultDict.items(),</span><br><span class=\"line\">                            key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">1</span>],</span><br><span class=\"line\">                            reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resultList[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    trainSet = [</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;护士&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;农夫&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;过敏 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;脑震荡&quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;教师&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;感冒 &quot;</span>),</span><br><span class=\"line\">        (&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;头痛&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;教师&quot;</span></span><br><span class=\"line\">        &#125;, <span class=\"string\">&quot;脑震荡&quot;</span>),</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    monitor = NBClassify()</span><br><span class=\"line\">    <span class=\"comment\"># trainSet is something like that [(featureDict, tag), ]</span></span><br><span class=\"line\">    monitor.train(trainSet)</span><br><span class=\"line\">    <span class=\"comment\"># 打喷嚏的建筑工人</span></span><br><span class=\"line\">    <span class=\"comment\"># 请问他患上感冒的概率有多大？</span></span><br><span class=\"line\">    result = monitor.classify(&#123;<span class=\"string\">&quot;症状&quot;</span>: <span class=\"string\">&quot;打喷嚏&quot;</span>, <span class=\"string\">&quot;职业&quot;</span>: <span class=\"string\">&quot;建筑工人&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>感冒\n</code></pre>\n<h4 id=\"多元问题-菜肴分类\">多元问题-菜肴分类</h4>\n<h5 id=\"数据加载与清洗\">数据加载与清洗</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> imblearn.over_sampling <span class=\"keyword\">import</span> SMOTE</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;./_data_set/cuisines_classification/cuisines.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df.head()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># df.info()</span></span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cuisine</th>\n      <th>almond</th>\n      <th>angelica</th>\n      <th>anise</th>\n      <th>anise_seed</th>\n      <th>apple</th>\n      <th>apple_brandy</th>\n      <th>apricot</th>\n      <th>armagnac</th>\n      <th>...</th>\n      <th>whiskey</th>\n      <th>white_bread</th>\n      <th>white_wine</th>\n      <th>whole_grain_wheat_flour</th>\n      <th>wine</th>\n      <th>wood</th>\n      <th>yam</th>\n      <th>yeast</th>\n      <th>yogurt</th>\n      <th>zucchini</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>65</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>66</td>\n      <td>indian</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>67</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>68</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>69</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 385 columns</p>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 菜肴成分分析</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_ingredient_df</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    ingredient_df = df.T.drop([<span class=\"string\">&#x27;cuisine&#x27;</span>,</span><br><span class=\"line\">                               <span class=\"string\">&#x27;Unnamed: 0&#x27;</span>]).<span class=\"built_in\">sum</span>(axis=<span class=\"number\">1</span>).to_frame(<span class=\"string\">&#x27;value&#x27;</span>)</span><br><span class=\"line\">    ingredient_df = ingredient_df[(ingredient_df.T != <span class=\"number\">0</span>).<span class=\"built_in\">any</span>()]</span><br><span class=\"line\">    ingredient_df = ingredient_df.sort_values(by=<span class=\"string\">&#x27;value&#x27;</span>,</span><br><span class=\"line\">                                              ascending=<span class=\"literal\">False</span>,</span><br><span class=\"line\">                                              inplace=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ingredient_df</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分析原料使用率前十</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&quot;thai&quot;</span>, <span class=\"string\">&quot;japanese&quot;</span>, <span class=\"string\">&quot;chinese&quot;</span>, <span class=\"string\">&quot;indian&quot;</span>, <span class=\"string\">&quot;korean&quot;</span>]:</span><br><span class=\"line\">    ingredient_df = create_ingredient_df(df[(df.cuisine == i)])</span><br><span class=\"line\">    ingredient_df.head(<span class=\"number\">10</span>).plot.barh().set_title(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删掉并不重要的特征</span></span><br><span class=\"line\">feature_df = df.drop([<span class=\"string\">&#x27;cuisine&#x27;</span>, <span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;rice&#x27;</span>, <span class=\"string\">&#x27;garlic&#x27;</span>, <span class=\"string\">&#x27;ginger&#x27;</span>],</span><br><span class=\"line\">                     axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">labels_df = df.cuisine</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_38_0.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_38_1.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_38_2.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_38_3.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_38_4.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 菜肴样本不均,平衡数据集</span></span><br><span class=\"line\">transformed_feature_df, transformed_label_df = SMOTE().fit_resample(</span><br><span class=\"line\">    feature_df, labels_df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 烂方法展示</span></span><br><span class=\"line\"><span class=\"comment\"># for i in [&quot;thai&quot;, &quot;japanese&quot;, &quot;chinese&quot;, &quot;indian&quot;, &quot;korean&quot;]:</span></span><br><span class=\"line\"><span class=\"comment\">#     print(i, df.loc[df[&#x27;cuisine&#x27;] == i].shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nicer one</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(</span><br><span class=\"line\">    <span class=\"string\">f&#x27;===================== old label count: ===================== \\n<span class=\"subst\">&#123;labels_df.value_counts()&#125;</span>\\</span></span><br><span class=\"line\"><span class=\"string\">    \\n===================== new label count: ===================== \\n<span class=\"subst\">&#123;transformed_label_df.value_counts()&#125;</span>&#x27;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">transformed_df = pd.concat([transformed_label_df, transformed_feature_df],</span><br><span class=\"line\">                           axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">                           join=<span class=\"string\">&#x27;outer&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># transformed_df.head()</span></span><br><span class=\"line\">transformed_df.info()</span><br><span class=\"line\">transformed_df.to_csv(<span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>===================== old label count: =====================\nkorean      799\nindian      598\nchinese     442\njapanese    320\nthai        289\nName: cuisine, dtype: int64\n===================== new label count: =====================\nindian      799\nthai        799\nchinese     799\njapanese    799\nkorean      799\nName: cuisine, dtype: int64\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 3995 entries, 0 to 3994\nColumns: 381 entries, cuisine to zucchini\ndtypes: int64(380), object(1)\nmemory usage: 11.6+ MB\n</code></pre>\n<h5 id=\"分类-1\">分类-1</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report, precision_recall_curve</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df = pd.read_csv(</span><br><span class=\"line\">    <span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>cuisine</th>\n      <th>almond</th>\n      <th>angelica</th>\n      <th>anise</th>\n      <th>anise_seed</th>\n      <th>apple</th>\n      <th>apple_brandy</th>\n      <th>apricot</th>\n      <th>armagnac</th>\n      <th>...</th>\n      <th>whiskey</th>\n      <th>white_bread</th>\n      <th>white_wine</th>\n      <th>whole_grain_wheat_flour</th>\n      <th>wine</th>\n      <th>wood</th>\n      <th>yam</th>\n      <th>yeast</th>\n      <th>yogurt</th>\n      <th>zucchini</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>indian</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>indian</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 382 columns</p>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cuisines_label_df = cuisines_df[<span class=\"string\">&#x27;cuisine&#x27;</span>]</span><br><span class=\"line\">cuisines_feature_df = cuisines_df.drop([<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;cuisine&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df,</span><br><span class=\"line\">                                                    cuisines_label_df,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">1137      korean</span></span><br><span class=\"line\"><span class=\"string\">428         thai</span></span><br><span class=\"line\"><span class=\"string\">191       indian</span></span><br><span class=\"line\"><span class=\"string\">1336      korean</span></span><br><span class=\"line\"><span class=\"string\">3947        thai</span></span><br><span class=\"line\"><span class=\"string\">          ...</span></span><br><span class=\"line\"><span class=\"string\">3335    japanese</span></span><br><span class=\"line\"><span class=\"string\">3539        thai</span></span><br><span class=\"line\"><span class=\"string\">436         thai</span></span><br><span class=\"line\"><span class=\"string\">1875      indian</span></span><br><span class=\"line\"><span class=\"string\">3079    japanese</span></span><br><span class=\"line\"><span class=\"string\">Name: cuisine, Length: 2796, dtype: object</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;korean&#x27; &#x27;thai&#x27; &#x27;indian&#x27; ... &#x27;thai&#x27; &#x27;indian&#x27; &#x27;japanese&#x27;]</span></span><br><span class=\"line\"><span class=\"string\"> &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># print(y_train)</span></span><br><span class=\"line\"><span class=\"comment\"># print(np.ravel(y_train))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lbfgs = LogisticRegression(solver=&#x27;lbfgs&#x27;)</span></span><br><span class=\"line\">model = LogisticRegression(multi_class=<span class=\"string\">&#x27;ovr&#x27;</span>,</span><br><span class=\"line\">                           solver=<span class=\"string\">&#x27;liblinear&#x27;</span>).fit(X_train, np.ravel(y_train))</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy = model.score(X_test, y_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(&quot;Accuracy is &#123;&#125;&quot;.format(accuracy))</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Accuracy is <span class=\"subst\">&#123;accuracy&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>Accuracy is 0.7906588824020017\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># [选择性 test] 针对某一行测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">line_num = <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;ingredients: <span class=\"subst\">&#123;X_test.iloc[line_num][X_test.iloc[line_num]!=<span class=\"number\">0</span>].keys()&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;cuisine: <span class=\"subst\">&#123;y_test.iloc[line_num]&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">test = X_test.iloc[line_num].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>).T</span><br><span class=\"line\">proba = model.predict_proba(test)</span><br><span class=\"line\">classes = model.classes_</span><br><span class=\"line\">resultdf = pd.DataFrame(data=proba, columns=classes)</span><br><span class=\"line\"></span><br><span class=\"line\">topPrediction = resultdf.T.sort_values(by=[<span class=\"number\">0</span>], ascending=[<span class=\"literal\">False</span>])</span><br><span class=\"line\">topPrediction.head()</span><br></pre></td></tr></table></figure>\n<pre><code>ingredients: Index(['butter', 'cayenne', 'cheese', 'cinnamon', 'coriander', 'onion',\n       'tomato', 'turmeric'],\n      dtype='object')\ncuisine: indian\n\n\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n  warnings.warn(\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>indian</th>\n      <td>0.962110</td>\n    </tr>\n    <tr>\n      <th>thai</th>\n      <td>0.021403</td>\n    </tr>\n    <tr>\n      <th>korean</th>\n      <td>0.011124</td>\n    </tr>\n    <tr>\n      <th>japanese</th>\n      <td>0.003710</td>\n    </tr>\n    <tr>\n      <th>chinese</th>\n      <td>0.001653</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n     chinese       0.76      0.68      0.72       242\n      indian       0.91      0.93      0.92       239\n    japanese       0.72      0.76      0.74       222\n      korean       0.84      0.80      0.82       264\n        thai       0.77      0.84      0.80       232\n\n    accuracy                           0.80      1199\n   macro avg       0.80      0.80      0.80      1199\nweighted avg       0.80      0.80      0.80      1199\n</code></pre>\n<h5 id=\"分类-2\">分类-2</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, AdaBoostClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split, cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report, precision_recall_curve</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_df = pd.read_csv(</span><br><span class=\"line\">    <span class=\"string\">&quot;./_data_set/cuisines_classification/cleaned_cuisines.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">cuisines_label_df = cuisines_df[<span class=\"string\">&#x27;cuisine&#x27;</span>]</span><br><span class=\"line\">cuisines_feature_df = cuisines_df.drop([<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;cuisine&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df,</span><br><span class=\"line\">                                                    cuisines_label_df,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 正则化系数</span></span><br><span class=\"line\">C = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建不同的分类器</span></span><br><span class=\"line\">classifiers = &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 线性 SVC 分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;Linear SVC&#x27;</span>: SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, C=C, probability=<span class=\"literal\">True</span>, random_state=<span class=\"number\">0</span>),</span><br><span class=\"line\">    <span class=\"comment\"># K-近邻分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;KNN classifier&#x27;</span>: KNeighborsClassifier(C),</span><br><span class=\"line\">    <span class=\"comment\"># Support Vector 分类器</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;SVC&#x27;</span>: SVC(),</span><br><span class=\"line\">    <span class=\"comment\"># 集成分类器, 随机森林 与 ADA</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;RFST&#x27;</span>: RandomForestClassifier(n_estimators=<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"string\">&#x27;ADA&#x27;</span>: AdaBoostClassifier(n_estimators=<span class=\"number\">100</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index, (name, classifier) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(classifiers.items()):</span><br><span class=\"line\">    classifier.fit(X_train, np.ravel(y_train))</span><br><span class=\"line\"></span><br><span class=\"line\">    y_pred = classifier.predict(X_test)</span><br><span class=\"line\">    accuracy = accuracy_score(y_test, y_pred)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Accuracy (train) for %s: %0.1f%%&quot;</span> % (name, accuracy * <span class=\"number\">100</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Accuracy (train) for Linear SVC: 80.2%\n              precision    recall  f1-score   support\n\n     chinese       0.73      0.76      0.74       250\n      indian       0.86      0.89      0.88       235\n    japanese       0.78      0.78      0.78       245\n      korean       0.88      0.74      0.80       227\n        thai       0.78      0.84      0.81       242\n\n    accuracy                           0.80      1199\n   macro avg       0.81      0.80      0.80      1199\nweighted avg       0.81      0.80      0.80      1199\n\nAccuracy (train) for KNN classifier: 73.6%\n              precision    recall  f1-score   support\n\n     chinese       0.71      0.73      0.72       250\n      indian       0.80      0.86      0.83       235\n    japanese       0.67      0.80      0.73       245\n      korean       0.91      0.51      0.65       227\n        thai       0.69      0.77      0.73       242\n\n    accuracy                           0.74      1199\n   macro avg       0.76      0.73      0.73      1199\nweighted avg       0.75      0.74      0.73      1199\n\nAccuracy (train) for SVC: 82.8%\n              precision    recall  f1-score   support\n\n     chinese       0.77      0.81      0.79       250\n      indian       0.88      0.93      0.90       235\n    japanese       0.82      0.76      0.79       245\n      korean       0.90      0.77      0.83       227\n        thai       0.79      0.88      0.83       242\n\n    accuracy                           0.83      1199\n   macro avg       0.83      0.83      0.83      1199\nweighted avg       0.83      0.83      0.83      1199\n\nAccuracy (train) for RFST: 84.5%\n              precision    recall  f1-score   support\n\n     chinese       0.82      0.81      0.82       250\n      indian       0.85      0.93      0.89       235\n    japanese       0.86      0.81      0.83       245\n      korean       0.90      0.83      0.86       227\n        thai       0.81      0.85      0.83       242\n\n    accuracy                           0.84      1199\n   macro avg       0.85      0.85      0.85      1199\nweighted avg       0.85      0.84      0.84      1199\n\nAccuracy (train) for ADA: 69.3%\n              precision    recall  f1-score   support\n\n     chinese       0.64      0.42      0.51       250\n      indian       0.81      0.85      0.83       235\n    japanese       0.65      0.61      0.63       245\n      korean       0.62      0.82      0.71       227\n        thai       0.73      0.79      0.76       242\n\n    accuracy                           0.69      1199\n   macro avg       0.69      0.70      0.69      1199\nweighted avg       0.69      0.69      0.68      1199\n</code></pre>\n<h3 id=\"聚类问题\">聚类问题</h3>\n<h4 id=\"聚类入门-数据分布\">聚类入门-数据分布</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;./_data_set/Clustering/nigerian-songs.csv&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># df.head()</span></span><br><span class=\"line\">df.info()</span><br><span class=\"line\"><span class=\"comment\"># object 类型除外</span></span><br><span class=\"line\">df.describe()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 530 entries, 0 to 529\nData columns (total 16 columns):\n #   Column            Non-Null Count  Dtype\n---  ------            --------------  -----\n 0   name              530 non-null    object\n 1   album             530 non-null    object\n 2   artist            530 non-null    object\n 3   artist_top_genre  530 non-null    object\n 4   release_date      530 non-null    int64\n 5   length            530 non-null    int64\n 6   popularity        530 non-null    int64\n 7   danceability      530 non-null    float64\n 8   acousticness      530 non-null    float64\n 9   energy            530 non-null    float64\n 10  instrumentalness  530 non-null    float64\n 11  liveness          530 non-null    float64\n 12  loudness          530 non-null    float64\n 13  speechiness       530 non-null    float64\n 14  tempo             530 non-null    float64\n 15  time_signature    530 non-null    int64\ndtypes: float64(8), int64(4), object(4)\nmemory usage: 66.4+ KB\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>release_date</th>\n      <th>length</th>\n      <th>popularity</th>\n      <th>danceability</th>\n      <th>acousticness</th>\n      <th>energy</th>\n      <th>instrumentalness</th>\n      <th>liveness</th>\n      <th>loudness</th>\n      <th>speechiness</th>\n      <th>tempo</th>\n      <th>time_signature</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n      <td>530.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2015.390566</td>\n      <td>222298.169811</td>\n      <td>17.507547</td>\n      <td>0.741619</td>\n      <td>0.265412</td>\n      <td>0.760623</td>\n      <td>0.016305</td>\n      <td>0.147308</td>\n      <td>-4.953011</td>\n      <td>0.130748</td>\n      <td>116.487864</td>\n      <td>3.986792</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.131688</td>\n      <td>39696.822259</td>\n      <td>18.992212</td>\n      <td>0.117522</td>\n      <td>0.208342</td>\n      <td>0.148533</td>\n      <td>0.090321</td>\n      <td>0.123588</td>\n      <td>2.464186</td>\n      <td>0.092939</td>\n      <td>23.518601</td>\n      <td>0.333701</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1998.000000</td>\n      <td>89488.000000</td>\n      <td>0.000000</td>\n      <td>0.255000</td>\n      <td>0.000665</td>\n      <td>0.111000</td>\n      <td>0.000000</td>\n      <td>0.028300</td>\n      <td>-19.362000</td>\n      <td>0.027800</td>\n      <td>61.695000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2014.000000</td>\n      <td>199305.000000</td>\n      <td>0.000000</td>\n      <td>0.681000</td>\n      <td>0.089525</td>\n      <td>0.669000</td>\n      <td>0.000000</td>\n      <td>0.075650</td>\n      <td>-6.298750</td>\n      <td>0.059100</td>\n      <td>102.961250</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2016.000000</td>\n      <td>218509.000000</td>\n      <td>13.000000</td>\n      <td>0.761000</td>\n      <td>0.220500</td>\n      <td>0.784500</td>\n      <td>0.000004</td>\n      <td>0.103500</td>\n      <td>-4.558500</td>\n      <td>0.097950</td>\n      <td>112.714500</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2017.000000</td>\n      <td>242098.500000</td>\n      <td>31.000000</td>\n      <td>0.829500</td>\n      <td>0.403000</td>\n      <td>0.875750</td>\n      <td>0.000234</td>\n      <td>0.164000</td>\n      <td>-3.331000</td>\n      <td>0.177000</td>\n      <td>125.039250</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2020.000000</td>\n      <td>511738.000000</td>\n      <td>73.000000</td>\n      <td>0.966000</td>\n      <td>0.954000</td>\n      <td>0.995000</td>\n      <td>0.910000</td>\n      <td>0.811000</td>\n      <td>0.582000</td>\n      <td>0.514000</td>\n      <td>206.007000</td>\n      <td>5.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>(<span class=\"params\">df</span>):</span><br><span class=\"line\">    top = df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>].value_counts()</span><br><span class=\"line\">    plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">    sns.barplot(x=top[:<span class=\"number\">5</span>].index, y=top[:<span class=\"number\">5</span>].values)</span><br><span class=\"line\">    plt.xticks(rotation=<span class=\"number\">45</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Top genres&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">draw(df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 过滤掉 Missing</span></span><br><span class=\"line\">new_df = df[df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] != <span class=\"string\">&#x27;Missing&#x27;</span>]</span><br><span class=\"line\">draw(new_df)</span><br><span class=\"line\"></span><br><span class=\"line\">featured_df = new_df[((new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afro dancehall&#x27;</span>)</span><br><span class=\"line\">                      | (new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afropop&#x27;</span>)</span><br><span class=\"line\">                      | (new_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;nigerian pop&#x27;</span>))</span><br><span class=\"line\">                     &amp; (new_df[<span class=\"string\">&#x27;popularity&#x27;</span>] &gt; <span class=\"number\">0</span>)]</span><br><span class=\"line\">draw(featured_df)</span><br><span class=\"line\"></span><br><span class=\"line\">corrmat = featured_df.corr()</span><br><span class=\"line\">f, ax = plt.subplots(figsize=(<span class=\"number\">12</span>, <span class=\"number\">9</span>))</span><br><span class=\"line\">sns.heatmap(corrmat, vmax=<span class=\"number\">.8</span>, square=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;AxesSubplot:&gt;\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_50_1.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_50_2.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_50_3.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_50_4.png\" alt=\"png\"></p>\n<h4 id=\"K-Means-与衡量指标\">K-Means-与衡量指标</h4>\n<h5 id=\"入门-音乐分类\">入门-音乐分类</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这种格式可以运行</span></span><br><span class=\"line\">!pip install seaborn</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;./_data_set/Clustering/nigerian-songs.csv&quot;</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<pre><code>Looking in indexes: http://mirrors.aliyun.com/pypi/simple/\nRequirement already satisfied: seaborn in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (0.11.2)\nRequirement already satisfied: scipy&gt;=1.0 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.7.1)\nRequirement already satisfied: numpy&gt;=1.15 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.20.3)\nRequirement already satisfied: pandas&gt;=0.23 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (1.4.2)\nRequirement already satisfied: matplotlib&gt;=2.2 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from seaborn) (3.4.3)\nRequirement already satisfied: python-dateutil&gt;=2.7 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (2.8.2)\nRequirement already satisfied: cycler&gt;=0.10 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (0.11.0)\nRequirement already satisfied: pyparsing&gt;=2.2.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (3.0.4)\nRequirement already satisfied: kiwisolver&gt;=1.0.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (1.3.2)\nRequirement already satisfied: pillow&gt;=6.2.0 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from matplotlib&gt;=2.2-&gt;seaborn) (9.0.1)\nRequirement already satisfied: pytz&gt;=2020.1 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from pandas&gt;=0.23-&gt;seaborn) (2021.3)\nRequirement already satisfied: six&gt;=1.5 in d:\\scoop\\apps\\anaconda3\\2021.11\\lib\\site-packages (from python-dateutil&gt;=2.7-&gt;matplotlib&gt;=2.2-&gt;seaborn) (1.16.0)\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>album</th>\n      <th>artist</th>\n      <th>artist_top_genre</th>\n      <th>release_date</th>\n      <th>length</th>\n      <th>popularity</th>\n      <th>danceability</th>\n      <th>acousticness</th>\n      <th>energy</th>\n      <th>instrumentalness</th>\n      <th>liveness</th>\n      <th>loudness</th>\n      <th>speechiness</th>\n      <th>tempo</th>\n      <th>time_signature</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Sparky</td>\n      <td>Mandy &amp; The Jungle</td>\n      <td>Cruel Santino</td>\n      <td>alternative r&amp;b</td>\n      <td>2019</td>\n      <td>144000</td>\n      <td>48</td>\n      <td>0.666</td>\n      <td>0.8510</td>\n      <td>0.420</td>\n      <td>0.534000</td>\n      <td>0.1100</td>\n      <td>-6.699</td>\n      <td>0.0829</td>\n      <td>133.015</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>shuga rush</td>\n      <td>EVERYTHING YOU HEARD IS TRUE</td>\n      <td>Odunsi (The Engine)</td>\n      <td>afropop</td>\n      <td>2020</td>\n      <td>89488</td>\n      <td>30</td>\n      <td>0.710</td>\n      <td>0.0822</td>\n      <td>0.683</td>\n      <td>0.000169</td>\n      <td>0.1010</td>\n      <td>-5.640</td>\n      <td>0.3600</td>\n      <td>129.993</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>LITT!</td>\n      <td>LITT!</td>\n      <td>AYLØ</td>\n      <td>indie r&amp;b</td>\n      <td>2018</td>\n      <td>207758</td>\n      <td>40</td>\n      <td>0.836</td>\n      <td>0.2720</td>\n      <td>0.564</td>\n      <td>0.000537</td>\n      <td>0.1100</td>\n      <td>-7.127</td>\n      <td>0.0424</td>\n      <td>130.005</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Confident / Feeling Cool</td>\n      <td>Enjoy Your Life</td>\n      <td>Lady Donli</td>\n      <td>nigerian pop</td>\n      <td>2019</td>\n      <td>175135</td>\n      <td>14</td>\n      <td>0.894</td>\n      <td>0.7980</td>\n      <td>0.611</td>\n      <td>0.000187</td>\n      <td>0.0964</td>\n      <td>-4.961</td>\n      <td>0.1130</td>\n      <td>111.087</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>wanted you</td>\n      <td>rare.</td>\n      <td>Odunsi (The Engine)</td>\n      <td>afropop</td>\n      <td>2018</td>\n      <td>152049</td>\n      <td>25</td>\n      <td>0.702</td>\n      <td>0.1160</td>\n      <td>0.833</td>\n      <td>0.910000</td>\n      <td>0.3480</td>\n      <td>-6.044</td>\n      <td>0.0447</td>\n      <td>105.115</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetured_df = df[((df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afro dancehall&#x27;</span>)</span><br><span class=\"line\">                 | (df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;afropop&#x27;</span>)</span><br><span class=\"line\">                 | (df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] == <span class=\"string\">&#x27;nigerian pop&#x27;</span>))</span><br><span class=\"line\">                &amp; (df[<span class=\"string\">&#x27;popularity&#x27;</span>] &gt; <span class=\"number\">0</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">top = fetured_df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>].value_counts()</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">7</span>))</span><br><span class=\"line\">sns.barplot(x=top.index, y=top.values)</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">45</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Top genres&#x27;</span>, color=<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 箱线图, 可以直观看出数据的分布</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>), dpi=<span class=\"number\">200</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 1)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;popularity&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 2)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;acousticness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 3)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;energy&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 4)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;instrumentalness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 5)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;liveness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 6)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;loudness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 7)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;speechiness&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 8)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;tempo&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 9)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;time_signature&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 10)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;danceability&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 11)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;length&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">  plt.subplot(4, 3, 12)</span></span><br><span class=\"line\"><span class=\"string\">  sns.boxplot(x=&#x27;release_date&#x27;, data=df)</span></span><br><span class=\"line\"><span class=\"string\"> &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i, v <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>([</span><br><span class=\"line\">        <span class=\"string\">&quot;popularity&quot;</span>, <span class=\"string\">&quot;acousticness&quot;</span>, <span class=\"string\">&quot;energy&quot;</span>, <span class=\"string\">&quot;instrumentalness&quot;</span>, <span class=\"string\">&quot;liveness&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;loudness&quot;</span>, <span class=\"string\">&quot;speechiness&quot;</span>, <span class=\"string\">&quot;tempo&quot;</span>, <span class=\"string\">&quot;time_signature&quot;</span>, <span class=\"string\">&quot;danceability&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;length&quot;</span>, <span class=\"string\">&quot;release_date&quot;</span></span><br><span class=\"line\">]):</span><br><span class=\"line\">    plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">3</span>, i + <span class=\"number\">1</span>)</span><br><span class=\"line\">    sns.boxplot(x=v, data=df)</span><br><span class=\"line\">    <span class=\"comment\"># plt.title(v)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_53_0.png\" alt=\"png\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_53_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> metrics</span><br><span class=\"line\"></span><br><span class=\"line\">le = LabelEncoder()</span><br><span class=\"line\"></span><br><span class=\"line\">X = df.loc[:, (<span class=\"string\">&#x27;artist_top_genre&#x27;</span>, <span class=\"string\">&#x27;popularity&#x27;</span>, <span class=\"string\">&#x27;danceability&#x27;</span>,</span><br><span class=\"line\">               <span class=\"string\">&#x27;acousticness&#x27;</span>, <span class=\"string\">&#x27;loudness&#x27;</span>, <span class=\"string\">&#x27;energy&#x27;</span>)]</span><br><span class=\"line\">X[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>] = le.fit_transform(X[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>])</span><br><span class=\"line\">y = le.transform(df[<span class=\"string\">&#x27;artist_top_genre&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 聚为3类</span></span><br><span class=\"line\">nclusters = <span class=\"number\">3</span></span><br><span class=\"line\">seed = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">km = KMeans(n_clusters=nclusters, random_state=seed).fit(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Predict the cluster for each data point</span></span><br><span class=\"line\">y_cluster_kmeans = km.predict(X)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(y_cluster_kmeans)</span><br><span class=\"line\"></span><br><span class=\"line\">score = metrics.silhouette_score(X, y_cluster_kmeans)</span><br><span class=\"line\"><span class=\"comment\"># score 从 [-1,1], 越大表示聚类效果越好</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(score)</span><br></pre></td></tr></table></figure>\n<pre><code>[2 0 2 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2 0 0 0 0 0 2 0 0 1 0 0 2 1 1 2 2 2 0\n 2 0 1 2 2 2 0 1 1 2 1 0 0 0 0 1 1 1 1 1 2 0 2 1 0 2 0 1 2 1 2 1 1 1 1 2 1\n 0 2 2 0 0 0 1 0 0 1 1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 0 0 1 0 1 2 0 1 1 2 0 1\n 1 1 1 1 1 1 0 1 0 1 0 1 0 2 1 2 0 1 1 1 0 0 1 1 0 2 0 1 1 0 0 0 1 1 0 1 0\n 2 0 1 1 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 0 0 1 1 1 0 0 1 0 2 1 1 1 1 1 0\n 1 1 1 1 0 2 0 0 0 0 0 0 1 1 2 1 1 1 1 1 2 1 1 0 0 1 1 1 1 1 0 0 1 0 1 0 0\n 1 2 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 2 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1\n 2 0 0 1 1 0 0 0 1 0 0 1 1 1 2 1 1 2 0 0 1 0 1 1 0 1 1 1 0 2 1 1 2 2 2 0 2\n 2 2 2 2 2 2 2 1 2 2 1 2 1 2 1 2 2 2 0 1 0 1 1 0 1 2 1 1 2 1 0 2 2 0 0 0 1\n 0 1 0 1 1 1 1 2 1 1 2 2 1 0 2 0 2 1 1 2 2 2 0 0 2 2 1 1 0 0 0 1 1 1 1 1 1\n 1 1 1 1 2 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1\n 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 0 0 0 1 2 1 1 2 1 0 0 0 2 2 2 0 2\n 2 2 0 2 2 0 1 0 1 2 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1\n 0 1 1 1 1 1 1 0 1 1 1 2 0 0 1 1 1 1 2 1 0 2 1 1 1 0 1 1 2 1 0 0 0 0 0 1 1\n 1 1 1 0 0 1 1 1 1 1 1 1]\n0.5918299843029218\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 手肘方法: 拐点附近就是较好的聚类划分</span></span><br><span class=\"line\">wcss = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">    kmeans = KMeans(n_clusters=i, init=<span class=\"string\">&#x27;k-means++&#x27;</span>, random_state=<span class=\"number\">42</span>).fit(X)</span><br><span class=\"line\">    wcss.append(kmeans.inertia_)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.lineplot(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">11</span>), wcss, marker=<span class=\"string\">&#x27;o&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Elbow&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Number of clusters&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;WCSS&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<pre><code>D:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1036: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=3.\n  warnings.warn(\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_55_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始值的随机选取会影响每次的结果</span></span><br><span class=\"line\">kmeans = KMeans(n_clusters=<span class=\"number\">3</span>).fit(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 0 | 1 | 2</span></span><br><span class=\"line\">labels = kmeans.predict(X)</span><br><span class=\"line\">plt.scatter(df[<span class=\"string\">&#x27;popularity&#x27;</span>], df[<span class=\"string\">&#x27;danceability&#x27;</span>], c=labels)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;popularity&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;danceability&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 真实值 与 与预测值集合的交集 元素个数</span></span><br><span class=\"line\">correct_labels = <span class=\"built_in\">sum</span>(y == kmeans.labels_)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d/%d samples were correctly labeled.&quot;</span> %</span><br><span class=\"line\">      (correct_labels, y.size))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Accuracy score: &#123;0:0.2f&#125;&#x27;</span>.<span class=\"built_in\">format</span>(correct_labels / <span class=\"built_in\">float</span>(y.size)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_56_0.png\" alt=\"png\"></p>\n<pre><code>93/530 samples were correctly labeled.\nAccuracy score: 0.18\n</code></pre>\n<h5 id=\"sample-2\">sample-2</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.colors</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.datasets <span class=\"keyword\">as</span> ds</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> homogeneity_score, completeness_score, v_measure_score, adjusted_mutual_info_score,\\</span><br><span class=\"line\">    adjusted_rand_score, silhouette_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> Axes3D</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">expand</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    d = (b - a) * <span class=\"number\">0.1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - d, b + d</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">400</span></span><br><span class=\"line\">centers = <span class=\"number\">4</span></span><br><span class=\"line\">data, y = ds.make_blobs(N, n_features=<span class=\"number\">2</span>, centers=centers, random_state=<span class=\"number\">2</span>)</span><br><span class=\"line\">data2, y2 = ds.make_blobs(N,</span><br><span class=\"line\">                          n_features=<span class=\"number\">2</span>,</span><br><span class=\"line\">                          centers=centers,</span><br><span class=\"line\">                          cluster_std=(<span class=\"number\">1</span>, <span class=\"number\">2.5</span>, <span class=\"number\">0.5</span>, <span class=\"number\">2</span>),</span><br><span class=\"line\">                          random_state=<span class=\"number\">2</span>)</span><br><span class=\"line\">data3 = np.vstack(</span><br><span class=\"line\">    (data[y == <span class=\"number\">0</span>][:], data[y == <span class=\"number\">1</span>][:<span class=\"number\">50</span>], data[y == <span class=\"number\">2</span>][:<span class=\"number\">20</span>], data[y == <span class=\"number\">3</span>][:<span class=\"number\">5</span>]))</span><br><span class=\"line\">y3 = np.array([<span class=\"number\">0</span>] * <span class=\"number\">100</span> + [<span class=\"number\">1</span>] * <span class=\"number\">50</span> + [<span class=\"number\">2</span>] * <span class=\"number\">20</span> + [<span class=\"number\">3</span>] * <span class=\"number\">5</span>)</span><br><span class=\"line\">m = np.array(((<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">3</span>)))</span><br><span class=\"line\">data_r = data.dot(m)</span><br><span class=\"line\"></span><br><span class=\"line\">matplotlib.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">matplotlib.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\">cm = matplotlib.colors.ListedColormap(<span class=\"built_in\">list</span>(<span class=\"string\">&#x27;rgbm&#x27;</span>))</span><br><span class=\"line\">data_list = data, data, data_r, data_r, data2, data2, data3, data3</span><br><span class=\"line\">y_list = y, y, y, y, y2, y2, y3, y3</span><br><span class=\"line\">titles = <span class=\"string\">&#x27;原始数据&#x27;</span>, <span class=\"string\">&#x27;KMeans++聚类&#x27;</span>, <span class=\"string\">&#x27;旋转后数据&#x27;</span>, <span class=\"string\">&#x27;旋转后KMeans++聚类&#x27;</span>,\\</span><br><span class=\"line\">          <span class=\"string\">&#x27;方差不相等数据&#x27;</span>, <span class=\"string\">&#x27;方差不相等KMeans++聚类&#x27;</span>, <span class=\"string\">&#x27;数量不相等数据&#x27;</span>, <span class=\"string\">&#x27;数量不相等KMeans++聚类&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">model = KMeans(n_clusters=<span class=\"number\">4</span>, init=<span class=\"string\">&#x27;k-means++&#x27;</span>, n_init=<span class=\"number\">5</span>)</span><br><span class=\"line\">fig = plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">9</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i, (x, y, title) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(<span class=\"built_in\">zip</span>(data_list, y_list, titles), start=<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"comment\"># plt.subplot(4, 2, i)</span></span><br><span class=\"line\">    ax = fig.add_subplot(<span class=\"number\">4</span>, <span class=\"number\">2</span>, i)</span><br><span class=\"line\">    plt.title(title)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">        y_pred = y</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        y_pred = model.fit_predict(x)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Homogeneity:&#x27;</span>, homogeneity_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;completeness:&#x27;</span>, completeness_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;V measure:&#x27;</span>, v_measure_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;AMI:&#x27;</span>, adjusted_mutual_info_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;ARI:&#x27;</span>, adjusted_rand_score(y, y_pred))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Silhouette:&#x27;</span>, silhouette_score(x, y_pred), <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    ax.scatter(x[:, <span class=\"number\">0</span>], x[:, <span class=\"number\">1</span>], s=<span class=\"number\">10</span>, c=y_pred, cmap=cm, edgecolors=<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">    ax.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout(<span class=\"number\">2</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.95</span>))</span><br><span class=\"line\">plt.suptitle(<span class=\"string\">&#x27;数据分布对KMeans聚类的影响&#x27;</span>, fontsize=<span class=\"number\">18</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>1\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.616436816839852\n\n2\nHomogeneity: 0.9898828240244267\ncompleteness: 0.9899006758819153\nV measure: 0.9898917498726852\nAMI: 0.9898081557479033\nARI: 0.9933165272203728\nSilhouette: 0.6189656317733315\n\n3\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.5275987244664399\n\n4\nHomogeneity: 0.7296158940840607\ncompleteness: 0.7315285272632114\nV measure: 0.7305709588584066\nAMI: 0.7283397010755561\nARI: 0.6783811042853299\nSilhouette: 0.5366236044449266\n\n5\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.4790725752982868\n\n6\nHomogeneity: 0.7449364376693913\ncompleteness: 0.7755445167472191\nV measure: 0.7599323988656883\nAMI: 0.757903292819801\nARI: 0.7113213508090338\nSilhouette: 0.5737260449304202\n\n7\nHomogeneity: 1.0\ncompleteness: 1.0\nV measure: 1.0\nAMI: 1.0\nARI: 1.0\nSilhouette: 0.5975066093204152\n\n8\nHomogeneity: 0.9776347312784609\ncompleteness: 0.9728632742060752\nV measure: 0.975243166591057\nAMI: 0.9745709993295113\nARI: 0.9906840043816505\nSilhouette: 0.6013877858619149\n\n\n\nC:\\Users\\utsuk\\AppData\\Local\\Temp\\ipykernel_28356\\867049078.py:57: MatplotlibDeprecationWarning: Passing the pad parameter of tight_layout() positionally is deprecated since Matplotlib 3.3; the parameter will become keyword-only two minor releases later.\n  plt.tight_layout(2, rect=(0, 0, 1, 0.95))\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_58_2.png\" alt=\"png\"></p>\n<h4 id=\"层次聚类\">层次聚类</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib <span class=\"keyword\">as</span> mpl</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> AgglomerativeClustering</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> kneighbors_graph</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.datasets <span class=\"keyword\">as</span> ds</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">expand</span>(<span class=\"params\">a, b, r</span>):</span><br><span class=\"line\">    d = (b - a) * r</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - d, b + d</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    warnings.filterwarnings(action=<span class=\"string\">&#x27;ignore&#x27;</span>, category=UserWarning)</span><br><span class=\"line\">    np.set_printoptions(suppress=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    np.random.seed(<span class=\"number\">0</span>)</span><br><span class=\"line\">    n_clusters = <span class=\"number\">4</span></span><br><span class=\"line\">    N = <span class=\"number\">400</span></span><br><span class=\"line\">    data1, y1 = ds.make_blobs(n_samples=N,</span><br><span class=\"line\">                              n_features=<span class=\"number\">2</span>,</span><br><span class=\"line\">                              centers=((-<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, -<span class=\"number\">1</span>), (-<span class=\"number\">1</span>, -<span class=\"number\">1</span>)),</span><br><span class=\"line\">                              cluster_std=(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>),</span><br><span class=\"line\">                              random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data1 = np.array(data1)</span><br><span class=\"line\">    n_noise = <span class=\"built_in\">int</span>(<span class=\"number\">0.1</span> * N)</span><br><span class=\"line\">    r = np.random.rand(n_noise, <span class=\"number\">2</span>)</span><br><span class=\"line\">    data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data1, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data1, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    r[:, <span class=\"number\">0</span>] = r[:, <span class=\"number\">0</span>] * (data_max1 - data_min1) + data_min1</span><br><span class=\"line\">    r[:, <span class=\"number\">1</span>] = r[:, <span class=\"number\">1</span>] * (data_max2 - data_min2) + data_min2</span><br><span class=\"line\">    data1_noise = np.concatenate((data1, r), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    y1_noise = np.concatenate((y1, [<span class=\"number\">4</span>] * n_noise))</span><br><span class=\"line\"></span><br><span class=\"line\">    data2, y2 = ds.make_moons(n_samples=N, noise=<span class=\"number\">.05</span>)</span><br><span class=\"line\">    data2 = np.array(data2)</span><br><span class=\"line\">    n_noise = <span class=\"built_in\">int</span>(<span class=\"number\">0.1</span> * N)</span><br><span class=\"line\">    r = np.random.rand(n_noise, <span class=\"number\">2</span>)</span><br><span class=\"line\">    data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data2, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data2, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    r[:, <span class=\"number\">0</span>] = r[:, <span class=\"number\">0</span>] * (data_max1 - data_min1) + data_min1</span><br><span class=\"line\">    r[:, <span class=\"number\">1</span>] = r[:, <span class=\"number\">1</span>] * (data_max2 - data_min2) + data_min2</span><br><span class=\"line\">    data2_noise = np.concatenate((data2, r), axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    y2_noise = np.concatenate((y2, [<span class=\"number\">3</span>] * n_noise))</span><br><span class=\"line\"></span><br><span class=\"line\">    mpl.rcParams[<span class=\"string\">&#x27;font.sans-serif&#x27;</span>] = [<span class=\"string\">&#x27;SimHei&#x27;</span>]</span><br><span class=\"line\">    mpl.rcParams[<span class=\"string\">&#x27;axes.unicode_minus&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cm = mpl.colors.ListedColormap([<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;m&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>])</span><br><span class=\"line\">    plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">8</span>), facecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\">    plt.cla()</span><br><span class=\"line\">    linkages = (<span class=\"string\">&quot;ward&quot;</span>, <span class=\"string\">&quot;complete&quot;</span>, <span class=\"string\">&quot;average&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, (n_clusters, data, y) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(</span><br><span class=\"line\">        ((<span class=\"number\">4</span>, data1, y1), (<span class=\"number\">4</span>, data1_noise, y1_noise), (<span class=\"number\">2</span>, data2, y2),</span><br><span class=\"line\">         (<span class=\"number\">2</span>, data2_noise, y2_noise))):</span><br><span class=\"line\">        plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span> * index + <span class=\"number\">1</span>)</span><br><span class=\"line\">        plt.scatter(data[:, <span class=\"number\">0</span>], data[:, <span class=\"number\">1</span>], c=y, s=<span class=\"number\">12</span>, edgecolors=<span class=\"string\">&#x27;k&#x27;</span>, cmap=cm)</span><br><span class=\"line\">        plt.title(<span class=\"string\">&#x27;Prime&#x27;</span>, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">        plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">        data_min1, data_min2 = np.<span class=\"built_in\">min</span>(data, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        data_max1, data_max2 = np.<span class=\"built_in\">max</span>(data, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">        plt.xlim(expand(data_min1, data_max1, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">        plt.ylim(expand(data_min2, data_max2, <span class=\"number\">0.05</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">        connectivity = kneighbors_graph(data,</span><br><span class=\"line\">                                        n_neighbors=<span class=\"number\">7</span>,</span><br><span class=\"line\">                                        mode=<span class=\"string\">&#x27;distance&#x27;</span>,</span><br><span class=\"line\">                                        metric=<span class=\"string\">&#x27;minkowski&#x27;</span>,</span><br><span class=\"line\">                                        p=<span class=\"number\">2</span>,</span><br><span class=\"line\">                                        include_self=<span class=\"literal\">True</span>)</span><br><span class=\"line\">        connectivity = <span class=\"number\">0.5</span> * (connectivity + connectivity.T)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i, linkage <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(linkages):</span><br><span class=\"line\">            ac = AgglomerativeClustering(n_clusters=n_clusters,</span><br><span class=\"line\">                                         affinity=<span class=\"string\">&#x27;euclidean&#x27;</span>,</span><br><span class=\"line\">                                         connectivity=connectivity,</span><br><span class=\"line\">                                         linkage=linkage)</span><br><span class=\"line\">            ac.fit(data)</span><br><span class=\"line\">            y = ac.labels_</span><br><span class=\"line\">            plt.subplot(<span class=\"number\">4</span>, <span class=\"number\">4</span>, i + <span class=\"number\">2</span> + <span class=\"number\">4</span> * index)</span><br><span class=\"line\">            plt.scatter(data[:, <span class=\"number\">0</span>],</span><br><span class=\"line\">                        data[:, <span class=\"number\">1</span>],</span><br><span class=\"line\">                        c=y,</span><br><span class=\"line\">                        s=<span class=\"number\">12</span>,</span><br><span class=\"line\">                        edgecolors=<span class=\"string\">&#x27;k&#x27;</span>,</span><br><span class=\"line\">                        cmap=cm)</span><br><span class=\"line\">            plt.title(linkage, fontsize=<span class=\"number\">12</span>)</span><br><span class=\"line\">            plt.grid(b=<span class=\"literal\">True</span>, ls=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">            plt.xlim(expand(data_min1, data_max1, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">            plt.ylim(expand(data_min2, data_max2, <span class=\"number\">0.05</span>))</span><br><span class=\"line\">    plt.suptitle(<span class=\"string\">&#x27;层次聚类的不同合并策略&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">    plt.tight_layout(<span class=\"number\">0.5</span>, rect=(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0.95</span>))</span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_60_0.png\" alt=\"png\"></p>\n<h3 id=\"降维问题\">降维问题</h3>\n<h4 id=\"缺失值比率\">缺失值比率</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import required libraries</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read the data</span></span><br><span class=\"line\">train = pd.read_csv(<span class=\"string\">&quot;./_data_set/降维问题/train_v9rqX0R.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># checking the percentage of missing values in each variable</span></span><br><span class=\"line\"><span class=\"comment\"># 数据完整率 = (空数 / 所有数) * 100</span></span><br><span class=\"line\">a = train.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(train) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># saving column names in a variable</span></span><br><span class=\"line\">variable = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">12</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a[i] &lt;= <span class=\"number\">20</span>:  <span class=\"comment\">#setting the threshold as 20%</span></span><br><span class=\"line\">        variable.append(train.columns[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 缺失率大于阈值的列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(variable)</span><br></pre></td></tr></table></figure>\n<pre><code>['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Location_Type', 'Outlet_Type', 'Item_Outlet_Sales']\n</code></pre>\n<h4 id=\"低方差过滤\">低方差过滤</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import required libraries</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read the data</span></span><br><span class=\"line\">train = pd.read_csv(<span class=\"string\">&quot;./_data_set/降维问题/train_v9rqX0R.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充空项</span></span><br><span class=\"line\">train[<span class=\"string\">&#x27;Item_Weight&#x27;</span>].fillna(train[<span class=\"string\">&#x27;Item_Weight&#x27;</span>].median(), inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train[<span class=\"string\">&#x27;Outlet_Size&#x27;</span>].fillna(train[<span class=\"string\">&#x27;Outlet_Size&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充后的缺失率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(train.isnull().<span class=\"built_in\">sum</span>() / <span class=\"built_in\">len</span>(train) * <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">numeric = train[[</span><br><span class=\"line\">    <span class=\"string\">&#x27;Item_Weight&#x27;</span>, <span class=\"string\">&#x27;Item_Visibility&#x27;</span>, <span class=\"string\">&#x27;Item_MRP&#x27;</span>, <span class=\"string\">&#x27;Outlet_Establishment_Year&#x27;</span></span><br><span class=\"line\">]]</span><br><span class=\"line\">var = numeric.var()</span><br><span class=\"line\">numeric = numeric.columns</span><br><span class=\"line\">variable = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(var)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> var[i] &gt;= <span class=\"number\">10</span>:  <span class=\"comment\">#setting the threshold as 10%</span></span><br><span class=\"line\">        variable.append(numeric[i])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(variable)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>Item_Identifier              0.0\nItem_Weight                  0.0\nItem_Fat_Content             0.0\nItem_Visibility              0.0\nItem_Type                    0.0\nItem_MRP                     0.0\nOutlet_Identifier            0.0\nOutlet_Establishment_Year    0.0\nOutlet_Size                  0.0\nOutlet_Location_Type         0.0\nOutlet_Type                  0.0\nItem_Outlet_Sales            0.0\ndtype: float64\n['Item_Weight', 'Item_MRP', 'Outlet_Establishment_Year']\n</code></pre>\n<h2 id=\"代码相关\">代码相关</h2>\n<h3 id=\"存储-读取模型\">存储-读取模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.linear_model <span class=\"keyword\">as</span> lm  <span class=\"comment\"># 线性模型</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sklearn.metrics <span class=\"keyword\">as</span> sm  <span class=\"comment\"># 模型性能评价模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> mp</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.array([[<span class=\"number\">0.5</span>], [<span class=\"number\">0.6</span>], [<span class=\"number\">0.8</span>], [<span class=\"number\">1.1</span>], [<span class=\"number\">1.4</span>]])  <span class=\"comment\"># 输入集</span></span><br><span class=\"line\">y = np.array([<span class=\"number\">5.0</span>, <span class=\"number\">5.5</span>, <span class=\"number\">6.0</span>, <span class=\"number\">6.8</span>, <span class=\"number\">7.0</span>])  <span class=\"comment\"># 输出集</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建线性回归器</span></span><br><span class=\"line\">model = lm.LinearRegression()</span><br><span class=\"line\"><span class=\"comment\"># 用已知输入、输出数据集训练回归器</span></span><br><span class=\"line\">model.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;训练完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存训练后的模型</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;linear_model.pkl&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    pickle.dump(model, f)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;保存模型完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">######################### 加载模型 #########################</span></span><br><span class=\"line\"><span class=\"comment\"># 上面通过训练数据x,y 训练好了 x -&gt; y 的线性回归模型</span></span><br><span class=\"line\"><span class=\"comment\"># 下面加载模型, 再给出测试数据 x, 查看模型预测结果直线与原始数据 (x,y) 的拟合度</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;linear_model.pkl&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    model = pickle.load(f)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;加载模型完成.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据加载的模型预测输出</span></span><br><span class=\"line\">pred_y = model.predict(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可视化回归曲线</span></span><br><span class=\"line\">mp.figure(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, facecolor=<span class=\"string\">&#x27;lightgray&#x27;</span>)</span><br><span class=\"line\">mp.title(<span class=\"string\">&#x27;Linear Regression&#x27;</span>, fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">mp.xlabel(<span class=\"string\">&#x27;x&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.ylabel(<span class=\"string\">&#x27;y&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">mp.tick_params(labelsize=<span class=\"number\">10</span>)</span><br><span class=\"line\">mp.grid(linestyle=<span class=\"string\">&#x27;:&#x27;</span>)</span><br><span class=\"line\">mp.scatter(x, y, c=<span class=\"string\">&#x27;blue&#x27;</span>, alpha=<span class=\"number\">0.8</span>, s=<span class=\"number\">60</span>, label=<span class=\"string\">&#x27;Sample Points&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.plot(x, pred_y, c=<span class=\"string\">&#x27;orangered&#x27;</span>, label=<span class=\"string\">&#x27;Regression&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mp.legend()</span><br><span class=\"line\">mp.show()</span><br></pre></td></tr></table></figure>\n<pre><code>训练完成.\n保存模型完成.\n加载模型完成.\n</code></pre>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_66_1.png\" alt=\"png\"></p>\n<h3 id=\"Web-app\">Web-app</h3>\n<h4 id=\"一\">一</h4>\n<p>train 一个逻辑回归模型并用 pickle 打包</p>\n<p>然后load</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, classification_report</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"></span><br><span class=\"line\">ufos = pd.read_csv(<span class=\"string\">&#x27;./_data_set/web-app/1/ufos.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># ufos.head()</span></span><br><span class=\"line\"></span><br><span class=\"line\">ufos = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Seconds&#x27;</span>: ufos[<span class=\"string\">&#x27;duration (seconds)&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Country&#x27;</span>: ufos[<span class=\"string\">&#x27;country&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Latitude&#x27;</span>: ufos[<span class=\"string\">&#x27;latitude&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Longitude&#x27;</span>: ufos[<span class=\"string\">&#x27;longitude&#x27;</span>]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.Country.unique()</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.dropna(inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">ufos = ufos[(ufos[<span class=\"string\">&#x27;Seconds&#x27;</span>] &gt;= <span class=\"number\">1</span>) &amp; (ufos[<span class=\"string\">&#x27;Seconds&#x27;</span>] &lt;= <span class=\"number\">60</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ufos.info()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;us&#x27;, nan, &#x27;gb&#x27;, &#x27;ca&#x27;, &#x27;au&#x27;, &#x27;de&#x27;] -&gt; 0-5</span></span><br><span class=\"line\">ufos[<span class=\"string\">&#x27;Country&#x27;</span>] = LabelEncoder().fit_transform(ufos[<span class=\"string\">&#x27;Country&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">ufos.head()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ======================== 准备完成 ==============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">x = ufos[[<span class=\"string\">&#x27;Seconds&#x27;</span>, <span class=\"string\">&#x27;Latitude&#x27;</span>, <span class=\"string\">&#x27;Longitude&#x27;</span>]]</span><br><span class=\"line\">y = ufos[<span class=\"string\">&#x27;Country&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># [&#x27;Seconds&#x27;, &#x27;Latitude&#x27;, &#x27;Longitude&#x27;]  ==&gt;  &#x27;Country&#x27;</span></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(x,</span><br><span class=\"line\">                                                    y,</span><br><span class=\"line\">                                                    test_size=<span class=\"number\">0.2</span>,</span><br><span class=\"line\">                                                    random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># default max_iter=100 会超限</span></span><br><span class=\"line\">model = LogisticRegression(max_iter=<span class=\"number\">1000</span>).fit(X_train, y_train)</span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Predicted labels: &#x27;</span>, y_pred)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Accuracy: &#x27;</span>, accuracy_score(y_test, y_pred))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ======================== 打包 model ==============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">model_name = <span class=\"string\">&#x27;./_data_set/web-app/1/ufo-model.pkl&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">pickle.dump(model, <span class=\"built_in\">open</span>(model_name, <span class=\"string\">&#x27;wb&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        41\n           1       0.85      0.47      0.60       250\n           2       1.00      1.00      1.00         8\n           3       1.00      1.00      1.00       131\n           4       0.97      1.00      0.98      4743\n\n    accuracy                           0.97      5173\n   macro avg       0.96      0.89      0.92      5173\nweighted avg       0.97      0.97      0.97      5173\n\nPredicted labels:  [4 4 4 ... 3 4 4]\nAccuracy:  0.9702300405953992\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">model_load = pickle.load(<span class=\"built_in\">open</span>(model_name, <span class=\"string\">&#x27;rb&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(model_load.predict([[<span class=\"number\">50</span>, <span class=\"number\">44</span>, -<span class=\"number\">12</span>]]))</span><br></pre></td></tr></table></figure>\n<pre><code>[3]\n\n\nD:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\sklearn\\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n  warnings.warn(\n</code></pre>\n<h4 id=\"二\">二</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score, precision_score, confusion_matrix, classification_report</span><br><span class=\"line\"></span><br><span class=\"line\">data = pd.read_csv(<span class=\"string\">&#x27;./_data_set/cuisines_classification/cleaned_cuisines.csv&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除前两列无用的列</span></span><br><span class=\"line\">X = data.iloc[:, <span class=\"number\">2</span>:]</span><br><span class=\"line\">y = data[[<span class=\"string\">&#x27;cuisine&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, C=<span class=\"number\">10</span>, probability=<span class=\"literal\">True</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># model.fit(X_train, np.revel(y_train))</span></span><br><span class=\"line\">model.fit(X_train, y_train.values.ravel())</span><br><span class=\"line\">y_pred = model.predict(X_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(classification_report(y_test, y_pred))</span><br></pre></td></tr></table></figure>\n<pre><code>              precision    recall  f1-score   support\n\n     chinese       0.73      0.68      0.70       242\n      indian       0.89      0.88      0.88       246\n    japanese       0.80      0.79      0.79       262\n      korean       0.82      0.75      0.78       229\n        thai       0.75      0.88      0.81       220\n\n    accuracy                           0.79      1199\n   macro avg       0.79      0.80      0.79      1199\nweighted avg       0.80      0.79      0.79      1199\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> skl2onnx <span class=\"keyword\">import</span> convert_sklearn</span><br><span class=\"line\"><span class=\"keyword\">from</span> skl2onnx.common.data_types <span class=\"keyword\">import</span> FloatTensorType</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 张量为 380</span></span><br><span class=\"line\">initial_type = [(<span class=\"string\">&#x27;float_input&#x27;</span>, FloatTensorType([<span class=\"literal\">None</span>, <span class=\"number\">380</span>]))]</span><br><span class=\"line\">options = &#123;<span class=\"built_in\">id</span>(model): &#123;<span class=\"string\">&#x27;nocl&#x27;</span>: <span class=\"literal\">True</span>, <span class=\"string\">&#x27;zipmap&#x27;</span>: <span class=\"literal\">False</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">onx = convert_sklearn(model, initial_types=initial_type, options=options)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./_data_set/web-app/2/model.onnx&quot;</span>, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(onx.SerializeToString())</span><br></pre></td></tr></table></figure>\n<h2 id=\"信息论\">信息论</h2>\n<h3 id=\"两点分布信息熵\">两点分布信息熵</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 因为 ln0 无定义, 用此值模拟趋近 0</span></span><br><span class=\"line\">eps = <span class=\"number\">1e-5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># probability</span></span><br><span class=\"line\">p = np.linspace(eps, <span class=\"number\">1</span> - eps, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Information entropy</span></span><br><span class=\"line\">h = -(<span class=\"number\">1</span> - p) * np.log2(<span class=\"number\">1</span> - p) - p * np.log2(p)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(p, h, label=<span class=\"string\">&#x27;Information entropy&#x27;</span>, color=<span class=\"string\">&#x27;red&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Probability&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Entropy&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果中信息熵的峰值取决于 log 底数, e为底时峰值为0.7左右, 2为底峰值为1</span></span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_74_0.png\" alt=\"png\"></p>\n<h3 id=\"基尼系数与-ln\">基尼系数与-ln</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">eps = <span class=\"number\">1e-4</span></span><br><span class=\"line\">p = np.linspace(eps, <span class=\"number\">1</span> - eps, <span class=\"number\">100</span>)</span><br><span class=\"line\">h = -(<span class=\"number\">1</span> - p) * np.log2(<span class=\"number\">1</span> - p) - p * np.log2(p)</span><br><span class=\"line\">gini = <span class=\"number\">2</span> * (<span class=\"number\">1</span> - p) * p</span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(p, gini, <span class=\"string\">&#x27;r-&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.plot(p, h / <span class=\"number\">2</span>, <span class=\"string\">&#x27;g-&#x27;</span>, lw=<span class=\"number\">3</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Gini(p) / Ln(p)&#x27;</span>, fontsize=<span class=\"number\">16</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;p&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;H&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Gini&#x27;</span>, <span class=\"string\">&#x27;Ln&#x27;</span>], loc=<span class=\"string\">&#x27;best&#x27;</span>, fontsize=<span class=\"number\">14</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"ML_files/ML_76_0.png\" alt=\"png\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://discover304.top/\">https://discover304.top/</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.bilibili.com/video/BV16L411w7oQ?p=6\">【上海交大】【腾讯】强强联合 机器学习+深度学习</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.analyticsvidhya.com/blog/2018/08/dimensionality-reduction-techniques-python/\">The Ultimate Guide to 12 Dimensionality Reduction Techniques (with Python codes)</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://github.com/microsoft/ML-For-Beginners\">https://github.com/microsoft/ML-For-Beginners</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "人工智能",
                "信息论",
                "python",
                "机器学习"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/experience/basic/OpenGL/",
            "url": "https://blog.weidows.tech/post/experience/basic/OpenGL/",
            "title": "🥵OpenGL-xmake-蚌埠住了",
            "date_published": "2021-09-19T14:37:25.000Z",
            "content_html": "<h1>OpenGL-xmake-蚌埠住了</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 13:18:20\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\basic\\OpenGL.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#opengl-xmake-%E8%9A%8C%E5%9F%A0%E4%BD%8F%E4%BA%86\">OpenGL-xmake-蚌埠住了</a>\n<ul>\n<li><a href=\"#python\">Python</a>\n<ul>\n<li><a href=\"#%E6%8A%A5%E9%94%99\">报错</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95\">测试</a></li>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81\">实例代码</a></li>\n</ul>\n</li>\n<li><a href=\"#c\">C</a>\n<ul>\n<li><a href=\"#xmake-%E5%BC%95%E5%85%A5%E5%BA%93\">xmake-引入库</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95-1\">测试</a></li>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81-1\">实例代码</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>学校开了图形学这门课程,让我们配置下环境</p>\n<p>老师给的是 VS + OpenGL + C/C++ + 复制库文件 的方式</p>\n</li>\n<li>\n<p>转路</p>\n<ol>\n<li>\n<p><code>VScode + Python + pyopengl 库</code></p>\n</li>\n<li>\n<p><code>Vscode + C++ + xmake(需要VisualStudio) + 各种库</code> (推荐方法)</p>\n</li>\n</ol>\n<hr>\n</li>\n<li>\n<p>网上找了找,并不是能很顺畅的捅下来 (因为依赖项比较杂)</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Python\">Python</h2>\n<ul>\n<li>\n<p>先装 vscode 和 Python / anaconda,这俩没问题</p>\n</li>\n<li>\n<p>通过 pip (conda 不行) 安装 <code>pyopengl</code> 库</p>\n<ul>\n<li>\n<p>有的教程装的是 <code>pyglet</code>,这个库官方解释是 “pyglet is a cross-platform games and multimedia package.”</p>\n</li>\n<li>\n<p>虽然 <a href=\"http://pyglet.gl\">pyglet.gl</a> 可以调 OpenGL API,但是鉴于 Ctrl CV 工作,还是老老实实用 pyopengl 库吧</p>\n</li>\n</ul>\n<hr>\n</li>\n</ul>\n<h3 id=\"报错\">报错</h3>\n<p>直接通过 pip 在线安装的话是装的 32 位的库,在 64 位机子上跑不起来</p>\n<blockquote>\n<p>报错 <a href=\"https://blog.csdn.net/feilong_csdn/article/details/61421002\">“OpenGL.error.NullFunctionError: Attempt to call an undefined function”解决方案</a></p>\n</blockquote>\n<p>必须去下载适合本机的离线包安装: <a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl\">下载地址</a></p>\n<p>比如我是 win_64,py_3.8 ; 需要下载的是: <code>PyOpenGL-3.1.5-cp38-cp38-win_amd64.whl</code>,然后安装</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 把之前的版本先卸载,否则安装也无效</span></span><br><span class=\"line\"><span class=\"attribute\">pip</span> uninstall pyopengl</span><br><span class=\"line\"><span class=\"attribute\">pip</span> install PyOpenGL-<span class=\"number\">3</span>.<span class=\"number\">1</span>.<span class=\"number\">5</span>-cp38-cp38-win_amd64.whl</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"测试\">测试</h3>\n<p>画个静态茶壶, 就是文章封面图</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GL <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLU <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> OpenGL.GLUT <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFunc</span>():</span><br><span class=\"line\">    glClear(GL_COLOR_BUFFER_BIT)</span><br><span class=\"line\">    glutWireTeapot(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">    glFlush()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">glutInit()</span><br><span class=\"line\">glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA)</span><br><span class=\"line\">glutInitWindowSize(<span class=\"number\">400</span>, <span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数为b类型而不是string</span></span><br><span class=\"line\">glutCreateWindow(<span class=\"string\">b&quot;Teapot&quot;</span>)</span><br><span class=\"line\">glutDisplayFunc(drawFunc)</span><br><span class=\"line\">glutMainLoop()</span><br></pre></td></tr></table></figure>\n<h3 id=\"实例代码\">实例代码</h3>\n<p><a href=\"../../../lang/python/%E6%9D%82#opengl\">实例代码</a></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"C\">C</h2>\n<p>如果你喜欢 VScode 调试 C/C++,而不想用比较复杂的 Visual Studio</p>\n<p>如果你想通过简单的配置就让 VScode 能调试 OpenGL</p>\n<p>恭喜,马上就好!</p>\n<p>首先,按照我另一篇文章: <a href=\"../../../lang/cpp/C_Configuration\">👌 茅塞顿开之 C/C+±VScode-xmake</a> 配置好 <code>vscode + C/C++</code> 的开发环境</p>\n<hr>\n<h3 id=\"xmake-引入库\">xmake-引入库</h3>\n<p>xmake 自带的 xrepo 可以安装 xrepo/vcpkg/conan 的库</p>\n<ul>\n<li>\n<p>需要注意一下:</p>\n<p>虽然我这里使用 vscode + xmake,但是安装依赖时仍需要调用 visualstudio,必须安装</p>\n<p>需要安装的有两个: <code>buildtools + visualstudio community</code></p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVLoVo.png\" alt=\"20211120115814\" />\n<p>buildtools 也就是生成工具只有那一个,裸装就好,里面的东西不用装</p>\n<p>visualstudio community 的话什么版本都行,xmake 都支持了,它里面必须装 <code>C++ 桌面开发</code>,不能装成其他的</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVA21S.png\" alt=\"20211120115909\" />\n<p>语言包记得选中+英! 不然识别不到</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSD4n.png\" alt=\"20211120120254\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"测试-2\">测试</h3>\n<ul>\n<li>\n<p>xmake.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 引用.lib形式的静态库会报错,所以要用shared动态链接库版本</span></span><br><span class=\"line\">add_requires(<span class=\"string\">&quot;freeglut&quot;</span>,&#123;configs = &#123;shared = <span class=\"literal\">true</span>&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 全局添加依赖</span></span><br><span class=\"line\">add_packages(<span class=\"string\">&quot;freeglut&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">target(<span class=\"string\">&quot;MazeGame&quot;</span>)</span><br><span class=\"line\">    set_kind(<span class=\"string\">&quot;binary&quot;</span>)</span><br><span class=\"line\">    add_files(<span class=\"string\">&quot;test.cpp&quot;</span>)</span><br><span class=\"line\">target_end()</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>test.cpp</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;GL/glut.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Initial</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glMatrixMode(GL_PROJECTION); <span class=\"comment\">//设置投影参数，表示下面进行投影变换。若改GL_PROJECTION为GL_MODEVIEW则进行视图变换。</span></span><br><span class=\"line\">  glLoadIdentity();            <span class=\"comment\">//通常我们在需要进行投影变换时要把当前矩形设置为单位矩阵，即glLoadIdentity()</span></span><br><span class=\"line\">  gluOrtho2D(<span class=\"number\">0.0</span>, <span class=\"number\">200.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">200.0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Display</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glClear(GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">  glPushMatrix(); <span class=\"comment\">//操作矩阵堆栈,调用函数，相当于把矩阵放到堆栈上</span></span><br><span class=\"line\">  glColor3f(<span class=\"number\">1.0f</span>, <span class=\"number\">1.0f</span>, <span class=\"number\">1.0f</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">70</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glRotated(<span class=\"number\">-90</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">  glScaled(<span class=\"number\">0.25</span>, <span class=\"number\">0.25</span>, <span class=\"number\">0.0</span>);</span><br><span class=\"line\">  glTranslated(<span class=\"number\">-100</span>, <span class=\"number\">-100</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  glBegin(GL_POLYGON);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">150</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">100</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">  glEnd();</span><br><span class=\"line\">  glPopMatrix();</span><br><span class=\"line\"></span><br><span class=\"line\">  glBegin(GL_POLYGON); <span class=\"comment\">//opengl要求指定顶点的位置必须在glBegin()后面，同时在glEnd()后面。</span></span><br><span class=\"line\">  glVertex2f(<span class=\"number\">50</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">150</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\">  glVertex2f(<span class=\"number\">100</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">  glEnd();</span><br><span class=\"line\">  glFlush();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> **argv)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  glutInit(&amp;argc, argv);</span><br><span class=\"line\">  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); <span class=\"comment\">//使用单缓存模式，如果GLUT_DOUBLE则为双缓存模式</span></span><br><span class=\"line\">  glutInitWindowSize(<span class=\"number\">600</span>, <span class=\"number\">600</span>);                <span class=\"comment\">//设置窗口大小</span></span><br><span class=\"line\">  glutInitWindowPosition(<span class=\"number\">100</span>, <span class=\"number\">100</span>);            <span class=\"comment\">//设置窗口位置</span></span><br><span class=\"line\">  glutCreateWindow(<span class=\"string\">&quot;Triangle&quot;</span>);</span><br><span class=\"line\">  glutDisplayFunc(Display);</span><br><span class=\"line\">  Initial();</span><br><span class=\"line\">  glutMainLoop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"实例代码-2\">实例代码</h3>\n<p><a href=\"https://github.com/Weidows/C--/tree/master/src/OpenGL\">实例代码</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Python",
                "OpenGL",
                "C",
                "conan"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/lang/python/anaconda/",
            "url": "https://blog.weidows.tech/post/lang/python/anaconda/",
            "title": "👍Anaconda-Python-水漂浅探池深浅.",
            "date_published": "2021-05-20T01:05:02.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-06-08 12:13:21\n * @FilePath: \\Blog-private\\source\\_posts\\python\\anaconda.md\n * @Description:\n * @!: *********************************************************************\n-->\n<h1>Anaconda-Python-水漂浅探池深浅.</h1>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#anaconda-python-%E6%B0%B4%E6%BC%82%E6%B5%85%E6%8E%A2%E6%B1%A0%E6%B7%B1%E6%B5%85\">Anaconda-Python-水漂浅探池深浅.</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE\">安装-配置</a>\n<ul>\n<li><a href=\"#linux-%E5%AE%89%E8%A3%85\">linux-安装</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95\">测试</a></li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE\">配置文件位置</a></li>\n<li><a href=\"#%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F-%E4%BB%A3%E7%90%86\">镜像加速-代理</a></li>\n<li><a href=\"#%E4%BF%AE%E6%94%B9%E4%BE%9D%E8%B5%96%E8%B7%AF%E5%BE%84\">修改依赖路径</a></li>\n<li><a href=\"#%E6%BF%80%E6%B4%BB%E7%BB%88%E7%AB%AF\">激活终端</a></li>\n<li><a href=\"#cuda-cudnn\">CUDA-cuDNN</a></li>\n</ul>\n</li>\n<li><a href=\"#pytorch\">PyTorch</a>\n<ul>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B\">实例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BE%9D%E8%B5%96\">依赖</a>\n<ul>\n<li><a href=\"#%E5%88%A0%E9%99%A4%E7%8E%AF%E5%A2%83\">删除环境</a></li>\n<li><a href=\"#%E6%9B%B4%E6%96%B0%E4%BE%9D%E8%B5%96\">更新依赖</a></li>\n<li><a href=\"#%E5%AF%BC%E5%87%BA-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\">导出-安装依赖</a></li>\n<li><a href=\"#%E6%B8%85%E7%90%86%E6%97%A0%E7%94%A8%E4%BE%9D%E8%B5%96\">清理无用依赖</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%8A%A5%E9%94%99\">报错</a>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99\">安装报错</a></li>\n<li><a href=\"#anaconda-%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80\">anaconda-无法打开</a></li>\n<li><a href=\"#%E7%8E%AF%E5%A2%83%E4%B8%8D%E4%B8%80%E8%87%B4\">环境不一致</a></li>\n<li><a href=\"#ssh-%E8%A7%A3%E9%87%8A%E5%99%A8%E4%BD%8D%E7%BD%AE%E9%97%AE%E9%A2%98\">ssh-解释器位置问题</a></li>\n<li><a href=\"#mayavi-%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98\">mayavi-安装问题</a></li>\n<li><a href=\"#oserror\">OSError</a></li>\n<li><a href=\"#conda-not-found\">conda-not-found</a></li>\n<li><a href=\"#install-%E6%8A%A5%E9%94%99\">install-报错</a></li>\n<li><a href=\"#%E6%9B%B4%E6%96%B0%E5%AF%BC%E8%87%B4%E7%9A%84%E4%BE%9D%E8%B5%96%E5%A4%B1%E6%95%88\">更新导致的依赖失效</a></li>\n<li><a href=\"#sslerror\">SSLError</a></li>\n<li><a href=\"#unable-find-candidates\">Unable-find-candidates</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"简介\">简介</h2>\n<blockquote>\n<p>anaconda 官网: <a href=\"https://www.anaconda.com/products/individual\">https://www.anaconda.com/products/individual</a></p>\n</blockquote>\n<ul>\n<li>\n<p>简单来说,它是 Python 的一个发行版,其中打包了很多附加工具,比如 <code>Jupyter</code>,<code>conda</code> 等等</p>\n<ul>\n<li>\n<p>可以理解为 anaconda 内置了 python,所以设备上安装的其他 Python 环境完全可以卸载掉了</p>\n</li>\n<li>\n<p>Python 一般会自带 pip 这个包管理器,anaconda 也不例外; 而且 anaconda 还带有另一个更强大的包管理器: <code>conda</code> <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup> <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"安装-配置\">安装-配置</h2>\n<ul>\n<li>\n<p>可以选择官网下载安装包安装,我这里是用的 <code>scoop </code>安装的</p>\n<ul>\n<li>\n<p>下载-&gt;安装-&gt;配置环境变量-&gt;改变运行环境, 在 scoop 中一步就可以完成,很方便 (官方的库中没有这个软件,需要添加其他库,<code>dorado</code>)</p>\n</li>\n<li>\n<p>这样安装避免了很多麻烦和错误,非常推荐!</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>小毛病</p>\n<p>anaconda 会把 scoop 里的环境识别为两个 (但实际上就一个)</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSnUD.png\" alt=\"20211002190135\" />\n<p>装的依赖多的话, 实际占用内存大的离谱</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Z6q5Bh.png\" alt=\"\"></p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"linux-安装\">linux-安装</h3>\n<p>linux 中可以通过 官方 shell 或者 AUR 安装, 但是安装后并没有 export 到 PATH,需要一步:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo cp /opt/anaconda/etc/profile.d/conda.sh /etc/profile.d/</span><br></pre></td></tr></table></figure>\n<p>另外这样装上后还会因为目录权限不够,无法安装依赖,需要提权</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo chmod -R 777 /opt/anaconda/</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"测试\">测试</h3>\n<ul>\n<li>\n<p>一个很关键的步骤: <code>重启电脑</code>. 如果没重启的话,环境变量有可能不生效,肯定无法正常打开.</p>\n</li>\n<li>\n<p>然后测试: 能显示出来东西就对了</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">conda</span> --version</span><br><span class=\"line\">conda <span class=\"literal\">info</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装后开始菜单会出来这么几个东西:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4hCu.png\" alt=\"20210520093618\" />\n<p>第一个就是 anaconda 主体;二三是终端,不用管它;四和六是附带的第三方软件.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>点第一个,会弹出几次黑框,然后出现下面面板就没问题了.</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4D41.png\" alt=\"20210520094007\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"配置文件位置\">配置文件位置</h3>\n<ul>\n<li>\n<p>Windows 中:</p>\n<ul>\n<li>\n<p>conda: <code>~\\.condarc 和 .conda\\</code></p>\n</li>\n<li>\n<p>pip: <code>~\\pip\\pip.ini</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"镜像加速-代理\">镜像加速-代理</h3>\n<blockquote>\n<p>清华镜像站给了教程: <a href=\"https://mirror.tuna.tsinghua.edu.cn/help/anaconda/\">Anaconda 镜像使用帮助</a></p>\n</blockquote>\n<ul>\n<li>\n<p>通过 navigator 添加进设置,或者直接修改 ~/.condarc</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVAdNv.png\" alt=\"20210520095331\" />\n</li>\n<li>\n<details>\n  <summary> 如果官方给的 https 协议的,会报错 </summary>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"code\"><pre><span class=\"line\">PS D:\\Game\\Github\\Blog-<span class=\"keyword\">private</span>&gt; conda search cuda</span><br><span class=\"line\">Loading channels: failed</span><br><span class=\"line\"></span><br><span class=\"line\">CondaHTTPError: HTTP <span class=\"number\">000</span> CONNECTION FAILED <span class=\"keyword\">for</span> url &lt;<span class=\"keyword\">https</span>://mirrors.bfsu.edu.cn/anaconda/pkgs/main/win<span class=\"number\">-64</span>/repodata.json&gt;</span><br><span class=\"line\">Elapsed: -</span><br><span class=\"line\"></span><br><span class=\"line\">An HTTP error occurred when trying <span class=\"built_in\">to</span> retrieve this <span class=\"built_in\">URL</span>.</span><br><span class=\"line\">HTTP errors are often intermittent, <span class=\"keyword\">and</span> <span class=\"keyword\">a</span> simple retry will <span class=\"built_in\">get</span> you <span class=\"keyword\">on</span> <span class=\"title\">your</span> <span class=\"title\">way</span>.</span><br><span class=\"line\"><span class=\"string\">&#x27;https://mirrors.bfsu.edu.cn/anaconda/pkgs/main/win-64&#x27;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>\n<p>找了半天教程,发现只有一篇有效: <code>https -&gt; http</code></p>\n<blockquote>\n<p><a href=\"https://segmentfault.com/q/1010000008668178\">Anaconda 使用 conda 连接网络出现错误</a></p>\n</blockquote>\n<figure class=\"highlight less\"><table><tr><td class=\"code\"><pre><span class=\"line\">channels:</span><br><span class=\"line\">  - defaults</span><br><span class=\"line\">show_channel_urls: true</span><br><span class=\"line\">default_channels:</span><br><span class=\"line\">  - http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class=\"line\">  - http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/<span class=\"attribute\">r</span></span><br><span class=\"line\"><span class=\"attribute\">  - http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span></span><br><span class=\"line\"><span class=\"attribute\">custom_channels</span>:</span><br><span class=\"line\">  <span class=\"attribute\">conda-forge</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">msys2</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">bioconda</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">menpo</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">pytorch</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">pytorch-lts</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br><span class=\"line\">  <span class=\"attribute\">simpleitk</span>: <span class=\"attribute\">http</span>:<span class=\"comment\">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>最近又发现一个导致此错误的问题: 挂-木弟,关掉试试.</p>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>pip</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">pip config set global.index-url https：//pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">global</span>]</span><br><span class=\"line\"><span class=\"keyword\">index</span>-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\"><span class=\"keyword\">trusted</span>-host = mirrors.aliyun.com</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"修改依赖路径\">修改依赖路径</h3>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/maggieq8324/p/12099068.html\">pip install 默认安装路径修改</a></p>\n</blockquote>\n<ul>\n<li>\n<p>anaconda 安装后默认情况下 pip/conda 的库会堆在 anaconda 里面(所以一般不用动了)</p>\n</li>\n<li>\n<p>依赖路径</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">python -m site</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"code\"><pre><span class=\"line\">❯   python -m site</span><br><span class=\"line\">sys.path = [</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Github<span class=\"symbol\">\\\\</span>Blog-private&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>python38.zip&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>DLLs&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib<span class=\"symbol\">\\\\</span>site-packages&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib<span class=\"symbol\">\\\\</span>site-packages<span class=\"symbol\">\\\\</span>locket-0.2.1-py3.8.egg&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib<span class=\"symbol\">\\\\</span>site-packages<span class=\"symbol\">\\\\</span>win32&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib<span class=\"symbol\">\\\\</span>site-packages<span class=\"symbol\">\\\\</span>win32<span class=\"symbol\">\\\\</span>lib&#x27;,</span><br><span class=\"line\">    &#x27;D:<span class=\"symbol\">\\\\</span>Game<span class=\"symbol\">\\\\</span>Scoop<span class=\"symbol\">\\\\</span>apps<span class=\"symbol\">\\\\</span>anaconda3<span class=\"symbol\">\\\\</span>current<span class=\"symbol\">\\\\</span>lib<span class=\"symbol\">\\\\</span>site-packages<span class=\"symbol\">\\\\</span>Pythonwin&#x27;,</span><br><span class=\"line\">]</span><br><span class=\"line\">USER_BASE: &#x27;C:<span class=\"symbol\">\\\\</span>Users<span class=\"symbol\">\\\\</span>29845<span class=\"symbol\">\\\\</span>AppData<span class=\"symbol\">\\\\</span>Roaming<span class=\"symbol\">\\\\</span>Python&#x27; (exists)</span><br><span class=\"line\">USER_SITE: &#x27;C:<span class=\"symbol\">\\\\</span>Users<span class=\"symbol\">\\\\</span>29845<span class=\"symbol\">\\\\</span>AppData<span class=\"symbol\">\\\\</span>Roaming<span class=\"symbol\">\\\\</span>Python<span class=\"symbol\">\\\\</span>Python38<span class=\"symbol\">\\\\</span>site-packages&#x27; (doesn&#x27;t exist)</span><br><span class=\"line\">ENABLE_USER_SITE: False</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>配置文件路径 (非必要不然不要修改,此处可以更改上面的 USER_BASE/USER_SITE,但实测并未生效)</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">python</span> -m site -<span class=\"keyword\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"激活终端\">激活终端</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda <span class=\"keyword\">init</span> 终端名(powershell)</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"CUDA-cuDNN\">CUDA-cuDNN</h3>\n<ul>\n<li>\n<p>这两个是为了调用显卡性能,加速训练.</p>\n<p>需要注册 NVIDIA 账号才能下载.</p>\n<blockquote>\n<p><a href=\"https://developer.nvidia.com/cuda-zone\">下载并安装 CUDA</a> <br>\n<a href=\"https://developer.nvidia.com/cudnn\">下载并安装 cuDNN Library</a></p>\n</blockquote>\n<hr>\n</li>\n<li>\n<p>通过 scoop 安装 CUDA (很有可能安装有问题,即使安装成功也是不能使用的)</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>cuda</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>测试了一下, cuDNN Library 也是必须的,没配置的话会报错:</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">RuntimeError:</span> cuDNN <span class=\"keyword\">error</span>: CUDNN_STATUS_EXECUTION_FAILED</span><br></pre></td></tr></table></figure>\n<p><code>配置方法</code>: 解压,把<code>bin\\</code>添加进 path</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"PyTorch\">PyTorch</h2>\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/54350088\">windows10 下安装 GPU 版 pytorch 简明教程</a> <br>\n<a href=\"https://pytorch.org/get-started/locally\">PyTorch 官网</a> <br>\n<a href=\"https://zhuanlan.zhihu.com/p/106394476\">利用 Conda 安装深度学习框架 Pytorch</a></p>\n</blockquote>\n<ul>\n<li>\n<p>安装 (with CUDA 版本):</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">conda</span> install pytorch==<span class=\"number\">1</span>.<span class=\"number\">9</span>.<span class=\"number\">0</span> torchvision==<span class=\"number\">0</span>.<span class=\"number\">10</span>.<span class=\"number\">0</span> torchaudio==<span class=\"number\">0</span>.<span class=\"number\">9</span>.<span class=\"number\">0</span> cudatoolkit=<span class=\"number\">11</span>.<span class=\"number\">3</span> -c pytorch -c conda-forge</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>测试 (以下图方式进入 <code>Open with python</code>) :</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVL8KS.png\" alt=\"20210520190432\" />\n<p>测试下方命令就可以了</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">import</span> torch</span><br><span class=\"line\"><span class=\"attribute\">x</span> = torch.rand(<span class=\"number\">5</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"attribute\">print</span>(x)</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>预期结果: (说明 pytouch 没得问题)</p>\n<figure class=\"highlight inform7\"><table><tr><td class=\"code\"><pre><span class=\"line\">tensor(<span class=\"comment\">[<span class=\"comment\">[0.3380, 0.3845, 0.3217]</span>,</span></span><br><span class=\"line\"><span class=\"comment\">        <span class=\"comment\">[0.8337, 0.9050, 0.2650]</span>,</span></span><br><span class=\"line\"><span class=\"comment\">        <span class=\"comment\">[0.2979, 0.7141, 0.9069]</span>,</span></span><br><span class=\"line\"><span class=\"comment\">        <span class=\"comment\">[0.1449, 0.1132, 0.1375]</span>,</span></span><br><span class=\"line\"><span class=\"comment\">        <span class=\"comment\">[0.4675, 0.3947, 0.1426]</span>]</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"实例\">实例</h3>\n<blockquote>\n<p>通过一段音频,合成相似声音的项目: <a href=\"https://github.com/CorentinJ/Real-Time-Voice-Cloning\">CorentinJ/Real-Time-Voice-Cloning</a></p>\n</blockquote>\n<ul>\n<li>\n<p>CUDA: on,可以看到 python 调用了 <code>CPU+GPU</code></p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVAAGr.png\" alt=\"20210521102521\" />\n</li>\n<li>\n<p>深度学习项目吃显存好离谱啊!</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVA6R6.png\" alt=\"20210521104118\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"依赖\">依赖</h2>\n<h3 id=\"删除环境\">删除环境</h3>\n<figure class=\"highlight lua\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda <span class=\"built_in\">remove</span> -n xxx <span class=\"comment\">--all</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"更新依赖\">更新依赖</h3>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda <span class=\"keyword\">update</span> --<span class=\"keyword\">all</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"导出-安装依赖\">导出-安装依赖</h3>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/chekongfu/article/details/83187591\">pip 和 conda 批量导出、安装组件(requirements.txt)</a></p>\n</blockquote>\n<ul>\n<li>\n<p>安装依赖</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">install</span> -r requirements.txt</span><br><span class=\"line\">conda <span class=\"keyword\">install</span> --<span class=\"keyword\">file</span> requirements.txt (尽量不要用,有很多问题)</span><br><span class=\"line\">conda env create -f env.yaml</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>导出依赖</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip <span class=\"keyword\">freeze</span> &gt; requirements.txt</span><br><span class=\"line\">conda list -e &gt; requirements.txt</span><br><span class=\"line\">conda env export &gt; env.yaml</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<details>\n  <summary> conda/pip 导出的 requirement.txt 有可能有个问题 </summary>\n<hr>\n<ul>\n<li>\n<p>pip 导出的,以及安装报错</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">anaconda-client @ file:///C:/ci/anaconda-client_1624480273070/work</span><br><span class=\"line\">anaconda-navigator==2.1.0</span><br><span class=\"line\">anyio==3.3.4</span><br><span class=\"line\">appdirs==1.4.4</span><br><span class=\"line\">argon2-cffi @ file:///C:/ci/argon2-cffi_1613037959010/work</span><br><span class=\"line\">async-generator @ file:///home/ktietz/src/ci/async_generator_1611927993394/work</span><br><span class=\"line\">attrs @ file:///tmp/build/80754af9/attrs_1620827162558/work</span><br><span class=\"line\">audioread==2.1.9</span><br><span class=\"line\">Babel @ file:///tmp/build/80754af9/babel_1620871417480/work</span><br><span class=\"line\">backcall @ file:///home/ktietz/src/ci/backcall_1611930011877/work</span><br><span class=\"line\">backports.functools-lru-cache @ file:///tmp/build/80754af9/backports.functools_lru_cache_1618170165463/work</span><br><span class=\"line\">backports.tempfile @ file:///home/linux1/recipes/ci/backports.tempfile_1610991236607/work</span><br><span class=\"line\">backports.weakref==1.0.post1</span><br><span class=\"line\">beautifulsoup4 @ file:///home/linux1/recipes/ci/beautifulsoup4_1610988766420/work</span><br><span class=\"line\">bleach @ file:///tmp/build/80754af9/bleach_1626470256873/work</span><br><span class=\"line\">brotlipy==0.7.0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight subunit\"><table><tr><td class=\"code\"><pre><span class=\"line\">❯ pip install -r .\\pip-list.bak</span><br><span class=\"line\">Looking in indexes: http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">Processing c:\\ci\\anaconda-client_1624480273070\\work</span><br><span class=\"line\"><span class=\"keyword\">ERROR: </span>Could not install packages due to an OSError: [Errno 2] No such file or directory: &#x27;C:\\\\ci\\\\anaconda-client_1624480273070\\\\work&#x27;</span><br></pre></td></tr></table></figure>\n<p>解决办法就是硬匹配所有 <code> @ file:</code> 把后面的删掉.</p>\n<hr>\n</li>\n</ul>\n</details>\n</li>\n</ul>\n<hr>\n<h3 id=\"清理无用依赖\">清理无用依赖</h3>\n<p>喏, 随便一清就十来个 G…</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"code\"><pre><span class=\"line\">╰─ conda clean -<span class=\"selector-tag\">p</span></span><br><span class=\"line\">Will remove <span class=\"number\">496</span> (<span class=\"number\">13.93</span> GB) <span class=\"built_in\">package</span>(s).</span><br><span class=\"line\">Proceed ([y]/n)?</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"报错\">报错</h2>\n<h3 id=\"安装报错\">安装报错</h3>\n<figure class=\"highlight console\"><table><tr><td class=\"code\"><pre><span class=\"line\">╭─    D:\\Repo\\Weidows\\python   master                              ✔  22:53:48  ─╮</span><br><span class=\"line\">╰─ python</span><br><span class=\"line\">Fatal Python error: init_import_site: Failed to import the site module</span><br><span class=\"line\">Python runtime state: initialized</span><br><span class=\"line\">ModuleNotFoundError: No module named &#x27;site&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">Current thread 0x00002a54 (most recent call first):</span><br><span class=\"line\">&lt;no Python frame&gt;</span><br></pre></td></tr></table></figure>\n<p>由于使用 scoop 安装的,我以为是我自己环境的错误,后来发现是因为安装脚本中 <code>persist</code> 软链接会导致 anaconda 内部错误</p>\n<p>这个库 <code>anaconda3_chawyehsu</code> 给的我启发,虽然这个安装脚本也不并不很好用</p>\n<p>于是我在自己库中添加了一个: <a href=\"https://github.com/Weidows-projects/scoop-3rd/blob/main/bucket/anaconda3.json\">https://github.com/Weidows-projects/scoop-3rd/blob/main/bucket/anaconda3.json</a></p>\n<hr>\n<h3 id=\"anaconda-无法打开\">anaconda-无法打开</h3>\n<ol>\n<li>\n<p>尝试管理员模式</p>\n</li>\n<li>\n<p>检查系统是不是开了 http 代理 (挂-了-梯-子?),把 http 模式换成 PAC 模式试试,我遇到这个错误可以这样解决</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"环境不一致\">环境不一致</h3>\n<ul>\n<li>\n<p>之前遇到个问题苦恼了很久:</p>\n<p>有一个 py 脚本我想通过 bat 脚本调用执行,但是一直报错</p>\n<figure class=\"highlight vhdl\"><table><tr><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  <span class=\"keyword\">File</span> <span class=\"string\">&quot;D:\\Game\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\urllib3\\connectionpool.py&quot;</span>, <span class=\"literal\">line</span> <span class=\"number\">688</span>, <span class=\"keyword\">in</span> urlopen</span><br><span class=\"line\">    conn = self._get_conn(timeout=pool_timeout)</span><br><span class=\"line\">  <span class=\"keyword\">File</span> <span class=\"string\">&quot;D:\\Game\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\urllib3\\connectionpool.py&quot;</span>, <span class=\"literal\">line</span> <span class=\"number\">280</span>, <span class=\"keyword\">in</span> _get_conn</span><br><span class=\"line\">    <span class=\"keyword\">return</span> conn <span class=\"keyword\">or</span> self._new_conn()</span><br><span class=\"line\">  <span class=\"keyword\">File</span> <span class=\"string\">&quot;D:\\Game\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\urllib3\\connectionpool.py&quot;</span>, <span class=\"literal\">line</span> <span class=\"number\">979</span>, <span class=\"keyword\">in</span> _new_conn</span><br><span class=\"line\">    raise SSLError(</span><br><span class=\"line\">urllib3.exceptions.SSLError: Can<span class=\"symbol\">&#x27;t</span> connect <span class=\"keyword\">to</span> HTTPS URL because the SSL module <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> available.</span><br></pre></td></tr></table></figure>\n<p>大致意思就是缺少依赖,但是我已经装好依赖了,而且通过 PowerShell 可以正常运行</p>\n</li>\n<li>\n<p>后来突然想到是 python 环境没开:</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda <span class=\"built_in\">activate</span> base</span><br></pre></td></tr></table></figure>\n<p>事情不大,麻烦不小</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"ssh-解释器位置问题\">ssh-解释器位置问题</h3>\n<blockquote>\n<p>There is no Pip installer available in the selected environment.</p>\n</blockquote>\n<p>问题出在 vscode 能找到 python 可执行文件, 但是找解释器(库)时找错了位置</p>\n<p>按 <code>ctrl + shift + P</code> -&gt; <code>Python: Select Interpreter</code> 选择远程服务器上的解释器位置 <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<hr>\n<h3 id=\"mayavi-安装问题\">mayavi-安装问题</h3>\n<div class=\"tabs\" id=\"起因\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#起因-1\">起因</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#起因-2\">经过</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#起因-3\">结果</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"起因-1\"><figure class=\"highlight console\"><table><tr><td class=\"code\"><pre><span class=\"line\">(dair) liuwei@adept2080-X11DPG-OT:~/code/DAIR-V2X$ python tools/visualize/vis_label_in_3d.py --task pcd_label --pcd-path &quot;../link2paths/DAIR-V2X-Copy/cooperative-vehicle-infrastructure/vehicle-side/velodyne&quot; --label-path &quot;../link2paths/DAIR-V2X-Copy/cooperative-vehicle-infrastructure/vehicle-side/label/camera&quot;</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File &quot;tools/visualize/vis_label_in_3d.py&quot;, line 3, in &lt;module&gt;</span><br><span class=\"line\">    import mayavi.mlab as mlab</span><br><span class=\"line\">ModuleNotFoundError: No module named &#x27;mayavi&#x27;</span><br></pre></td></tr></table></figure>\n<p>首先, 乱装了一番, 排除 CUDA/Python 版本问题</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"起因-2\"><figure class=\"highlight console\"><table><tr><td class=\"code\"><pre><span class=\"line\">(dair) liuwei@adept2080-X11DPG-OT:~/code/DAIR-V2X$ conda install mayavi</span><br><span class=\"line\">Collecting package metadata (current_repodata.json): done</span><br><span class=\"line\">Solving environment: failed with initial frozen solve. Retrying with flexible solve.</span><br><span class=\"line\">Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.</span><br><span class=\"line\">Collecting package metadata (repodata.json): done</span><br><span class=\"line\">Solving environment: failed with initial frozen solve. Retrying with flexible solve.</span><br><span class=\"line\">Solving environment: \\</span><br><span class=\"line\">Found conflicts! Looking for incompatible packages.</span><br><span class=\"line\">This can take several minutes.  Press CTRL-C to abort.</span><br><span class=\"line\">failed</span><br><span class=\"line\"></span><br><span class=\"line\">UnsatisfiableError: The following specifications were found</span><br><span class=\"line\">to be incompatible with the existing python installation in your environment:</span><br><span class=\"line\"></span><br><span class=\"line\">Specifications:</span><br><span class=\"line\"></span><br><span class=\"line\">  - mayavi -&gt; python[version=&#x27;&gt;=2.7,&lt;2.8.0a0|&gt;=3.6,&lt;3.7.0a0|&gt;=3.7,&lt;3.8.0a0&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">Your python: python=3.8</span><br><span class=\"line\"></span><br><span class=\"line\">If python is on the left-most side of the chain, that&#x27;s the version you&#x27;ve asked for.</span><br><span class=\"line\">When python appears to the right, that indicates that the thing on the left is somehow</span><br><span class=\"line\">not available for the python version you are constrained to. Note that conda will not</span><br><span class=\"line\">change your python version to a different minor version unless you explicitly specify</span><br><span class=\"line\">that.</span><br><span class=\"line\"></span><br><span class=\"line\">The following specifications were found to be incompatible with your system:</span><br><span class=\"line\"></span><br><span class=\"line\">  - feature:/linux-64::__glibc==2.27=0</span><br><span class=\"line\">  - feature:|@/linux-64::__glibc==2.27=0</span><br><span class=\"line\">  - mayavi -&gt; libgcc-ng[version=&#x27;&gt;=7.3.0&#x27;] -&gt; __glibc[version=&#x27;&gt;=2.17&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\">Your installed version is: 2.27</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(dair) liuwei@adept2080-X11DPG-OT:~/code/DAIR-V2X$ ^C</span><br></pre></td></tr></table></figure>\n<p>能找到这, 说明也看到这个驴唇不对马嘴的报错了, 然而这个报错指出的信息并不准确, 只能知道有个地方有环境问题/依赖冲突</p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"起因-3\"><p>通过这篇文章, 试了试本地安装, 发现是 <code>VTK</code> 这个package有问题 <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda install vtk</span><br><span class=\"line\">conda install mayavi</span><br></pre></td></tr></table></figure><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<hr>\n<h3 id=\"OSError\">OSError</h3>\n<ol>\n<li>\n<blockquote>\n<p>OSError: [WinError 1455] 页面文件太小，无法完成操作。 Error loading “D:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\torch\\lib\\cudnn_cnn_train64_8.dll” or one of its dependencies.</p>\n</blockquote>\n<p>重启电脑解决</p>\n</li>\n<li>\n<blockquote>\n<p>OSError: [WinError 182] 操作系统无法运行 %1。 Error loading “D:\\Scoop\\apps\\anaconda3\\current\\lib\\site-packages\\torch\\lib\\shm.dll” or one of its dependencies.</p>\n</blockquote>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"code\"><pre><span class=\"line\">pip install <span class=\"built_in\">int</span>el-openmp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"conda-not-found\">conda-not-found</h3>\n<blockquote>\n<p>ModuleNotFoundError: No module named ‘conda’</p>\n</blockquote>\n<p>装 pytorch 后报错如上, 应该是自带 python 版本问题, 新建个环境指定版本 <code>conda create -n new python=3.7</code></p>\n<hr>\n<h3 id=\"install-报错\">install-报错</h3>\n<p>conda install pydotplus 时遇到报错:</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">RemoveError: &#x27;requests&#x27; is a dependency of conda and cannot be removed from ...</span></span><br></pre></td></tr></table></figure>\n<p>遇到这报错, 更新下 conda,然后再安装</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"code\"><pre><span class=\"line\">conda <span class=\"keyword\">update</span> --<span class=\"keyword\">force</span> conda</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"更新导致的依赖失效\">更新导致的依赖失效</h3>\n<blockquote>\n<p>from _ctypes import Union, Structure, Array ImportError: DLL load failed while importing _ctypes: 找不到指定的模块。</p>\n</blockquote>\n<p>奇葩的报错, 最简单的解决办法就是导出依赖列表, 删除此环境并重装</p>\n<hr>\n<h3 id=\"SSLError\">SSLError</h3>\n<blockquote>\n<p>Caused by SSLError(&quot;Can’t connect to HTTPS URL because the SSL module is not</p>\n</blockquote>\n<p>把 <code>Scripts, Library\\\\bin</code> 这俩加入 path <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<hr>\n<h3 id=\"Unable-find-candidates\">Unable-find-candidates</h3>\n<blockquote>\n<p>Unable to find installation candidates for numpy-posit</p>\n</blockquote>\n<p>这种一般是因为要安装的 python 包没有支持此系统/平台, 如上的 <a href=\"https://pypi.org/project/numpy-posit/\">numpy-posit</a>, 没有对应 windows 的编译版本, 需要通过 git 安装</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://www.zhihu.com/question/395145313\">请问大神们，pip install 和 conda install 有什么区别吗？</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: 此文章很清晰的介绍了 Anaconda 的安装使用: <a href=\"https://zhuanlan.zhihu.com/p/75717350\">https://zhuanlan.zhihu.com/p/75717350</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://stackoverflow.com/questions/50993566/vscode-there-is-no-pip-installer-available-in-the-selected-environment\">https://stackoverflow.com/questions/50993566/vscode-there-is-no-pip-installer-available-in-the-selected-environment</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://zhuanlan.zhihu.com/p/517215955\">安装 mayavi 遇到的一些问题</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://blog.csdn.net/vosoland/article/details/117593773\">Caused by SSLError(“Can‘t connect to HTTPS URL because the SSL module is not available)_vosoland 的博客-CSDN 博客</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Python",
                "Anaconda"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/others/LearnWay/",
            "url": "https://blog.weidows.tech/post/others/LearnWay/",
            "title": "😍Weidows-の成长路线",
            "date_published": "2020-12-30T03:42:22.000Z",
            "content_html": "<h1>Weidows-の成长路线</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @Date: 2020-12-30 11:42:22\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 13:23:52\n * @FilePath: \\Blog-private\\source\\_posts\\others\\LearnWay.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#weidows-%E3%81%AE%E6%88%90%E9%95%BF%E8%B7%AF%E7%BA%BF\">Weidows-の成长路线</a>\n<ul>\n<li><a href=\"#java\">Java</a></li>\n<li><a href=\"#%E5%89%8D%E7%AB%AF\">前端</a></li>\n<li><a href=\"#cc\">C/C++</a></li>\n<li><a href=\"#python\">Python</a></li>\n<li><a href=\"#%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7\">开发工具</a></li>\n<li><a href=\"#%E6%B3%9B%E5%9F%9F\">泛域</a></li>\n<li><a href=\"#%E8%AE%BE%E8%AE%A1\">设计</a></li>\n<li><a href=\"#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\">基础知识</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<div class=\"tabs\" id=\"关于\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#关于-1\">关于</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#关于-2\"><i class=\"fab fa-apple-pay\"></i>为什么写这篇文章</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#关于-3\"><i class=\"fas fa-bomb\"></i>注意</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"关于-1\"><ul>\n<li>\n<p>有些指引确实有参考价值,需要结合自身能力和需求体系学习.</p>\n</li>\n<li>\n<p>这个只是个人路线,并非普遍最优解 (况且很多技术<code>已经过时</code>了)</p>\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"关于-2\"><ul>\n<li>\n<p>学习平台比较多,涉猎范围在<code>单方面无法收藏齐全</code>,这个文章算是概览,方便寻找.</p>\n<ul>\n<li>比如我在中国大学 MOOC 起步,在 B 站刷视频课程,在 CSDN 水技术资料,在 github 爬高星项目,在逼乎看技术走向方面的回答.</li>\n</ul>\n</li>\n<li>\n<p><code>此文章只做推荐,不牵扯任何利益关系.</code></p>\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"关于-3\"><ul>\n<li>\n<p><code>学习编程是非线性成长</code>,也就是说在能看懂的情况下都可以学</p>\n<ul>\n<li>\n<p>想速成的话往往效率和方式比较低下,注意规避.</p>\n</li>\n<li>\n<p>一个技术很大可能会牵扯其他多个技术栈,能力提升一般呈辐射性网状的.</p>\n</li>\n</ul>\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Java\">Java</h2>\n<blockquote class=\"pullquote mindmap mindmap-lg\"><ul>\n<li>Java\n<ul>\n<li>阶段\n<ul>\n<li>入门\n<ul>\n<li><a href=\"https://www.icourse163.org/course/0809ZJU013-1001541001?outvandor=zw_mooc_pclszykctj_\">零基础学 Java 语言</a></li>\n</ul>\n</li>\n<li>进阶\n<ul>\n<li><a href=\"https://www.icourse163.org/course/0809ZJU012-1001542001?outvandor=zw_mooc_pclszykctj_\">面向对象程序设计——Java 语言</a></li>\n</ul>\n</li>\n<li>就业级\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1CJ411m7gg\">求知讲堂零基础 Java 入门编程视频教程 学完可就业</a>\n<ul>\n<li>个人记录,不推荐再学习!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>阶段回顾\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1MJ411v7tJ?from=search&amp;seid=6413568957300849811\">【狂神说 Java】JavaSE 阶段回顾总结</a>\n<ul>\n<li>很不错的复习!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>网络编程\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1LJ411z7vY\">【狂神说 Java】网络编程实战讲解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45717355/article/details/110945343\">【狂神说 Java】网络编程</a></li>\n</ul>\n</li>\n<li>JavaWeb\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV12J411M7Sj\">【狂神说 Java】JavaWeb 入门到实战</a></li>\n<li><a href=\"https://blog.csdn.net/bell_love/article/details/105667638\">B 站—【狂神说 Java】JavaWeb 入门到实战—笔记</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>特性\n<ul>\n<li>文档注释\n<ul>\n<li><a href=\"https://blog.csdn.net/lsy0903/article/details/89893934\">Java 文档注释用法+JavaDoc 的使用详解</a></li>\n</ul>\n</li>\n<li>Lambda\n<ul>\n<li><a href=\"https://www.runoob.com/java/java8-lambda-expressions.html\">Java Lambda 表达式</a></li>\n<li><a href=\"https://objcoding.com/2019/03/04/lambda/\">关于 Java Lambda 表达式看这一篇就够了</a></li>\n</ul>\n</li>\n<li>多线程\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1V4411p7EF\">【狂神说 Java】多线程详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41963554/article/details/108808824\">狂神说多线程笔记</a></li>\n</ul>\n</li>\n<li>深/浅 clone\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangjg_blog/article/details/18369201\">详解 Java 中的 clone 方法 – 原型模式</a></li>\n<li><a href=\"https://zhidao.baidu.com/question/123775480.html\">java 中深克隆与浅克隆的区别</a></li>\n</ul>\n</li>\n<li>GUI\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42035966/article/details/82258199\">Java-GUI 快速入门</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>框架\n<ul>\n<li>MyBatis\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1NE411Q7Nx\">【狂神说 Java】Mybatis 最新完整教程 IDEA 版通俗易懂</a></li>\n<li><a href=\"https://blog.csdn.net/DDDDeng_/article/details/106927021\">狂神说 Java Mybatis 笔记</a></li>\n</ul>\n</li>\n<li>Spring\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42453117/article/details/104758942\">什么？搞 Java 的你还不会 Spring？一篇文章带你掌握</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1WE411d7Dv\">【狂神说 Java】Spring5 最新完整教程 IDEA 版通俗易懂</a></li>\n</ul>\n</li>\n<li>Spring MVC\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44635198/article/details/107444925\">SpringMVC 笔记（狂神）</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1aE41167Tu\">【狂神说 Java】SpringMVC 最新教程 IDEA 版通俗易懂</a></li>\n<li><a href=\"https://www.cnblogs.com/clwydjgs/p/9255046.html\">@Controller 和@RestController 的区别？</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1RE41127rv\">【狂神说 Java】SSM 框架最新整合教学 IDEA 版</a></li>\n</ul>\n</li>\n<li>Spring Boot\n<ul>\n<li><a href=\"https://blog.csdn.net/guorui_java/article/details/107379648\">Spring Boot 常用注解（绝对经典）</a></li>\n</ul>\n</li>\n<li>日志\n<ul>\n<li><a href=\"https://blog.csdn.net/u013068377/article/details/107239878\">Java 最详细常用日志框架介绍</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>工具类\n<ul>\n<li>I/O 序列化/ObjectOutputStream\n<ul>\n<li><a href=\"https://blog.csdn.net/cc1969281777/article/details/87068106\">对象操作流 ObjectOutputStream</a></li>\n</ul>\n</li>\n<li>OPTIONAL\n<ul>\n<li><a href=\"https://www.cnblogs.com/zhangboyu/p/7580262.html\">理解、学习与使用 JAVA 中的 OPTIONAL</a></li>\n</ul>\n</li>\n<li>URL\n<ul>\n<li><a href=\"https://www.cnblogs.com/kissdodog/archive/2013/04/22/3034898.html\">System.Uri 类 - 获取 Url 的各种属性，文件名，参数，域名，端口等等</a></li>\n</ul>\n</li>\n<li>Stream\n<ul>\n<li><a href=\"https://blog.csdn.net/happyheng/article/details/52832313\">Java8 Stream 详解</a></li>\n</ul>\n</li>\n<li>单元测试 Junit\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzIxNzQwNjM3NA==&amp;mid=2247490821&amp;idx=1&amp;sn=855b8ede1287dd95787a010c3245c8e7&amp;chksm=97fb13cca08c9ada0af423bc4e94ba359d810c32c23ab2a546abaaf30e152c92b826efc1c01f&amp;xtrack=1&amp;scene=90&amp;subscene=93&amp;sessionid=1609292024&amp;clicktime=1609292488&amp;enterid=1609292488&amp;ascene=56&amp;devicetype=android-29&amp;version=27001637&amp;nettype=WIFI&amp;abtest_cookie=AAACAA%3D%3D&amp;lang=zh_CN&amp;exportkey=Af%2BuVL395LWe0DRJ%2Fc8R%2FbA%3D&amp;pass_ticket=6zFqmo%2F%2Fh%2B276SfQuaklQyBIbfcB0rcAk2nXRgO9SV%2FEeTr8pGbFXbfRhR%2FDXMx%2F&amp;wx_header=1\">JUnit：别再用 main 方法测试了，好吗？</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"前端\">前端</h2>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>前端\n<ul>\n<li>HTML/CSS\n<ul>\n<li>注意\n<ul>\n<li>一般这俩是合在一起学的,相关性较强.</li>\n<li>都是<code>前端基础</code>,但是后端也必须要会.</li>\n</ul>\n</li>\n<li>入门\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV14J4114768\">黑马程序员 pink 老师前端入门视频教程 HTML5+CSS3+移动端布局-flex 布局 rem 布局响应式布局摹客蓝湖使用-简单有趣好玩</a>\n<ul>\n<li>全网最知名的,应该没有之一</li>\n<li>视频贼多,把基础趟完跑路.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>进阶\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1YJ411a7dy\">【狂神说 Java】CSS3 最新教程快速入门通俗易懂</a></li>\n</ul>\n</li>\n<li>Markdown\n<ul>\n<li>这个没有什么特效课程,需要循序渐进的使用 markdown 记笔记</li>\n<li>把一些关键词用熟悉,渐渐地文章就变得好起来了</li>\n<li>markdown 这种归档式,目录式以及层级递进式的笔记方式,能很好地锻炼表达思维</li>\n<li>而且对学习效果有显著提升.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>JavaScript\n<ul>\n<li>进阶\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1JJ41177di\">【狂神说 Java】JavaScript 最新教程通俗易懂</a>\n<ul>\n<li>因为有 Java 基础,入门阶段直接过去了.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>异步\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000007535316\">理解 JavaScript 的 async/await</a></li>\n</ul>\n</li>\n<li>Console\n<ul>\n<li>可以在网站中做一些有意思的事,比如在我的博客这里,按 F12 可以看到.</li>\n<li><a href=\"http://cn.voidcc.com/question/p-nyquxitt-dn.html\">如何在控制台中隐藏日志消息的来源？</a></li>\n<li><a href=\"https://www.cnblogs.com/suwanbin/p/13383064.html\">js 控制台 console 骚操作-打印图片-自定义样式-字符画</a></li>\n</ul>\n</li>\n<li>闭包\n<ul>\n<li><a href=\"https://www.jb51.net/article/166905.htm\">JS 自执行函数原理及用法</a></li>\n</ul>\n</li>\n<li>Ajax\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1Kt411u7BV\">【狂神说 Java】一小时掌握 Ajax</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>大前端\n<ul>\n<li>Vue.js\n<ul>\n<li><a href=\"https://blog.csdn.net/DDDDeng_/article/details/107475920\">狂神说 Vue 笔记</a>\n<ul>\n<li>有一段时间没跟着视频学习了,光看文章的话,学起来还挺快</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>跨域\n<ul>\n<li><a href=\"../../lang/JavaScript/CORS\">😡 一次解决 CORS 经验记录.</a></li>\n</ul>\n</li>\n<li>工具类\n<ul>\n<li><a href=\"../../experience/dev/sql-problem\">🚚 开发之旅~</a></li>\n</ul>\n</li>\n<li>其他\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s/qNJPkSkMTWNYjjKMp4rwmA\">如何做到修改 node_module 中的包，却不受重新安装的影响</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"C-C\">C/C++</h2>\n<ul>\n<li>\n<p>个人比较喜欢把 C 和 C++放在一起,虽然 C++并没学过(不过倒是能看懂).</p>\n</li>\n<li>\n<p>全程学的<code>翁凯</code>老师的,讲的很好.</p>\n</li>\n</ul>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>C/C++\n<ul>\n<li>入门课程\n<ul>\n<li><a href=\"https://www.icourse163.org/course/0809ZJU007A-199001?outvandor=zw_mooc_pclszykctj_\">程序设计入门——C 语言</a></li>\n</ul>\n</li>\n<li>进阶课程\n<ul>\n<li><a href=\"https://www.icourse163.org/course/ZJU-200001\">C 语言程序设计进阶</a></li>\n</ul>\n</li>\n<li>链表\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1Rb411F738\">1 个小时学会单链表，C 语言数据结构专题</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Python\">Python</h2>\n<p>用的比学得多…很多时候现学现用</p>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>Python\n<ul>\n<li>基础\n<ul>\n<li><a href=\"https://www.runoob.com/python3/python3-tutorial.html\">Python 3 教程</a></li>\n</ul>\n</li>\n<li>文章\n<ul>\n<li><a href=\"../../lang/python/anaconda\">👍Anaconda-Python-水漂浅探池深浅.</a></li>\n</ul>\n</li>\n<li>工具\n<ul>\n<li><a href=\"https://www.cnblogs.com/wanglvtao/p/11140025.html\">Python 配置管理的几种方式</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42967398/article/details/88078788\">Python 类型强制转换和字符串的操作</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"开发工具\">开发工具</h2>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>开发工具\n<ul>\n<li>Git\n<ul>\n<li>简介\n<ul>\n<li>这应该是所有程序员必会的技能了,没有保留的余地.</li>\n<li>装上 git 之后结合 github 摸索摸索就会了.</li>\n</ul>\n</li>\n<li>Git push\n<ul>\n<li><a href=\"https://www.cnblogs.com/qianqiannian/p/6008140.html\">Git push 常见用法</a></li>\n</ul>\n</li>\n<li>多远程\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000011294144\">一个项目 push 到多个远程 Git 仓库</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>VScode\n<ul>\n<li>主题适配\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45599654/article/details/109306462\">VScode 自定义主题 界面 UI 配色 语法配色</a></li>\n</ul>\n</li>\n<li>插件(包)开发/发布\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000020435312\">VScode 插件开发（五）插件包</a></li>\n<li><a href=\"https://github.com/Weidows-projects/VScode-Extension-Tamplate\">vscode 插件开发模板</a></li>\n</ul>\n</li>\n<li>Emmet\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33744228/article/details/80910377\">【Emmet】HTML 速写之 Emmet 语法规则</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Docker\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1vD4y1X7ce\">初探 Docker</a></li>\n</ul>\n</li>\n<li>正则表达式\n<ul>\n<li><a href=\"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md\">ziishaned/learn-regex</a>\n<ul>\n<li>标星超高的项目,必须一刷!</li>\n</ul>\n</li>\n<li><a href=\"../../experience/regex\">🙉 修为突破灵药-正则表达式</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"泛域\">泛域</h2>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>泛域\n<ul>\n<li>2038 问题\n<ul>\n<li><a href=\"https://baike.baidu.com/item/2038%E5%B9%B4%E9%97%AE%E9%A2%98/10578442?fr=aladdin\">2038 年问题</a></li>\n<li>问题不大不小,Windows 平台与 linux 平台都有相应的推迟解决方案了.</li>\n</ul>\n</li>\n<li>自信\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46163918/article/details/114883501?utm_source=app&amp;app_version=4.5.4\">上班 4 年，现在却只会调工具包，AI 程序员崩溃了</a>\n<ul>\n<li>我发现我好想也有点文中提到的“冒名顶替综合征”,文中也有我认为很好的解决办法:\n<ul>\n<li>多多交流和分享</li>\n<li>记录做过的事情</li>\n<li>保持学习者心态</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>随着年龄的增大,越发发现自信的重要性.</li>\n<li>初中时就被体育老师鼓动,直到现在仍然感觉带有自信头衔的人有独特的美丽.</li>\n<li>当然,自信不是自负,是合理的外向+阳光+乐观的态度,在社交,职场和情感方面都有一定作用.</li>\n</ul>\n</li>\n<li>编码习惯\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NDIzNzY1OQ==&amp;mid=2735619936&amp;idx=1&amp;sn=56562e359badd5afb27529ebc41d77b9&amp;chksm=b6ab39d481dcb0c21f5696373b0882fdfc0a06cbce7e4cf45529847012a1990b0758d45e6244&amp;mpshare=1&amp;scene=23&amp;srcid=0505Bype3cbVTtcSBVgUS3Ed&amp;sharer_sharetime=1620190642862&amp;sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd\">优秀程序员都在注意的 10 个点</a></li>\n</ul>\n</li>\n<li>文档编写\n<ul>\n<li>emmm,Ummm…这是个如何优雅拉屎的艺术</li>\n<li><a href=\"https://www.jianshu.com/p/a7984927cfb9\">最全！软件开发类项目关键文档内容要求</a></li>\n<li><a href=\"https://www.jianshu.com/p/a52fe78962f0\">软件需求，概要设计，详细设计（文档）怎么做，做什么？</a></li>\n<li><a href=\"https://wenku.baidu.com/view/1e0708f41611cc7931b765ce05087632311274cf.html\">一个挺像样的项目文档: 软件项目开发文档</a></li>\n</ul>\n</li>\n<li>代理\n<ul>\n<li><a href=\"https://congcong0806.github.io/2018/04/20/SS/\">SS/SSR/V2Ray/Clash 简介和客户端软件下载</a></li>\n</ul>\n</li>\n<li>图灵测试\n<ul>\n<li><a href=\"https://mathpix.com/\">问题来自于 mathpix 这个官网首页,玩梗 😂</a>\n<ul>\n<li><a href=\"https://pan.weidows.tech/d/local/blog/GViz3o.png\">QQ 截图 20210626151150</a></li>\n</ul>\n</li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%9B%BE%E7%81%B5%E6%B5%8B%E8%AF%95\">维基百科:图灵测试</a></li>\n<li><a href=\"https://pan.weidows.tech/d/local/blog/RtEo1t.png\">新版图灵测试</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"设计\">设计</h2>\n<h2 id=\"基础知识\">基础知识</h2>\n<ul>\n<li>\n<p>这两个跳到新文章吧,写在这太长:</p>\n<p><a href=\"../../design/UI-design\">🙌UI 平面设计.</a></p>\n<p><a href=\"../../experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.mmd\">🌈 基础知识</a></p>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "备忘录",
                "推荐",
                "设计",
                "VScode",
                "成长路线",
                "基础知识",
                "Java",
                "cpp",
                "Python",
                "工具",
                "大前端"
            ]
        },
        {
            "id": "https://blog.weidows.tech/post/system/system_variable/",
            "url": "https://blog.weidows.tech/post/system/system_variable/",
            "title": "💥系统开发环境配置",
            "date_published": "2020-12-04T03:38:58.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @Date: 2020-12-04 11:38:58\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:36:56\n * @FilePath: \\Blog-private\\source\\_posts\\system\\system_variable.md\n * @Description:\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E6%B7%B1%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">深入环境变量</a>\n<ul>\n<li><a href=\"#%E5%90%AB%E4%B9%89\">含义</a></li>\n<li><a href=\"#%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">系统/用户环境变量</a></li>\n<li><a href=\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E-path\">环境变量与 Path</a></li>\n<li><a href=\"#%E4%B8%BE%E4%BE%8B\">举例</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%90%84%E7%A7%8D%E9%85%8D%E7%BD%AE\">各种配置</a></li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"深入环境变量\">深入环境变量</h2>\n<h3 id=\"含义\">含义</h3>\n<ul>\n<li>\n<p>理解含义很大程度上就能明白自己到底错在哪里,有些问题靠百度很难搜出来,但是真正解决需要的时间可能<code>远小于百度搜的时间</code></p>\n</li>\n<li>\n<p>Windows 系统上一般使用的终端 console 是 cmd(虽然很辣鸡但还是得用它)</p>\n<ul>\n<li>\n<p>这个终端可以直接调用启动<code>.cmd</code>/<code>.bat</code>/<code>.exe</code>这种后缀名的文件</p>\n<ul>\n<li>(你可以在你配置的语言\\bin\\目录下轻易找到 XXX.exe 等等这种文件)</li>\n</ul>\n</li>\n<li>\n<p>如果不输入这种文件的具体路径,终端没法找到这个文件到底在哪里</p>\n</li>\n<li>\n<p>于是环境变量就相当于在 cmd 上登了记,不写路径直接写名字就能启动,比如环境变量设置为<code>你的JDK\\bin\\</code>,然后在 cmd 输入<code>java</code>,cmd 就是去找这个目录下有没有<code>java.exe</code>这种文件,有的话,你就配置成功了!</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"系统-用户环境变量\">系统/用户环境变量</h3>\n<ul>\n<li>\n<p>这个区别在于你的电脑是否是<code>多用户</code></p>\n<ul>\n<li>如果你在用户环境变量配置好了编程环境,那么在 Windows 的另一个用户上无效</li>\n</ul>\n</li>\n<li>\n<p>所以,看个人选择,一般来说是在<code>用户区</code>添加.</p>\n<ul>\n<li>系统环境变量配置好之后需要<code>重启电脑生效</code>.</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"环境变量与-Path\">环境变量与 Path</h3>\n<ul>\n<li>这个是引用关系,比如 Path 里面的<code>%JAVA_HOME%</code>会引用名为<code>JAVA_HOME</code>的环境变量值</li>\n<li>Path 里面从上到下为优先级,上面的优先级高.</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"举例\">举例</h3>\n<ul>\n<li>\n<p>这是华为的 DevEco,安装时会询问是否添加至环境变量,那,添加到环境变量有什么用呢?<br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsqxD.png\" alt=\"20210307160552\" /></p>\n</li>\n<li>\n<p>比如我安装了 VScode,并把 vscode 安装目录它添加环境变量,我们打开一个终端</p>\n<ul>\n<li>\n<p>终端打开的路径是 <code>D:\\Desktop\\</code> ,在这里执行<code>code</code> 指令,终端首先去找 <code>D:\\Desktop\\</code> 这个目录下有没有叫 <code>Code</code>的程序,没有的话再去环境变量的路径找,直到找到箭头所指的 VScode 程序本体</p>\n</li>\n<li>\n<p>命令后面可以跟一些参数,比如<code>code .</code>就是让 VScode 打开当前路径(就是划红线的<code>D:\\Desktop\\</code>)</p>\n</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsmaQ.png\" alt=\"20210307161139\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"各种配置\">各种配置</h2>\n<div class=\"tabs\" id=\"node.js\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#node.js-1\">Scoop</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#node.js-2\">Node.js</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#node.js-3\">Python</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#node.js-4\">Git</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#node.js-5\">Maven</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#node.js-6\">JDK</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"node.js-1\"><blockquote>\n<p>详见<a href=\"../../tools/Scoop\">🙌Windows 平台软件包管理器选择-Scoop</a></p>\n</blockquote><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"node.js-2\"><blockquote>\n<p>详见<a href=\"../../Web/Node/node\">⬆ Node.js 环境配置 &amp;&amp; 使用</a></p>\n</blockquote><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"node.js-3\"><ul>\n<li>\n<p>Path 中+</p>\n<figure class=\"highlight moonscript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"name\">D</span>:\\Game\\Scoop\\apps\\python</span><br><span class=\"line\"><span class=\"name\">D</span>:\\Game\\Scoop\\apps\\python\\Scripts\\</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>建议通过 Scoop 安装 Anaconda, 然后用 Anaconda 安装有关 Python 的所有编程环境.</p>\n<blockquote>\n<p><a href=\"../../others/python/anaconda\">👍Anaconda-Python-水漂浅探池深浅.</a></p>\n</blockquote>\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"node.js-4\"><blockquote>\n<p>用 Scoop 安装自带环境变量,不用配置.</p>\n</blockquote><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"node.js-5\"><blockquote>\n<p>内部修改耦合 <a href=\"../../tools/IDEA/Modification#maven\">🎉IDEA 魔改记录.</a></p>\n</blockquote>\n<ul>\n<li>\n<p>环境变量: 用 Scoop 安装不需要手动配置!</p>\n</li>\n<li>\n<p>检查</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">mvn -v</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>VScode 中设置:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;java.configuration.maven.globalSettings&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;D:/Game/Scoop/persist/maven/conf/settings.xml&quot;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>IDEA 中设置也需要覆盖</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVshlQ.png\" alt=\"20210325105220\" />\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"node.js-6\"><blockquote>\n<p>通过 Scoop 安装会自动设置</p>\n</blockquote>\n<ul>\n<li>\n<p>新建<code>JAVA_HOME</code>环境变量值: <code>D:\\Game\\Demo\\AdoptOpenJDK\\</code></p>\n</li>\n<li>\n<p>Path 里面添加: <code>%JAVA_HOME%\\bin</code></p>\n</li>\n<li>\n<p>JDK 创建 jre: 进入 JDK 根目录管理员模式输入(正常 JDK 自带)</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><span class=\"line\">bin\\jlink<span class=\"selector-class\">.exe</span> <span class=\"attr\">--module-path</span> jmods <span class=\"attr\">--add-modules</span> java<span class=\"selector-class\">.desktop</span> <span class=\"attr\">--output</span> jre</span><br></pre></td></tr></table></figure>\n</li>\n</ul><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "备忘录",
                "Python",
                "操作系统",
                "Scoop",
                "Maven",
                "Git",
                "nodejs"
            ]
        }
    ]
}