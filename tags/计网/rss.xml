<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>⭐️齐下无贰⭐️ • Posts by &#34;计网&#34; tag</title>
        <link>https://weidows.github.io</link>
        <description>May all the beauty be bless.✨</description>
        <language>zh-CN</language>
        <pubDate>Thu, 25 Mar 2021 03:32:45 +0000</pubDate>
        <lastBuildDate>Thu, 25 Mar 2021 03:32:45 +0000</lastBuildDate>
        <category>java</category>
        <category>javadoc</category>
        <category>编码</category>
        <category>vscode</category>
        <category>maven</category>
        <category>对象</category>
        <category>设计模式</category>
        <category>jvm</category>
        <category>lambda</category>
        <category>备忘录</category>
        <category>api</category>
        <category>推荐</category>
        <category>浏览器</category>
        <category>扩展</category>
        <category>ffmpeg</category>
        <category>算法</category>
        <category>hexdump</category>
        <category>hls</category>
        <category>openssl</category>
        <category>shell</category>
        <category>密码学</category>
        <category>qq</category>
        <category>ps</category>
        <category>设计</category>
        <category>摄影</category>
        <category>latex</category>
        <category>php</category>
        <category>website</category>
        <category>ssh</category>
        <category>linux</category>
        <category>regex</category>
        <category>yaml</category>
        <category>音乐</category>
        <category>哲学</category>
        <category>生活</category>
        <category>健身</category>
        <category>面试</category>
        <category>笔记</category>
        <category>english</category>
        <category>idea</category>
        <category>html</category>
        <category>css</category>
        <category>javascript</category>
        <category>成长路线</category>
        <category>deprecated</category>
        <category>font</category>
        <category>vr</category>
        <category>网课</category>
        <category>manjaro</category>
        <category>计算机系统</category>
        <category>服务器</category>
        <category>虚拟机</category>
        <category>树莓派</category>
        <category>windows</category>
        <category>docker</category>
        <category>多线程</category>
        <category>进程</category>
        <category>cpu</category>
        <category>scoop</category>
        <category>git</category>
        <category>python</category>
        <category>node</category>
        <category>ubuntu</category>
        <category>wsl2</category>
        <category>环境变量</category>
        <category>aria2</category>
        <category>工具</category>
        <category>pycharm</category>
        <category>goland</category>
        <category>图床</category>
        <category>爬虫</category>
        <category>sm.ms</category>
        <category>package</category>
        <category>tomcat</category>
        <category>mybatis</category>
        <category>map</category>
        <category>crud</category>
        <category>日志</category>
        <category>分页</category>
        <category>数据库</category>
        <category>注解</category>
        <category>mysql</category>
        <category>jdbc</category>
        <category>sql</category>
        <category>前端</category>
        <category>json</category>
        <category>javaweb</category>
        <category>servlet</category>
        <category>cookie</category>
        <category>session</category>
        <category>jsp</category>
        <category>filter</category>
        <category>架构</category>
        <category>反射</category>
        <category>cors</category>
        <category>大前端</category>
        <category>jquery</category>
        <category>npm</category>
        <category>yarn</category>
        <category>vue</category>
        <category>leetcode</category>
        <category>数据结构</category>
        <category>opengl</category>
        <category>c</category>
        <category>conan</category>
        <category>计网</category>
        <category>硬件</category>
        <category>onenote</category>
        <category>复变函数</category>
        <category>通信</category>
        <category>音频</category>
        <category>傅里叶变换</category>
        <category>极化码</category>
        <category>信息论</category>
        <category>powershell</category>
        <category>宝塔面板</category>
        <category>闲鱼</category>
        <category>购物</category>
        <category>搞笑</category>
        <category>高能</category>
        <category>快捷键</category>
        <category>cmake</category>
        <category>区块链</category>
        <category>golang</category>
        <category>markdown</category>
        <category>processing</category>
        <category>anaconda</category>
        <category>hexo</category>
        <category>github</category>
        <category>gitee</category>
        <category>action</category>
        <category>branch</category>
        <category>release</category>
        <category>pages</category>
        <category>copilot</category>
        <category>插件</category>
        <category>emmet</category>
        <category>美化</category>
        <category>snippet</category>
        <category>seo</category>
        <category>node.js</category>
        <category>butterfly</category>
        <category>pug</category>
        <category>styl</category>
        <category>pjax</category>
        <category>优化</category>
        <category>魔改</category>
        <item>
            <guid isPermalink="true">https://weidows.github.io/post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
            <title>🌈基础知识</title>
            <link>https://weidows.github.io/post/experience/basic/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
            <category>备忘录</category>
            <category>算法</category>
            <category>笔记</category>
            <category>计算机系统</category>
            <category>计网</category>
            <category>硬件</category>
            <category>onenote</category>
            <category>复变函数</category>
            <pubDate>Thu, 25 Mar 2021 03:32:45 +0000</pubDate>
            <description><![CDATA[ &lt;h1&gt;基础知识&lt;/h1&gt;
&lt;!--
 * @?: *********************************************************************
 * @Author: Weidows
 * @LastEditors: Weidows
 * @LastEditTime: 2022-03-06 12:13:58
 * @FilePath: \Blog-private\source\_posts\experience\basic\基础知识.md
 * @Description:
 * @!: *********************************************************************
--&gt;&lt;blockquote class=&#34;pullquote mindmap mindmap-md&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86&#34;&gt;基础知识&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#onenote&#34;&gt;OneNote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A1%AC%E4%BB%B6&#34;&gt;硬件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8E%9F%E5%8F%8D%E8%A1%A5%E7%A0%81&#34;&gt;原反补码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8D%95%E7%89%87%E6%9C%BA&#34;&gt;单片机&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0&#34;&gt;复变函数&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%8D%E6%95%B0&#34;&gt;复数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C&#34;&gt;计算机网络&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82&#34;&gt;数据链路层&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AA%92%E4%BD%93%E6%8E%A5%E5%85%A5%E6%8E%A7%E5%88%B6%E5%88%86%E7%B1%BB&#34;&gt;媒体接入控制分类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#csmacd&#34;&gt;CSMA/CD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mac-%E5%B1%82%E5%8D%8F%E8%AE%AE&#34;&gt;MAC 层协议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BD%91%E7%BB%9C%E5%B1%82&#34;&gt;网络层&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8D%8F%E8%AE%AE&#34;&gt;路由选择协议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE-rip-%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86&#34;&gt;路由信息协议 RIP 的基本工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BC%80%E6%94%BE%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E4%BC%98%E5%85%88-ospf-%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86&#34;&gt;开放最短路径优先 OSPF 的基本工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%BE%B9%E7%95%8C%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE-bgp&#34;&gt;边界网关协议 BGP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A6%BB%E6%95%A3&#34;&gt;离散&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9B%BE&#34;&gt;图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1&#34;&gt;算法分析与设计&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%80%E5%A4%A7%E5%9B%A2-%E6%9C%80%E5%A4%A7%E7%8B%AC%E7%AB%8B%E9%9B%86&#34;&gt;最大团-最大独立集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#01-%E8%83%8C%E5%8C%85&#34;&gt;01-背包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98&#34;&gt;矩阵连乘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%85%AB%E7%9A%87%E5%90%8E%E8%A7%A3%E6%B3%95%E9%80%9F%E8%AE%B0&#34;&gt;八皇后解法速记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95&#34;&gt;随机化算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B8%90%E8%BF%91%E9%98%B6%E9%AB%98%E4%BD%8E&#34;&gt;渐近阶高低&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%95%B0%E8%AE%BA%E5%9B%9B%E5%A4%A7%E5%AE%9A%E7%90%86&#34;&gt;数论四大定理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#l-%E5%BD%A2%E9%AA%A8%E7%89%8C%E5%A1%AB%E5%85%85&#34;&gt;L-形骨牌填充&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2&#34;&gt;二分搜索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91&#34;&gt;斐波那契&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BF%AB%E6%8E%92&#34;&gt;快排&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97&#34;&gt;最长公共子序列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%8F%82%E8%80%83&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;已录入 &lt;a href=&#34;../../../others/LearnWay#%E7%90%86%E8%AE%BA%E8%AF%BE%E7%A8%8B&#34;&gt;😍Weidows の成长路线.#理论课程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;OneNote&#34;&gt;OneNote&lt;/h2&gt;
&lt;p&gt;传送门-OneNote 里面有一些&lt;code&gt;手爬的&lt;/code&gt;笔记&lt;/p&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;硬件-2&#34;&gt;硬件&lt;/h2&gt;
&lt;h3 id=&#34;原反补码&#34;&gt;原反补码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开局三张图,故事全靠编 🤣&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtBQE.png&#34; alt=&#34;20210325114342&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtZcX.png&#34; alt=&#34;20210325114403&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtRJ9.png&#34; alt=&#34;20210325114419&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为带有符号位的二进制数在计算机内计算时,原码和反码的运算结果都不是 100%正确,而且会有&lt;code&gt;+0&lt;/code&gt;和&lt;code&gt;-0&lt;/code&gt;两个零&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;补码 100%正确,于是我们采用补码,而且补码只有一个零&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;补码就是为了解决这两个问题的,没了.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;单片机&#34;&gt;单片机&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标志寄存器内部的八位是分开使用的,作用不同,但功能都是作为标志位&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtJm5.png&#34; alt=&#34;20210331121042&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtxyA.png&#34; alt=&#34;20210331122847&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtsVm.png&#34; alt=&#34;20210331122957&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;复变函数&#34;&gt;复变函数&lt;/h2&gt;
&lt;h3 id=&#34;复数&#34;&gt;复数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;运算&lt;br&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtqQz.png&#34; alt=&#34;20210402161142&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般表示&lt;br&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtorg.png&#34; alt=&#34;20210325170144&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;几何表示&lt;br&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtP3M.png&#34; alt=&#34;20210325170538&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;幂与根&lt;br&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtXZn.png&#34; alt=&#34;20210325181554&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;计算机网络-2&#34;&gt;计算机网络&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;摘自 &lt;a href=&#34;https://space.bilibili.com/360996402/&#34;&gt;湖科大教书匠-计算机网络&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h3&gt;
&lt;h4 id=&#34;媒体接入控制分类&#34;&gt;媒体接入控制分类&lt;/h4&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVSwgX.png&#34; alt=&#34;20210930170530&#34; /&gt;
&lt;h4 id=&#34;CSMA-CD&#34;&gt;CSMA/CD&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.136.la/tech/show-132262.html&#34;&gt;2016.6.20 计算机网络复习要点第三章之 CSMA/CD 协议(示例代码)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;采用随机接入,当多个主机同时发送帧时会&lt;code&gt;发生碰撞/冲突&lt;/code&gt;.无连接不可靠,尽力交付的服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSMA/CD (载波监听多点接入/碰撞检测) 是以太网采用的&lt;code&gt;解决冲突&lt;/code&gt;的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多路接入 MA: 多个站点接入同一条总线上,竞争使用总线&lt;/li&gt;
&lt;li&gt;载波监听 CS: 站点发送数据前，先检查总线上是不是已经有数据在传输，如果有就暂缓发送，避免冲突。&lt;/li&gt;
&lt;li&gt;冲突检测: 边发送边对介质上电压信号进行检测，当电压摆动值超过一定门限时就认为发生了冲突。一旦发生冲突就停止发送数据，然后根据协议进行重传。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在使用 CSMA/CD 协议时，一个站不可能同时进行发送和接收（但必须边发送边监听）。因此，使用 CSMA/CD 协议的以太网不可能进行全双工通信而只能进行半双工通信（双向交替通信）；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;每一个站在自己发送数据之后的一小段时间内，存在着遭遇碰撞的可能性，这一小段时间是不确定的，它取决于另一个发送数据的站到本站的距离；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最先发送数据帧的 A 站，在发送数据帧后至多经过时间 2r 就可知道所发送的数据帧是否遭受到碰撞；因此，以太网端到端往返时间 2r 称为争用期（碰撞窗口）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经过争用期还没有检测到碰撞，才能肯定后续发送的数据一定不会发送碰撞；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;凡是长度小于 64 字节的帧都是由于冲突而异常中止的无效帧，只要收到了这种无效帧，就应当立即将其丢弃；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;采用截断二进制指数退避算法来确定碰撞后重传的时机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;让发生碰撞的站停止发送数据后，不是等待信道变为空闲后就立即发送数据，而是推迟（退避）一个随机的时间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单位回退时间通常取冲突窗口(争用期)的值 2r，即传输最小帧长 512bit 数据用时，叫作时槽。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取 r, 0 ≤ r &amp;lt; 2^k-1,重传的时延(退避时间)就是 r 倍的单位回退时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;K 为碰撞次数时。K=Min[重传次数，10]，当重传次数超过 10 时，K 就不在增大而是一直等于 10；当重传达 16 次仍不能成功时，则丢弃该帧，并向高层报告&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVPP1b.png&#34; alt=&#34;20210930181153&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信道利用率&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4ggS.png&#34; alt=&#34;20210930191350&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帧发送/接收流程&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVPbu6.png&#34; alt=&#34;20210930191552&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVL18C.png&#34; alt=&#34;20210930191636&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;MAC-层协议&#34;&gt;MAC 层协议&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/t_home/article/details/90711643&#34;&gt;以太网 MAC 层基础知识学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;小林 Coding - 图解网络&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MAC (media access control) / (message authentication code)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC 地址相同的设备只要不是同属一个数据链路就不会出现问题。同一网段下两设备都不能正常联网.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I3E 注册管理结构 RA（Registration Authority）是局域网全球地址的法定管理机构[W-IEEERA]，负责分配前三个字节；前三个字节又称组织唯一标识符 OUI（Organizationally Unique Identifier），又称公司标识符（Company ID）[RFC 7042]。后三个字节由厂家自行指派称为扩展标识符（Extended Identifier）。总的一起叫做 EUI-48 扩展的唯一标识符（Extended Unique Identifier）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以太网 V2 的 MAC 帧格式(MAC 格式标准有两个，一个是 DIX Ethernet V2 标准，一个是 IEEE 的 802.3 标准)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IEEE 802 标准中规定了一种 48 位的全球地址，此地址固化在适配器的 ROM 中（所以称为物理地址）。无线 LAN、蓝牙、以太网、FDDI、ATM 等设备都使用相同规格的 MAC 地址。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAC 地址字段&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVthY0.png&#34; alt=&#34;20210930194939&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVAx90.png&#34; alt=&#34;20210930202539&#34; /&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络包至此(数据链路层)的图解&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4M7n.png&#34; alt=&#34;20210930204450&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;网络层&#34;&gt;网络层&lt;/h3&gt;
&lt;h4 id=&#34;路由选择协议&#34;&gt;路由选择协议&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;动/静态路由选择&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4raC.png&#34; alt=&#34;20211022084950&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因特网&lt;code&gt;采用动态路由选择&lt;/code&gt;,分层次自治&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVPc60.png&#34; alt=&#34;20211022085337&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4u0E.png&#34; alt=&#34;20211022085557&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器基本结构&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GViD6S.png&#34; alt=&#34;20211022090722&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;路由信息协议-RIP-的基本工作原理&#34;&gt;路由信息协议 RIP 的基本工作原理&lt;/h4&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVAFD6.png&#34; alt=&#34;20211022100415&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RIP 会选择距离向量短的路由,而不管带宽 (距离相同的话使用负载均衡)&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVLHpn.png&#34; alt=&#34;20211022100624&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVP7V1.png&#34; alt=&#34;20211022100656&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RIP 交换要点&lt;/p&gt;
&lt;p&gt;只和相邻路由器交换信息&lt;/p&gt;
&lt;p&gt;交换自己的路由表&lt;/p&gt;
&lt;p&gt;周期性交换 (比如 30s)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;举例: RIP 路由条目更新规则&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVA7lM.png&#34; alt=&#34;20211022115640&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;坏消息传得慢/路由环路/距离无穷计数问题&lt;/p&gt;
&lt;p&gt;新更新的路由表被老版本覆盖,有几个措施可以&lt;code&gt;减少出现概率&lt;/code&gt;或减小危害:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;限制最大路径为 15&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由表发生变化时立即发送更新报文 (触发更新)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记录特定接口的路由信息,而不反向传递 (水平分割)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;开放最短路径优先-OSPF-的基本工作原理&#34;&gt;开放最短路径优先 OSPF 的基本工作原理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本工作原理&lt;/p&gt;
&lt;p&gt;基于链路状态,使用最短路径优先,保证不会产生路由环路&lt;/p&gt;
&lt;p&gt;不限制网络规模,更新效率高,收敛速度快&lt;/p&gt;
&lt;p&gt;链路状态是指与哪些路由器相邻以及相应连路的代价 (费用/距离/时延/带宽等等)&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4yhY.png&#34; alt=&#34;20211022165456&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链路状态更新 &amp;amp;&amp;amp; 最短路径 SPF 计算&lt;/p&gt;
&lt;p&gt;每个路由器会产生链路状态通告(LSA),包含: 直连网络/邻居路由器得到链路状态&lt;/p&gt;
&lt;p&gt;LSA 封装在链路状态更新分组(LSU)中,采用洪泛法发送&lt;/p&gt;
&lt;p&gt;每个路由器通过链路状态数据库(LSDB)来接收 LSU 维护链路状态,各路由器 LSDB 最终一致&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVPeLC.png&#34; alt=&#34;20211022170324&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OSPF 工作过程 &amp;amp;&amp;amp; 五种数据分组&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVtuem.png&#34; alt=&#34;20211022170725&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;邻居关系建立 &amp;amp;&amp;amp; 划分区域&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVPNyq.png&#34; alt=&#34;20211022174329&#34; /&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV4Oh5.png&#34; alt=&#34;20211022174754&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;边界网关协议-BGP&#34;&gt;边界网关协议 BGP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;路由选择&lt;/p&gt;
&lt;p&gt;不同自治系统内度量路由的代价可能是不同的,所以无法通过代价度量来寻找最佳路由&lt;/p&gt;
&lt;p&gt;自治系统间路由选择还需要考虑政治,经济,安全等因素&lt;/p&gt;
&lt;p&gt;BGP 力求找一条不兜圈子的较好的路由线路,而不是找最佳路由&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GV44vY.png&#34; alt=&#34;20211022232434&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;举例: BGP 路径向量应用&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVL4XX.png&#34; alt=&#34;20211022232856&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BGP-4 的四种报文&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVLwiq.png&#34; alt=&#34;20211022233905&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接封装 xx 报文的协议&lt;/p&gt;
&lt;p&gt;RIP -&amp;gt; UDP&lt;/p&gt;
&lt;p&gt;OSPF -&amp;gt; IP&lt;/p&gt;
&lt;p&gt;BGP -&amp;gt; TCP&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;离散&#34;&gt;离散&lt;/h2&gt;
&lt;h3 id=&#34;图&#34;&gt;图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有向图-邻接矩阵存储&lt;/p&gt;
&lt;img src=&#34;https://www.helloimg.com/images/2022/02/27/GVL5Lr.png&#34; alt=&#34;20211028200201&#34; /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;算法分析与设计&#34;&gt;算法分析与设计&lt;/h2&gt;
&lt;h3 id=&#34;最大团-最大独立集&#34;&gt;最大团-最大独立集&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhJOD6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最大团: 顶点间都相连的最多顶点数 24567 或 45679&lt;/p&gt;
&lt;p&gt;最大独立集: 顶点间都不直接相连的最多顶点数 158 或 168&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;01-背包&#34;&gt;01-背包&lt;/h3&gt;
&lt;p&gt;5 个物品,1 个背包，背包容量为 10.&lt;/p&gt;
&lt;p&gt;价值：8,10,4,5,5&lt;/p&gt;
&lt;p&gt;重量：6,4,2,2,3&lt;/p&gt;
&lt;p&gt;求将该 5 个物品装入背包的最大价值&lt;code&gt;20&lt;/code&gt;,以及 x[6]的向量值&lt;code&gt;（0,0,1,0,1,1）&lt;/code&gt;(后 5 个空选择哪个对应的向量值为 1)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;矩阵连乘&#34;&gt;矩阵连乘&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;A1 A2 A3 A4 A5&lt;/code&gt; 五个矩阵连乘,通过下图判断怎么加括号使运算最少&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhJ6Iq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不看 0 那一斜线和 0 上面的一位,如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhA3Yz.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;第三列: 在 A2 断开&lt;/p&gt;
&lt;p&gt;第四列: 在 A2 断开&lt;/p&gt;
&lt;p&gt;第五列: 在 A2 和 A4 断开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A1 A2 | A3 A4 | A5&lt;/p&gt;
&lt;p&gt;每组括起来就是结果: &lt;code&gt;(A1 A2)(A3 A4)A5&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;八皇后解法速记&#34;&gt;八皇后解法速记&lt;/h3&gt;
&lt;p&gt;17582463&lt;br&gt;
24683175&lt;br&gt;
31758246&lt;br&gt;
42736851&lt;/p&gt;
&lt;p&gt;通过镜像操作可以得到对面四种解法: 1-&amp;gt;8, 2-&amp;gt;7, 3-&amp;gt;6, 4-&amp;gt;5&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;随机化算法&#34;&gt;随机化算法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;舍伍德算法&lt;/p&gt;
&lt;p&gt;去掉问题最坏解，使得求解的时候的复杂度趋向于平均&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拉斯维加斯算法：&lt;/p&gt;
&lt;p&gt;问题求解时随机决策&lt;/p&gt;
&lt;p&gt;随机找，找到了一定是正确的，但是不一定能在有限的时间内找到正确的解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;蒙特卡洛算法&lt;/p&gt;
&lt;p&gt;以高概率给出一个正确的解，但是不能判定是不是正确的&lt;/p&gt;
&lt;p&gt;【主元素】随机找出一个元素，看看它有没有出现了很多次，如果是，就返回 true，否则返回 false。&lt;br&gt;
返回 true 一定能确定有主元素，但是返回 false 的时候不一定能确定没有主元素。&lt;/p&gt;
&lt;p&gt;【是否正确】&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\frac{1}{2}&amp;lt;p&amp;lt;1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.1901em;vertical-align:-0.345em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8451em;&#34;&gt;&lt;span style=&#34;top:-2.655em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.345em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7335em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,如果得到正确解的概率不小于 p，则称该蒙特卡洛算法是 p 正确的，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;p-\frac{1}{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.1901em;vertical-align:-0.345em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8451em;&#34;&gt;&lt;span style=&#34;top:-2.655em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.345em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是该算法的优势&lt;br&gt;
【一致】如果对于同一个实例，算法不会给出两个正确的解答，那么称这个蒙特卡洛算法是一致的&lt;br&gt;
【提高正确率】执行若干次，选择频次最高的&lt;br&gt;
&lt;sup id=&#39;cite_ref-2&#39;&gt;&lt;a href=&#34;#cite_note-2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;渐近阶高低&#34;&gt;渐近阶高低&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;log&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;!&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;
O(1) &amp;lt; O(\log{n})) &amp;lt; O(n) &amp;lt; O(n\log{n}) &amp;lt; O(n^2) &amp;lt; O(n^3) &amp;lt; O(n^k) &amp;lt; O(2^n) &amp;lt; O(n!) &amp;lt; O(n^n)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mop&#34;&gt;lo&lt;span style=&#34;margin-right:0.01389em;&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0641em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0641em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0991em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8491em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.6644em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;!)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.6644em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;sup id=&#39;cite_ref-1&#39;&gt;&lt;a href=&#34;#cite_note-1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;数论四大定理&#34;&gt;数论四大定理&lt;/h3&gt;
&lt;p&gt;威尔逊定理, 欧拉定理, 中国剩余定理, 费马小定理&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;L-形骨牌填充&#34;&gt;L-形骨牌填充&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhAJFm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据黑的先画最中间绿色的&lt;/li&gt;
&lt;li&gt;根据绿色的画黄色的&lt;/li&gt;
&lt;li&gt;根据黄色画蓝色的&lt;/li&gt;
&lt;li&gt;可以确定答案了&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;二分搜索&#34;&gt;二分搜索&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;（&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;）给定从小到达已排好序的&lt;span class=&#34;number&#34;&gt;2021&lt;/span&gt;个整数，存放在数组&lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[2021]&lt;/span&gt;中，执行以下BinarySearch()函数，需要查找的特定元素x。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;问&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;：当x &amp;gt; &lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[2020]&lt;/span&gt;时，查找不到元素x时，比较了______ 次。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;问&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;：当x &amp;lt; &lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[0]&lt;/span&gt;时，查找不到元素x时，比较了______ 次。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;（&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;）给定从小到达已排好序的&lt;span class=&#34;number&#34;&gt;2048&lt;/span&gt;个整数，存放在数组&lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[2048]&lt;/span&gt;中，执行以下BinarySearch()函数，需要查找的特定元素x。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;问&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;：当x &amp;gt; &lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[2047]&lt;/span&gt;时，查找不到元素x时，比较了______ 次。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;问&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;：当x &amp;lt; &lt;span class=&#34;selector-tag&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;selector-attr&#34;&gt;[0]&lt;/span&gt;时，查找不到元素x时，比较了______ 次。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;11 10 12 11&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mn&gt;2020&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;11&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;[0,2020] &amp;lt; 2^{11}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; k1=11 k2=11-1&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;11&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mn&gt;4047&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2^{11} &amp;lt;= [0,4047] &amp;lt; 2^{12}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8532em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4047&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; k3=12 k4=12-1&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;斐波那契&#34;&gt;斐波那契&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhA2nS.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;F()执行 15 次, f(1) 3 次&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;快排&#34;&gt;快排&lt;/h3&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;arr&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;]=&amp;#123;&lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;38&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;76&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;49&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择第一位 arr[0]:49 为基准数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从左往右找比它大的或相等的,从右往左找比它小的或相等的,找到了两方交换 (比如 97-8, 76-49)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhApPX.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直到两方碰头结束,取碰头位置与基准数交换 (49-27); 没有的话就退出循环且不交换基准数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每轮结束后划分出左右两边子范围&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhAzng.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如第一轮确定 49 之后,分出 [27-8],[13-65]两个子范围&lt;/p&gt;
&lt;p&gt;第二轮确定 27 之后,分出 [8-10],[49-38]两个子范围&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhAICP.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;当子范围只有一个数时,不用遍历就可以直接确定位置了 (如上图框起来的数,再其旁边的数确定位置时就可以同时确定位置)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;最长公共子序列&#34;&gt;最长公共子序列&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;填写 C 表和 B 表 (不知道还有什么学校教这种老套,反正是考点没的办法了…)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhA8wn.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhAKhR.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.helloimg.com/images/2022/03/04/GhAkWA.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;思路&lt;/p&gt;
&lt;p&gt;C/B 表同时写不要分开先后写,只不过 B 表要根据 C 表写&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// c[行][列]  b[行][列]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; m; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (j = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; j &amp;lt; n; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 首先判断行列字符是否一样,相同的话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (x[i] == y[j]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      c[i][j] = c[i - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//   c[i][j]=C表左上角+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      b[i][j] = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果行列字符不一样,判断C表上面一格是否&amp;gt;=左边,如果true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (c[i - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j] &amp;gt;= c[i][j - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      c[i][j] = c[i - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j]; &lt;span class=&#34;comment&#34;&gt;//           c[i][j]=C表上面一格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      b[i][j] = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果行列字符不一样,判断C表上面一格是否&amp;gt;=左边,如果false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      c[i][j] = c[i][j - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;//           c[i][j]=C表左边一格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      b[i][j] = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;借物表-21&#34;&gt;借物表&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#39;cite_note-1&#39; href=&#39;#cite_ref-1&#39;&gt;[1]&lt;/a&gt;: &lt;a href=&#34;https://www.nowcoder.com/questionTerminal/7401d66e14e84279ba278ce04e735deb?page=1&amp;amp;onlyReference=false&#34;&gt;https://www.nowcoder.com/questionTerminal/7401d66e14e84279ba278ce04e735deb?page=1&amp;amp;onlyReference=false&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#39;cite_note-2&#39; href=&#39;#cite_ref-2&#39;&gt;[2]&lt;/a&gt;: &lt;a href=&#34;https://www.geek-share.com/detail/2771384952.html&#34;&gt;随机化算法-舍伍德算法&amp;amp;拉斯维加斯算法&amp;amp;蒙特卡洛算法&lt;/a&gt;&lt;/p&gt;
&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kity@2.0.4/dist/kity.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;true&#34; type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text&amp;#x2F;css&#34; href=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css&#34;&gt; ]]></description>
        </item>
    </channel>
</rss>
