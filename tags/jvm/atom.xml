<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://weidows.github.io</id>
    <title>⭐️齐下无贰⭐️ • Posts by &#34;jvm&#34; tag</title>
    <link href="https://weidows.github.io" />
    <updated>2020-08-25T11:14:35.000Z</updated>
    <category term="java" />
    <category term="javadoc" />
    <category term="编码" />
    <category term="vscode" />
    <category term="maven" />
    <category term="对象" />
    <category term="设计模式" />
    <category term="jvm" />
    <category term="lambda" />
    <category term="备忘录" />
    <category term="api" />
    <category term="ps" />
    <category term="设计" />
    <category term="摄影" />
    <category term="latex" />
    <category term="php" />
    <category term="website" />
    <category term="ssh" />
    <category term="linux" />
    <category term="yaml" />
    <category term="音乐" />
    <category term="哲学" />
    <category term="生活" />
    <category term="健身" />
    <category term="推荐" />
    <category term="面试" />
    <category term="笔记" />
    <category term="english" />
    <category term="idea" />
    <category term="html" />
    <category term="css" />
    <category term="javascript" />
    <category term="成长路线" />
    <category term="deprecated" />
    <category term="font" />
    <category term="vr" />
    <category term="网课" />
    <category term="manjaro" />
    <category term="计算机系统" />
    <category term="服务器" />
    <category term="虚拟机" />
    <category term="树莓派" />
    <category term="windows" />
    <category term="docker" />
    <category term="多线程" />
    <category term="进程" />
    <category term="cpu" />
    <category term="scoop" />
    <category term="git" />
    <category term="python" />
    <category term="node" />
    <category term="ubuntu" />
    <category term="wsl2" />
    <category term="环境变量" />
    <category term="aria2" />
    <category term="工具" />
    <category term="pycharm" />
    <category term="goland" />
    <category term="图床" />
    <category term="爬虫" />
    <category term="sm.ms" />
    <category term="package" />
    <category term="tomcat" />
    <category term="mybatis" />
    <category term="map" />
    <category term="crud" />
    <category term="日志" />
    <category term="分页" />
    <category term="数据库" />
    <category term="注解" />
    <category term="mysql" />
    <category term="jdbc" />
    <category term="sql" />
    <category term="前端" />
    <category term="json" />
    <category term="javaweb" />
    <category term="servlet" />
    <category term="cookie" />
    <category term="session" />
    <category term="jsp" />
    <category term="filter" />
    <category term="架构" />
    <category term="反射" />
    <category term="cors" />
    <category term="大前端" />
    <category term="jquery" />
    <category term="npm" />
    <category term="yarn" />
    <category term="vue" />
    <category term="opengl" />
    <category term="c" />
    <category term="conan" />
    <category term="理论知识" />
    <category term="通信" />
    <category term="音频" />
    <category term="傅里叶变换" />
    <category term="极化码" />
    <category term="信息论" />
    <category term="shell" />
    <category term="powershell" />
    <category term="宝塔面板" />
    <category term="搞笑" />
    <category term="高能" />
    <category term="快捷键" />
    <category term="浏览器" />
    <category term="cmake" />
    <category term="区块链" />
    <category term="golang" />
    <category term="markdown" />
    <category term="processing" />
    <category term="anaconda" />
    <category term="hexo" />
    <category term="github" />
    <category term="gitee" />
    <category term="action" />
    <category term="branch" />
    <category term="release" />
    <category term="pages" />
    <category term="copilot" />
    <category term="插件" />
    <category term="emmet" />
    <category term="美化" />
    <category term="snippet" />
    <category term="seo" />
    <category term="node.js" />
    <category term="butterfly" />
    <category term="pug" />
    <category term="styl" />
    <category term="pjax" />
    <category term="优化" />
    <category term="魔改" />
    <entry>
        <id>https://weidows.github.io/post/Java/jvm_model/</id>
        <title>JVM 内存模型</title>
        <link rel="alternate" href="https://weidows.github.io/post/Java/jvm_model/"/>
        <content type="html">&lt;!--
 * @Author: Weidows
 * @Date: 2020-08-25 19:14:35
 * @LastEditors: Weidows
 * @LastEditTime: 2021-12-20 21:19:30
 * @FilePath: \Blog-private\source\_posts\Java\jvm_model.md
--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AD%90%E7%88%B6%E7%B1%BB%E5%8A%A0%E8%BD%BD&#34;&gt;子父类加载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jvm-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B&#34;&gt;JVM 内存模型&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A0%86heap&#34;&gt;&lt;code&gt;堆 heap&lt;/code&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%A0%88stack&#34;&gt;&lt;code&gt;栈 stack&lt;/code&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%B9%E6%B3%95%E5%8C%BAmethod&#34;&gt;&lt;code&gt;方法区 method&lt;/code&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%BE%E4%B8%AA%E6%A0%97%E5%AD%90&#34;&gt;举个栗子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%87%8D%E7%82%B9&#34;&gt;&lt;code&gt;重点!&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9C%A8-student-stu--new-student-%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%AD%90%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E8%BF%87%E7%A8%8B&#34;&gt;在 Student stu = new Student(); 过程中, 子类对象的实例化过程:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#java-%E5%BC%95%E7%94%A8%E5%8F%98%E9%87%8F%E6%9C%89%E4%B8%A4%E4%B8%AA%E7%B1%BB%E5%9E%8B%E7%BC%96%E8%AF%91%E6%97%B6%E7%B1%BB%E5%9E%8B--%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E5%9E%8B&#34;&gt;Java 引用变量有两个类型:&lt;code&gt;编译时类型 &lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt; 运行时类型&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%99%9A%E6%8B%9F%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%BE%8B%E5%AD%90&#34;&gt;虚拟方法调用例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#jvm-errors&#34;&gt;JVM Errors&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1awt-%E9%94%99%E8%AF%AF&#34;&gt;1.AWT 错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2jvm-%E9%94%99%E8%AF%AF&#34;&gt;2.JVM 错误&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B7%B1%E6%B5%85-clone&#34;&gt;深浅 -clone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;子父类加载&#34;&gt;子父类加载&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;最近发现的一个知识漏洞&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/zxcoder/p/12250210.html&#34;&gt;Java 多态之 Father f=new Son();&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src= &#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp&#34; data-lazy-src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;JVM- 内存模型&#34;&gt;JVM 内存模型&lt;/h2&gt;
&lt;h3 id=&#34;堆 heap&#34;&gt;&lt;code&gt;堆 heap&lt;/code&gt;:&lt;/h3&gt;
&lt;p&gt;所有的对象(包括定义的对象和字符串对象)&lt;/p&gt;
&lt;h3 id=&#34;栈 stack&#34;&gt;&lt;code&gt;栈 stack&lt;/code&gt;:&lt;/h3&gt;
&lt;p&gt;基础数据类型, 以及对象的引用(对象在堆内部的地址)&lt;/p&gt;
&lt;h3 id=&#34;方法区 method&#34;&gt;&lt;code&gt;方法区 method&lt;/code&gt;:&lt;/h3&gt;
&lt;p&gt;所有的 class 和 static 变量&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;举个栗子&#34;&gt;举个栗子&lt;/h2&gt;
&lt;p&gt;Person p = new Person();&lt;br&gt;
栈里面存的就是 p, 这个 p 指向堆里面 new Person()出来的那个对象地址&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;重点&#34;&gt;&lt;code&gt;重点!&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&#34;在 -Student-stu-new-Student- 过程中 - 子类对象的实例化过程&#34;&gt;在 Student stu = new Student(); 过程中, 子类对象的实例化过程:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;方法区&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先加载 Person.class, 然后是 Student.class (先父类后子类)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;堆内存&lt;/code&gt;:&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;开辟对象空间, 分配地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在对象空间对对象的属性 (包括父类的属性) 进行默认初始化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示初始化父类属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示初始化子类属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;栈内存&lt;/code&gt;:&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;申请空间, 声明变量 stu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子类构造函数方法进栈&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;父类构造方法进栈, 执行后出栈&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初始化完毕后, 将堆内存中的地址赋给引用变量, 子类构造方法出栈&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Java- 引用变量有两个类型 - 编译时类型 - 运行时类型&#34;&gt;Java 引用变量有两个类型:&lt;code&gt;编译时类型 &lt;/code&gt; &amp;amp;&amp;amp; &lt;code&gt; 运行时类型&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编译时类型有声明该变量是使用的类型决定&lt;/li&gt;
&lt;li&gt;运行时类型由实际赋给该变量的对象决定&lt;/li&gt;
&lt;li&gt;如果二者类型不一致, 就出现 (对象的) 多态
&lt;ul&gt;
&lt;li&gt;子类的对象可以替代父类的对象使用&lt;/li&gt;
&lt;li&gt;一个引用类型变量可以指向不同类型的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;成员变量: 不具备多态性, 只看引用变量所属的类 (其指向的堆内的具体对象) 是否存在该成员&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;虚拟方法调用例子&#34;&gt;虚拟方法调用例子&lt;/h2&gt;
&lt;figure class=&#34;highlight reasonml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Person e = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;constructor&#34;&gt;Student()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e.get&lt;span class=&#34;constructor&#34;&gt;Info()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;编译时 e 为 Person 类型, 调用时是用的 Student 类的(动态绑定)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;JVM-Errors&#34;&gt;JVM Errors&lt;/h2&gt;
&lt;h4 id=&#34;1-AWT- 错误&#34;&gt;1.AWT 错误&lt;/h4&gt;
&lt;h4 id=&#34;2-JVM- 错误&#34;&gt;2.JVM 错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;StackOverflow&lt;/li&gt;
&lt;li&gt;OutOfMemory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a&gt;&lt;img src= &#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp&#34; data-lazy-src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&#34; alt=&#34;分割线&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;深浅 -clone&#34;&gt;深浅 -clone&lt;/h2&gt;
&lt;img src= &#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp&#34; data-lazy-src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/8tr6DhL5wZeK4V3.png&#34; alt=&#34;20211220211918&#34; /&gt;
&lt;img src= &#34;https://cdn.jsdelivr.net/gh/Weidows/Images/img/loading.webp&#34; data-lazy-src=&#34;https://cdn.jsdelivr.net/gh/Weidows/Images/post/bFRma1xAZhJWpKT.png&#34; alt=&#34;20211220211958&#34; /&gt;
&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kity@2.0.4/dist/kity.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js&#34;&gt;&lt;/script&gt;&lt;script defer=&#34;true&#34; type=&#34;text&amp;#x2F;javascript&#34; src=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text&amp;#x2F;css&#34; href=&#34;https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css&#34;&gt;</content>
        <category term="java" />
        <category term="jvm" />
        <updated>2020-08-25T11:14:35.000Z</updated>
    </entry>
</feed>
