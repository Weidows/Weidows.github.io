{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"多线程\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/system/process-thread/",
            "url": "https://weidows.github.io/post/system/process-thread/",
            "title": "🤷‍♂️进程, 线程,CPU 核心, 并行, 并发大杂碎!",
            "date_published": "2021-03-05T13:08:33.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2021-03-06 00:30:57\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\system\\process-thread.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"#%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B\">进程与线程</a>\n<ul>\n<li><a href=\"#%E8%BF%9B%E7%A8%8B\">进程</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B\">线程</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%87%A0%E6%A0%B8%E5%87%A0%E7%BA%BF%E7%A8%8B\">几核几线程</a></li>\n<li><a href=\"#%E5%B9%B6%E8%A1%8C%E4%B8%8E%E5%B9%B6%E5%8F%91\">并行与并发</a></li>\n<li><a href=\"#%E5%8F%82%E7%85%A7%E6%8E%A8%E8%8D%90%E9%98%85%E8%AF%BB\">参照 &amp; 推荐阅读</a></li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"引子\">引子</h2>\n<ul>\n<li>谈操作系统会了解到 <code> 进程与线程</code></li>\n<li>谈 CPU 会听到 <code> 几核几线程</code></li>\n<li>谈 CPU 调度会存疑 <code> 并行与并发</code></li>\n</ul>\n<hr>\n<h2 id=\"进程与线程\">进程与线程</h2>\n<ul>\n<li>简单层级关系: <code>应用程序 -&gt; 一至多个进程 -&gt; 一至多个线程</code></li>\n</ul>\n<blockquote>\n<p>线程是调度的基本单位，而进程则是资源拥有的基本单位。</p>\n</blockquote>\n<h3 id=\"进程\">进程</h3>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVsaG1.png\" alt=\"20210305222645\" />\n<hr>\n<ul>\n<li>\n<p>在前台显示的 (有图形窗口的) 程序, 叫做<code>&quot; 应用 &quot;</code></p>\n<ul>\n<li>比如 IDEA, 酷狗,Edge,QQ 这些都是应用.</li>\n<li>同一个程序, 打开多个窗口, 其产生的进程也会被归到一个应用下\n<ul>\n<li>比如打开两个 VScode 窗口, 其产生的新进程也会列在 VScode 栏下, 并不会出现两个 VScode 栏</li>\n<li>另外, 新建窗口不一定会产生新进程(比如打开两个 IDEA 窗口,IDEA 栏下的进程数没变)</li>\n</ul>\n</li>\n<li>关闭窗口后, 应用要么被全然关闭, 要么转入后台进程\n<ul>\n<li>就比如 QQ 可以选择整个关掉或者后台挂着, 后台挂着时 QQ 不会在 <code>&quot; 应用 &quot;</code> 列表出现, 会被归到后台进程</li>\n</ul>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>每个应用会有一个至多个进程</p>\n<ul>\n<li>至少有一个 <code>&quot; 应用 &quot;</code> 进程和若干<code>&quot; 后台进程 &quot;</code>.</li>\n<li>比如 IDEA 下面的一排, 六个进程</li>\n<li>一个进程 = <code>.exe</code>之类的可执行文件 + 运行时数据\n<ul>\n<li>也就是说同一个程序运行在不同数据环境下会产生不同进程(比如 IDEA 下的两个 TabNine 进程)</li>\n</ul>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>不同进程之间数据隔离</p>\n<ul>\n<li>也就是说一个进程挂掉只影响这个进程, 对其他进程无影响</li>\n<li>比如浏览器,<code>一个页面就是一个进程</code>(如果两个页面相同会共享同一进程), 脚本插件另行计算, 一个页面崩溃一般只影响这个页面.</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>后台进程</p>\n<ul>\n<li>现在我们可以理解没有界面的程序运行时肯定会被归到 <code> 后台进程</code>\n<ul>\n<li>比如 <code>aria2c.exe</code>, 没有界面, 只可能出现在后台进程.</li>\n</ul>\n</li>\n<li>但是, 有些程序会 <code> 两面吃 </code>, 比如 vscode 运行时,<code>&quot; 应用 &quot;</code> 栏有它,<code>后台进程 </code> 栏也有它!\n<ul>\n<li>&quot; 应用 &quot; 栏会归并对当前程序窗口有影响的进程, 没影响的叫做<code>&quot; 守护进程 &quot;</code></li>\n<li>也就是说这些后台进程有他们的作用, 但是这作用并不依赖于程序运行 (比如说发光发热, 对程序没影响, 但这个进程有它存在的意义), 它们就被归到<code> 后台进程 </code> 去了.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"线程\">线程</h3>\n<ul>\n<li>\n<p>轮到线程了:</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVs14K.png\" alt=\"20210305231739\" />\n</li>\n<li>\n<p>这个比较简单了, 线程是进程内部的, 如上图两个 aria2c 进程中, 分别有一个和三个线程</p>\n</li>\n<li>\n<p>一个进程至少一个线程.</p>\n<ul>\n<li>\n<p>不同线程之间共享同一个进程内的资源.</p>\n</li>\n<li>\n<p>一个线程崩溃会牵连所有, 整个进程会崩溃.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>多线程主要为了 <code> 提升性能</code></p>\n<ul>\n<li>\n<p>比如一个进程只有一个线程, 那它只能同时靠一个 CPU 逻辑处理器处理</p>\n</li>\n<li>\n<p>如果是多线程, 比如 9 个线程, 那么在 8 个逻辑处理器的 CPU 上, 这个进程可以占有 8 个逻辑处理器的算力, 提升运行速度</p>\n</li>\n</ul>\n</li>\n<li>\n<p>如果线程数大于 CPU 逻辑处理器数, 其他的线程排队等待.</p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"几核几线程\">几核几线程</h2>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVsFDT.png\" alt=\"20210305210405\" />\n<ul>\n<li>\n<p>如上图, 一个插槽对应一块结结实实的 CPU</p>\n<ul>\n<li>\n<p>这块 CPU 里面被划分出四个隔离的核心 -&gt; <code>四核</code></p>\n</li>\n<li>\n<p>每个核心, 又可以分为两个逻辑处理器, 一个逻辑处理器只能同时处理一个任务 (线程) -&gt; <code> 八线程</code></p>\n</li>\n<li>\n<p>上面八个线形图就是每个逻辑处理器的使用率</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>运行速度标的是每个核心 (core) 而非逻辑处理器 (processor) 的速度</p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"并行与并发\">并行与并发</h2>\n<ul>\n<li>\n<p>实际上, 网上对这两个词义一定程度上在混用~</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVs30b.png\" alt=\"20210306000528\" />\n</li>\n<li>\n<p>有个词叫<code>&quot; 并行不悖 &quot;</code>, 记住这个就不会弄混了.</p>\n</li>\n<li>\n<p><code>多进程并发, 多线程并行.</code></p>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"参照 - 推荐阅读\">参照 &amp; 推荐阅读</h2>\n<blockquote>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=Mzk0NzE4NTk4Ng==&amp;mid=2247486625&amp;idx=1&amp;sn=f35d340727b0e8e23f82ff7c5182c893&amp;chksm=c37bfc8cf40c759a084effb4c5b253ad50ad0be02b8b8dea073fa333ca6adefce6ef8cb6db9f&amp;mpshare=1&amp;scene=23&amp;srcid=0305mrfN5sGJ1jI9aPxUFqjU&amp;sharer_sharetime=1614936389002&amp;sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd\">进程和线程基础知识全家桶，30 张图一套带走</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/cherrycheng_/article/details/51384657\">基础知识：线程，进程。多进程，多线程。并发，并行的区别</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/86855590\">cpu 核心数与线程数</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.51cto.com/14462329/2427415\">为什么 Chrome 在任务管理器里有 4 个进程？</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/a3192048/article/details/82085422?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-1&amp;spm=1001.2101.3001.4242\">程序，进程，线程的区别和联系</a></p>\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "计算机系统",
                "多线程",
                "进程",
                "cpu"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/3/",
            "url": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/3/",
            "title": "🌭回顾一下 Java 多线程~(叁)",
            "date_published": "2021-02-24T09:14:17.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2021-03-19 00:14:47\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\ 多线程 \\3.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81-reentrantlock\">可重入锁 ReentrantLock</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6\">多线程与循环控制</a></li>\n<li><a href=\"#%E5%BB%B6%E8%BF%9F%E5%AF%B9%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BD%B1%E5%93%8D\">延迟对多线程的影响</a>\n<ul>\n<li><a href=\"#%E4%B8%80\">一</a></li>\n<li><a href=\"#%E4%BA%8C\">二</a></li>\n<li><a href=\"#%E4%B8%89\">三</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1\">线程通信</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E6%B1%A0\">线程池</a></li>\n<li><a href=\"#over\">Over</a></li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"可重入锁 -ReentrantLock\">可重入锁 ReentrantLock</h2>\n<ul>\n<li>\n<p>ReentrantLock 类实现了 java.util.concurrent.locks.Lock 接口</p>\n</li>\n<li>\n<p>与 synchronized 区别:</p>\n<ul>\n<li>ReentrantLock 是显式加解锁, 它只能锁代码块</li>\n<li>性能比 synchronized 好</li>\n</ul>\n</li>\n<li>\n<p>使用优先度</p>\n<ul>\n<li>Lock &gt; 同步代码块(已经进入了方法体，分配了相应资源) &gt; 同步方法(在方法体之外)</li>\n</ul>\n</li>\n<li>\n<p>注意点: 加解锁最好要在 try-finally 里</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">  lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> ticketNums = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReentrantLock lock = <span class=\"keyword\">new</span> ReentrantLock(); <span class=\"comment\">// 定义 Lock 锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 拿到了第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    TestLock testLock = <span class=\"keyword\">new</span> TestLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">10</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">9</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">8</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">7</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">6</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">5</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">4</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">3</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">2</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">1</span> 票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多线程与循环控制\">多线程与循环控制</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> ticketNums = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReentrantLock lock = <span class=\"keyword\">new</span> ReentrantLock(); <span class=\"comment\">// 定义 Lock 锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 拿到了第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    TestLock testLock = <span class=\"keyword\">new</span> TestLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>上面代码 while 循环会存在判断失误</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">10</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">9</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">8</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">7</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">6</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">5</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">4</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">3</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">2</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">1</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">0</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 -<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>ticketNums 在判断之后被多次修改</p>\n<ul>\n<li>上面 10~1 次都是 c 线程执行的, 它执行后轮到 b 和 a</li>\n<li>但是 b 与 a 线程实际上是在 <code>ticketNums=10</code> 时进入的循环, 所以会导致 <code>-1</code> 出现</li>\n</ul>\n</li>\n<li>\n<p>所以建议是:</p>\n<ul>\n<li>遇到多线程循环控制时, 直接<code>while(true)</code>, 然后在内部用<code>if</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"延迟对多线程的影响\">延迟对多线程的影响</h2>\n<blockquote>\n<p>下面三个例子数据都没错, 关键看并发数量和执行时间</p>\n</blockquote>\n<h3 id=\"一\">一</h3>\n<ul>\n<li>\n<p>瞬间执行完, 资源被单一线程全部抢占</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> ticketNums = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReentrantLock lock = <span class=\"keyword\">new</span> ReentrantLock(); <span class=\"comment\">// 定义 Lock 锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 拿到了第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"comment\">// try &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   Thread.sleep(500);</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125; catch (InterruptedException e) &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   e.printStackTrace();</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    TestLock testLock = <span class=\"keyword\">new</span> TestLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">9</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">8</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">7</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">6</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">5</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">4</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">3</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">2</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">1</span> 票</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h3 id=\"二\">二</h3>\n<ul>\n<li>\n<p>给他加个延迟试试:</p>\n<ul>\n<li>三线程并发, 资源分配合理</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 拿到了第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">10</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">9</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">8</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">7</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">6</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">5</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">4</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">3</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">2</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">1</span> 票</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h3 id=\"三\">三</h3>\n<ul>\n<li>\n<p>再试试延迟之后解开同步锁</p>\n<ul>\n<li>单线执行, 资源分配不平衡</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 拿到了第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">10</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第 <span class=\"number\">9</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">8</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">7</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">6</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">5</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">4</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">3</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第 <span class=\"number\">2</span> 票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第 <span class=\"number\">1</span> 票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程通信\">线程通信</h2>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/Java/src/main/java/twenty/november/thread/producer_and_customer/Test.java\">生产者与消费者模型</a></p>\n</blockquote>\n<hr>\n<h2 id=\"线程池\">线程池</h2>\n<ul>\n<li>\n<p>线程池的出现是为了方便大量的线程创建, 回收和管理</p>\n</li>\n<li>\n<p>需要了解 <code>ExecutorService</code> 线程池接口; 以及 <code>Executors</code> 线程池工具类.</p>\n<ul>\n<li>\n<p>corePoolSize: 核心池的大小</p>\n</li>\n<li>\n<p>maximumPoolSize: 最大线程数</p>\n</li>\n<li>\n<p>keepAliveTime: 线程没有任务时最多保持多长时间后会终止</p>\n</li>\n<li>\n<p>void execute(Runnable command) : 执行任务 / 命令, 没有返回值，一般用来执 Runnable</p>\n</li>\n<li>\n<p><T> Future<T> submit(Callable<T> task) : 执行任务, 有返回值，一般用来执行 Callable</p>\n</li>\n</ul>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Callable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThreadPool</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 创建服务，创建线程池</span></span><br><span class=\"line\">    ExecutorService service = Executors.newFixedThreadPool(<span class=\"number\">10</span>); <span class=\"comment\">// 参数为线程池大小</span></span><br><span class=\"line\">    Runnable myThread = () -&gt; &#123;</span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Callable&lt;String&gt; myThread2 = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;Running in &quot;</span> + Thread.currentThread().getName();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 执行: 前五个是 Runnable, 后五个是 Callable</span></span><br><span class=\"line\">    service.execute(myThread);</span><br><span class=\"line\">    service.execute(myThread);</span><br><span class=\"line\">    service.execute(myThread);</span><br><span class=\"line\">    service.execute(myThread);</span><br><span class=\"line\">    service.execute(myThread);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      System.out.println(service.submit(myThread2).get());</span><br><span class=\"line\">      System.out.println(service.submit(myThread2).get());</span><br><span class=\"line\">      System.out.println(service.submit(myThread2).get());</span><br><span class=\"line\">      System.out.println(service.submit(myThread2).get());</span><br><span class=\"line\">      System.out.println(service.submit(myThread2).get());</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 关闭连接</span></span><br><span class=\"line\">    service.shutdown();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// class MyThread implements Runnable &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   @Override</span></span><br><span class=\"line\"><span class=\"comment\">//   public void run() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     System.out.println(Thread.currentThread().getName());</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// class MyThread2 implements Callable &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   @Override</span></span><br><span class=\"line\"><span class=\"comment\">//   public Object call() throws Exception &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     return &quot;Running in &quot; + Thread.currentThread().getName();</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pool</span>-<span class=\"number\">1</span>-thread-<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attribute\">Running</span> in pool-<span class=\"number\">1</span>-thread-<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">pool</span>-<span class=\"number\">1</span>-thread-<span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"attribute\">pool</span>-<span class=\"number\">1</span>-thread-<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attribute\">pool</span>-<span class=\"number\">1</span>-thread-<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attribute\">pool</span>-<span class=\"number\">1</span>-thread-<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attribute\">Running</span> in pool-<span class=\"number\">1</span>-thread-<span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"attribute\">Running</span> in pool-<span class=\"number\">1</span>-thread-<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"attribute\">Running</span> in pool-<span class=\"number\">1</span>-thread-<span class=\"number\">9</span></span><br><span class=\"line\"><span class=\"attribute\">Running</span> in pool-<span class=\"number\">1</span>-thread-<span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Over\">Over</h2>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java",
                "笔记",
                "多线程"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "url": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "title": "🌭回顾一下 Java 多线程~(贰)",
            "date_published": "2021-02-20T17:06:22.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2021-02-24 17:17:20\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\ 多线程 \\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81\">线程状态</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7\">线程优先级</a></li>\n<li><a href=\"#%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B-daemon\">守护线程 daemon</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5\">线程同步</a>\n<ul>\n<li><a href=\"#%E4%B9%B0%E7%A5%A8\">买票</a></li>\n<li><a href=\"#%E9%93%B6%E8%A1%8C%E5%8F%96%E6%AC%BE\">银行取款</a>\n<ul>\n<li><a href=\"#%E8%AF%95%E9%94%99\">试错</a></li>\n</ul>\n</li>\n<li><a href=\"#list\">List</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%AD%BB%E9%94%81\">死锁</a>\n<ul>\n<li><a href=\"#%E4%BA%A7%E7%94%9F%E6%9D%A1%E4%BB%B6\">产生条件</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">解决方案</a></li>\n</ul>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程状态\">线程状态</h2>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVmJzz.png\" alt=\"20210221232406\" />\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestState</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    Thread thread = <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;///&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 观察状态</span></span><br><span class=\"line\">    Thread.State state = thread.getState();</span><br><span class=\"line\">    System.out.println(state); <span class=\"comment\">//NEW</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 观察后启动</span></span><br><span class=\"line\">    thread.start(); <span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">    state = thread.getState();</span><br><span class=\"line\">    System.out.println(); <span class=\"comment\">//Run</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (state != Thread.State.TERMINATED) &#123; <span class=\"comment\">// 只要线程不停止，就一直输出状态</span></span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">      state = thread.getState(); <span class=\"comment\">// 更新线程状态</span></span><br><span class=\"line\">      System.out.println(state); <span class=\"comment\">// 输出状态</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//thread.start();   报错，因为已经死亡的线程不能再启动</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"线程优先级\">线程优先级</h2>\n<ul>\n<li>\n<p>线程的优先级用数字表示，范围从 1~10.</p>\n<ul>\n<li>Thread.MIN_PRIORITY = 1;</li>\n<li>Thread.MAX_PRIORITY = 10;</li>\n<li>Thread.NORM_PRIORITY = 5;</li>\n</ul>\n</li>\n<li>\n<p>使用一下方法改变或获取优先级</p>\n<ul>\n<li>​.getPriority()</li>\n<li>.setPriority(int xxx)</li>\n</ul>\n</li>\n<li>\n<p>不做举例了, 跳过.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"守护线程 -daemon\">守护线程 daemon</h2>\n<ul>\n<li>线程分为 <code> 用户线程 </code> 和<code>守护线程</code>, 用户线程必须执行完毕程序才终止, 而守护线程不做要求.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDaemon</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ! 上帝</span></span><br><span class=\"line\">    Runnable god = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 上帝保佑你 &quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"comment\">// ! 你</span></span><br><span class=\"line\">    Runnable you = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 你一生都开心的活着 &quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;GoodBye World&quot;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Thread godThread = <span class=\"keyword\">new</span> Thread(god);</span><br><span class=\"line\">    godThread.setDaemon(<span class=\"keyword\">true</span>); <span class=\"comment\">// 默认 false 表示是用户线程，正常的线程都是用户线程</span></span><br><span class=\"line\">    godThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(you).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果: &quot;you&quot; 线程终止时程序就结束了.</p>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">...</span></span><br><span class=\"line\">上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 你一生都开心的活着 </span><br><span class=\"line\"> 你一生都开心的活着 </span><br><span class=\"line\"> 你一生都开心的活着 </span><br><span class=\"line\"> 你一生都开心的活着 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\">GoodBye World</span><br><span class=\"line\"> 上帝保佑你 </span><br><span class=\"line\"> 上帝保佑你</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程同步\">线程同步</h2>\n<ul>\n<li>多个线程操作同一资源时会有问题出现, 用 <code>synchronized</code> 同步.</li>\n</ul>\n<h3 id=\"买票\">买票</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Ticket</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> ticketNums = <span class=\"number\">10</span>; <span class=\"comment\">// 票数</span></span><br><span class=\"line\">  <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>; <span class=\"comment\">// 外部停止方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag) &#123;</span><br><span class=\"line\">      buy();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">buy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 判断是否有票</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ticketNums &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 模拟延时</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt; 得到倒数第 &quot;</span> + ticketNums-- + <span class=\"string\">&quot; 票 &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Ticket ticket = <span class=\"keyword\">new</span> Ticket();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(ticket, <span class=\"string\">&quot; 小明 &quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(ticket, <span class=\"string\">&quot; 老师 &quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(ticket, <span class=\"string\">&quot; 黄牛 &quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明 <span class=\"comment\">--&gt; 得到倒数第 10 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 9 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 8 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 7 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 6 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 5 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 4 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 3 票</span></span><br><span class=\"line\"> 小明 <span class=\"comment\">--&gt; 得到倒数第 2 票</span></span><br><span class=\"line\"> 小明<span class=\"comment\">--&gt; 得到倒数第 1 票</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"银行取款\">银行取款</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bank</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Account account = <span class=\"keyword\">new</span> Account(<span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">100</span>), <span class=\"string\">&quot; 我的账户 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    DrawingChannel a = <span class=\"keyword\">new</span> DrawingChannel(account, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">50</span>), <span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">    DrawingChannel b = <span class=\"keyword\">new</span> DrawingChannel(account, <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">100</span>), <span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    a.start();</span><br><span class=\"line\">    b.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 账户</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span> </span>&#123;</span><br><span class=\"line\">  BigDecimal balance;<span class=\"comment\">// 余额</span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> String name; <span class=\"comment\">// 卡名</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Account</span><span class=\"params\">(BigDecimal balance, String name)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.balance = balance;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 银行：模拟取款</span></span><br><span class=\"line\"><span class=\"comment\"> * * 这里之所以没用实现 Runnable 接口的方式是为了调用 Thread 类中一些方法</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawingChannel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> Account account; <span class=\"comment\">// 账户</span></span><br><span class=\"line\">  BigDecimal drawingMoney; <span class=\"comment\">// 取了多少钱</span></span><br><span class=\"line\">  BigDecimal nowMoney; <span class=\"comment\">// 现在手里有多少钱</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawingChannel</span><span class=\"params\">(Account account, BigDecimal drawingMoney, String name)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(name);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.account = account;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.drawingMoney = drawingMoney;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.nowMoney = <span class=\"keyword\">new</span> BigDecimal(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (account) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 判断有没有钱</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (account.balance.compareTo(drawingMoney) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(account.name + <span class=\"string\">&quot; 钱不够 &quot;</span> + drawingMoney + <span class=\"string\">&quot;,&quot;</span> + <span class=\"keyword\">this</span>.getName() + <span class=\"string\">&quot; 无法取走 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 放大错误</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      draw();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 卡内余额 = 余额 - 取的钱</span></span><br><span class=\"line\">    account.balance = account.balance.subtract(drawingMoney);</span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">this</span>.getName() + <span class=\"string\">&quot; 取走 &quot;</span> + drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 手里的钱</span></span><br><span class=\"line\">    nowMoney = nowMoney.add(drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(account.name + <span class=\"string\">&quot; 余额为：&quot;</span> + account.balance);</span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">this</span>.getName() + <span class=\"string\">&quot; 手里的钱：&quot;</span> + nowMoney);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>预期结果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>取走 <span class=\"number\">50</span></span><br><span class=\"line\"> 我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户钱不够 <span class=\"number\">100</span>,<span class=\"selector-tag\">B</span> 无法取走</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"试错\">试错</h4>\n<ul>\n<li>\n<p>熟练使用.sleep()试错</p>\n<ul>\n<li>\n<p>试错前</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我的账户钱不够 <span class=\"number\">100</span>,<span class=\"selector-tag\">B</span> 无法取走 </span><br><span class=\"line\"> 我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>试错后</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">B</span> 取走 <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 取走 <span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">B</span> 手里的钱：<span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"List\">List</h3>\n<ul>\n<li>\n<p>多个线程同时操作 List 对象时可能会存在覆写(线程不安全)</p>\n</li>\n<li>\n<p>非线程同步</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestList</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时, 为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">// 输出：9992</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>线程同步</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestList</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (list) &#123;</span><br><span class=\"line\">          list.add(Thread.currentThread().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时, 为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">// 输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>线程安全 List</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JUC</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> CopyOnWriteArrayList&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">// 输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"死锁\">死锁</h2>\n<ul>\n<li>\n<p>两线程在各自拥有一个对象的锁时都等待对方线程释放对象的锁</p>\n</li>\n<li>\n<p>也有可能很多线程产生环形死锁或者更复杂的.</p>\n</li>\n<li>\n<p>如下例子就会产生死锁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 死锁：多个线程互相抱着对方需要的资源</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DeadLock</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Makeup m1 = <span class=\"keyword\">new</span> Makeup(<span class=\"number\">0</span>, <span class=\"string\">&quot; 小黑 &quot;</span>);</span><br><span class=\"line\">    Makeup m2 = <span class=\"keyword\">new</span> Makeup(<span class=\"number\">1</span>, <span class=\"string\">&quot; 小白 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    m1.start();</span><br><span class=\"line\">    m2.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 口红</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Lipstick</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 镜子</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mirror</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 化妆</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Makeup</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 需要的资源只有一份，用 static 来保证只有一份</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Lipstick lipstick = <span class=\"keyword\">new</span> Lipstick();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> Mirror mirror = <span class=\"keyword\">new</span> Mirror();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> choice; <span class=\"comment\">// 选择</span></span><br><span class=\"line\">  String name; <span class=\"comment\">// 使用化妆品的人</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Makeup</span><span class=\"params\">(<span class=\"keyword\">int</span> choice, String name)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.choice = choice;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 化妆</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      makeup();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 化妆，互相持有对方的锁，就是需要拿到对方的资源</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得口红的锁 &quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得镜子的锁 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得镜子的锁 &quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 两秒钟后想获得口红的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得口红的锁 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"产生条件\">产生条件</h3>\n<ul>\n<li>\n<p>四个必要条件:</p>\n<ol>\n<li>互斥条件：一个资源每次只能被一个进程使用。</li>\n<li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li>\n<li>不剥夺条件：进程已获得的资源，在未使用完之前不能强行剥夺。</li>\n<li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"解决方案 -3\">解决方案</h3>\n<ul>\n<li>\n<p>使用完同步对象后立即释放</p>\n<ul>\n<li>比如上面的例子中使用完 <code> 口红 </code> 或者 <code> 镜子 </code> 后未释放, 再去获取另一个对象的锁, 就会产生死锁了</li>\n<li>修改: 把 makeup 改为如下</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得口红的锁 &quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得镜子的锁 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得镜子的锁 &quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 两秒钟后想获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"keyword\">this</span>.name + <span class=\"string\">&quot; 获得口红的锁 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java",
                "笔记",
                "多线程"
            ]
        },
        {
            "id": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/",
            "url": "https://weidows.github.io/post/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/1/",
            "title": "🌭回顾一下 Java 多线程~(壹)",
            "date_published": "2021-02-08T10:59:13.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @Date: 2021-02-08 18:59:13\n * @LastEditors: Weidows\n * @LastEditTime: 2021-05-22 10:45:15\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\ 多线程 \\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%8F%82%E7%85%A7\">参照</a></li>\n<li><a href=\"#%E6%A6%82%E5%BF%B5\">概念</a></li>\n<li><a href=\"#maven-%E8%87%AA%E5%8A%A8%E5%AF%BC%E5%85%A5-jar-%E5%8C%85\">Maven 自动导入 jar 包</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E8%A1%8C%E4%B8%8B%E8%BD%BD\">多线程并行下载</a>\n<ul>\n<li><a href=\"#%E5%AE%9E%E7%8E%B0runnable%E6%8E%A5%E5%8F%A3\">实现 <code>Runnable</code> 接口</a></li>\n<li><a href=\"#%E5%AE%9E%E7%8E%B0callable%E6%8E%A5%E5%8F%A3\">实现 <code>Callable</code> 接口</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86\">静态代理</a></li>\n<li><a href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\">生命周期</a></li>\n<li><a href=\"#%E5%81%9C%E6%AD%A2%E7%BA%BF%E7%A8%8B\">停止线程</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E4%BC%91%E7%9C%A0\">线程休眠</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E8%AE%A9%E6%AD%A5\">线程让步</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B-join\">线程 Join</a></li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"参照 -8\">参照</h2>\n<blockquote>\n<p>在此文章记录了: <a href=\"../../../others/LearnWay#%E5%A4%9A%E7%BA%BF%E7%A8%8B\">😍Weidows の成长路线.# 多线程</a></p>\n</blockquote>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"概念\">概念</h2>\n<ul>\n<li>main()称为主线程，为系统的入口</li>\n<li>一个进程中，如果开辟了多个线程，线程的运行由调度器安排，调度器是与操作系统紧密相关的，先后顺序是不能认为干预的(无法预测线程运行顺序)</li>\n<li>程序运行时, 默认会有多个线程, 比如 main 和 gc(垃圾回收器)</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Maven- 自动导入 -jar- 包\">Maven 自动导入 jar 包</h2>\n<ul>\n<li>\n<p>比如我们需要导入 Apache 的 <code>commons-io</code> 这个包, 去 Maven 仓库搜, 可以找到 <a href=\"https://mvnrepository.com/artifact/commons-io/commons-io\"> 这个网址</a></p>\n</li>\n<li>\n<p>然后选择一个版本点进去</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVP0Qc.png\" alt=\"20210211010341\" />\n</li>\n<li>\n<p>复制框里的内容, 找到 Java 项目 <code>pom.xml</code> 文件, 粘贴到如下地方</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GV4ttE.png\" alt=\"20210211010614\" />\n</li>\n<li>\n<p>然后右键<code>pom.xml</code>-&gt;Maven-&gt; 重新加载项目.</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVSRz6.png\" alt=\"20210211010920\" />\n</li>\n<li>\n<p>在 VScode 内的话也有这种操作:</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVS7C6.png\" alt=\"20210211011109\" />\n</li>\n<li>\n<p>当然关闭然后重新打开 IDE 也是可以的,Maven 会自动更新, 更新后如下, 包就导进来了:</p>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVAD6P.png\" alt=\"20210211011240\" />\n</li>\n</ul>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多线程并行下载\">多线程并行下载</h2>\n<h3 id=\"实现 Runnable 接口\">实现 <code>Runnable</code> 接口</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.thread.downloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Downloader</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String fileName;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Downloader</span><span class=\"params\">(String url, String fileName)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fileName = fileName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url), <span class=\"keyword\">new</span> File(fileName));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Download finished.&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (MalformedURLException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Downloader(<span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;./Java/src/main/java/twenty/november/thread/downloader/1.png&quot;</span>)).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Downloader(<span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;./Java/src/main/java/twenty/november/thread/downloader/2.png&quot;</span>)).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"实现 Callable 接口\">实现 <code>Callable</code> 接口</h3>\n<ul>\n<li>Callable 与 Runnable 区别为它可以带有返回值类型, 可以抛出异常</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.thread.downloader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.MalformedURLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Callable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Future;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Downloader2</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span>&lt;<span class=\"title\">Object</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String fileName;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">call</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> MalformedURLException, IOException </span>&#123;</span><br><span class=\"line\">    FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url), <span class=\"keyword\">new</span> File(fileName));</span><br><span class=\"line\">    System.out.println(fileName + <span class=\"string\">&quot; 下载完成 &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Downloader2</span><span class=\"params\">(String url, String fileName)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fileName = fileName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建线程池</span></span><br><span class=\"line\">    ExecutorService ser = Executors.newFixedThreadPool(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 提交执行</span></span><br><span class=\"line\">    Future&lt;Object&gt; submit1 = ser</span><br><span class=\"line\">        .submit(<span class=\"keyword\">new</span> Downloader2(<span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;./Java/src/main/java/twenty/november/thread/downloader/1.png&quot;</span>));</span><br><span class=\"line\">    Future&lt;Object&gt; submit2 = ser</span><br><span class=\"line\">        .submit(<span class=\"keyword\">new</span> Downloader2(<span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;./Java/src/main/java/twenty/november/thread/downloader/2.png&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取结果</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Object result1 = submit1.get();</span><br><span class=\"line\">      Object result2 = submit2.get();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException | ExecutionException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 关闭服务</span></span><br><span class=\"line\">    ser.shutdown();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"静态代理\">静态代理</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> twenty.november.proxy.static_proxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StaticProxy</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    MarryProxy proxy = <span class=\"keyword\">new</span> MarryProxy(<span class=\"keyword\">new</span> Me(<span class=\"string\">&quot;Weidows&quot;</span>));</span><br><span class=\"line\">    proxy.Marry();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 代理和被代理类都实现 Marry 接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Marry</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Marry</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 被代理者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Me</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Marry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(name + <span class=\"string\">&quot; 结婚了 &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Me</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 代理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MarryProxy</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Me target;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Marry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    before();</span><br><span class=\"line\">    target.Marry();</span><br><span class=\"line\">    after();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">after</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(target.name + <span class=\"string\">&quot; 结婚后 &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(target.name + <span class=\"string\">&quot; 结婚前 &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MarryProxy</span><span class=\"params\">(Me target)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.target = target;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src=\"https://cdn.jsdelivr.net/gh/Weidows/Images/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"生命周期\">生命周期</h2>\n<img src=\"https://www.helloimg.com/images/2022/02/27/GVmsBA.png\" alt=\"20210219173514\" />\n<hr>\n<h2 id=\"停止线程\">停止线程</h2>\n<ol>\n<li>建议线程正常停止——&gt; 利用次数，不建议死循环</li>\n<li>建议使用标志位——&gt; 设置一个标志位</li>\n<li><code>不要用</code> stop 或者 destroy 等过时或者 JDK 不建议使用的方法</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestStop</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//1. 设置一个标志位 </span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; <span class=\"comment\">// 运行次数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Thread.run() 运行次数: &quot;</span> + i++);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//2. 设置一个公开的方法停止线程，转换标志位</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    TestStop testStop = <span class=\"keyword\">new</span> TestStop();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(testStop).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;main: &quot;</span> + i);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i == <span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">        testStop.stop();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;testStop 线程停止了,main 线程还在运行 &quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"线程休眠\">线程休眠</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestSleep</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 十秒倒计时</span></span><br><span class=\"line\">      tenSecondsDown();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 每秒输出系统当前时间</span></span><br><span class=\"line\">      countTime();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">tenSecondsDown</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      System.out.println(num--);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">countTime</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Date startTime = <span class=\"keyword\">new</span> Date(System.currentTimeMillis()); <span class=\"comment\">// 获取系统当前时间</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class=\"line\">        startTime = <span class=\"keyword\">new</span> Date(System.currentTimeMillis()); <span class=\"comment\">// 更新当前时间</span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>测试数据时可以通过延时来放大线程问题的发生性.</li>\n</ul>\n<hr>\n<h2 id=\"线程让步\">线程让步</h2>\n<ul>\n<li>令当前线程 <code> 暂停但并不阻塞</code>, 有可能让步并不成功.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestYield</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// MyYield myYield = new MyYield();</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * 匿名内部类的方式</span></span><br><span class=\"line\">    <span class=\"comment\">// Runnable myYield = new Runnable() &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   @Override</span></span><br><span class=\"line\">    <span class=\"comment\">//   public void run() &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot; 线程开始执行 &quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">//     Thread.yield(); // 礼让</span></span><br><span class=\"line\">    <span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot; 线程停止执行 &quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">//   &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * Lambda 表达式方式</span></span><br><span class=\"line\">    Runnable myYield = () -&gt; &#123;</span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; 线程开始执行 &quot;</span>);</span><br><span class=\"line\">      Thread.yield(); <span class=\"comment\">// 礼让</span></span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; 线程停止执行 &quot;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(myYield, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> Thread(myYield, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// * 新建类的方式实现接口</span></span><br><span class=\"line\"><span class=\"comment\">// class MyYield implements Runnable &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   @Override</span></span><br><span class=\"line\"><span class=\"comment\">//   public void run() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot; 线程开始执行 &quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//     Thread.yield(); // 礼让</span></span><br><span class=\"line\"><span class=\"comment\">//     System.out.println(Thread.currentThread().getName() + &quot; 线程停止执行 &quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<ul>\n<li>预期结果, 让步成功</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>线程开始执行 </span><br><span class=\"line\"><span class=\"selector-tag\">b</span> 线程开始执行 </span><br><span class=\"line\"><span class=\"selector-tag\">a</span> 线程停止执行 </span><br><span class=\"line\"><span class=\"selector-tag\">b</span> 线程停止执行</span><br></pre></td></tr></table></figure>\n<ul>\n<li>让步未成功(但也并不能认为是失败, 确确实实让了一下)</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>线程开始执行 </span><br><span class=\"line\"><span class=\"selector-tag\">a</span> 线程停止执行 </span><br><span class=\"line\"><span class=\"selector-tag\">b</span> 线程开始执行 </span><br><span class=\"line\"><span class=\"selector-tag\">b</span> 线程停止执行</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"线程 -Join\">线程 Join</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestJoin</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    Runnable testJoin = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;vipThread&quot;</span> + i);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Thread vipThread = <span class=\"keyword\">new</span> Thread(testJoin);</span><br><span class=\"line\">    vipThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 主线程</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i == <span class=\"number\">50</span>) &#123;</span><br><span class=\"line\">        vipThread.join(); <span class=\"comment\">// 插队</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;main&quot;</span> + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mai<span class=\"symbol\">n0</span></span><br><span class=\"line\">vipThread<span class=\"number\">0</span></span><br><span class=\"line\">mai<span class=\"symbol\">n1</span></span><br><span class=\"line\">vipThread<span class=\"number\">1</span></span><br><span class=\"line\">vipThread<span class=\"number\">2</span></span><br><span class=\"line\">mai<span class=\"symbol\">n2</span></span><br><span class=\"line\">mai<span class=\"symbol\">n3</span></span><br><span class=\"line\">vipThread<span class=\"number\">3</span></span><br><span class=\"line\">mai<span class=\"symbol\">n4</span></span><br><span class=\"line\">vipThread<span class=\"number\">4</span></span><br><span class=\"line\">mai<span class=\"symbol\">n5</span></span><br><span class=\"line\">vipThread<span class=\"number\">5</span></span><br><span class=\"line\">mai<span class=\"symbol\">n6</span></span><br><span class=\"line\">vipThread<span class=\"number\">6</span></span><br><span class=\"line\">mai<span class=\"symbol\">n7</span></span><br><span class=\"line\">vipThread<span class=\"number\">7</span></span><br><span class=\"line\">mai<span class=\"symbol\">n8</span></span><br><span class=\"line\">vipThread<span class=\"number\">8</span></span><br><span class=\"line\">mai<span class=\"symbol\">n9</span></span><br><span class=\"line\">vipThread<span class=\"number\">9</span></span><br><span class=\"line\">mai<span class=\"symbol\">n10</span></span><br><span class=\"line\">vipThread<span class=\"number\">10</span></span><br><span class=\"line\">mai<span class=\"symbol\">n11</span></span><br><span class=\"line\">vipThread<span class=\"number\">11</span></span><br><span class=\"line\">mai<span class=\"symbol\">n12</span></span><br><span class=\"line\">vipThread<span class=\"number\">12</span></span><br><span class=\"line\">mai<span class=\"symbol\">n13</span></span><br><span class=\"line\">vipThread<span class=\"number\">13</span></span><br><span class=\"line\">mai<span class=\"symbol\">n14</span></span><br><span class=\"line\">vipThread<span class=\"number\">14</span></span><br><span class=\"line\">mai<span class=\"symbol\">n15</span></span><br><span class=\"line\">vipThread<span class=\"number\">15</span></span><br><span class=\"line\">mai<span class=\"symbol\">n16</span></span><br><span class=\"line\">vipThread<span class=\"number\">16</span></span><br><span class=\"line\">mai<span class=\"symbol\">n17</span></span><br><span class=\"line\">vipThread<span class=\"number\">17</span></span><br><span class=\"line\">mai<span class=\"symbol\">n18</span></span><br><span class=\"line\">vipThread<span class=\"number\">18</span></span><br><span class=\"line\">mai<span class=\"symbol\">n19</span></span><br><span class=\"line\">mai<span class=\"symbol\">n20</span></span><br><span class=\"line\">vipThread<span class=\"number\">19</span></span><br><span class=\"line\">mai<span class=\"symbol\">n21</span></span><br><span class=\"line\">vipThread<span class=\"number\">20</span></span><br><span class=\"line\">vipThread<span class=\"number\">21</span></span><br><span class=\"line\">mai<span class=\"symbol\">n22</span></span><br><span class=\"line\">vipThread<span class=\"number\">22</span></span><br><span class=\"line\">mai<span class=\"symbol\">n23</span></span><br><span class=\"line\">vipThread<span class=\"number\">23</span></span><br><span class=\"line\">mai<span class=\"symbol\">n24</span></span><br><span class=\"line\">mai<span class=\"symbol\">n25</span></span><br><span class=\"line\">vipThread<span class=\"number\">24</span></span><br><span class=\"line\">mai<span class=\"symbol\">n26</span></span><br><span class=\"line\">mai<span class=\"symbol\">n27</span></span><br><span class=\"line\">vipThread<span class=\"number\">25</span></span><br><span class=\"line\">vipThread<span class=\"number\">26</span></span><br><span class=\"line\">mai<span class=\"symbol\">n28</span></span><br><span class=\"line\">mai<span class=\"symbol\">n29</span></span><br><span class=\"line\">vipThread<span class=\"number\">27</span></span><br><span class=\"line\">mai<span class=\"symbol\">n30</span></span><br><span class=\"line\">vipThread<span class=\"number\">28</span></span><br><span class=\"line\">mai<span class=\"symbol\">n31</span></span><br><span class=\"line\">mai<span class=\"symbol\">n32</span></span><br><span class=\"line\">vipThread<span class=\"number\">29</span></span><br><span class=\"line\">vipThread<span class=\"number\">30</span></span><br><span class=\"line\">mai<span class=\"symbol\">n33</span></span><br><span class=\"line\">vipThread<span class=\"number\">31</span></span><br><span class=\"line\">vipThread<span class=\"number\">32</span></span><br><span class=\"line\">vipThread<span class=\"number\">33</span></span><br><span class=\"line\">mai<span class=\"symbol\">n34</span></span><br><span class=\"line\">vipThread<span class=\"number\">34</span></span><br><span class=\"line\">mai<span class=\"symbol\">n35</span></span><br><span class=\"line\">mai<span class=\"symbol\">n36</span></span><br><span class=\"line\">vipThread<span class=\"number\">35</span></span><br><span class=\"line\">vipThread<span class=\"number\">36</span></span><br><span class=\"line\">mai<span class=\"symbol\">n37</span></span><br><span class=\"line\">vipThread<span class=\"number\">37</span></span><br><span class=\"line\">mai<span class=\"symbol\">n38</span></span><br><span class=\"line\">vipThread<span class=\"number\">38</span></span><br><span class=\"line\">mai<span class=\"symbol\">n39</span></span><br><span class=\"line\">vipThread<span class=\"number\">39</span></span><br><span class=\"line\">vipThread<span class=\"number\">40</span></span><br><span class=\"line\">mai<span class=\"symbol\">n40</span></span><br><span class=\"line\">vipThread<span class=\"number\">41</span></span><br><span class=\"line\">mai<span class=\"symbol\">n41</span></span><br><span class=\"line\">vipThread<span class=\"number\">42</span></span><br><span class=\"line\">mai<span class=\"symbol\">n42</span></span><br><span class=\"line\">vipThread<span class=\"number\">43</span></span><br><span class=\"line\">mai<span class=\"symbol\">n43</span></span><br><span class=\"line\">vipThread<span class=\"number\">44</span></span><br><span class=\"line\">mai<span class=\"symbol\">n44</span></span><br><span class=\"line\">vipThread<span class=\"number\">45</span></span><br><span class=\"line\">mai<span class=\"symbol\">n45</span></span><br><span class=\"line\">vipThread<span class=\"number\">46</span></span><br><span class=\"line\">mai<span class=\"symbol\">n46</span></span><br><span class=\"line\">vipThread<span class=\"number\">47</span></span><br><span class=\"line\">mai<span class=\"symbol\">n47</span></span><br><span class=\"line\">vipThread<span class=\"number\">48</span></span><br><span class=\"line\">mai<span class=\"symbol\">n48</span></span><br><span class=\"line\">vipThread<span class=\"number\">49</span></span><br><span class=\"line\">mai<span class=\"symbol\">n49</span></span><br><span class=\"line\">vipThread<span class=\"number\">50</span></span><br><span class=\"line\">vipThread<span class=\"number\">51</span></span><br><span class=\"line\">vipThread<span class=\"number\">52</span></span><br><span class=\"line\">vipThread<span class=\"number\">53</span></span><br><span class=\"line\">vipThread<span class=\"number\">54</span></span><br><span class=\"line\">vipThread<span class=\"number\">55</span></span><br><span class=\"line\">vipThread<span class=\"number\">56</span></span><br><span class=\"line\">vipThread<span class=\"number\">57</span></span><br><span class=\"line\">vipThread<span class=\"number\">58</span></span><br><span class=\"line\">vipThread<span class=\"number\">59</span></span><br><span class=\"line\">vipThread<span class=\"number\">60</span></span><br><span class=\"line\">vipThread<span class=\"number\">61</span></span><br><span class=\"line\">vipThread<span class=\"number\">62</span></span><br><span class=\"line\">vipThread<span class=\"number\">63</span></span><br><span class=\"line\">vipThread<span class=\"number\">64</span></span><br><span class=\"line\">vipThread<span class=\"number\">65</span></span><br><span class=\"line\">vipThread<span class=\"number\">66</span></span><br><span class=\"line\">vipThread<span class=\"number\">67</span></span><br><span class=\"line\">vipThread<span class=\"number\">68</span></span><br><span class=\"line\">vipThread<span class=\"number\">69</span></span><br><span class=\"line\">vipThread<span class=\"number\">70</span></span><br><span class=\"line\">vipThread<span class=\"number\">71</span></span><br><span class=\"line\">vipThread<span class=\"number\">72</span></span><br><span class=\"line\">vipThread<span class=\"number\">73</span></span><br><span class=\"line\">vipThread<span class=\"number\">74</span></span><br><span class=\"line\">vipThread<span class=\"number\">75</span></span><br><span class=\"line\">vipThread<span class=\"number\">76</span></span><br><span class=\"line\">vipThread<span class=\"number\">77</span></span><br><span class=\"line\">vipThread<span class=\"number\">78</span></span><br><span class=\"line\">vipThread<span class=\"number\">79</span></span><br><span class=\"line\">vipThread<span class=\"number\">80</span></span><br><span class=\"line\">vipThread<span class=\"number\">81</span></span><br><span class=\"line\">vipThread<span class=\"number\">82</span></span><br><span class=\"line\">vipThread<span class=\"number\">83</span></span><br><span class=\"line\">vipThread<span class=\"number\">84</span></span><br><span class=\"line\">vipThread<span class=\"number\">85</span></span><br><span class=\"line\">vipThread<span class=\"number\">86</span></span><br><span class=\"line\">vipThread<span class=\"number\">87</span></span><br><span class=\"line\">vipThread<span class=\"number\">88</span></span><br><span class=\"line\">vipThread<span class=\"number\">89</span></span><br><span class=\"line\">vipThread<span class=\"number\">90</span></span><br><span class=\"line\">vipThread<span class=\"number\">91</span></span><br><span class=\"line\">vipThread<span class=\"number\">92</span></span><br><span class=\"line\">vipThread<span class=\"number\">93</span></span><br><span class=\"line\">vipThread<span class=\"number\">94</span></span><br><span class=\"line\">vipThread<span class=\"number\">95</span></span><br><span class=\"line\">vipThread<span class=\"number\">96</span></span><br><span class=\"line\">vipThread<span class=\"number\">97</span></span><br><span class=\"line\">vipThread<span class=\"number\">98</span></span><br><span class=\"line\">vipThread<span class=\"number\">99</span></span><br><span class=\"line\">mai<span class=\"symbol\">n50</span></span><br><span class=\"line\">mai<span class=\"symbol\">n51</span></span><br><span class=\"line\">mai<span class=\"symbol\">n52</span></span><br><span class=\"line\">mai<span class=\"symbol\">n53</span></span><br><span class=\"line\">mai<span class=\"symbol\">n54</span></span><br><span class=\"line\">mai<span class=\"symbol\">n55</span></span><br><span class=\"line\">mai<span class=\"symbol\">n56</span></span><br><span class=\"line\">mai<span class=\"symbol\">n57</span></span><br><span class=\"line\">mai<span class=\"symbol\">n58</span></span><br><span class=\"line\">mai<span class=\"symbol\">n59</span></span><br><span class=\"line\">mai<span class=\"symbol\">n60</span></span><br><span class=\"line\">mai<span class=\"symbol\">n61</span></span><br><span class=\"line\">mai<span class=\"symbol\">n62</span></span><br><span class=\"line\">mai<span class=\"symbol\">n63</span></span><br><span class=\"line\">mai<span class=\"symbol\">n64</span></span><br><span class=\"line\">mai<span class=\"symbol\">n65</span></span><br><span class=\"line\">mai<span class=\"symbol\">n66</span></span><br><span class=\"line\">mai<span class=\"symbol\">n67</span></span><br><span class=\"line\">mai<span class=\"symbol\">n68</span></span><br><span class=\"line\">mai<span class=\"symbol\">n69</span></span><br><span class=\"line\">mai<span class=\"symbol\">n70</span></span><br><span class=\"line\">mai<span class=\"symbol\">n71</span></span><br><span class=\"line\">mai<span class=\"symbol\">n72</span></span><br><span class=\"line\">mai<span class=\"symbol\">n73</span></span><br><span class=\"line\">mai<span class=\"symbol\">n74</span></span><br><span class=\"line\">mai<span class=\"symbol\">n75</span></span><br><span class=\"line\">mai<span class=\"symbol\">n76</span></span><br><span class=\"line\">mai<span class=\"symbol\">n77</span></span><br><span class=\"line\">mai<span class=\"symbol\">n78</span></span><br><span class=\"line\">mai<span class=\"symbol\">n79</span></span><br><span class=\"line\">mai<span class=\"symbol\">n80</span></span><br><span class=\"line\">mai<span class=\"symbol\">n81</span></span><br><span class=\"line\">mai<span class=\"symbol\">n82</span></span><br><span class=\"line\">mai<span class=\"symbol\">n83</span></span><br><span class=\"line\">mai<span class=\"symbol\">n84</span></span><br><span class=\"line\">mai<span class=\"symbol\">n85</span></span><br><span class=\"line\">mai<span class=\"symbol\">n86</span></span><br><span class=\"line\">mai<span class=\"symbol\">n87</span></span><br><span class=\"line\">mai<span class=\"symbol\">n88</span></span><br><span class=\"line\">mai<span class=\"symbol\">n89</span></span><br><span class=\"line\">mai<span class=\"symbol\">n90</span></span><br><span class=\"line\">mai<span class=\"symbol\">n91</span></span><br><span class=\"line\">mai<span class=\"symbol\">n92</span></span><br><span class=\"line\">mai<span class=\"symbol\">n93</span></span><br><span class=\"line\">mai<span class=\"symbol\">n94</span></span><br><span class=\"line\">mai<span class=\"symbol\">n95</span></span><br><span class=\"line\">mai<span class=\"symbol\">n96</span></span><br><span class=\"line\">mai<span class=\"symbol\">n97</span></span><br><span class=\"line\">mai<span class=\"symbol\">n98</span></span><br><span class=\"line\">mai<span class=\"symbol\">n99</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>可以见到 main 和 vipThread 两个线程几乎同步执行, 到了 main49 时,vipThread 会主动插队, 这时 vipThread 之外的线程阻塞.</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "java",
                "笔记",
                "多线程"
            ]
        }
    ]
}