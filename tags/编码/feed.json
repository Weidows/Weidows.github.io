{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"编码\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/lang/Java/TransformCharset/",
            "url": "https://weidows.github.io/post/lang/Java/TransformCharset/",
            "title": "字符编码转换器",
            "date_published": "2020-10-31T09:51:12.000Z",
            "content_html": "<!--\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2021-02-13 17:15:08\n * @FilePath: \\Weidowsd:\\Game\\Github\\Blog-private\\source\\_posts\\Java\\TransformCharset.md\n-->\n<ul>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#%E6%BA%90%E7%A0%81\">源码</a></li>\n</ul>\n<h2 id=\"简介\">简介</h2>\n<ul>\n<li>这是个文件字符编码转换程序</li>\n<li>只能支持文本文件,比如<code>.txt</code>/<code>.cpp</code>/<code>.java</code>等等,不支持二进制文件(二进制文件也用不到这个 2333)</li>\n<li>OK ,上源码,具体使用下面<code>main方法</code>里有简介</li>\n</ul>\n<hr>\n<h2 id=\"源码\">源码</h2>\n<ul>\n<li><code>TransformCharset.java</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * @?: *********************************************************************</span></span><br><span class=\"line\"><span class=\"comment\"> * @Author: Weidows</span></span><br><span class=\"line\"><span class=\"comment\"> * @Date: 2020-10-31 14:49:51</span></span><br><span class=\"line\"><span class=\"comment\"> * @LastEditors: Weidows</span></span><br><span class=\"line\"><span class=\"comment\"> * @LastEditTime: 2021-01-02 13:33:25</span></span><br><span class=\"line\"><span class=\"comment\"> * @FilePath: \\Weidows\\Java\\src\\main\\java\\twenty\\october\\stream\\TransformCharset.java</span></span><br><span class=\"line\"><span class=\"comment\"> * @Description:转换文件编码格式</span></span><br><span class=\"line\"><span class=\"comment\"> * 原理:</span></span><br><span class=\"line\"><span class=\"comment\"> *    1.把文件读入并转换格式,输出到./bufferFile这个中间文件内</span></span><br><span class=\"line\"><span class=\"comment\"> *    2.把原文件删除并把中间文件回传</span></span><br><span class=\"line\"><span class=\"comment\"> * Java对象层面的操作使单一文件改写困难,而且多对象同时操作同一文件会覆写.</span></span><br><span class=\"line\"><span class=\"comment\"> * @!: *********************************************************************</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// package twenty.october.stream;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStreamWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TransformCharset</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>, charsetName_input = <span class=\"literal\">null</span>, charsetName_output = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">ifFile</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">File</span> <span class=\"variable\">file</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(path);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!file.exists()) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;File/Path not found: &quot;</span> + path);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      runCircle(file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@description</span>: 通过递归获取所有文件</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;File&#125; file</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">runCircle</span><span class=\"params\">(File file)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (file.isFile()) &#123;</span><br><span class=\"line\">      transformCharset(file);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      File[] files = file.listFiles(); <span class=\"comment\">//获取目录下的东西</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (files != <span class=\"literal\">null</span> &amp;&amp; files.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File f : files) &#123;</span><br><span class=\"line\">          runCircle(f);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">transformCharset</span><span class=\"params\">(File file)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferReader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(file.getPath()), charsetName_input));</span><br><span class=\"line\">    <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferWriteFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;./bufferFile&quot;</span>), charsetName_output));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// 中间变量</span></span><br><span class=\"line\">    <span class=\"type\">char</span>[] string = <span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">length</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// 把字符格式转换并传入中间文件</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((length = bufferReader.read(string)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      bufferWriteFile.write(string, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bufferReader.close();</span><br><span class=\"line\">    bufferWriteFile.flush();</span><br><span class=\"line\">    bufferWriteFile.close();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/// 把中间文件再回传</span></span><br><span class=\"line\">    <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferReadFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;./bufferFile&quot;</span>), charsetName_output));</span><br><span class=\"line\">    <span class=\"type\">BufferedWriter</span> <span class=\"variable\">bufferWriter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedWriter</span>(</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(file.getPath()), charsetName_output));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((length = bufferReadFile.read(string)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      bufferWriter.write(string, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bufferReadFile.close();</span><br><span class=\"line\">    bufferWriter.flush();</span><br><span class=\"line\">    bufferWriter.close();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;./bufferFile&quot;</span>).delete();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;TransformCharset done:\\t&quot;</span> + file.getPath());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">TransformCharset</span><span class=\"params\">(String path, String charsetName_input, String charsetName_output)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.path = path;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.charsetName_input = charsetName_input;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.charsetName_output = charsetName_output;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 程序入口:</span></span><br><span class=\"line\"><span class=\"comment\">     * path是文件/文件夹路径</span></span><br><span class=\"line\"><span class=\"comment\">     * TransformCharset()构造器第一个参数是path,第二个是文件原编码形式,第三个参数是想要改成的编码形式.</span></span><br><span class=\"line\"><span class=\"comment\">     * 对象只有一个可供调用的入口方法.isFile()</span></span><br><span class=\"line\"><span class=\"comment\">     * 完全可以有多个path,多个对象,随便玩~</span></span><br><span class=\"line\"><span class=\"comment\">     * 因为涉及IO操作,必须有try-catch,这个不能删去.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;./Java/src/main/java/twenty/october/stream/1&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">TransformCharset</span> <span class=\"variable\">t</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TransformCharset</span>(path, <span class=\"string\">&quot;GB2312&quot;</span>, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      t.ifFile();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * ! 附:</span></span><br><span class=\"line\"><span class=\"comment\"> * Java中。GBK和GB2312都是1个汉字占2个字节，UTF-8是1个汉字占3个字节。而ISO编码则是1上汉字1个字节。</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 测试成功:</span></span><br><span class=\"line\"><span class=\"comment\"> *    UTF-8转GBK/GB2312没有问题</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 实际转化中会存在很多问题:</span></span><br><span class=\"line\"><span class=\"comment\"> *    比如UTF-8 -&gt; GBK/GB2312 -&gt; UTF-8 回转会有问题(或需要中间编码中转)</span></span><br><span class=\"line\"><span class=\"comment\"> *    想要转为GBK有些文件却识别为为GB2312</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 详见参考:https://www.cnblogs.com/clnchanpin/p/6892870.html</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Java",
                "编码"
            ]
        }
    ]
}