{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"java\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/lang/Java/MyBatis/3/",
            "url": "https://weidows.github.io/post/lang/Java/MyBatis/3/",
            "title": "MyBatis~(贰)",
            "date_published": "2021-05-16T03:18:27.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:16:49\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\MyBatis\\3.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B\">面向接口编程</a></li>\n<li><a href=\"#%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91\">注解开发</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E4%B8%8A%E6%89%8B\">简单上手</a></li>\n<li><a href=\"#%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90\">原理分析</a></li>\n<li><a href=\"#crud\">CRUD</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB\">对应关系</a>\n<ul>\n<li><a href=\"#%E5%A4%9A%E5%AF%B9%E4%B8%80\">多对一</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Weidows/blob/09b2ed9b8e2b87709f36228e0ce46fe977534ce9/MyBatis/\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"面向接口编程\">面向接口编程</h2>\n<ul>\n<li>\n<p>主要目的就是<code>解耦</code>,分层开发中,上层业务不用管具体的实现.</p>\n</li>\n<li>\n<p>使得 <code>规范</code> 和 <code>实现</code> 两部分分离,接口作为项目骨架.</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"注解开发\">注解开发</h2>\n<h3 id=\"简单上手\">简单上手</h3>\n<ul>\n<li>\n<p>接口上直接注解 SQL 语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Select(&quot;select * from mybatis.user&quot;)</span></span><br><span class=\"line\">  List&lt;User&gt; <span class=\"title function_\">getUsers</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>绑定接口</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--之前是用xml绑定的--&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--&lt;mapper resource=&quot;Mappers/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--这里换成绑定接口--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dao.UserMapper&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>实现原理: 通过<code>反射机制</code>获取接口中的信息,然后用<code>动态代理</code>实现业务.</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4Pvb.png\" alt=\"代理模式.drawio\" />\n</li>\n<li>\n<p>调试</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSSqb.png\" alt=\"20210522000831\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"原理分析\">原理分析</h3>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/qq_38270106/article/details/93398694\">mybatis 的执行流程</a></p>\n</blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GViQrb.png\" alt=\"MyBatis流程.drawio\" />\n<hr>\n<h3 id=\"CRUD\">CRUD</h3>\n<ul>\n<li>\n<p><code>UserMapper</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.annotations.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> pojo.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Select(&quot;select * from mybatis.user&quot;)</span></span><br><span class=\"line\">  List&lt;User&gt; <span class=\"title function_\">getUsers</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    基本类型的参数或者String类型，需要加上</span></span><br><span class=\"line\"><span class=\"comment\">    引用类型不需要加</span></span><br><span class=\"line\"><span class=\"comment\">    如果只有一个基本类型的话，可以忽略，但是建议都加上</span></span><br><span class=\"line\"><span class=\"comment\">    我们在SQL中引用的就是我们这里的@Param()中设定的属性名</span></span><br><span class=\"line\"><span class=\"comment\">    重要: 这里方法不能重载! 两个同名方法会使MyBatis运行报错(开发时JDK不会报错)</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"meta\">@Select(&quot;select * from mybatis.user where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">  User <span class=\"title function_\">getUserById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 多个参数的情况下,必须加上@Param注解</span></span><br><span class=\"line\">  <span class=\"meta\">@Select(&quot;select * from mybatis.user where id = #&#123;id&#125; and name = #&#123;name&#125;&quot;)</span></span><br><span class=\"line\">  User <span class=\"title function_\">getUserByIdAndName</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;id&quot;)</span> <span class=\"type\">int</span> id, <span class=\"meta\">@Param(&quot;name&quot;)</span> String name)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Insert(&quot;insert into mybatis.user(id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)&quot;)</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">addUser</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//注意SQL格式,set 和 where顺序不能颠倒</span></span><br><span class=\"line\">  <span class=\"meta\">@Update(&quot;update mybatis.user set name = #&#123;name&#125;,pwd = #&#123;pwd&#125; where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">updateUser</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Delete(&quot;delete from mybatis.user where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">deleteUserById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>test</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> utils.MyBatisUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserMapperTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getUsers</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    List&lt;User&gt; userList = userMapper.getUsers();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (User user : userList) &#123;</span><br><span class=\"line\">      System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testGetUserById</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.getUserById(<span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(user);</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getUserById</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> userMapper.getUserByIdAndName(<span class=\"number\">1</span>, <span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">    System.out.println(user);</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userMapper.addUser(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"number\">7</span>, <span class=\"string\">&quot;七七&quot;</span>, <span class=\"string\">&quot;45648&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> userMapper.updateUser(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"number\">7</span>, <span class=\"string\">&quot;七七&quot;</span>, <span class=\"string\">&quot;12345678&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteUserById</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (userMapper.deleteUserById(<span class=\"number\">7</span>) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"对应关系\">对应关系</h2>\n<ul>\n<li>SQL初始化:</li>\n</ul>\n<h3 id=\"多对一\">多对一</h3>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Java",
                "MyBatis",
                "数据库",
                "注解"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/MyBatis/2/",
            "url": "https://weidows.github.io/post/lang/Java/MyBatis/2/",
            "title": "MyBatis~(贰)",
            "date_published": "2021-05-05T16:04:28.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:16:36\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\MyBatis\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90\">配置解析</a>\n<ul>\n<li><a href=\"#environments\">environments</a></li>\n<li><a href=\"#properties\">properties</a></li>\n<li><a href=\"#typealiases\">typeAliases</a></li>\n<li><a href=\"#settings\">Settings</a></li>\n<li><a href=\"#plugins\">plugins</a></li>\n<li><a href=\"#mappers\">mappers</a></li>\n<li><a href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\">作用域/生命周期</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%B1%9E%E6%80%A7%E5%90%8D%E5%92%8C%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98\">属性名和字段名不一致的问题</a>\n<ul>\n<li><a href=\"#%E9%97%AE%E9%A2%98%E5%B1%95%E7%A4%BA\">问题展示</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95\">解决办法</a>\n<ul>\n<li><a href=\"#%E8%B5%B7%E5%88%AB%E5%90%8D\">起别名</a></li>\n<li><a href=\"#resultmap\">resultMap</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E6%97%A5%E5%BF%97\">日志</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#stdout_logging\">STDOUT_LOGGING</a></li>\n<li><a href=\"#log4j\">Log4j</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%88%86%E9%A1%B5\">分页</a></li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Weidows/blob/09b2ed9b8e2b87709f36228e0ce46fe977534ce9/MyBatis/\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"配置解析\">配置解析</h2>\n<p><code>MyBatis-Config.xml</code>这个文件,配置层级如下</p>\n<ul>\n<li>\n<p>configuration（配置）</p>\n<ul>\n<li>properties（属性）</li>\n<li>settings（设置）</li>\n<li>typeAliases（类型别名）</li>\n<li>typeHandlers（类型处理器）*</li>\n<li>objectFactory（对象工厂）*</li>\n<li>plugins（插件）*</li>\n<li>environments（环境配置）\n<ul>\n<li>environment（环境变量）\n<ul>\n<li>transactionManager（事务管理器）</li>\n<li>dataSource（数据源）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>databaseIdProvider（数据库厂商标识）</li>\n<li>mappers（映射器）</li>\n</ul>\n</li>\n<li>\n<p>带 <code>'\\*'</code> 的是了解即可的.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"environments\">environments</h3>\n<ul>\n<li>\n<p>MyBatis 可以适应连接多个环境,但是每个 SqlSessionFactory 只能选择一种环境</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?userSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8<span class=\"symbol\">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?userSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8<span class=\"symbol\">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>MyBatis 默认事务管理器是 JDBC,数据源类型可用 POOLED/UNPOOLED/JNDI</p>\n<p>常见的数据源: dbcp, c3p0, druid</p>\n<p><a href=\"https://www.php.cn/mysql-tutorials-378143.html\">数据源有哪几种？</a></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"properties\">properties</h3>\n<ul>\n<li>\n<p>可以通过 properties 属性来实现引用配置文件,比如把上方的 xml 配置抽离到 <code>db.properties</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?userSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8<span class=\"symbol\">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">driver</span>=<span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/mybatis?userSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--引入外部配置文件,同时增添一些配置--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;db.properties&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"typeAliases\">typeAliases</h3>\n<ul>\n<li>\n<p>可以给配置起一个别名,或者扫描导入 pojo 包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--相当于&lt;typeAlias type=&quot;pojo.User&quot; alias=&quot;user&quot;/&gt;--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">typeAlias</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;pojo.User&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名.比如pojo.User别名为user--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;pojo&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>注解方式起别名</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Alias(&quot;user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>MyBatis 还有一些默认的别名</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4QHq.png\" alt=\"20210507212138\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"Settings\">Settings</h3>\n<ul>\n<li>\n<p>会改变 MyBatis 运行状态的配置</p>\n</li>\n<li>\n<p>需要修改时找文档就行.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"plugins\">plugins</h3>\n<ul>\n<li>mybatis-generator-core</li>\n<li>mybatis-plus</li>\n<li>通用 mapper</li>\n</ul>\n<hr>\n<h3 id=\"mappers\">mappers</h3>\n<ul>\n<li>\n<p>注册绑定我们的 Mapper.xml 文件,有下面三种方式:</p>\n<p>这三种不能同时导入同一个资源,会冲突报错</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    1. (推荐)</span></span><br><span class=\"line\"><span class=\"comment\">    每一个Mapper.xml都需要在MyBatis核心配置文件中注册</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    2.</span></span><br><span class=\"line\"><span class=\"comment\">    使用class文件绑定注册</span></span><br><span class=\"line\"><span class=\"comment\">    注意:接口和他的Mapper配置文件必须同名且在同一个包下</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dao.UserMapper&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    3.</span></span><br><span class=\"line\"><span class=\"comment\">    使用包扫描进行注入</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;dao&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"作用域-生命周期\">作用域/生命周期</h3>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4bPP.png\" alt=\"20210508000956\" />\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4p7r.png\" alt=\"20210508000002\" />\n</blockquote>\n<ul>\n<li>\n<p>SqlSessionFactoryBuilder: 创建 SqlSessionFactory 之后就被消除的局部变量</p>\n</li>\n<li>\n<p>SqlSessionFactory</p>\n<p>可以想象为：<code>数据库连接池</code></p>\n<p>被创建之后在应用运行期间<code>一直存在</code></p>\n<p><code>应用作用域</code>,使用(静态)<code>单例模式</code></p>\n<hr>\n</li>\n<li>\n<p>SqlSession</p>\n<p>连接到连接池的一个请求</p>\n<p><code>线程不安全</code>,因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。</p>\n<p>用完就需要关掉,否则占用资源.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"属性名和字段名不一致的问题\">属性名和字段名不一致的问题</h2>\n<h3 id=\"问题展示\">问题展示</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"comment\">//password - pwd 属性名和字段名不一致</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果: 在数据库查不到名为&quot;password&quot;的字段,所以 password 显示为 null</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\">User(<span class=\"attribute\">id</span>=1, <span class=\"attribute\">name</span>=张三, <span class=\"attribute\">password</span>=<span class=\"literal\">null</span>)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=2, <span class=\"attribute\">name</span>=李四, <span class=\"attribute\">password</span>=<span class=\"literal\">null</span>)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=3, <span class=\"attribute\">name</span>=王五, <span class=\"attribute\">password</span>=<span class=\"literal\">null</span>)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=4, <span class=\"attribute\">name</span>=赵六, <span class=\"attribute\">password</span>=<span class=\"literal\">null</span>)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=6, <span class=\"attribute\">name</span>=王虎, <span class=\"attribute\">password</span>=<span class=\"literal\">null</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"解决办法\">解决办法</h3>\n<h4 id=\"起别名\">起别名</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * from user <span class=\"built_in\">where</span> <span class=\"built_in\">id</span> = <span class=\"comment\">#&#123;id&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">id</span>,name,<span class=\"built_in\">pwd</span> from user <span class=\"built_in\">where</span> <span class=\"built_in\">id</span> = <span class=\"comment\">#&#123;id&#125;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"resultMap\">resultMap</h4>\n<blockquote>\n<p>MyBatis 中最重要最强大的元素。</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    property: User中的属性名</span></span><br><span class=\"line\"><span class=\"comment\">    column: 数据库的字段名</span></span><br><span class=\"line\"><span class=\"comment\">    只需要设置这条名字不一样的映射</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pwd&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;userResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">  select *</span><br><span class=\"line\">  from User</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"日志\">日志</h2>\n<h3 id=\"简介\">简介</h3>\n<ul>\n<li>\n<p>用来查看运行状态,<code>排错</code>.</p>\n</li>\n<li>\n<p>之前用的是 sout,debug 这种,现在出现了<code>日志工厂</code>,方便做日志</p>\n<ul>\n<li>\n<p>SLF4J</p>\n</li>\n<li>\n<p>LOG4J 【掌握】</p>\n</li>\n<li>\n<p>LOG4J2</p>\n</li>\n<li>\n<p>JDK_LOGGING</p>\n</li>\n<li>\n<p>COMMONS_LOGGING</p>\n</li>\n<li>\n<p>STDOUT_LOGGING 【掌握】</p>\n</li>\n<li>\n<p>NO_LOGGING</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"STDOUT-LOGGING\">STDOUT_LOGGING</h3>\n<ul>\n<li>\n<p>在 MyBatis-config.xml 中写入配置 (注意 settings 标签所处上下位置不要错)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;logImpl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>自动添加这种日志</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\">Opening JDBC<span class=\"built_in\"> Connection</span></span><br><span class=\"line\"><span class=\"built_in\"></span>Sun May 09 23:57:40 CST 2021 WARN: Establishing SSL<span class=\"built_in\"> connection </span>without server<span class=\"string\">&#x27;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&#x27;</span>t set. <span class=\"keyword\">For</span> compliance with existing applications <span class=\"keyword\">not</span> using SSL the verifyServerCertificate property is <span class=\"built_in\">set</span> <span class=\"keyword\">to</span> <span class=\"string\">&#x27;false&#x27;</span>. You need either <span class=\"keyword\">to</span> explicitly <span class=\"built_in\">disable</span> SSL by setting <span class=\"attribute\">useSSL</span>=<span class=\"literal\">false</span>, <span class=\"keyword\">or</span> <span class=\"built_in\">set</span> <span class=\"attribute\">useSSL</span>=<span class=\"literal\">true</span> <span class=\"keyword\">and</span> provide truststore <span class=\"keyword\">for</span><span class=\"built_in\"> server </span>certificate verification.</span><br><span class=\"line\">Created<span class=\"built_in\"> connection </span>1524305331.</span><br><span class=\"line\">Setting autocommit <span class=\"keyword\">to</span> <span class=\"literal\">false</span> on JDBC<span class=\"built_in\"> Connection </span>[com.mysql.cj.jdbc.ConnectionImpl@5adb0db3]</span><br><span class=\"line\">==&gt;  Preparing: select * <span class=\"keyword\">from</span><span class=\"built_in\"> User</span></span><br><span class=\"line\"><span class=\"built_in\"></span>==&gt; Parameters:</span><br><span class=\"line\">&lt;==    Columns: id, name, pwd</span><br><span class=\"line\">&lt;==        Row: 1, 张三, 123456</span><br><span class=\"line\">&lt;==        Row: 2, 李四, 123456</span><br><span class=\"line\">&lt;==        Row: 3, 王五, 123456</span><br><span class=\"line\">&lt;==        Row: 4, 赵六, 123456</span><br><span class=\"line\">&lt;==        Row: 6, 王虎, 789</span><br><span class=\"line\">&lt;==      Total: 5</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=1, <span class=\"attribute\">name</span>=张三, <span class=\"attribute\">password</span>=123456)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=2, <span class=\"attribute\">name</span>=李四, <span class=\"attribute\">password</span>=123456)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=3, <span class=\"attribute\">name</span>=王五, <span class=\"attribute\">password</span>=123456)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=4, <span class=\"attribute\">name</span>=赵六, <span class=\"attribute\">password</span>=123456)</span><br><span class=\"line\">User(<span class=\"attribute\">id</span>=6, <span class=\"attribute\">name</span>=王虎, <span class=\"attribute\">password</span>=789)</span><br><span class=\"line\">Resetting autocommit <span class=\"keyword\">to</span> <span class=\"literal\">true</span> on JDBC<span class=\"built_in\"> Connection </span>[com.mysql.cj.jdbc.ConnectionImpl@5adb0db3]</span><br><span class=\"line\">Closing JDBC<span class=\"built_in\"> Connection </span>[com.mysql.cj.jdbc.ConnectionImpl@5adb0db3]</span><br><span class=\"line\">Returned<span class=\"built_in\"> connection </span>1524305331 <span class=\"keyword\">to</span> pool.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"Log4j\">Log4j</h3>\n<p>更加细化,配置化的日志工厂</p>\n<ul>\n<li>\n<p>依赖:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>配置文件 <code>src/main/resources/log4j.properties</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将等级为DEBUG的日志信息输出到console和file</span></span><br><span class=\"line\"><span class=\"attr\">log4j.rootLogger</span>=<span class=\"string\">DEBUG,console,file</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#日志输出级别</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.org.mybatis</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.Statement</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sql.ResultSet</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.logger.java.sq1.PreparedStatement</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#控制台输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console</span> = <span class=\"string\">org.apache.log4j.ConsoleAppender</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Target</span> = <span class=\"string\">System.out</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout</span> = <span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.console.layout.ConversionPattern</span>=<span class=\"string\">[%c]-%m%n</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">#文件输出的相关设置</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file</span> = <span class=\"string\">org.apache.log4j.RollingFileAppender</span></span><br><span class=\"line\"><span class=\"comment\">#输出路径</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.File</span>=<span class=\"string\">./log/rzp.log</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.MaxFileSize</span>=<span class=\"string\">10mb</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.Threshold</span>=<span class=\"string\">DEBUG</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout</span>=<span class=\"string\">org.apache.log4j.PatternLayout</span></span><br><span class=\"line\"><span class=\"attr\">log4j.appender.file.layout.ConversionPattern</span>=<span class=\"string\">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>测试 <code>src/test/java/Log4jTest.java</code></p>\n<p>日志有三个输出等级</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> dao.UserMapperTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.log4j.Logger;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Log4jTest</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    UserMapperTest.getUserList();</span><br><span class=\"line\">    <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> Logger.getLogger(Log4jTest.class);</span><br><span class=\"line\">    logger.info(<span class=\"string\">&quot;info: 测试log4j&quot;</span>);</span><br><span class=\"line\">    logger.debug(<span class=\"string\">&quot;debug: 测试log4j&quot;</span>);</span><br><span class=\"line\">    logger.error(<span class=\"string\">&quot;error:测试log4j&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果日志</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.logging.<span class=\"symbol\">LogFactory</span>]<span class=\"symbol\">Logging</span> initialized using <span class=\"string\">&#x27;class org.apache.ibatis.logging.log4j.Log4jImpl&#x27;</span> adapter.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.logging.<span class=\"symbol\">LogFactory</span>]<span class=\"symbol\">Logging</span> initialized using <span class=\"string\">&#x27;class org.apache.ibatis.logging.log4j.Log4jImpl&#x27;</span> adapter.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">PooledDataSource</span> forcefully closed/removed all connections.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">PooledDataSource</span> forcefully closed/removed all connections.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">PooledDataSource</span> forcefully closed/removed all connections.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">PooledDataSource</span> forcefully closed/removed all connections.</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.transaction.jdbc.<span class=\"symbol\">JdbcTransaction</span>]<span class=\"symbol\">Opening</span> <span class=\"symbol\">JDBC</span> <span class=\"symbol\">Connection</span></span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">Created</span> connection <span class=\"number\">24650043.</span></span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.transaction.jdbc.<span class=\"symbol\">JdbcTransaction</span>]<span class=\"symbol\">Setting</span> autocommit to false on <span class=\"symbol\">JDBC</span> <span class=\"symbol\">Connection</span> [com.mysql.cj.jdbc.<span class=\"symbol\">ConnectionImpl</span>@<span class=\"number\">178213</span>b]</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][dao.<span class=\"symbol\">UserMapper</span>.getUserList]==&gt;  <span class=\"symbol\">Preparing</span>: select * from <span class=\"symbol\">User</span></span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][dao.<span class=\"symbol\">UserMapper</span>.getUserList]==&gt; <span class=\"symbol\">Parameters</span>:</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][dao.<span class=\"symbol\">UserMapper</span>.getUserList]&lt;==      <span class=\"symbol\">Total</span>: <span class=\"number\">5</span></span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.transaction.jdbc.<span class=\"symbol\">JdbcTransaction</span>]<span class=\"symbol\">Resetting</span> autocommit to true on <span class=\"symbol\">JDBC</span> <span class=\"symbol\">Connection</span> [com.mysql.cj.jdbc.<span class=\"symbol\">ConnectionImpl</span>@<span class=\"number\">178213</span>b]</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.transaction.jdbc.<span class=\"symbol\">JdbcTransaction</span>]<span class=\"symbol\">Closing</span> <span class=\"symbol\">JDBC</span> <span class=\"symbol\">Connection</span> [com.mysql.cj.jdbc.<span class=\"symbol\">ConnectionImpl</span>@<span class=\"number\">178213</span>b]</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][org.apache.ibatis.datasource.pooled.<span class=\"symbol\">PooledDataSource</span>]<span class=\"symbol\">Returned</span> connection <span class=\"number\">24650043</span> to pool.</span><br><span class=\"line\">[<span class=\"symbol\">INFO</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][<span class=\"symbol\">Log4jTest</span>]info: 测试log4j</span><br><span class=\"line\">[<span class=\"symbol\">DEBUG</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][<span class=\"symbol\">Log4jTest</span>]debug: 测试log4j</span><br><span class=\"line\">[<span class=\"symbol\">ERROR</span>][<span class=\"number\">21</span><span class=\"number\">-05</span><span class=\"number\">-11</span>][<span class=\"symbol\">Log4jTest</span>]error:测试log4j</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"分页\">分页</h2>\n<ul>\n<li>\n<p>简单的分页查询,可能会有报错,但是可以正常运行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; <span class=\"title function_\">getUsersByLimit</span><span class=\"params\">(Map&lt;String, Integer&gt; map)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--分页查询--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUsersByLimit&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;map&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">  select *</span><br><span class=\"line\">  from mybatis.user</span><br><span class=\"line\">  limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getUserByLimit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">  <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">  HashMap&lt;String, Integer&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">  map.put(<span class=\"string\">&quot;startIndex&quot;</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">  map.put(<span class=\"string\">&quot;pageSize&quot;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  List&lt;User&gt; list = mapper.getUsersByLimit(map);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (User user : list) &#123;</span><br><span class=\"line\">    System.out.println(user);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Java",
                "MyBatis",
                "Map",
                "CRUD",
                "日志",
                "分页",
                "数据库"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/MyBatis/1/",
            "url": "https://weidows.github.io/post/lang/Java/MyBatis/1/",
            "title": "MyBatis~(壹)初探.",
            "date_published": "2021-05-02T08:14:02.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 12:48:14\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\MyBatis\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81\">项目代码</a></li>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#hello-mybatis\">Hello-MyBatis</a>\n<ul>\n<li><a href=\"#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\">环境配置</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93\">数据库</a></li>\n<li><a href=\"#%E5%B7%A5%E5%85%B7%E7%B1%BB\">工具类</a></li>\n<li><a href=\"#dao\">Dao</a></li>\n<li><a href=\"#%E6%B5%8B%E8%AF%95\">测试</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%BC%80%E5%A7%8B-crud\">开始 CRUD</a></li>\n<li><a href=\"#%E9%80%9A%E8%BF%87-map-%E4%BC%98%E5%8C%96\">通过 Map 优化</a></li>\n</ul>\n<h2 id=\"项目代码\"><a href=\"https://github.com/Weidows/Weidows/blob/c0e919f1561aa427bbe159c4583bbdd14f26cc98/MyBatis\">项目代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"简介\">简介</h2>\n<p>MyBatis 是优秀的持久层框架,简单来说就是方便<code>存-取数据</code>的工具.</p>\n<p>持久层: Dao 层、Service 层、Controller 层</p>\n<ul>\n<li>\n<p>之前听说过 <code>MyBatis-plus</code>,这里贴一篇二者的区别</p>\n<blockquote>\n<p><a href=\"https://www.jianshu.com/p/8556c8468241\">MyBatis 与 MyBatis-plus 的区别</a></p>\n</blockquote>\n<p>下图中蓝色小鸟就是 MyBatis-plus</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSWtu.png\" alt=\"20210503164644\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Hello-MyBatis\">Hello-MyBatis</h2>\n<h3 id=\"环境配置\">环境配置</h3>\n<ul>\n<li>\n<p>用 Maven 创建空项目,<code>导入依赖</code>&amp;<code>设置 Maven 过滤器</code>:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--导入依赖--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--mysqlq驱动--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--mybatis--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--junit--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--Mapper资源导出,不设置的话会报错--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>然后创建空的子模块,子模块中开发就不需要再导入依赖了,MyBatis 需要添加一个配置文件: <code>src/main/resources/MyBatis-config.xml</code></p>\n<ul>\n<li>后面每增加一个 Mapper.xml,都需要在这里面添加 Mapper 映射;后面会提到.</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--configuration核心配置文件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?userSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8<span class=\"symbol\">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"数据库\">数据库</h3>\n<ul>\n<li>\n<p>初始化数据库和 pojo</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> schema <span class=\"keyword\">User</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> <span class=\"keyword\">User</span></span><br><span class=\"line\">(</span><br><span class=\"line\">  id   <span class=\"type\">int</span>                      <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\">  name <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\">  pwd  <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) <span class=\"keyword\">default</span> <span class=\"keyword\">null</span> <span class=\"keyword\">null</span>,</span><br><span class=\"line\">  <span class=\"keyword\">constraint</span> User_pk</span><br><span class=\"line\">    <span class=\"keyword\">primary</span> key (id)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB</span><br><span class=\"line\">  <span class=\"keyword\">DEFAULT</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">User</span>(id, name, pwd)</span><br><span class=\"line\"><span class=\"keyword\">values</span> (<span class=\"number\">1</span>, <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"number\">123456</span>),</span><br><span class=\"line\">      (<span class=\"number\">2</span>, <span class=\"string\">&#x27;李四&#x27;</span>, <span class=\"number\">123456</span>),</span><br><span class=\"line\">      (<span class=\"number\">3</span>, <span class=\"string\">&#x27;王五&#x27;</span>, <span class=\"number\">123456</span>),</span><br><span class=\"line\">      (<span class=\"number\">4</span>, <span class=\"string\">&#x27;赵六&#x27;</span>, <span class=\"number\">123456</span>)</span><br></pre></td></tr></table></figure>\n<hr>\n<ul>\n<li>\n<p><code>src/main/java/pojo/User.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.NoArgsConstructor;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String pwd;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n</li>\n</ul>\n<h3 id=\"工具类\">工具类</h3>\n<p><code>src/main/java/utils/MyBatisUtils.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sqlSessionFactory --&gt; sqlSession</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyBatisUtils</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//使用Mybatis第一步 ：获取sqlSessionFactory对象</span></span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;MyBatis-config.xml&quot;</span>;</span><br><span class=\"line\">      <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">      sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例.</span></span><br><span class=\"line\"><span class=\"comment\">  * SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSession <span class=\"title function_\">getSqlSession</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Dao\">Dao</h3>\n<ul>\n<li>\n<p>dao 中编写<code>接口</code>和绑定 <code>Mapper.xml</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/MyBatis/1-hello-MyBatis/src/main/java/dao\">https://github.com/Weidows/Java/blob/master/MyBatis/1-hello-MyBatis/src/main/java/dao</a></p>\n</blockquote>\n<ul>\n<li>\n<p>这里的 xml 配置绑定好接口,就可以让 MyBatis 负责 SQL 代码了,避免了 dao 层中 JDBC 代码过于繁杂和重复的问题</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--namespace=绑定一个指定的Dao/Mapper接口--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;dao.UserMapper&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--这里id就是方法名,相当于实现方法--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from User</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>Mapper.xml 绑定的是与之对应的接口,然后需要在 <code>MyBatis-config.xml</code>中绑定需要的 <code>Mapper.xml</code></p>\n<p><code>绑定关系</code>: UserMapper.java -&gt; UserMapper.xml -&gt; MyBatis-config.xml</p>\n<p>添加绑定如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--configuration核心配置文件--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                  <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/mybatis?userSSL=true<span class=\"symbol\">&amp;amp;</span>useUnicode=true<span class=\"symbol\">&amp;amp;</span>characterEncoding=UTF-8<span class=\"symbol\">&amp;amp;</span>serverTimezone=UTC&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;123456&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--绑定Mapper.xml--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"测试\">测试</h3>\n<ul>\n<li>\n<p>注意 test 中层级与 main 中层级一一对应</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV4afo.png\" alt=\"20210504111311\" />\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> utils.MyBatisUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserMapperTest</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"comment\">//2.执行SQL</span></span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (User user : userList) &#123;</span><br><span class=\"line\">      System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//关闭sqlSession</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"comment\">//2.执行SQL</span></span><br><span class=\"line\">    List&lt;User&gt; userList = sqlSession.selectList(<span class=\"string\">&quot;dao.UserMapper.getUserList&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (User user : userList) &#123;</span><br><span class=\"line\">      System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//关闭sqlSession</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>排错:</p>\n<ul>\n<li>\n<p><code>org.apache.ibatis.binding.BindingException: Type interface dao.UserDao is not known to the MapperRegistry.</code></p>\n<p>这是因为 Mapper.xml 资源没有被 Maven 导出,所以找不到资源,<a href=\"#hello-mybatis\">解决办法:资源导出</a></p>\n</li>\n<li>\n<p><code>1字节的UTF-8序列的字节1无效的问题处理</code></p>\n<p>这个问题格外 dan 疼,把下面的 <code>UTF-8</code> 改为 <code>UTF8</code> 试试…</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"开始-CRUD\">开始 CRUD</h2>\n<ul>\n<li>\n<p>完善 CRUD 只需要修改下面三个文件:</p>\n</li>\n<li>\n<p><code>src/main/java/dao/UserMapper.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> pojo.User;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;</span><br><span class=\"line\">  List&lt;User&gt; <span class=\"title function_\">getUserList</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  User <span class=\"title function_\">getUserById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">addUser</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">updateUser</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">deleteUser</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/dao/UserMapper.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--namespace=绑定一个指定的Dao/Mapper接口--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;dao.UserMapper&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--这里id就是方法名,相当于实现方法--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserList&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from User</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;getUserById&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;pojo.User&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;int&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from mybatis.user</span><br><span class=\"line\">    where id = #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addUser&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into mybatis.user(id, name, pwd)</span><br><span class=\"line\">    values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class=\"line\">    ## 对象中的属性可以被直接取出来(这里取得可以是传入的参数,也可以是传入对象的属性)</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;updateUser&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;pojo.User&quot;</span>&gt;</span></span><br><span class=\"line\">    update mybatis.user</span><br><span class=\"line\">    set name =#&#123;name&#125;,</span><br><span class=\"line\">        pwd=#&#123;pwd&#125;</span><br><span class=\"line\">    where id = #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteUser&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;int&quot;</span>&gt;</span></span><br><span class=\"line\">    delete</span><br><span class=\"line\">    from mybatis.user</span><br><span class=\"line\">    where id = #&#123;id&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/test/java/dao/UserMapperTest.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> utils.MyBatisUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserMapperTest</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"comment\">//2.执行SQL</span></span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">userMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (User user : userList) &#123;</span><br><span class=\"line\">      System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//关闭sqlSession</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"comment\">//2.执行SQL</span></span><br><span class=\"line\">    List&lt;User&gt; userList = sqlSession.selectList(<span class=\"string\">&quot;dao.UserMapper.getUserList&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (User user : userList) &#123;</span><br><span class=\"line\">      System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//关闭sqlSession</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getUserById</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    System.out.println(mapper.getUserById(<span class=\"number\">3</span>));</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> mapper.addUser(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;五号&quot;</span>, <span class=\"string\">&quot;123456&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//注意 增删改 需要提交事务</span></span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> mapper.updateUser(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"number\">5</span>, <span class=\"string\">&quot;⑤号&quot;</span>, <span class=\"string\">&quot;654321&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteUser</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> MyBatisUtils.getSqlSession();</span><br><span class=\"line\">    <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> mapper.deleteUser(<span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"通过-Map-优化\">通过 Map 优化</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//用Map插入用户</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">addUser2</span><span class=\"params\">(Map&lt;String, Object&gt; map)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--通过USer传参的话,必须用User的属性名取出; 而通过map传参的话,属性名可以任意--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;addUser2&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;Map&quot;</span>&gt;</span></span><br><span class=\"line\">  insert into mybatis.user(id, name, pwd)</span><br><span class=\"line\">  values (#&#123;userid&#125;, #&#123;username&#125;, #&#123;userpassword&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\">@Test</span><br><span class=\"line\">public void addUser2() &#123;</span><br><span class=\"line\">  SqlSession sqlSession = MyBatisUtils.getSqlSession();</span><br><span class=\"line\">  UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">  HashMap&lt;String, Object&gt; map = new HashMap<span class=\"tag\">&lt;&gt;</span>();</span><br><span class=\"line\">  map.put(&quot;userid&quot;, 6);</span><br><span class=\"line\">  map.put(&quot;username&quot;, &quot;王虎&quot;);</span><br><span class=\"line\">  map.put(&quot;userpassword&quot;, 789);</span><br><span class=\"line\"></span><br><span class=\"line\">  int i = mapper.addUser2(map);</span><br><span class=\"line\">  if (i &gt; 0) sqlSession.commit();</span><br><span class=\"line\">  sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "Java",
                "MyBatis",
                "Map",
                "CRUD"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/7/",
            "url": "https://weidows.github.io/post/lang/Java/Web/7/",
            "title": "🥼JavaWeb~(柒)文件/邮件传输.",
            "date_published": "2021-04-30T16:20:54.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:22:56\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\7.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93\">文件传输</a></li>\n<li><a href=\"#%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81\">邮件发送</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E9%82%AE%E4%BB%B6\">简单邮件</a></li>\n<li><a href=\"#%E5%A4%8D%E6%9D%82%E9%82%AE%E4%BB%B6\">复杂邮件</a></li>\n</ul>\n</li>\n<li><a href=\"#lombok\">Lombok</a></li>\n<li><a href=\"#%E6%B3%A8%E5%86%8C-%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6-demo\">注册-发送邮件 demo</a></li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Weidows/blob/060600b2a9e13afa7c2f0e5d887d98b5d59318ce/JavaWeb/Last\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"文件传输\">文件传输</h2>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/melodyjerry/p/13549108.html\">参考: 【狂神说 Java】JavaWeb-文件上传</a></p>\n</blockquote>\n<ul>\n<li>\n<p>利用到了 Commons-io,通过 http 和 servlet 传输流文件.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.fileupload.FileUploadException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.UUID;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Servlet implementation class FileServlet</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class=\"line\">      <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断上传的文件普通表单还是带文件的表单</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!ServletFileUpload.isMultipartContent(request)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;<span class=\"comment\">//终止方法运行,说明这是一个普通的表单,直接返回</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建上传文件的保存路径，建议在WEB-INF路径下，安全，用户无法直接访问上传的文件</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">tmpPath</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getServletContext().getRealPath(<span class=\"string\">&quot;/WEB-INF/tmp&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">File</span> <span class=\"variable\">tempFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(tmpPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!tempFile.exists()) &#123;</span><br><span class=\"line\">      tempFile.mkdir();<span class=\"comment\">//创建临时目录</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建上传文件的保存路径,建议在WEB-INF路径下,安全,用户无法直接访间上传的文件;</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">uploadPath</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getServletContext().getRealPath(<span class=\"string\">&quot;/WEB-INF/upload&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">File</span> <span class=\"variable\">uploadFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(uploadPath);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!uploadFile.exists()) &#123;</span><br><span class=\"line\">      uploadFile.mkdir(); <span class=\"comment\">//创建这个月录</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">      处理上传的文件,一般都需要通过流来获取,我们可以使用 request.getInputStream(),原生态的文件上传流获取,十分麻烦</span></span><br><span class=\"line\"><span class=\"comment\">      建议使用 Apache的文件上传组件来实现, common-fileUpload,它需要 commons-io组件</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 获取ServletFileUpload</span></span><br><span class=\"line\">      <span class=\"type\">ServletFileUpload</span> <span class=\"variable\">fileUpload</span> <span class=\"operator\">=</span> getServletFileUpload(tempFile);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 处理上传文件</span></span><br><span class=\"line\">      <span class=\"comment\">// 把前端请求解析，封装成FileItem对象，需要从ServletFileUpload对象中获取</span></span><br><span class=\"line\">      <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> uploadParseRequest(fileUpload, request, uploadPath);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Servlet请求转发消息</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Servlet请求转发消息</span></span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;flag&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;flag&quot;</span>, <span class=\"literal\">false</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      request.getRequestDispatcher(<span class=\"string\">&quot;info.jsp&quot;</span>).forward(request, response);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (FileUploadException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ServletFileUpload <span class=\"title function_\">getServletFileUpload</span><span class=\"params\">(File tempFile)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建DiskFileItemFactory对象，处理文件路径或者大小限制</span></span><br><span class=\"line\">    <span class=\"type\">DiskFileItemFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DiskFileItemFactory</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 通过这个工厂设置一个缓冲区,当上传的文件大于这个缓冲区的时候,将他放到临时文件中;</span></span><br><span class=\"line\">    factory.setSizeThreshold((<span class=\"type\">int</span>) <span class=\"number\">2e20</span>);<span class=\"comment\">// 缓冲区大小为1M</span></span><br><span class=\"line\">    factory.setRepository(tempFile);<span class=\"comment\">// 临时目录的保存目录,需要一个file</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">ServletFileUpload</span> <span class=\"variable\">servletFileUpload</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServletFileUpload</span>(factory);</span><br><span class=\"line\">    <span class=\"comment\">// 处理乱码问题</span></span><br><span class=\"line\">    servletFileUpload.setHeaderEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 设置总共能够上传文件的大小 10M</span></span><br><span class=\"line\">    servletFileUpload.setFileSizeMax((<span class=\"type\">long</span>) <span class=\"number\">2e21</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">      监听长传进度</span></span><br><span class=\"line\"><span class=\"comment\">        pBytesRead:已读取到的文件大小</span></span><br><span class=\"line\"><span class=\"comment\">        pContextLength:文件大小</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    servletFileUpload.setProgressListener((<span class=\"type\">long</span> pBytesRead, <span class=\"type\">long</span> pContentLength, <span class=\"type\">int</span> pItems) -&gt; System.out.println(<span class=\"string\">&quot;已上传：&quot;</span> + pBytesRead + <span class=\"string\">&quot;\\n总大小：&quot;</span> + pContentLength));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> servletFileUpload;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">uploadParseRequest</span><span class=\"params\">(ServletFileUpload upload, HttpServletRequest request, String uploadPath)</span></span><br><span class=\"line\">      <span class=\"keyword\">throws</span> FileUploadException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>; <span class=\"comment\">// 是否成功</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 把前端请求解析，封装成FileItem对象</span></span><br><span class=\"line\">    List&lt;FileItem&gt; fileItems = upload.parseRequest(request);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (FileItem fileItem : fileItems) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 判断上传的文件是普通的表单还是带文件的表单</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (fileItem.isFormField()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// getFieldName指的是前端表单控件的name;</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> fileItem.getFieldName();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> fileItem.getString(<span class=\"string\">&quot;UTF-8&quot;</span>); <span class=\"comment\">// 处理乱码</span></span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;: &quot;</span> + value);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// ============处理文件==============</span></span><br><span class=\"line\">        <span class=\"comment\">// 拿到文件名</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">uploadFileName</span> <span class=\"operator\">=</span> fileItem.getName();</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">          .trim() 删除前后空格</span></span><br><span class=\"line\"><span class=\"comment\">          下面的写法会导致&quot;uploadFileName == null&quot; 一直判定为false :</span></span><br><span class=\"line\"><span class=\"comment\">            uploadFileName.trim().equals(&quot;&quot;) || uploadFileName == null</span></span><br><span class=\"line\"><span class=\"comment\">            反过来就好了,原因是字符串对象引用改变了</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (uploadFileName == <span class=\"literal\">null</span> || uploadFileName.trim().equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获得上传的文件名</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> uploadFileName.substring(uploadFileName.lastIndexOf(<span class=\"string\">&quot;/&quot;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 获得文件的后缀名,如果文件后缀名fileExtName不是我们所需要的 就直按return.不处理,告诉用户文件类型不对。</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileExtName</span> <span class=\"operator\">=</span> uploadFileName.substring(uploadFileName.lastIndexOf(<span class=\"string\">&quot;.&quot;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;文件名: &quot;</span> + fileName + <span class=\"string\">&quot;\\n后缀名&quot;</span> + fileExtName);</span><br><span class=\"line\">        <span class=\"comment\">// ================处理文件完毕==============</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">          UUID.randomUUID(),随机生一个唯一识别的通用码,保证文件夹名唯一</span></span><br><span class=\"line\"><span class=\"comment\">          文件真实存在的路径 realPath</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">realPath</span> <span class=\"operator\">=</span> uploadPath + <span class=\"string\">&quot;/&quot;</span> + UUID.randomUUID();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 给每个文件创建一个对应的文件夹</span></span><br><span class=\"line\">        <span class=\"type\">File</span> <span class=\"variable\">realPathFile</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(realPath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!realPathFile.exists()) &#123;</span><br><span class=\"line\">          realPathFile.mkdir();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// ==============存放地址完毕==============</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获得文件上传的流</span></span><br><span class=\"line\">        <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> fileItem.getInputStream();</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个文件输出流</span></span><br><span class=\"line\">        <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fileOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(realPath + <span class=\"string\">&quot;/&quot;</span> + fileName);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建一个缓冲区</span></span><br><span class=\"line\">        <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[(<span class=\"type\">int</span>) <span class=\"number\">2e20</span>]; <span class=\"comment\">// 1M</span></span><br><span class=\"line\">        <span class=\"type\">int</span> len;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> ((len = inputStream.read(buffer)) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          fileOutputStream.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭流</span></span><br><span class=\"line\">        fileOutputStream.close();</span><br><span class=\"line\">        inputStream.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 上传成功,清除临时文件</span></span><br><span class=\"line\">        fileItem.delete();</span><br><span class=\"line\">        <span class=\"comment\">//=============文件传输完成=============</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>项目地址</p>\n<p>包含用到的 JSP 页面和 xml 配置文件</p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb/Last\">https://github.com/Weidows/Java/tree/master/JavaWeb/Last</a></p>\n</blockquote>\n</li>\n<li>\n<p>问题: 如果 Tomcat 是 10 版本的,运行时会出现 500</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/m0_50905990/article/details/115339679\">servlet 配置相关：HTTP 状态 500 - 内部服务器错误问题</a></p>\n</blockquote>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"邮件发送\">邮件发送</h2>\n<ul>\n<li>\n<p>原理图:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVSoBn.png\" alt=\"邮件传输原理.drawio\" />\n</li>\n<li>\n<p>依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.activation<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.mail<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mail<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<hr>\n<h3 id=\"简单邮件\">简单邮件</h3>\n<ul>\n<li>\n<p>代码:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.internet.InternetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.internet.MimeMessage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.GeneralSecurityException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MailDemo1</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">fromEmailAddress</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;utsuko27@qq.com&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">toEmailAddress</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;utsuko27@163.com&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;这里填授权码&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//0. 设置连接配置</span></span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> getProperties();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.创建定义整个应用程序所需要的环境信息的session对象</span></span><br><span class=\"line\">    <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> Session.getDefaultInstance(properties, <span class=\"keyword\">new</span> <span class=\"title class_\">Authenticator</span>() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"keyword\">protected</span> PasswordAuthentication <span class=\"title function_\">getPasswordAuthentication</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PasswordAuthentication</span>(fromEmailAddress, password);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//开启session的debug模式，这样可以查看到程序发送Email的运行状态</span></span><br><span class=\"line\">    session.setDebug(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2.通过session得到transport对象</span></span><br><span class=\"line\">    <span class=\"type\">Transport</span> <span class=\"variable\">transport</span> <span class=\"operator\">=</span> session.getTransport();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3.使用邮箱的用户名和授权码连上邮件服务器</span></span><br><span class=\"line\">    transport.connect(<span class=\"string\">&quot;smtp.qq.com&quot;</span>, fromEmailAddress, password);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4.创建邮件：写文件</span></span><br><span class=\"line\">    <span class=\"type\">MimeMessage</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> getMimeMessage(session);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5.发送邮件</span></span><br><span class=\"line\">    transport.sendMessage(message, message.getAllRecipients());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//6.关闭连接</span></span><br><span class=\"line\">    transport.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Properties <span class=\"title function_\">getProperties</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> GeneralSecurityException &#123;</span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;mail.host&quot;</span>, <span class=\"string\">&quot;smtp.qq.com&quot;</span>);<span class=\"comment\">///设置QQ邮件服务器</span></span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;mail.transport.protocol&quot;</span>, <span class=\"string\">&quot;smtp&quot;</span>);<span class=\"comment\">///邮件发送协议</span></span><br><span class=\"line\">    properties.setProperty(<span class=\"string\">&quot;mail.smtp.auth&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);<span class=\"comment\">//需要验证用户密码</span></span><br><span class=\"line\">    <span class=\"comment\">//设置SSL加密(QQ邮箱需要)</span></span><br><span class=\"line\">    <span class=\"type\">MailSSLSocketFactory</span> <span class=\"variable\">mailSSLSocketFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MailSSLSocketFactory</span>();</span><br><span class=\"line\">    mailSSLSocketFactory.setTrustAllHosts(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    properties.put(<span class=\"string\">&quot;mail.smtp.ssl.enable&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">    properties.put(<span class=\"string\">&quot;mail.smtp.ssl.socketFactory&quot;</span>, mailSSLSocketFactory);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> properties;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> MimeMessage <span class=\"title function_\">getMimeMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> MessagingException &#123;</span><br><span class=\"line\">    <span class=\"type\">MimeMessage</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeMessage</span>(session);</span><br><span class=\"line\">    <span class=\"comment\">//指明邮件的发件人</span></span><br><span class=\"line\">    message.setFrom(<span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(fromEmailAddress));</span><br><span class=\"line\">    <span class=\"comment\">//指明邮件的收件人</span></span><br><span class=\"line\">    message.setRecipient(Message.RecipientType.TO, <span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(toEmailAddress));</span><br><span class=\"line\">    <span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">    message.setSubject(<span class=\"string\">&quot;发送的标题&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//邮件的文本内容</span></span><br><span class=\"line\">    message.setContent(<span class=\"string\">&quot;内容&quot;</span>, <span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> message;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<details>\n  <summary> -> 开启 Debug 后的信息 <-</summary>\n<hr>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\">DEBUG: setDebug: JavaMail version 1.4.7</span><br><span class=\"line\">DEBUG: getProvider() returning javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle]</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: useEhlo <span class=\"literal\">true</span>, useAuth <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: trying <span class=\"keyword\">to</span> connect <span class=\"keyword\">to</span> host <span class=\"string\">&quot;smtp.qq.com&quot;</span>,<span class=\"built_in\"> port </span>465, isSSL <span class=\"literal\">true</span></span><br><span class=\"line\">220 newxmesmtplogicsvrsza8.qq.com XMail Esmtp QQ Mail Server.</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: connected <span class=\"keyword\">to</span> host <span class=\"string\">&quot;smtp.qq.com&quot;</span>, port: 465</span><br><span class=\"line\"></span><br><span class=\"line\">EHLO DESKTOP-CTDDD3K</span><br><span class=\"line\">250-newxmesmtplogicsvrsza8.qq.com</span><br><span class=\"line\">250-PIPELINING</span><br><span class=\"line\">250-SIZE 73400320</span><br><span class=\"line\">250-AUTH LOGIN PLAIN XOAUTH XOAUTH2</span><br><span class=\"line\"><span class=\"attribute\">250-AUTH</span>=LOGIN</span><br><span class=\"line\">250-MAILCOMPRESS</span><br><span class=\"line\">250 8BITMIME</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;PIPELINING&quot;</span>, arg <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;SIZE&quot;</span>, arg <span class=\"string\">&quot;73400320&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;AUTH&quot;</span>, arg <span class=\"string\">&quot;LOGIN PLAIN XOAUTH XOAUTH2&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;AUTH=LOGIN&quot;</span>, arg <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;MAILCOMPRESS&quot;</span>, arg <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Found extension <span class=\"string\">&quot;8BITMIME&quot;</span>, arg <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Attempt <span class=\"keyword\">to</span> authenticate using mechanisms: LOGIN PLAIN DIGEST-MD5 NTLM</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: AUTH LOGIN command trace suppressed</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: AUTH LOGIN succeeded</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: use8bit <span class=\"literal\">false</span></span><br><span class=\"line\">MAIL <span class=\"keyword\">FROM</span>:&lt;utsuko27@qq.com&gt;</span><br><span class=\"line\">250 OK.</span><br><span class=\"line\">RCPT <span class=\"keyword\">TO</span>:&lt;utsuko27@163.com&gt;</span><br><span class=\"line\">250 OK</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP: Verified Addresses</span><br><span class=\"line\"><span class=\"built_in\">DEBUG</span> SMTP:   utsuko27@163.com</span><br><span class=\"line\">DATA</span><br><span class=\"line\">354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;.</span><br><span class=\"line\"><span class=\"keyword\">From</span>: utsuko27@qq.com</span><br><span class=\"line\"><span class=\"keyword\">To</span>: utsuko27@163.com</span><br><span class=\"line\">Message-ID: &lt;825249556.0.1619921529857.JavaMail.29845@smtp.qq.com&gt;</span><br><span class=\"line\">Subject: =?UTF-8?B?5Y+R6YCB55qE5qCH6aKY?=</span><br><span class=\"line\">MIME-Version: 1.0</span><br><span class=\"line\">Content-Type: text/html;<span class=\"attribute\">charset</span>=UTF-8</span><br><span class=\"line\">Content-Transfer-Encoding: base64</span><br><span class=\"line\"></span><br><span class=\"line\">5YaF5a65</span><br><span class=\"line\">.</span><br><span class=\"line\">250 OK: queued as.</span><br><span class=\"line\">QUIT</span><br><span class=\"line\">221 Bye.</span><br></pre></td></tr></table></figure>\n</details>\n</li>\n</ul>\n<hr>\n<h3 id=\"复杂邮件\">复杂邮件</h3>\n<ul>\n<li>\n<p>比如涉及到附件或者插入图片的邮件,这种邮件就需要进行特殊包装</p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVAqE5.png\" alt=\"20210502102326\" />\n</blockquote>\n</li>\n<li>\n<p>代码 (只需要修改 getMimeMessage()方法)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 含带附件的邮件</span></span><br><span class=\"line\"><span class=\"comment\">*</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> session</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@throws</span> MessagingException</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> MimeMessage <span class=\"title function_\">getMimeMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> MessagingException &#123;</span><br><span class=\"line\">  <span class=\"type\">MimeMessage</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeMessage</span>(session);</span><br><span class=\"line\">  <span class=\"comment\">//指明邮件的发件人</span></span><br><span class=\"line\">  message.setFrom(<span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(fromEmailAddress));</span><br><span class=\"line\">  <span class=\"comment\">//指明邮件的收件人</span></span><br><span class=\"line\">  message.setRecipient(Message.RecipientType.TO, <span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(toEmailAddress));</span><br><span class=\"line\">  <span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">  message.setSubject(<span class=\"string\">&quot;发送的标题&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//邮件的文本内容</span></span><br><span class=\"line\">  <span class=\"comment\">//=================================准备图片数据</span></span><br><span class=\"line\">  <span class=\"type\">MimeBodyPart</span> <span class=\"variable\">image</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeBodyPart</span>();</span><br><span class=\"line\">  <span class=\"comment\">//图片需要经过数据化的处理</span></span><br><span class=\"line\">  <span class=\"type\">DataHandler</span> <span class=\"variable\">dataHandler</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataHandler</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileDataSource</span>(<span class=\"string\">&quot;D:/Game/Weidows/JavaWeb/Last/src/main/java/MailDemo.java&quot;</span>));</span><br><span class=\"line\">  <span class=\"comment\">//在part中放入这个处理过图片的数据</span></span><br><span class=\"line\">  image.setDataHandler(dataHandler);</span><br><span class=\"line\">  <span class=\"comment\">//给这个part设置一个ID名字</span></span><br><span class=\"line\">  image.setContentID(<span class=\"string\">&quot;嵌入.png&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//=================================准备正文数据</span></span><br><span class=\"line\">  <span class=\"type\">MimeBodyPart</span> <span class=\"variable\">text</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeBodyPart</span>();</span><br><span class=\"line\">  text.setContent(<span class=\"string\">&quot;这是一张正文&lt;img src=&#x27;嵌入.jpg&#x27;&gt;&quot;</span>, <span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//=================================准备附件数据</span></span><br><span class=\"line\">  <span class=\"type\">MimeBodyPart</span> <span class=\"variable\">body</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeBodyPart</span>();</span><br><span class=\"line\">  body.setDataHandler(<span class=\"keyword\">new</span> <span class=\"title class_\">DataHandler</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileDataSource</span>(<span class=\"string\">&quot;D:/Game/Weidows/JavaWeb/Last/src/main/java/MailDemo.java&quot;</span>)));</span><br><span class=\"line\">  body.setFileName(<span class=\"string\">&quot;附件.png&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//描述数据关系</span></span><br><span class=\"line\">  <span class=\"type\">MimeMultipart</span> <span class=\"variable\">mimeMultipart</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeMultipart</span>();</span><br><span class=\"line\">  mimeMultipart.addBodyPart(image);</span><br><span class=\"line\">  mimeMultipart.addBodyPart(text);</span><br><span class=\"line\">  mimeMultipart.addBodyPart(body);</span><br><span class=\"line\">  mimeMultipart.setSubType(<span class=\"string\">&quot;mixed&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//设置到消息中，保存修改</span></span><br><span class=\"line\">  message.setContent(mimeMultipart);</span><br><span class=\"line\">  message.saveChanges();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> message;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>测试过邮件发送没有问题,但是很有可能因为包装问题导致图片或者文件出现编码解析错误问题</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Lombok\">Lombok</h2>\n<ul>\n<li>\n<p>通过注解快速生成代码</p>\n</li>\n<li>\n<p>需要<code>安装插件</code>和<code>导入依赖</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.20<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>效果如图:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVAz1g.png\" alt=\"20210502141126\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"注册-发送邮件-demo\">注册-发送邮件 demo</h2>\n<blockquote>\n<p>其他资源可以去这里找: <a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/Last/src/main/java/demo\">代码</a></p>\n</blockquote>\n<ul>\n<li>\n<p>通过 JSP 获取表单中用户名,密码和 email,然后用 Servlet 获取,并开启邮件发送线程通知用户.</p>\n</li>\n<li>\n<p>发送邮件的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.internet.InternetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.mail.internet.MimeMessage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.security.GeneralSecurityException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SendMail</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">fromEmailAddress</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;utsuko27@qq.com&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">toEmailAddress</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;utsuko27@163.com&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;授权码&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> User user;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">SendMail</span><span class=\"params\">(User user)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.user = user;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">Session</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> Session.getDefaultInstance(getProperties(), <span class=\"keyword\">new</span> <span class=\"title class_\">Authenticator</span>() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">protected</span> PasswordAuthentication <span class=\"title function_\">getPasswordAuthentication</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PasswordAuthentication</span>(fromEmailAddress, password);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      session.setDebug(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"type\">MimeMessage</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> getMimeMessage(session);</span><br><span class=\"line\"></span><br><span class=\"line\">      send(session, message);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      System.out.println(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> Properties <span class=\"title function_\">getProperties</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> GeneralSecurityException &#123;</span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">prop</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    prop.setProperty(<span class=\"string\">&quot;mail.host&quot;</span>, <span class=\"string\">&quot;smtp.qq.com&quot;</span>);<span class=\"comment\">///设置QQ邮件服务器</span></span><br><span class=\"line\">    prop.setProperty(<span class=\"string\">&quot;mail.transport.protocol&quot;</span>, <span class=\"string\">&quot;smtp&quot;</span>);<span class=\"comment\">///邮件发送协议</span></span><br><span class=\"line\">    prop.setProperty(<span class=\"string\">&quot;mail.smtp.auth&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);<span class=\"comment\">//需要验证用户密码</span></span><br><span class=\"line\">    <span class=\"comment\">//QQ邮箱需要设置SSL加密</span></span><br><span class=\"line\">    <span class=\"type\">MailSSLSocketFactory</span> <span class=\"variable\">sf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MailSSLSocketFactory</span>();</span><br><span class=\"line\">    sf.setTrustAllHosts(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    prop.put(<span class=\"string\">&quot;mail.smtp.ssl.enable&quot;</span>, <span class=\"string\">&quot;true&quot;</span>);</span><br><span class=\"line\">    prop.put(<span class=\"string\">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prop;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> MimeMessage <span class=\"title function_\">getMimeMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> MessagingException &#123;</span><br><span class=\"line\">    <span class=\"type\">MimeMessage</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MimeMessage</span>(session);</span><br><span class=\"line\">    <span class=\"comment\">//指明邮件的发件人</span></span><br><span class=\"line\">    message.setFrom(<span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(fromEmailAddress));</span><br><span class=\"line\">    <span class=\"comment\">//指明邮件的收件人</span></span><br><span class=\"line\">    message.setRecipient(Message.RecipientType.TO, <span class=\"keyword\">new</span> <span class=\"title class_\">InternetAddress</span>(toEmailAddress));</span><br><span class=\"line\">    <span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">    message.setSubject(<span class=\"string\">&quot;注册通知&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//邮件的文本内容</span></span><br><span class=\"line\">    message.setContent((<span class=\"string\">&quot;恭喜你(&quot;</span> + user.getUserName() + <span class=\"string\">&quot;)成功注册！&quot;</span> + <span class=\"string\">&quot;密码：&quot;</span> + user.getPassword())</span><br><span class=\"line\">        , <span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> message;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">send</span><span class=\"params\">(Session session, MimeMessage message)</span> <span class=\"keyword\">throws</span> MessagingException &#123;</span><br><span class=\"line\">    <span class=\"type\">Transport</span> <span class=\"variable\">transport</span> <span class=\"operator\">=</span> session.getTransport();</span><br><span class=\"line\">    transport.connect(<span class=\"string\">&quot;smtp.qq.com&quot;</span>, fromEmailAddress, password);</span><br><span class=\"line\">    transport.sendMessage(message, message.getAllRecipients());</span><br><span class=\"line\">    transport.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>Servlet 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RegisterServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;pwd&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">email</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;email&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(username, password, email);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">SendMail</span>(user).start(); <span class=\"comment\">// 开启线程</span></span><br><span class=\"line\">    resp.getWriter().write(<span class=\"string\">&quot;正在发送邮件....&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JavaWeb"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/6/",
            "url": "https://weidows.github.io/post/lang/Java/Web/6/",
            "title": "🥼JavaWeb~(陆)JDBC,JUnit,SMBMS项目",
            "date_published": "2021-04-15T07:28:45.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:22:47\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\6.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#jdbc%E5%A4%8D%E4%B9%A0\">JDBC(复习)</a></li>\n<li><a href=\"#junit\">JUnit</a></li>\n<li><a href=\"#smbms\">SMBMS</a>\n<ul>\n<li><a href=\"#%E6%90%AD%E5%BB%BA\">搭建</a></li>\n<li><a href=\"#%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84\">后端项目结构</a></li>\n<li><a href=\"#%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">连接配置文件</a></li>\n<li><a href=\"#orm-%E6%98%A0%E5%B0%84\">ORM 映射</a></li>\n<li><a href=\"#%E9%9D%99%E6%80%81%E5%9F%BA%E6%9C%AC%E7%B1%BB\">静态基本类</a></li>\n<li><a href=\"#%E9%A2%98%E5%A4%96%E8%AF%9D\">题外话</a></li>\n<li><a href=\"#%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95\">实现登录</a></li>\n<li><a href=\"#%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93%E6%9E%84\">项目总结构</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JDBC-复习\">JDBC(复习)</h2>\n<blockquote>\n<p>JDBC 连接 <a href=\"../../MySQL/4#jdbc\">🚀 进修 MySQL~(肆)</a></p>\n</blockquote>\n<blockquote>\n<p>事务 <a href=\"../../MySQL/5#ideasql\">🚀 进修 MySQL~(伍)</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JUnit\">JUnit</h2>\n<p>在一个方法上标记 <code>@Test</code> 注解后,这个方法可以脱离 Main 直接运行.</p>\n<ul>\n<li>\n<p>依赖 (一般创建项目时自带)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--单元测试--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>例子:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCTest</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Test</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;123&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"SMBMS\">SMBMS</h2>\n<blockquote>\n<p>项目代码: <a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb/SMBMS\">https://github.com/Weidows/Java/tree/master/JavaWeb/SMBMS</a></p>\n</blockquote>\n<ul>\n<li>\n<p>可以拉取代码直接看,下面的笔记着重讲<code>从零开发的流程</code></p>\n</li>\n<li>\n<p>我的这个项目应该是跑不起来,在 web,xml 中 filter 那里有个 bug,不过无大碍,知道怎么个原理就好.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"搭建\">搭建</h3>\n<ul>\n<li>\n<p>Maven-webapp 项目,补全 src/resources,添加依赖,连接 Tomcat 和 MySQL,修改 web.xml 版本</p>\n<ul>\n<li>\n<p>依赖:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.13.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- servlet依赖 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- JSP依赖 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Standard标签库 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.13<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.junit.jupiter<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit-jupiter-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;junit.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.junit.jupiter<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit-jupiter-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;junit.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.23<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>更改版本号:<code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">metadata-complete</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"后端项目结构\">后端项目结构</h3>\n<figure class=\"highlight clean\"><table><tr><td class=\"code\"><pre><span class=\"line\">|&gt; src/main</span><br><span class=\"line\">  |&gt; java/com.weidows</span><br><span class=\"line\">    |&gt; dao/mapper           <span class=\"comment\">// data access object (对应pojo的CRUD类)</span></span><br><span class=\"line\">    |&gt; filter               <span class=\"comment\">// 过滤器</span></span><br><span class=\"line\">    |&gt; pojo/entity          <span class=\"comment\">// Plain Ordinary Java Object (ORM映射的实体类,内部一般只有getter和setter)</span></span><br><span class=\"line\">    |&gt; service              <span class=\"comment\">// 业务类 (操作dao)</span></span><br><span class=\"line\">    |&gt; servlet/controller   <span class=\"comment\">// servlet后端</span></span><br><span class=\"line\">    |&gt; utils                <span class=\"comment\">// 工具类</span></span><br><span class=\"line\">    |&gt; bean                 <span class=\"comment\">// spring中 == entity + dao</span></span><br><span class=\"line\">  |&gt; resources              <span class=\"comment\">// 资源文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">-------</span><br><span class=\"line\"></span><br><span class=\"line\">pojo对应数据库中每个记录</span><br><span class=\"line\">-&gt; 在dao中编写操作pojo的SQL/Java代码,实现CRUD的<span class=\"string\">&quot;方法&quot;</span></span><br><span class=\"line\">-&gt; 在service中通过Java编写事务,并调用dao中CRUD方法实现增删改查<span class=\"string\">&quot;功能&quot;</span></span><br><span class=\"line\">-&gt; 在servlet就是对应请求和响应来做业务,调用service中的方法.</span><br><span class=\"line\"></span><br><span class=\"line\">-------</span><br><span class=\"line\"></span><br><span class=\"line\">pojo为最底层,不涉及对象增删操作</span><br><span class=\"line\">-&gt; dao层</span><br><span class=\"line\">  -&gt; BaseDao实现创建connection/preparedStatement对象,以及回收connection/preparedStatement/resultSet的方法.</span><br><span class=\"line\">  -&gt; 进一步的dao类中进行创建resultSet对象,并回收resultSet/preparedStatement对象</span><br><span class=\"line\">-&gt; 在service层进行connection的关闭,捕获dao层抛出的异常,且此层不再向上抛出异常.</span><br></pre></td></tr></table></figure>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVt9XS.png\" alt=\"20210424112946\" />\n<hr>\n<h3 id=\"连接配置文件\">连接配置文件</h3>\n<p>(resources/db.properties)</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">driverClassName</span>=<span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/smbms?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"ORM-映射\">ORM 映射</h3>\n<p>(编写 pojo 下的实体类)</p>\n<blockquote>\n<p>初始化 SQL: <a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/smbms.sql\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/smbms.sql</a></p>\n</blockquote>\n<blockquote>\n<p>pojo: <a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/pojo\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/pojo</a></p>\n</blockquote>\n<hr>\n<h3 id=\"静态基本类\">静态基本类</h3>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/dao/BaseDao.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/dao/BaseDao.java</a></p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weidows.dao;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 操作数据库的基类--静态类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseDao</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String driver;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String url;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String username;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">PreparedStatement</span> <span class=\"variable\">preparedStatement</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//静态代码块,在类加载的时候执行</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">configFile</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;db.properties&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> BaseDao.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      properties.load(inputStream);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">    url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">    username = properties.getProperty(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    password = properties.getProperty(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 获取数据库连接</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span> connection</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (connection == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Class.forName(driver);</span><br><span class=\"line\">        connection = DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> connection;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 查询数据库的公共操作</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> connection</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> rs</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> sql</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> params</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ResultSet <span class=\"title function_\">execute</span><span class=\"params\">(Connection connection, ResultSet rs, String sql, Object[] params)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      preparedStatement = connection.prepareStatement(sql);</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; params.length; i++) &#123;</span><br><span class=\"line\">        preparedStatement.setObject(i + <span class=\"number\">1</span>, params[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      rs = preparedStatement.executeQuery();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">      throwables.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rs;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 更新数据库的公共操作</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> connection</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> sql</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> params</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">execute</span><span class=\"params\">(Connection connection, String sql, Object[] params)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">updateRows</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      preparedStatement = connection.prepareStatement(sql);</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; params.length; i++) &#123;</span><br><span class=\"line\">        preparedStatement.setObject(i + <span class=\"number\">1</span>, params[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      updateRows = preparedStatement.executeUpdate();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">      throwables.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> updateRows;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 释放资源</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> connection</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> pstm</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> rs</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">closeResource</span><span class=\"params\">(Connection connection, PreparedStatement pstm, ResultSet rs)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rs != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        rs.close();</span><br><span class=\"line\">        rs = <span class=\"literal\">null</span>;<span class=\"comment\">//GC回收</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pstm != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        pstm.close();</span><br><span class=\"line\">        pstm = <span class=\"literal\">null</span>;<span class=\"comment\">//GC回收</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">        connection = <span class=\"literal\">null</span>;<span class=\"comment\">//GC回收</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">      flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"题外话\">题外话</h3>\n<ul>\n<li>\n<p>一个编程书写习惯: 方法中首先把需要用到的变量提出</p>\n<p>就像这里的三个变量,在一开始提出来,就像是类里面的 field,使用起来比较规范,容易排查</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> User <span class=\"title function_\">getLoginUser</span><span class=\"params\">(Connection connection, String userCode)</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">PreparedStatement</span> <span class=\"variable\">pstm</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">null</span> != connection) &#123;</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;select * from smbms_user where userCode=?&quot;</span>;</span><br><span class=\"line\">      Object[] params = &#123;userCode&#125;;</span><br><span class=\"line\">      resultSet = BaseDao.execute(connection, pstm, resultSet, sql, params);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (resultSet.next()) &#123;</span><br><span class=\"line\">        user = setData(resultSet);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    BaseDao.closeResource(<span class=\"literal\">null</span>, pstm, resultSet);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (SQLException throwables) &#123;</span><br><span class=\"line\">    throwables.printStackTrace();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> user;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"实现登录\">实现登录</h3>\n<ul>\n<li>\n<p>在这里复现一下&quot;登录&quot;业务,其他功能以此类推.</p>\n<p>这里着重<code>过程</code>(自上而下),具体怎么实现的业务建议结合源码来学习.</p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtTVD.png\" alt=\"20210422103020\" />\n</blockquote>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtwSu.png\" alt=\"20210425232035\" />\n</blockquote>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>com/weidows/pojo/User.java</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/pojo/User.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/pojo/User.java</a></p>\n</blockquote>\n</li>\n<li>\n<p><code>com/weidows/dao/user/UserDao.java</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/dao/user/UserDao.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/dao/user/UserDao.java</a></p>\n</blockquote>\n</li>\n<li>\n<p><code>com/weidows/dao/user/UserDaoImpl.java</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/dao/user/UserDaoImpl.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/dao/user/UserDaoImpl.java</a></p>\n</blockquote>\n</li>\n<li>\n<p><code>com/weidows/service/user/UserService.java</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/service/user/UserService.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/service/user/UserService.java</a></p>\n</blockquote>\n</li>\n<li>\n<p><code>com/weidows/service/user/UserServiceImpl.java</code></p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/service/user/UserServiceImpl.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/service/user/UserServiceImpl.java</a></p>\n</blockquote>\n</li>\n<li>\n<p>前端页面</p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/webapp/login.jsp\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/webapp/login.jsp</a></p>\n</blockquote>\n</li>\n<li>\n<p>对应前端的常量类</p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/util/Constants.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/util/Constants.java</a></p>\n</blockquote>\n</li>\n<li>\n<p>对应 User 的 servlet 类</p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/servlet/user/UserServlet.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/servlet/user/UserServlet.java</a></p>\n</blockquote>\n</li>\n<li>\n<p>登录 servlet 类</p>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/servlet/user/LoginServlet.java\">https://github.com/Weidows/Java/blob/master/JavaWeb/SMBMS/src/main/java/com/weidows/servlet/user/LoginServlet.java</a></p>\n</blockquote>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"项目总结构\">项目总结构</h3>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtQ5E.png\" alt=\"20210426105422\" />\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JDBC",
                "JavaWeb"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/5/",
            "url": "https://weidows.github.io/post/lang/Java/Web/5/",
            "title": "🥼JavaWeb~(伍)架构,filter,listener,demo.",
            "date_published": "2021-04-08T15:43:55.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:17:37\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\5.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#mvc-%E6%9E%B6%E6%9E%84\">MVC 架构</a></li>\n<li><a href=\"#%E4%B8%AD%E9%97%B4%E5%B1%82%E5%B7%A5%E5%85%B7\">中间层工具</a>\n<ul>\n<li><a href=\"#filter-%E8%BF%87%E6%BB%A4%E5%99%A8\">Filter 过滤器</a>\n<ul>\n<li><a href=\"#%E4%BB%8B%E7%BB%8D\">介绍</a></li>\n<li><a href=\"#%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96\">导入依赖</a></li>\n<li><a href=\"#filter-%E4%BE%8B%E5%AD%90\">filter 例子</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%9B%91%E5%90%AC%E5%99%A8\">监听器</a></li>\n<li><a href=\"#gui-%E7%BC%96%E7%A8%8B%E4%BE%8B%E5%AD%90\">GUI 编程例子</a></li>\n<li><a href=\"#%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81-demo\">登录验证 demo</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"MVC-架构\">MVC 架构</h2>\n<blockquote>\n<p>Model 模型 view 视图 Controller 控制 三方分离的架构</p>\n</blockquote>\n<ul>\n<li>\n<p>之前的架构:</p>\n<ul>\n<li>Servlet 直接进行 CRUD 操作,程序比较臃肿,不利于维护</li>\n</ul>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtL8q.png\" alt=\"20210409093031\" />\n</blockquote>\n<hr>\n</li>\n<li>\n<p>于是,为了解决这种不便利性,再加一层! (没有什么是加一层解决不了的)</p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtbyK.png\" alt=\"20210409093440\" />\n</blockquote>\n<hr>\n</li>\n<li>\n<p>各部分的职责:</p>\n<ul>\n<li>\n<p>Model</p>\n<ul>\n<li>\n<p>业务处理 ：业务逻辑（Service）</p>\n</li>\n<li>\n<p>数据持久层：CRUD （Dao - 数据持久化对象）</p>\n</li>\n</ul>\n</li>\n<li>\n<p>View</p>\n<ul>\n<li>\n<p>展示数据</p>\n</li>\n<li>\n<p>提供链接发起 Servlet 请求 （a，form，img…）</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Controller （Servlet）</p>\n<ul>\n<li>\n<p>接收用户的请求 ：（req：请求参数、Session 信息….）</p>\n</li>\n<li>\n<p>交给业务层处理对应的代码</p>\n</li>\n<li>\n<p>控制视图的跳转 (转发/重定向)</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>一条流程:</p>\n<p>View 层点击登录 --&gt; 接收用户的登录请求 --&gt; 处理用户的请求（获取用户登录的参数，username，password）–&gt; 交给业务层处理登录业务（判断用户名密码是否正确：操作事务）–&gt; Dao 层查询用户名和密码是否正确 --&gt; 数据库</p>\n<p>顺利查询到数据之后就是反过来再进行数据传递</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"中间层工具\">中间层工具</h2>\n<ul>\n<li>\n<p>常见的有<code>过滤器 filter</code>,<code>监听器 listener</code>,<code>拦截器 Interceptor</code></p>\n<blockquote>\n<p><a href=\"https://www.zhihu.com/question/35225845\">请教一下关于过滤器，拦截器，监听器具体应用上的区别？</a></p>\n</blockquote>\n</li>\n<li>\n<p>下面介绍 filter(重点) 和 listener</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"Filter-过滤器\">Filter 过滤器</h3>\n<h4 id=\"介绍\">介绍</h4>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtHp1.png\" alt=\"20210409222335\" />\n</blockquote>\n<p>比如处理<code>中文乱码,敏感词汇,登录验证</code>…</p>\n<p>例子: 比如 Shiro 安全框架技术就是用 Filter 来实现的</p>\n<hr>\n<h4 id=\"导入依赖\">导入依赖</h4>\n<ul>\n<li>\n<p>老四样:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- servlet依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- JSP依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Standard标签库 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>之后好像还会用到 SQL 驱动依赖,到时候在说.</p>\n</li>\n</ul>\n<hr>\n<h4 id=\"filter-例子\">filter 例子</h4>\n<ul>\n<li>\n<p><code>src/main/java/filter/CharacterEncodingFilter.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CharacterEncodingFilter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Filter</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//初始化并等待过滤对象出现</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> <span class=\"keyword\">throws</span> ServletException &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;CharacterEncodingFilter初始化&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    1. 过滤中的所有代码，在过滤特定请求的时候都会执行</span></span><br><span class=\"line\"><span class=\"comment\">    2. 必须要让过滤器继续执行 (因为filter可能不止一个,需要传递)</span></span><br><span class=\"line\"><span class=\"comment\">      chain.doFilter(request,response);</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">    request.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;CharacterEncodingFilter执行前....&quot;</span>);</span><br><span class=\"line\">    chain.doFilter(request, response); <span class=\"comment\">//让我们的请求继续走，如果不写，程序到这里就被拦截停止！</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;CharacterEncodingFilter执行后....&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//销毁：web服务器关闭的时候，过滤器会销毁</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;CharacterEncodingFilter销毁&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/servlet/Show.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Show</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过filter实现处理乱码</span></span><br><span class=\"line\">    resp.getWriter().write(<span class=\"string\">&quot;你好!&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code> 配置 servlet 和 filter</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">&quot;4.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>show<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.Show<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>characterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>filter.CharacterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--还是乱码的页面--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>show<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/show<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--通过过滤器解决了乱码的页面--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>show<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/servlet/show<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--filter的地址映射--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>characterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/servlet/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"监听器\">监听器</h3>\n<blockquote>\n<ul>\n<li>对应不同业务需求,存在 N 中不同的监听器接口可供实现.</li>\n<li>监听器经常在 GUI 编程中使用.</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>例子: 设置 session 监听器监听有多少 session 连接</p>\n</li>\n<li>\n<p><code>src/main/java/listener/OnlineCountListener.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//统计网站在线人数 -&gt; 统计session</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OnlineCountListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HttpSessionListener</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> ServletContext ctx;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> Integer onlineCount;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//一旦创建Session就会触发一次这个事件</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sessionCreated</span><span class=\"params\">(HttpSessionEvent se)</span> &#123;</span><br><span class=\"line\">    initParam(se);</span><br><span class=\"line\">    ctx.setAttribute(<span class=\"string\">&quot;OnlineCount&quot;</span>, ++onlineCount);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    一旦销毁Session就会触发一次这个事件</span></span><br><span class=\"line\"><span class=\"comment\">    Session销毁：</span></span><br><span class=\"line\"><span class=\"comment\">      1. 手动销毁  getSession().invalidate();</span></span><br><span class=\"line\"><span class=\"comment\">      2. 自动销毁</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sessionDestroyed</span><span class=\"params\">(HttpSessionEvent se)</span> &#123;</span><br><span class=\"line\">    initParam(se);</span><br><span class=\"line\">    ctx.setAttribute(<span class=\"string\">&quot;OnlineCount&quot;</span>, --onlineCount);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initParam</span><span class=\"params\">(HttpSessionEvent se)</span> &#123;</span><br><span class=\"line\">    ctx = se.getSession().getServletContext();</span><br><span class=\"line\">    onlineCount = (Integer) ctx.getAttribute(<span class=\"string\">&quot;OnlineCount&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (onlineCount == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      ctx.setAttribute(<span class=\"string\">&quot;OnlineCount&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>index.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;在线人数测试&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;当前有 &lt;span</span><br><span class=\"line\">    style=<span class=\"string\">&quot;color: turquoise;&quot;</span>&gt;&lt;%=<span class=\"built_in\">this</span>.getServletConfig().getServletContext().getAttribute(<span class=\"string\">&quot;OnlineCount&quot;</span>)%&gt;&lt;/span&gt; 人在线</span><br><span class=\"line\">&lt;/h1&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>注册监听器</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--注册监听器--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>listener.OnlineCountListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"GUI-编程例子\">GUI 编程例子</h3>\n<ul>\n<li>\n<p>GUI 编程常会用到监听器,这里简单介绍一下 : <code>src/main/java/listener/TestPanel.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestPanel</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Frame</span> <span class=\"variable\">frame</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Frame</span>(<span class=\"string\">&quot;Hello World!&quot;</span>);  <span class=\"comment\">//新建一个窗体</span></span><br><span class=\"line\">    <span class=\"type\">Panel</span> <span class=\"variable\">panel</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Panel</span>(<span class=\"literal\">null</span>); <span class=\"comment\">//面板</span></span><br><span class=\"line\">    frame.setLayout(<span class=\"literal\">null</span>); <span class=\"comment\">//设置窗体的布局</span></span><br><span class=\"line\"></span><br><span class=\"line\">    frame.setBounds(<span class=\"number\">300</span>, <span class=\"number\">300</span>, <span class=\"number\">500</span>, <span class=\"number\">500</span>);</span><br><span class=\"line\">    frame.setBackground(<span class=\"keyword\">new</span> <span class=\"title class_\">Color</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">255</span>)); <span class=\"comment\">//设置背景颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">    panel.setBounds(<span class=\"number\">50</span>, <span class=\"number\">50</span>, <span class=\"number\">300</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">    panel.setBackground(<span class=\"keyword\">new</span> <span class=\"title class_\">Color</span>(<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>)); <span class=\"comment\">//设置背景颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">    frame.add(panel);</span><br><span class=\"line\"></span><br><span class=\"line\">    frame.setVisible(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//监听事件，监听关闭事件</span></span><br><span class=\"line\">    frame.addWindowListener(<span class=\"keyword\">new</span> <span class=\"title class_\">WindowAdapter</span>() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> &#123;</span><br><span class=\"line\">        System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"登录验证-demo\">登录验证 demo</h3>\n<ul>\n<li>\n<p>项目结构,如图:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtMmb.png\" alt=\"20210411004248\" />\n<hr>\n</li>\n<li>\n<p>JSP 页面</p>\n<ul>\n<li>\n<p>主页(登录页面): <code>web/demo/index.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;主页&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;登录&lt;/h1&gt;</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;$&#123;pageContext.request.contextPath&#125;/demo/login&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">  &lt;label&gt;</span><br><span class=\"line\">    用户名:</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span>/&gt;</span><br><span class=\"line\">  &lt;/label&gt;</span><br><span class=\"line\">  &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;登录&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>登陆失败: <code>web/demo/failed.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;登录失败&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;登录失败进入的页面&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a href=<span class=\"string\">&quot;$&#123;pageContext.request.contextPath&#125;/demo/index.jsp&quot;</span>&gt;返回主页&lt;/a&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>登录成功: <code>web/demo/sys/success.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;已登录&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;登录成功后进入的页面&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a href=<span class=\"string\">&quot;$&#123;pageContext.request.contextPath&#125;/demo/logout&quot;</span>&gt;注销&lt;/a&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>Java 后端</p>\n<ul>\n<li>\n<p>login: <code>src/main/java/demo/servlet/Login.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.utils.Constants;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Login</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> req.getSession();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (username.equals(<span class=\"string\">&quot;admin&quot;</span>)) &#123;</span><br><span class=\"line\">      session.setAttribute(Constants.USER_SESSION, session.getId());</span><br><span class=\"line\">      resp.sendRedirect(<span class=\"string\">&quot;/demo/sys/success.jsp&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      resp.sendRedirect(<span class=\"string\">&quot;/demo/failed.jsp&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>注销: <code>src/main/java/demo/servlet/Logout.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.utils.Constants;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Logout</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> req.getSession();</span><br><span class=\"line\">    <span class=\"type\">Object</span> <span class=\"variable\">attribute</span> <span class=\"operator\">=</span> session.getAttribute(Constants.USER_SESSION);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">      频繁操作session连接会影响性能,通过attribute间接验证登录信息</span></span><br><span class=\"line\"><span class=\"comment\">      通过设置或移除 USER_SESSION 属性来验证是否登录</span></span><br><span class=\"line\"><span class=\"comment\">      存在一个Bug: 在注销状态通过浏览器的后退,可以返回登陆成功的页面(且不存在USER_SESSION)</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (attribute != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      session.removeAttribute(Constants.USER_SESSION);</span><br><span class=\"line\">      resp.sendRedirect(<span class=\"string\">&quot;/demo/index.jsp&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>提取的常量工具类: <code>src/main/java/demo/utils/Constants.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 此类内定义一些其他各种地方需要经常调用的常量</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Constants</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">USER_SESSION</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;USER_SESSION&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>过滤器类: <code>src/main/java/demo/filter/SysFilter.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo.filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> demo.utils.Constants;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SysFilter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Filter</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> <span class=\"keyword\">throws</span> ServletException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException &#123;</span><br><span class=\"line\">    <span class=\"type\">HttpServletRequest</span> <span class=\"variable\">req</span> <span class=\"operator\">=</span> (HttpServletRequest) request;</span><br><span class=\"line\">    <span class=\"type\">HttpServletResponse</span> <span class=\"variable\">resp</span> <span class=\"operator\">=</span> (HttpServletResponse) response;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Object</span> <span class=\"variable\">attribute</span> <span class=\"operator\">=</span> req.getSession().getAttribute(Constants.USER_SESSION);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (attribute == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      resp.sendRedirect(<span class=\"string\">&quot;/demo/failed.jsp&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    chain.doFilter(request, response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>Web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>demo.servlet.Login<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>logout<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>demo.servlet.Logout<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sysFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>demo.filter.SysFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/demo/login<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>logout<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/demo/logout<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sysFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/demo/sys/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "架构",
                "笔记",
                "Java",
                "服务器",
                "JavaWeb",
                "Servlet",
                "Filter"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/4/",
            "url": "https://weidows.github.io/post/lang/Java/Web/4/",
            "title": "🥼JavaWeb~(肆)摸索JSP,JavaBean",
            "date_published": "2021-04-06T15:45:19.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:17:44\n\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#jsp\">JSP</a>\n<ul>\n<li><a href=\"#%E5%AE%9A%E5%88%B6%E9%94%99%E8%AF%AF%E9%A1%B5%E9%9D%A2\">定制错误页面</a></li>\n<li><a href=\"#%E5%90%88%E5%B9%B6%E9%A1%B5%E9%9D%A2\">合并页面</a></li>\n<li><a href=\"#%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%8F%8A%E4%BD%9C%E7%94%A8%E5%9F%9F\">内置对象及作用域</a></li>\n<li><a href=\"#jsp-%E6%A0%87%E7%AD%BE\">JSP 标签</a></li>\n<li><a href=\"#jstl-%E8%A1%A8%E8%BE%BE%E5%BC%8F\">JSTL 表达式</a></li>\n</ul>\n</li>\n<li><a href=\"#javabean\">JavaBean</a></li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JSP\">JSP</h2>\n<h3 id=\"定制错误页面\">定制错误页面</h3>\n<ul>\n<li>\n<p>方法一: 直接在 jsp 页面配置 errorPage</p>\n<ul>\n<li>\n<p><code>errors/index.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%--此处定制错误页面指向--%&gt;</span><br><span class=\"line\">&lt;%@ page errorPage=<span class=\"string\">&quot;errors/500.jsp&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;错误页面&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">1</span> / <span class=\"number\">0</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>errors/500.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;<span class=\"number\">500</span>错误&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;<span class=\"number\">500</span>错误页面.&lt;/h1&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>方法二: 在 web.xml 中配置</p>\n<ul>\n<li>\n<p>errors/404.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;<span class=\"number\">404</span>错误&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;<span class=\"number\">404</span>错误页面.&lt;/h1&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">error-page</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">error-code</span>&gt;</span>404<span class=\"tag\">&lt;/<span class=\"name\">error-code</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">location</span>&gt;</span>/errors/404.jsp<span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">error-page</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">error-page</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">error-code</span>&gt;</span>500<span class=\"tag\">&lt;/<span class=\"name\">error-code</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">location</span>&gt;</span>/errors/500.jsp<span class=\"tag\">&lt;/<span class=\"name\">location</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">error-page</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"合并页面\">合并页面</h3>\n<ul>\n<li>\n<p><code>common/header.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;h1&gt;这里是header&lt;/h1&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>common/footer.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;h1&gt;这里是footer&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>common/index.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;测试common&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">      这种会把include的页面内容合并进本页面,最后是展示一个页面</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;%@ include file=<span class=\"string\">&quot;header.jsp&quot;</span> %&gt;</span><br><span class=\"line\">    &lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class=\"line\">    &lt;%@ include file=<span class=\"string\">&quot;footer.jsp&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;HR /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">      jsp:include标签,本质是导入其他文件内容,最后是多个文件合为一个页面展示</span><br><span class=\"line\">      (更灵活,建议用这个)</span><br><span class=\"line\">        上面方法的因为是合并,所以很有可能出现变量重名,干扰的问题</span><br><span class=\"line\">        这个方法不同文件之间互不干扰</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;jsp:include page=<span class=\"string\">&quot;/common/header.jsp&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class=\"line\">    &lt;jsp:include page=<span class=\"string\">&quot;/common/footer.jsp&quot;</span> /&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"内置对象及作用域\">内置对象及作用域</h3>\n<ul>\n<li>\n<p>内置对象</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">PageContext 存东西</span><br><span class=\"line\">Request 存东西</span><br><span class=\"line\">Response</span><br><span class=\"line\"><span class=\"keyword\">Session</span> 存东西</span><br><span class=\"line\">Application 【SerlvetContext】 存东西</span><br><span class=\"line\">config 【SerlvetConfig】</span><br><span class=\"line\"><span class=\"keyword\">out</span></span><br><span class=\"line\">page ，不用了解</span><br><span class=\"line\"><span class=\"keyword\">exception</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>操作对象 <code>demo/1.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">* @?: *********************************************************************</span><br><span class=\"line\">* <span class=\"meta\">@Author</span>: Weidows</span><br><span class=\"line\">* <span class=\"meta\">@Date</span>: <span class=\"number\">2021</span>-<span class=\"number\">04</span>-<span class=\"number\">07</span> <span class=\"number\">16</span>:<span class=\"number\">29</span>:<span class=\"number\">42</span></span><br><span class=\"line\">* <span class=\"meta\">@LastEditors</span>: Weidows</span><br><span class=\"line\">* <span class=\"meta\">@LastEditTime</span>: <span class=\"number\">2021</span>-<span class=\"number\">04</span>-<span class=\"number\">07</span> <span class=\"number\">17</span>:<span class=\"number\">29</span>:<span class=\"number\">11</span></span><br><span class=\"line\">* <span class=\"meta\">@FilePath</span>: \\Weidows\\JavaWeb\\JSP\\src\\main\\webapp\\<span class=\"number\">1.</span>jsp</span><br><span class=\"line\">* <span class=\"meta\">@Description</span>:</span><br><span class=\"line\">* @!: *********************************************************************</span><br><span class=\"line\">* servlet <span class=\"number\">2.3</span>默认不支持EL表达式,需要开启.</span><br><span class=\"line\">--&gt;</span><br><span class=\"line\">&lt;%@ page isELIgnored=<span class=\"string\">&quot;false&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;index4&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;%--</span><br><span class=\"line\">      PageContext 存东西</span><br><span class=\"line\">      Request 存东西</span><br><span class=\"line\">      Response</span><br><span class=\"line\">      Session 存东西</span><br><span class=\"line\">      Application 【SerlvetContext】 存东西</span><br><span class=\"line\">      config 【SerlvetConfig】</span><br><span class=\"line\">      out</span><br><span class=\"line\">      page ，不用了解</span><br><span class=\"line\">      exception</span><br><span class=\"line\">    --%&gt;</span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">      pageContext.setAttribute(<span class=\"string\">&quot;name1&quot;</span>, <span class=\"string\">&quot;秦疆1号&quot;</span>); <span class=\"comment\">// 保存的数据只在一个页面中有效</span></span><br><span class=\"line\">      request.setAttribute(<span class=\"string\">&quot;name2&quot;</span>, <span class=\"string\">&quot;秦疆2号&quot;</span>); <span class=\"comment\">// 保存的数据只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class=\"line\">      session.setAttribute(<span class=\"string\">&quot;name3&quot;</span>, <span class=\"string\">&quot;秦疆3号&quot;</span>); <span class=\"comment\">// 保存的数据只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class=\"line\">      application.setAttribute(<span class=\"string\">&quot;name4&quot;</span>, <span class=\"string\">&quot;秦疆4号&quot;</span>); <span class=\"comment\">// 保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 作用域从小到大</span></span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name1</span> <span class=\"operator\">=</span> (String) pageContext.findAttribute(<span class=\"string\">&quot;name1&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name2</span> <span class=\"operator\">=</span> (String) pageContext.findAttribute(<span class=\"string\">&quot;name2&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name3</span> <span class=\"operator\">=</span> (String) pageContext.findAttribute(<span class=\"string\">&quot;name3&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name4</span> <span class=\"operator\">=</span> (String) pageContext.findAttribute(<span class=\"string\">&quot;name4&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">name5</span> <span class=\"operator\">=</span> (String) pageContext.findAttribute(<span class=\"string\">&quot;name5&quot;</span>); <span class=\"comment\">// 这个不存在</span></span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;%--</span><br><span class=\"line\">      EL表达式</span><br><span class=\"line\">      $&#123;内容&#125; == &lt;%= 内容 %&gt;</span><br><span class=\"line\">      用EL表达式的话,<span class=\"literal\">null</span>值不会显示,而使用JSP表达式会显示<span class=\"literal\">null</span>值</span><br><span class=\"line\">    --%&gt;</span><br><span class=\"line\">    &lt;h1&gt;取出的内容:&lt;/h1&gt;</span><br><span class=\"line\">    &lt;h3&gt;$&#123;name1&#125;&lt;/h3&gt;</span><br><span class=\"line\">    &lt;h3&gt;$&#123;name2&#125;&lt;/h3&gt;</span><br><span class=\"line\">    &lt;h3&gt;$&#123;name3&#125;&lt;/h3&gt;</span><br><span class=\"line\">    &lt;h3&gt;$&#123;name4&#125;&lt;/h3&gt;</span><br><span class=\"line\">    &lt;HR&gt;</span><br><span class=\"line\">    &lt;h3&gt;$&#123;name5&#125;&lt;/h3&gt;</span><br><span class=\"line\">    &lt;h3&gt;&lt;%=name5%&gt;&lt;/h3&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtAMc.png\" alt=\"20210407173249\" />\n<hr>\n</li>\n<li>\n<p>作用域</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtiZr.png\" alt=\"20210407175219\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"JSP-标签\">JSP 标签</h3>\n<ul>\n<li>\n<p>例子: 使用 JSP 标签转发页面,读取参数并显示出来.</p>\n</li>\n<li>\n<p><code>src/main/webapp/demo/JSP-label/forward.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;JSP-label&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;%-- 转发request携带的参数(注意JSP标签内不能有注释,会报错<span class=\"number\">500</span>) --%&gt;</span><br><span class=\"line\">&lt;jsp:forward page=<span class=\"string\">&quot;forward.jsp&quot;</span>&gt;</span><br><span class=\"line\">  &lt;jsp:param name=<span class=\"string\">&quot;name&quot;</span> value=<span class=\"string\">&quot;kuangshen&quot;</span>/&gt;</span><br><span class=\"line\">  &lt;jsp:param name=<span class=\"string\">&quot;age&quot;</span> value=<span class=\"string\">&quot;12&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/jsp:forward&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/webapp/demo/JSP-label/forward.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page isELIgnored=<span class=\"string\">&quot;false&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;转发页面&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">&quot;name&quot;</span>, request.getParameter(<span class=\"string\">&quot;name&quot;</span>));</span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">&quot;age&quot;</span>, request.getParameter(<span class=\"string\">&quot;age&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;h3&gt;姓名: $&#123;name&#125;&lt;/h3&gt;</span><br><span class=\"line\">&lt;h3&gt;年龄: $&#123;age&#125;&lt;/h3&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"JSTL-表达式\">JSTL 表达式</h3>\n<blockquote>\n<p>JSTL 标签库的使用就是为了弥补 HTML 标签的不足,功能上与 Java 相似.</p>\n</blockquote>\n<ul>\n<li>\n<p>分类</p>\n<ul>\n<li>\n<p>格式化标签</p>\n</li>\n<li>\n<p>SQL 标签</p>\n</li>\n<li>\n<p>XML 标签</p>\n</li>\n<li>\n<p>JSTL 函数</p>\n</li>\n<li>\n<p>核心标签 （掌握部分）</p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtnST.png\" alt=\"20210407195349\" />\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>使用</p>\n<ul>\n<li>\n<p>在 pom.xml 中导入依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Standard标签库 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在 JSP 页面还需要引入对应要使用的 taglib,这里只用到 core:</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>if</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt; &lt;%@ taglib</span><br><span class=\"line\">prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt; &lt;%@ page</span><br><span class=\"line\">isELIgnored=<span class=\"string\">&quot;false&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;<span class=\"keyword\">if</span>测试&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;%--action是代码提交位置--%&gt;</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;if.jsp&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">      &lt;label&gt;</span><br><span class=\"line\">        用户名:</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> /&gt;</span><br><span class=\"line\">      &lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;登录&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;hr /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;%--</span><br><span class=\"line\">      EL表达式获取表单中的数据 $&#123;param.参数名&#125;</span><br><span class=\"line\">      判断如果提交的用户名是admin，则登录成功,并把isAdmin置为<span class=\"literal\">true</span></span><br><span class=\"line\">      --%&gt;</span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;param.username==&#x27;admin&#x27;&#125;&quot;</span> <span class=\"keyword\">var</span>=<span class=\"string\">&quot;isAdmin&quot;</span>&gt;</span><br><span class=\"line\">      &lt;c:out value=<span class=\"string\">&quot;管理员欢迎您！&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>choose-when</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;%-- Created by IntelliJ IDEA. User: <span class=\"number\">29845</span> Date: <span class=\"number\">2021</span>/<span class=\"number\">4</span>/<span class=\"number\">8</span> Time: <span class=\"number\">20</span>:<span class=\"number\">38</span> To change</span><br><span class=\"line\"><span class=\"built_in\">this</span> template use File | Settings | File Templates. --%&gt; &lt;%@ page</span><br><span class=\"line\">contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt; &lt;%@ page</span><br><span class=\"line\">isELIgnored=<span class=\"string\">&quot;false&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;choose-when测试&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">      &lt;label&gt;</span><br><span class=\"line\">        &lt;%--定义一个变量score--%&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;score&quot;</span> /&gt;</span><br><span class=\"line\">      &lt;/label&gt;</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">&quot;submit&quot;</span> name=<span class=\"string\">&quot;提交&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    &lt;c:choose&gt;</span><br><span class=\"line\">      &lt;c:when test=<span class=\"string\">&quot;$&#123;param.score&gt;=90&#125;&quot;</span>&gt; 你的成绩为优秀 &lt;/c:when&gt;</span><br><span class=\"line\">      &lt;c:when test=<span class=\"string\">&quot;$&#123;param.score&gt;=80&#125;&quot;</span>&gt; 你的成绩为一般 &lt;/c:when&gt;</span><br><span class=\"line\">      &lt;c:when test=<span class=\"string\">&quot;$&#123;param.score&gt;=70&#125;&quot;</span>&gt; 你的成绩为良好 &lt;/c:when&gt;</span><br><span class=\"line\">      &lt;c:when test=<span class=\"string\">&quot;$&#123;param.score&lt;=60&#125;&quot;</span>&gt; 你的成绩为不及格 &lt;/c:when&gt;</span><br><span class=\"line\">    &lt;/c:choose&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>forEach</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.ArrayList&quot;</span> %&gt;&lt;%--</span><br><span class=\"line\">  Created by IntelliJ IDEA.</span><br><span class=\"line\">  User: <span class=\"number\">29845</span></span><br><span class=\"line\">  Date: <span class=\"number\">2021</span>/<span class=\"number\">4</span>/<span class=\"number\">8</span></span><br><span class=\"line\">  Time: <span class=\"number\">20</span>:<span class=\"number\">59</span></span><br><span class=\"line\">  To change <span class=\"built_in\">this</span> template use File | Settings | File Templates.</span><br><span class=\"line\">--%&gt;</span><br><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page isELIgnored=<span class=\"string\">&quot;false&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;forEach&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  ArrayList&lt;String&gt; setPeople = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">  setPeople.add(<span class=\"number\">0</span>, <span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">  setPeople.add(<span class=\"number\">1</span>, <span class=\"string\">&quot;李四&quot;</span>);</span><br><span class=\"line\">  setPeople.add(<span class=\"number\">2</span>, <span class=\"string\">&quot;王五&quot;</span>);</span><br><span class=\"line\">  setPeople.add(<span class=\"number\">3</span>, <span class=\"string\">&quot;赵六&quot;</span>);</span><br><span class=\"line\">  setPeople.add(<span class=\"number\">4</span>, <span class=\"string\">&quot;田六&quot;</span>);</span><br><span class=\"line\">  request.setAttribute(<span class=\"string\">&quot;list&quot;</span>, setPeople);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%--</span><br><span class=\"line\">  <span class=\"keyword\">var</span> , 每一次遍历出来的变量</span><br><span class=\"line\">  items, 要遍历的对象</span><br><span class=\"line\">  可选:</span><br><span class=\"line\">    begin,   哪里开始</span><br><span class=\"line\">    end,     到哪里</span><br><span class=\"line\">    step,   步长</span><br><span class=\"line\">--%&gt;</span><br><span class=\"line\">&lt;c:forEach <span class=\"keyword\">var</span>=<span class=\"string\">&quot;getPeople&quot;</span> items=<span class=\"string\">&quot;$&#123;list&#125;&quot;</span> begin=<span class=\"string\">&quot;1&quot;</span> end=<span class=\"string\">&quot;3&quot;</span> step=<span class=\"string\">&quot;1&quot;</span>&gt;</span><br><span class=\"line\">  &lt;c:out value=<span class=\"string\">&quot;$&#123;getPeople&#125;&quot;</span>/&gt;</span><br><span class=\"line\">  &lt;br/&gt;</span><br><span class=\"line\">&lt;/c:forEach&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JavaBean\">JavaBean</h2>\n<ul>\n<li>\n<p>JavaBean(实体类) 有特定的写法:</p>\n<ul>\n<li>\n<p>一个无参构造</p>\n</li>\n<li>\n<p>属性必须私有化</p>\n</li>\n<li>\n<p>必须有对应的 get/set 方法；</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>一般用来和数据库的字段做映射 ORM(对象关系映射)</p>\n<ul>\n<li>\n<p>表—&gt;类</p>\n</li>\n<li>\n<p>字段–&gt;属性</p>\n</li>\n<li>\n<p>行记录----&gt;对象</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>样例 Java 类: <code>src/main/java/pojo/People.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> pojo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">People</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String address;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">People</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">People</span><span class=\"params\">(<span class=\"type\">int</span> id, String name, <span class=\"type\">int</span> age, String address)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getAddress</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> address;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAddress</span><span class=\"params\">(String address)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;People&#123;&quot;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;id=&quot;</span> + id +</span><br><span class=\"line\">        <span class=\"string\">&quot;, name=&#x27;&quot;</span> + name + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;, age=&quot;</span> + age +</span><br><span class=\"line\">        <span class=\"string\">&quot;, address=&#x27;&quot;</span> + address + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">People</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;秦疆1号&quot;</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;西安&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">People</span>(<span class=\"number\">2</span>, <span class=\"string\">&quot;秦疆2号&quot;</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;西安&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">People</span>(<span class=\"number\">3</span>, <span class=\"string\">&quot;秦疆3号&quot;</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;西安&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>样例 JSP: <code>src/main/webapp/javaBean.jsp</code></p>\n<ul>\n<li>这里只是简单介绍 JavaBean 及其使用,并不推荐用 JSP 标签来操作 JavaBean,还是推荐用 Java 代码操作实体类对象.</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%-- Created by IntelliJ IDEA. User: <span class=\"number\">29845</span> Date: <span class=\"number\">2021</span>/<span class=\"number\">4</span>/<span class=\"number\">8</span> Time: <span class=\"number\">23</span>:<span class=\"number\">32</span> To change</span><br><span class=\"line\"><span class=\"built_in\">this</span> template use File | Settings | File Templates. --%&gt; &lt;%@ page</span><br><span class=\"line\">contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;javaBean测试&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;jsp:useBean id=<span class=\"string\">&quot;people&quot;</span> class=<span class=\"string\">&quot;pojo.People&quot;</span> scope=<span class=\"string\">&quot;page&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;jsp:setProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;id&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;jsp:setProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;name&quot;</span> value=<span class=\"string\">&quot;狂神说&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;jsp:setProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;age&quot;</span> value=<span class=\"string\">&quot;3&quot;</span> /&gt;</span><br><span class=\"line\">    &lt;jsp:setProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;address&quot;</span> value=<span class=\"string\">&quot;西安&quot;</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    id:</span><br><span class=\"line\">    &lt;jsp:getProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;id&quot;</span> /&gt;</span><br><span class=\"line\">    name:</span><br><span class=\"line\">    &lt;jsp:getProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;name&quot;</span> /&gt;</span><br><span class=\"line\">    age:</span><br><span class=\"line\">    &lt;jsp:getProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;age&quot;</span> /&gt;</span><br><span class=\"line\">    address:</span><br><span class=\"line\">    &lt;jsp:getProperty name=<span class=\"string\">&quot;people&quot;</span> property=<span class=\"string\">&quot;address&quot;</span> /&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JavaWeb",
                "Servlet",
                "JSP"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/3/",
            "url": "https://weidows.github.io/post/lang/Java/Web/3/",
            "title": "🥼JavaWeb~(叁)Cookie/Session验证,JSP开篇",
            "date_published": "2021-03-29T10:21:52.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:17:27\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\3.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#servlet\">Servlet</a>\n<ul>\n<li><a href=\"#httpservletrequest\">HttpServletRequest</a></li>\n</ul>\n</li>\n<li><a href=\"#cookiesession\">Cookie、Session</a>\n<ul>\n<li><a href=\"#cookie\">Cookie</a></li>\n<li><a href=\"#session\">Session</a></li>\n</ul>\n</li>\n<li><a href=\"#jsp\">JSP</a>\n<ul>\n<li><a href=\"#%E4%BB%8B%E7%BB%8D\">介绍</a></li>\n<li><a href=\"#%E4%BE%9D%E8%B5%96%E5%AF%BC%E5%85%A5\">依赖导入</a></li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">基本语法</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Servlet\">Servlet</h2>\n<h3 id=\"HttpServletRequest\">HttpServletRequest</h3>\n<ul>\n<li>\n<p>例子: 在 index.jsp 提交表单信息给 <code>/login</code>,此 Servlet 后端读取发送来的表单信息并在页面输出显示.</p>\n<ul>\n<li>\n<p>删掉并用 idea 重建 index.jsp,会补齐一些编码信息.</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page</span><br><span class=\"line\">    contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt;登录&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div style=<span class=\"string\">&quot;text-align: center&quot;</span>&gt;</span><br><span class=\"line\">  &lt;form action=<span class=\"string\">&quot;/login&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">    &lt;label&gt;</span><br><span class=\"line\">      用户名:</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> placeholder=<span class=\"string\">&quot;无&quot;</span>/&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;/label&gt;</span><br><span class=\"line\">    &lt;label&gt;</span><br><span class=\"line\">      密码:</span><br><span class=\"line\">      &lt;input type=<span class=\"string\">&quot;password&quot;</span> name=<span class=\"string\">&quot;password&quot;</span> placeholder=<span class=\"string\">&quot;&quot;</span>/&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    爱好:</span><br><span class=\"line\">    &lt;label&gt;&lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;hobbys&quot;</span> value=<span class=\"string\">&quot;女孩&quot;</span>/&gt;女孩&lt;/label&gt;</span><br><span class=\"line\">    &lt;label&gt;&lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;hobbys&quot;</span> value=<span class=\"string\">&quot;代码&quot;</span>/&gt;代码&lt;/label&gt;</span><br><span class=\"line\">    &lt;label&gt;&lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;hobbys&quot;</span> value=<span class=\"string\">&quot;动漫&quot;</span>/&gt;动漫&lt;/label&gt;</span><br><span class=\"line\">    &lt;label&gt;&lt;input type=<span class=\"string\">&quot;checkbox&quot;</span> name=<span class=\"string\">&quot;hobbys&quot;</span> value=<span class=\"string\">&quot;美食&quot;</span>/&gt;美食&lt;/label&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span>&gt;</span><br><span class=\"line\">  &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/servlet/Login.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Login</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> -<span class=\"number\">7958099474557186407L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    req.setCharacterEncoding(<span class=\"string\">&quot;utf8&quot;</span>);</span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\">    resp.setCharacterEncoding(<span class=\"string\">&quot;utf8&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">    String[] hobbys = req.getParameterValues(<span class=\"string\">&quot;hobbys&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;username: &quot;</span> + username);</span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;password: &quot;</span> + password);</span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;爱好: &quot;</span> + Arrays.toString(hobbys));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.Login<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/login<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Cookie、Session\">Cookie、Session</h2>\n<ul>\n<li>\n<p>Cookie 是服务端在客户端上做的标记,用请求和响应进行传递,用来记录用户的访问信息 (客户端技术)</p>\n</li>\n<li>\n<p>session 是在服务端上保存用户的访问信息 (服务端技术)</p>\n</li>\n</ul>\n<h3 id=\"Cookie\">Cookie</h3>\n<ul>\n<li>\n<p>例子: 访问 <code>/cookie</code> 时,会显示上一次访问此 URL 的时间 (这个时间通过服务端传给客户端 Cookie 来记录)</p>\n<ul>\n<li>\n<p><code>src/main/java/servlet/HelloCookie.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.Cookie;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloCookie</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    req.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    resp.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取客户端请求中携带的cookie</span></span><br><span class=\"line\">    Cookie[] cookies = req.getCookies();</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">isFirst</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>; <span class=\"comment\">// 标志是否是第一次访问</span></span><br><span class=\"line\"></span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;你上一次访问时间是: &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (cookie.getName().equals(<span class=\"string\">&quot;LastLoginTime&quot;</span>)) &#123;</span><br><span class=\"line\">        isFirst = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        writer.println(cookie.getValue());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isFirst) &#123;</span><br><span class=\"line\">      writer.println(<span class=\"string\">&quot;这次是第一次访问.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 响应携带cookie返回给客户端</span></span><br><span class=\"line\">    <span class=\"type\">Cookie</span> <span class=\"variable\">lastLoginTime</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;LastLoginTime&quot;</span>, System.currentTimeMillis() + <span class=\"string\">&quot;&quot;</span>);<span class=\"comment\">// 非字符串+&quot;&quot; = 字符串</span></span><br><span class=\"line\">    resp.addCookie(lastLoginTime);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>cookie<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.HelloCookie<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>cookie<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/cookie<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>常用方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cookie[] cookies = req.getCookies(); <span class=\"comment\">//获得Cookie</span></span><br><span class=\"line\">cookie.getName(); <span class=\"comment\">//获得cookie中的key</span></span><br><span class=\"line\">cookie.getValue(); <span class=\"comment\">//获得cookie中的vlaue</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis()+<span class=\"string\">&quot;&quot;</span>); <span class=\"comment\">//新建一个cookie</span></span><br><span class=\"line\">cookie.setMaxAge(<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>); <span class=\"comment\">//设置cookie的有效期</span></span><br><span class=\"line\">resp.addCookie(cookie); <span class=\"comment\">//响应给客户端一个cookie</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>一些细节</p>\n<ul>\n<li>\n<p>cookie 大小和数量</p>\n<ul>\n<li>不同浏览器支持的大小和数量不一样,大小都是 4K 左右,数量为每域名几十到无数个不等.</li>\n</ul>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/u011127019/article/details/89206016\">cookie 大小限制</a></p>\n</blockquote>\n</li>\n<li>\n<p>设置存活期:</p>\n<ul>\n<li>\n<p>不设置: 关闭浏览器自动失效</p>\n</li>\n<li>\n<p>设置为 0,立即失效.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>遇到传输的中文乱码问题,可以用 URLEncoder 编码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">URLEncoder.encode(<span class=\"string\">&quot;齐下无贰&quot;</span>,<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">URLDecoder.decode(cookie.getValue(),<span class=\"string\">&quot;UTF-8&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"Session\">Session</h3>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVt166.png\" alt=\"20210330120835\" />\n</blockquote>\n<ul>\n<li>\n<p>cookie 用来传输一些字符串验证信息,并存放在客户端中.</p>\n</li>\n<li>\n<p>而 session 可以存放更宽泛的数据(对象,文件等等),其数据存放在服务端.</p>\n<ul>\n<li>\n<p>服务端传给客户端一个名为 <code>JSESSIONID</code> 的 cookie 用来验证 session</p>\n</li>\n<li>\n<p>一个 Seesion 对象独占一个浏览器,不同浏览器有不同的 session</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>例子: 开启服务器并访问第一个页面 <code>localhost:8080</code> 时,session 就被创建了,然后访问 <code>/setSession</code>设置 person 信息,再访问 <code>/getSession</code>会显示 person 信息.</p>\n<ul>\n<li>\n<p><code>src/main/java/servlet/SetSession.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SetSession</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//解决乱码问题</span></span><br><span class=\"line\">    req.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    resp.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//得到Session和writer</span></span><br><span class=\"line\">    <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> req.getSession();</span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//给Session中存东西</span></span><br><span class=\"line\">    session.setAttribute(<span class=\"string\">&quot;person&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>(<span class=\"string\">&quot;齐下无贰&quot;</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取Session的ID</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">sessionId</span> <span class=\"operator\">=</span> session.getId();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断Session是不是新创建</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (session.isNew()) &#123;</span><br><span class=\"line\">      writer.println(<span class=\"string\">&quot;session创建成功,ID: &quot;</span> + sessionId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      writer.println(<span class=\"string\">&quot;session已经在服务器中存在了,ID: &quot;</span> + sessionId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Person&#123;&quot;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;name=&#x27;&quot;</span> + name + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">        <span class=\"string\">&quot;, age=&quot;</span> + age +</span><br><span class=\"line\">        <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>src/main/java/servlet/GetSession.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetSession</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> -<span class=\"number\">4606977948300644893L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//解决乱码问题</span></span><br><span class=\"line\">    req.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    resp.setCharacterEncoding(<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//得到Session和writer</span></span><br><span class=\"line\">    <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> req.getSession();</span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取属性并输出</span></span><br><span class=\"line\">    <span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> (Person) session.getAttribute(<span class=\"string\">&quot;person&quot;</span>);</span><br><span class=\"line\">    writer.println(person);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 移除属性</span></span><br><span class=\"line\">    session.removeAttribute(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//手动注销Session</span></span><br><span class=\"line\">    session.invalidate();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>setSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.SetSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>getSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.GetSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>setSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/setSession<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>getSession<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/getSession<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>session 有效期问题</p>\n<ul>\n<li>\n<p>默认失效时间是 30 分钟</p>\n</li>\n<li>\n<p>是从 session 断开连接(浏览器关闭开始计算的),而不是从 session 连接开始计算</p>\n</li>\n<li>\n<p>可以在 web.xml 中设置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/fanbingfu/article/details/78318855\">关于 session 的失效时间和过期</a></p>\n</blockquote>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JSP\">JSP</h2>\n<h3 id=\"介绍\">介绍</h3>\n<ul>\n<li>\n<p>JSP (Java Server Pages),写法类似 HTML 的动态 Java 页面</p>\n</li>\n<li>\n<p>最终 JSP 会被转换为一个 Java 类,实际上本质就是 <code>Servlet 的简化实现</code>.</p>\n<ul>\n<li>\n<p><code>*.jsp -&gt; *.java -&gt; *.class</code></p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVtmc0.png\" alt=\"20210403111103\" />\n</blockquote>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>jsp 转换为的 java 文件核心部分:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//初始化</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">_jspInit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//销毁</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">_jspDestroy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//JSPService</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">_jspService</span><span class=\"params\">(HttpServletRequest request,HttpServletResponse response)</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>JSPService 内初始化的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.jsp.PageContext pageContext;  <span class=\"comment\">//页面上下文</span></span><br><span class=\"line\">javax.servlet.http.<span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;    <span class=\"comment\">//session</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.ServletContext application;   <span class=\"comment\">//Context-&gt;application</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.ServletConfig config;         <span class=\"comment\">//config</span></span><br><span class=\"line\">javax.servlet.jsp.<span class=\"type\">JspWriter</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;           <span class=\"comment\">//writer-&gt;out</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> java.lang.<span class=\"type\">Object</span> <span class=\"variable\">page</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>;               <span class=\"comment\">//当前页面-&gt;page</span></span><br><span class=\"line\">HttpServletRequest request                        <span class=\"comment\">//请求</span></span><br><span class=\"line\">HttpServletResponse response                      <span class=\"comment\">//响应</span></span><br><span class=\"line\"></span><br><span class=\"line\">response.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\">pageContext = _jspxFactory.getPageContext(<span class=\"built_in\">this</span>, request, response,<span class=\"literal\">null</span>, <span class=\"literal\">true</span>, <span class=\"number\">8192</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">_jspx_page_context = pageContext;</span><br><span class=\"line\">application = pageContext.getServletContext();</span><br><span class=\"line\">config = pageContext.getServletConfig();</span><br><span class=\"line\">session = pageContext.getSession();</span><br><span class=\"line\">out = pageContext.getOut();</span><br><span class=\"line\">_jspx_out = out;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>JSP 中可以写 Java 代码,Java 代码会原封不动的正常执行</p>\n<ul>\n<li>HTML 代码在 JSP-&gt;Java 时会被转换成 <code>out.write(&quot;&lt;html&gt;\\r\\n&quot;);</code> 这种形式.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"依赖导入\">依赖导入</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- servlet依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- JSP依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- JSTL表达式依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Standard标签库 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"基本语法\">基本语法</h3>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.Date&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;测试&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;!-- 这是HTML的注释,会在客户端显示 --&gt;</span><br><span class=\"line\">    &lt;%-- 这是JSP注释,不会在客户端显示 --%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">      JSP表达式: 用来将程序输出到客户端</span><br><span class=\"line\">      &lt;%= <span class=\"string\">&quot;变量或者表达式&quot;</span>%&gt;</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;%= <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">      JSP脚本片段</span><br><span class=\"line\">      &lt;% jsp脚本片段 %&gt;</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;=<span class=\"number\">100</span> ; i++) &#123; sum+=i; &#125;</span><br><span class=\"line\">      out.println(<span class=\"string\">&quot;&lt;h1&gt;Sum=&quot;</span>+sum+<span class=\"string\">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;!--</span><br><span class=\"line\">      JSP声明</span><br><span class=\"line\">      会被编译到JSP生成Java的类中！其他的，就会被生成到_jspService方法中！</span><br><span class=\"line\">    --&gt;</span><br><span class=\"line\">    &lt;%!</span><br><span class=\"line\">      <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Loading Servlet!&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">globalVar</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">kuang</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;进入了方法Kuang！&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JavaWeb",
                "Servlet",
                "Cookie",
                "Session",
                "JSP"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/2/",
            "url": "https://weidows.github.io/post/lang/Java/Web/2/",
            "title": "🥼JavaWeb~(贰)->Servlet",
            "date_published": "2021-03-29T09:45:58.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:17:20\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#servlet\">Servlet</a>\n<ul>\n<li><a href=\"#%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91\">请求转发</a></li>\n<li><a href=\"#%E8%AF%BB%E5%8F%96-properties\">读取 properties</a></li>\n<li><a href=\"#httpservletresponse\">HttpServletResponse</a>\n<ul>\n<li><a href=\"#%E5%93%8D%E5%BA%94\">响应</a></li>\n<li><a href=\"#%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6\">下载文件</a></li>\n<li><a href=\"#%E9%AA%8C%E8%AF%81%E7%A0%81\">验证码</a></li>\n<li><a href=\"#%E9%87%8D%E5%AE%9A%E5%90%91\">重定向</a></li>\n<li><a href=\"#%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4%E5%93%8D%E5%BA%94\">表单提交+响应</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Servlet\">Servlet</h2>\n<h3 id=\"请求转发\">请求转发</h3>\n<ul>\n<li>\n<p>把 <code>/helloParameter</code> 转发到 <code>/HelloDispatcher</code></p>\n<ul>\n<li>\n<p>转发后这两个地址都会显示<code>/helloParameter</code>的内容</p>\n</li>\n<li>\n<p>另外一个手段: <code>重定向</code> ,重定向之后原地址就不可访问了</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/com/weidows/HelloDispatcher.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloDispatcher</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">ServletContext</span> <span class=\"variable\">context</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getServletContext();</span><br><span class=\"line\">    context.getRequestDispatcher(<span class=\"string\">&quot;/helloParameter&quot;</span>).forward(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code> (在上面<code>初始化参数</code>基础上添加的)</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>HelloDispatcher<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloDispatcher<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>HelloDispatcher<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/HelloDispatcher<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"读取-properties\">读取 properties</h3>\n<blockquote>\n<p>我们开发的项目需要进行打包处理,所以不能直接引用 <code>src/</code> 里面的资源,需要引用对应 <code>target/</code> 内部的.</p>\n</blockquote>\n<ul>\n<li>\n<p>这种资源文件一般放在 <code>src/main/resources</code> 里面,如果放在 <code>src/main/java</code>里面默认情况下会出现无法被 maven 导出的情况 (通常我们称 resources 和 java 为 classpath)</p>\n<ul>\n<li>\n<p><code>src/main/java</code> 里面默认情况下只会编译并导出 <code>*.java</code>,不会管其他类型文件,可以修改 pom.xml 来使之生效:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.properties<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.xml<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>生成文件路径:</p>\n<ul>\n<li>\n<p>如果放在 resources 中,其生成路径为 <code>target/demo-2/WEB-INF/classes/db.properties</code></p>\n</li>\n<li>\n<p>如果放在 java 中,生成路径为 <code>target/demo-2/WEB-INF/classes/com/weidows/db.properties</code></p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>例子: 读取打包后的 properties 并显示.</p>\n<ul>\n<li>\n<p><code>src/main/java/com/weidows/HelloProperties.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloProperties</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> -<span class=\"number\">437042901757770674L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">prop</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 生成后的路径: target/demo-2/WEB-INF/classes/db.properties</span></span><br><span class=\"line\">    prop.load(<span class=\"built_in\">this</span>.getServletContext().getResourceAsStream(<span class=\"string\">&quot;/WEB-INF/classes/db.properties&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> prop.getProperty(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">pwd</span> <span class=\"operator\">=</span> prop.getProperty(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    resp.getWriter().print(<span class=\"string\">&quot;username: &quot;</span> + user + <span class=\"string\">&quot;\\npassword: &quot;</span> + pwd);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>src/main/resources/db.properties</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloProperties<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloProperties<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloProperties<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/helloProperties<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"HttpServletResponse\">HttpServletResponse</h3>\n<ul>\n<li>\n<p>Web 服务器接收到 http 请求信息,会创建 HttpServletRequest 和 HttpServletResponse 的两个对象</p>\n<ul>\n<li>\n<p>前者负责客户端传来的参数</p>\n</li>\n<li>\n<p>后者负责服务端响应的信息</p>\n</li>\n</ul>\n<hr>\n</li>\n</ul>\n<h4 id=\"响应\">响应</h4>\n<ul>\n<li>\n<p>向浏览器发送数据的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">ServletOutputstream <span class=\"title function_\">getOutputstream</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException</span><br><span class=\"line\">Printwriter <span class=\"title function_\">getwriter</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>负责向浏览器发送响应头的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setCharacterEncoding</span><span class=\"params\">(String var1)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setContentLength</span><span class=\"params\">(<span class=\"type\">int</span> var1)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setContentLengthLong</span><span class=\"params\">(<span class=\"type\">long</span> var1)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setContentType</span><span class=\"params\">(String var1)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setDateHeader</span><span class=\"params\">(String varl,<span class=\"type\">long</span> var2)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">addDateHeader</span><span class=\"params\">(String var1,<span class=\"type\">long</span> var2)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setHeader</span><span class=\"params\">(String var1,String var2)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">addHeader</span><span class=\"params\">(String var1,String var2)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">setIntHeader</span><span class=\"params\">(String var1,<span class=\"type\">int</span> var2)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">addIntHeader</span><span class=\"params\">(String varl,<span class=\"type\">int</span> var2)</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"下载文件\">下载文件</h4>\n<ul>\n<li>\n<p><code>src/main/java/servlet/FileServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URLEncoder;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> -<span class=\"number\">2643615496012694161L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 要获取下载文件的路径</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">realPath</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getServletContext().getRealPath(<span class=\"string\">&quot;/WEB-INF/classes/test.txt&quot;</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;下载文件的路径：&quot;</span> + realPath);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 下载的文件名</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> realPath.substring(realPath.lastIndexOf(<span class=\"string\">&quot;\\\\&quot;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;文件名: &quot;</span> + fileName);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 设置想办法让浏览器能够支持(Content-Disposition)下载我们需要的东西,中文文件名URLEncoder.encode编码，否则有可能乱码</span></span><br><span class=\"line\">    resp.setHeader(<span class=\"string\">&quot;Content-Disposition&quot;</span>, <span class=\"string\">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileName, <span class=\"string\">&quot;UTF-8&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4. 获取下载文件的输入流</span></span><br><span class=\"line\">    <span class=\"type\">FileInputStream</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(realPath);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 5. 创建缓冲区</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">len</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 6. 获取OutputStream对象</span></span><br><span class=\"line\">    <span class=\"type\">ServletOutputStream</span> <span class=\"variable\">out</span> <span class=\"operator\">=</span> resp.getOutputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端！</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((len = in.read(buffer)) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      out.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 8. 关闭连接</span></span><br><span class=\"line\">    in.close();</span><br><span class=\"line\">    out.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/resources/test.txt</code></p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">此处内容随意,比如写个 &quot;测试&quot;.</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>fileServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.FileServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>fileServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/fileServlet<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"验证码\">验证码</h4>\n<ul>\n<li>\n<p><code>src/main/java/servlet/ImageServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.imageio.ImageIO;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.image.BufferedImage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ImageServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">4590298452958016399L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//如何让浏览器3秒自动刷新一次;</span></span><br><span class=\"line\">    resp.setHeader(<span class=\"string\">&quot;refresh&quot;</span>, <span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//在内存中创建一个图片</span></span><br><span class=\"line\">    <span class=\"type\">BufferedImage</span> <span class=\"variable\">image</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedImage</span>(<span class=\"number\">80</span>, <span class=\"number\">20</span>, BufferedImage.TYPE_INT_RGB);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//得到图片</span></span><br><span class=\"line\">    <span class=\"type\">Graphics2D</span> <span class=\"variable\">graphics</span> <span class=\"operator\">=</span> (Graphics2D) image.getGraphics(); <span class=\"comment\">//笔</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置图片的背景颜色</span></span><br><span class=\"line\">    graphics.setColor(Color.white);</span><br><span class=\"line\">    graphics.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">80</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//给图片写数据</span></span><br><span class=\"line\">    graphics.setColor(Color.BLUE);</span><br><span class=\"line\">    graphics.setFont(<span class=\"keyword\">new</span> <span class=\"title class_\">Font</span>(<span class=\"literal\">null</span>, Font.BOLD, <span class=\"number\">20</span>));</span><br><span class=\"line\">    graphics.drawString(makeNum(), <span class=\"number\">0</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//告诉浏览器，这个请求用图片的方式打开</span></span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;image/jpeg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//网站存在缓存，不让浏览器缓存</span></span><br><span class=\"line\">    resp.setDateHeader(<span class=\"string\">&quot;expires&quot;</span>, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    resp.setHeader(<span class=\"string\">&quot;Cache-Control&quot;</span>, <span class=\"string\">&quot;no-cache&quot;</span>);</span><br><span class=\"line\">    resp.setHeader(<span class=\"string\">&quot;Pragma&quot;</span>, <span class=\"string\">&quot;no-cache&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//把图片写给浏览器</span></span><br><span class=\"line\">    ImageIO.write(image, <span class=\"string\">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//生成随机数</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> String <span class=\"title function_\">makeNum</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Random</span> <span class=\"variable\">random</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> random.nextInt(<span class=\"number\">9999999</span>) + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">StringBuffer</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuffer</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span> - num.length(); i++) &#123;</span><br><span class=\"line\">      sb.append(<span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    num = sb.toString() + num;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>imageServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.ImageServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>imageServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/imageServlet<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"重定向\">重定向</h4>\n<ul>\n<li>\n<p>访问一个页面时跳转到另一个页面</p>\n</li>\n<li>\n<p><code>src/main/java/servlet/RedirectServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RedirectServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    resp.sendRedirect(<span class=\"string\">&quot;/&quot;</span>);<span class=\"comment\">//重定向</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>redirect<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.RedirectServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>redirect<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/redirect<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>转发&amp;重定向 の 区别</p>\n<ul>\n<li>转发 URL 不会变化,重定向会变化</li>\n<li>访问转发的页面有一个请求,重定向会产生前后两个请求,第一个请求状态码是 302</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"表单提交-响应\">表单提交+响应</h4>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/zhangliangzi/article/details/50131835\">Form 表单数据传输方式之 Get 与 Post 区别</a></p>\n</blockquote>\n<ul>\n<li>\n<p>get 与 post 区别体现在客户端&lt;–&gt;服务端之间的信息传递</p>\n</li>\n<li>\n<p>我们在 overwrite HttpServlet 类的 doGet &amp; doPost 方法时,是在处理通过 get/post 接收到请求或信息后的业务</p>\n</li>\n<li>\n<p>get/post 就像一个屋子的两个门,进门的方式不一样,但是所进入的屋子是一样的 (让他俩互相调用,处理相同的业务)</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>例子: 开启 Tomcat 后进入 index.jsp 页面,输入表单后提交,信息以 post 形式传递给 <code>/request</code> 后端,这个动态页面收到数据并在页面输出.</p>\n<ul>\n<li>\n<p><code>index.jsp</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;/request&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">  &lt;label&gt;</span><br><span class=\"line\">    用户名:</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;text&quot;</span> name=<span class=\"string\">&quot;username&quot;</span>/&gt;</span><br><span class=\"line\">  &lt;/label&gt; &lt;br/&gt;</span><br><span class=\"line\">  &lt;label&gt;</span><br><span class=\"line\">    密码:</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;password&quot;</span> name=<span class=\"string\">&quot;password&quot;</span>/&gt;</span><br><span class=\"line\">  &lt;/label&gt; &lt;br/&gt;</span><br><span class=\"line\">  &lt;input type=<span class=\"string\">&quot;submit&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/servlet/RequestServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RequestServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> req.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter();</span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;Success get username &amp; password.&quot;</span>);</span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;username: &quot;</span> + username);</span><br><span class=\"line\">    writer.println(<span class=\"string\">&quot;password: &quot;</span> + password);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>request<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.RequestServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>request<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/request<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JavaWeb",
                "Servlet"
            ]
        },
        {
            "id": "https://weidows.github.io/post/tools/Tomcat/",
            "url": "https://weidows.github.io/post/tools/Tomcat/",
            "title": "🐱‍🏍Maven+Tomcat开发webapp.",
            "date_published": "2021-03-25T02:39:26.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:28:22\n * @FilePath: \\Blog-private\\source\\_posts\\tools\\Tomcat.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E9%85%8D%E7%BD%AE\">配置</a></li>\n<li><a href=\"#vscode\">VScode</a></li>\n<li><a href=\"#%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE\">创建项目</a></li>\n<li><a href=\"#idea\">IDEA</a></li>\n<li><a href=\"#%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E4%BB%A3%E7%90%86\">虚拟主机/代理</a></li>\n<li><a href=\"#%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98\">乱码问题</a>\n<ul>\n<li><a href=\"#%E7%BB%88%E7%AB%AF%E4%B9%B1%E7%A0%81\">终端乱码</a></li>\n<li><a href=\"#%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81\">网页中文乱码</a></li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"配置\">配置</h2>\n<blockquote>\n<p><a href=\"../../system/system_variable#maven\">💥 系统开发环境配置</a></p>\n</blockquote>\n<blockquote>\n<p>Maven 的核心思想：约定大于配置</p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"VScode\">VScode</h2>\n<ul>\n<li>\n<p>安装 <code>Tomcat for Java</code> 插件,配置好 Tomcat 本体路径和 <code>data</code> 路径</p>\n</li>\n<li>\n<p>在侧边栏右键,常用命令都有</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsEkC.png\" alt=\"20210309155951\" />\n</li>\n<li>\n<p>测试</p>\n<ul>\n<li>新建 <code>index.html</code> 文件,放到 <code>tomcat/webapps/ROOT/</code>目录下</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    测试</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>打开对应页面会有如下显示</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVssbt.png\" alt=\"20210309160418\" />\n</li>\n<li>\n<p><code>ROOT/</code>里面放的文件与浏览器 URL 相对应</p>\n<ul>\n<li>\n<p>比如 <code>ROOT/000/2333.html</code> 浏览器就需要访问 <code>localhost:8080/000/2333.html</code></p>\n</li>\n<li>\n<p>后缀名是<code>.html</code>的话 URL 后缀可以不写,比如上面写成 <code>localhost:8080/000/2333</code> 也可以.</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"创建项目\">创建项目</h2>\n<blockquote>\n<p>解释一下为什么要用 Maven,还需要创建项目: <code>Tomcat 只能运行 Maven 创建的类型为 webapp 的这种项目</code>,</p>\n</blockquote>\n<ul>\n<li>\n<p>推荐直接用 IDEA 创建 web 项目 (不用再导入 Servlet 包)</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVskJo.png\" alt=\"20210323233425\" />\n</li>\n<li>\n<p>然后创建 <code>webapp</code> 子模块,在<code>source/main/</code>下再新建两个目录(java 和 resources),结构如下</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsf3C.png\" alt=\"20210323112637\" />\n</li>\n<li>\n<p><code>JavaWeb\\src\\main\\webapp\\WEB-INF\\web.xml</code> 是 web 项目核心应用</p>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb/demo-0\">点这里参考项目结构</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"IDEA\">IDEA</h2>\n<ul>\n<li>\n<p>IDEA 配置连接 Tomcat 需要在创建完 webapp 项目之后,否则连不上</p>\n<ul>\n<li>点’+'找到 Tomcat Server 并配置,如图</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVt5Lv.png\" alt=\"20210325110519\" />\n</li>\n<li>\n<p>现在 IDEA 已经认识 Tomcat 了,但还需要配置部署,否则 Tomcat 不知道运行哪里</p>\n<ul>\n<li>这些工件就是这个项目用 Maven 构建之后产生的</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsyRu.png\" alt=\"20210325110722\" />\n</li>\n<li>\n<p>现在配置好了之后,IDEA 会自动完成项目<code>构建-&gt;部署-&gt;打开网页</code> (VScode 的话也可以手动做到)</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"虚拟主机-代理\">虚拟主机/代理</h2>\n<ul>\n<li>\n<p>通过修改 <code>Tomcat/conf/server.xml</code>和 hosts 文件实现虚拟主机.</p>\n</li>\n<li>\n<p>修改 <code>name=&quot;localhost&quot;</code> 为目标主机名,比如改为<code>name=&quot;weidows.com&quot;</code>,下面注释处给标出了修改位置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> standalone=<span class=\"string\">&quot;yes&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Server</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8005&quot;</span> <span class=\"attr\">shutdown</span>=<span class=\"string\">&quot;SHUTDOWN&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.startup.VersionLoggerListener&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.core.AprLifecycleListener&quot;</span> <span class=\"attr\">SSLEngine</span>=<span class=\"string\">&quot;on&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">GlobalNamingResources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Resource</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;UserDatabase&quot;</span> <span class=\"attr\">auth</span>=<span class=\"string\">&quot;Container&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;org.apache.catalina.UserDatabase&quot;</span> <span class=\"attr\">description</span>=<span class=\"string\">&quot;User database that can be updated and saved&quot;</span> <span class=\"attr\">factory</span>=<span class=\"string\">&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;</span> <span class=\"attr\">pathname</span>=<span class=\"string\">&quot;conf/tomcat-users.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">GlobalNamingResources</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Service</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Catalina&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">&quot;8080&quot;</span> <span class=\"attr\">protocol</span>=<span class=\"string\">&quot;HTTP/1.1&quot;</span> <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">&quot;20000&quot;</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">&quot;8443&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;Catalina&quot;</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">&quot;localhost&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.realm.LockOutRealm&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;</span> <span class=\"attr\">resourceName</span>=<span class=\"string\">&quot;UserDatabase&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">Realm</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- 修改这下面一行 --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;localhost&quot;</span> <span class=\"attr\">appBase</span>=<span class=\"string\">&quot;webapps&quot;</span> <span class=\"attr\">unpackWARs</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class=\"attr\">directory</span>=<span class=\"string\">&quot;logs&quot;</span> <span class=\"attr\">prefix</span>=<span class=\"string\">&quot;localhost_access_log&quot;</span> <span class=\"attr\">suffix</span>=<span class=\"string\">&quot;.txt&quot;</span> <span class=\"attr\">pattern</span>=<span class=\"string\">&quot;%h %l %u %t <span class=\"symbol\">&amp;quot;</span>%r<span class=\"symbol\">&amp;quot;</span> %s %b&quot;</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>然后修改 host,实现代理,如下图第二行即为需要添加的</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsLAE.png\" alt=\"20210309161039\" />\n<ul>\n<li>\n<p>含义就是: <code>在访问右边的主机时,将它指向左边的地址</code></p>\n</li>\n<li>\n<p>比如浏览器访问 <code>localhost:8080</code> 时,实际上是访问的 <code>127.0.0.1:8080</code>,也就是本机地址</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>现在,打开 Tomcat 服务,他就会在本机 8080 端口监听,当在浏览器输入<code>weidows.com:8080</code>时,会被 host 指向到<code>127.0.0.1:8080</code>,Tomcat 服务器收到请求并回应</p>\n<ul>\n<li>结构如下图</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsAGv.png\" alt=\"20210309163300\" />\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>可能会存在的疑问: 同样是指向到 <code>127.0.0.1</code>,为什么 localhost:8080 或者直接 127.0.0.1:8080 无法访问到 <a href=\"http://weidows.com:8080\">weidows.com:8080</a> 页面?</p>\n<ul>\n<li>这就像递归式问路,首先问 host 知不知道 <a href=\"http://weidows.com\">weidows.com</a>,host 不直接知道,它让我们问 Tomcat,于是我们去 127.0.0.1:8080 问 Tomcat 知不知道 <a href=\"http://weidows.com\">weidows.com</a>;</li>\n<li>诶,Tomcat 它可以直接知道 <a href=\"http://weidows.com\">weidows.com</a> 在哪里,于是浏览器就这么找到 <a href=\"http://weidows.com\">weidows.com</a> 页面了!</li>\n<li>页面在 <a href=\"http://weidows.com\">weidows.com</a> 手里,你要是去找 localhost:8080 或者 127.0.0.1 的话,就是问错人了,肯定是 404</li>\n</ul>\n</li>\n<li>\n<p>最后附一张图,根据序号来看,条理比较清晰.</p>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVs8L1.png\" alt=\"20210322100531\" />\n</blockquote>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"乱码问题\">乱码问题</h2>\n<h3 id=\"终端乱码\">终端乱码</h3>\n<ul>\n<li>\n<p>在启动 Tomcat 时,终端内中文乱码:</p>\n<ul>\n<li>\n<p>虽然这个对程序运行没有影响,但是有些影响观瞻,一般只会在 Window 遇到,修改如下:</p>\n</li>\n<li>\n<p>找到 <code>Tomcat/conf/logging.properties</code> 里面的-&gt; <code>java.util.logging.ConsoleHandler.encoding</code>这一行 ,把 <code>UTF-8</code>换为<code>GBK</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>另一种方法: 把终端显示设置为 UTF-8</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVteSR.png\" alt=\"20210330125008\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"网页中文乱码\">网页中文乱码</h3>\n<ul>\n<li>\n<p>我们开发的页面,无论是动/静态,只要不指定编码格式,中文肯定乱码</p>\n</li>\n<li>\n<p>需要做的就是在开发网页时,指定 <code>CharacterEncoding = UTF-8</code></p>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "VScode",
                "IDEA",
                "Java",
                "服务器",
                "Maven",
                "Tomcat",
                "Website"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/Web/1/",
            "url": "https://weidows.github.io/post/lang/Java/Web/1/",
            "title": "🥼JavaWeb~(壹)探索传输协议",
            "date_published": "2021-03-22T01:15:14.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 12:51:15\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\Web\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AC%94%E8%AE%B0%E4%BB%A3%E7%A0%81\">笔记代码</a></li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">基本概念</a>\n<ul>\n<li><a href=\"#%E5%8A%A8%E9%9D%99%E6%80%81-web\">动/静态 Web</a></li>\n<li><a href=\"#%E5%90%8E%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%AF%94\">后端技术对比</a></li>\n<li><a href=\"#web-%E6%9C%8D%E5%8A%A1%E5%99%A8\">Web 服务器</a></li>\n</ul>\n</li>\n<li><a href=\"#http\">HTTP</a>\n<ul>\n<li><a href=\"#%E8%AF%B7%E6%B1%82%E8%A1%8C\">请求行</a></li>\n<li><a href=\"#%E6%B6%88%E6%81%AF%E5%A4%B4\">消息头</a></li>\n<li><a href=\"#%E5%93%8D%E5%BA%94%E4%BD%93\">响应体</a></li>\n<li><a href=\"#%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81\">响应状态码</a></li>\n</ul>\n</li>\n<li><a href=\"#maventomcat\">Maven+Tomcat</a></li>\n<li><a href=\"#servlet\">Servlet</a>\n<ul>\n<li><a href=\"#helloservlet\">HelloServlet</a></li>\n<li><a href=\"#%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86\">架构原理</a></li>\n<li><a href=\"#mapping\">Mapping</a></li>\n<li><a href=\"#servletcontext\">ServletContext</a></li>\n<li><a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%82%E6%95%B0%E4%BA%86%E8%A7%A3\">初始化参数(了解)</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"笔记代码\"><a href=\"https://github.com/Weidows/Java/tree/master/JavaWeb\">笔记代码</a></h2>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"基本概念\">基本概念</h2>\n<h3 id=\"动-静态-Web\">动/静态 Web</h3>\n<ul>\n<li>\n<p>静态 web</p>\n<ul>\n<li>\n<p>比如 hexo 就是静态博客生成器,其生成的 HTML 页面文档树不会发生改变</p>\n</li>\n<li>\n<p>会因为 js 发生内容性的变化,但也是预设性的,并非动态变化.</p>\n</li>\n<li>\n<p>只能实现动画,不能实现动态;无后端,也就是无法与数据库交互,数据不能持久化,无法与用户进行信息交互</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>动态 web</p>\n<ul>\n<li>\n<p>比如 WordPress,客户端加载的内容会随着客户端交互而产生变化</p>\n</li>\n<li>\n<p>技术栈: Java Servlet/JSP,<a href=\"http://ASP.NET\">ASP.NET</a>,PHP,Python,etc.</p>\n</li>\n<li>\n<p>资源出现问题时可以停机维护,可以与用户交互,操作数据库持久化信息.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>JavaWeb 应用包含多个部分</p>\n<ul>\n<li>\n<p>html,sss,is</p>\n</li>\n<li>\n<p>jsp,servlet</p>\n</li>\n<li>\n<p>Java 程序</p>\n</li>\n<li>\n<p>jar 包</p>\n</li>\n<li>\n<p>配置文件（Properties)</p>\n</li>\n</ul>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVs8L1.png\" alt=\"20210322100531\" />\n</blockquote>\n</li>\n</ul>\n<hr>\n<h3 id=\"后端技术对比\">后端技术对比</h3>\n<ul>\n<li>\n<p>ASP</p>\n<p>国内最早流行,业务代码错乱,维护成本高</p>\n</li>\n<li>\n<p>php</p>\n<p>开发速度很快，功能强大，跨平台，代码简单;但是无法承载大访问量的情况</p>\n</li>\n<li>\n<p>JSP/Servlet</p>\n<p>B/S 架构</p>\n<p>语法像 ASP，ASP+Java-&gt;JSP</p>\n<p>可以承载三高问题带来的影响</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"Web-服务器\">Web 服务器</h3>\n<ul>\n<li>\n<p><a href=\"http://ASP.NET\">ASP.NET</a></p>\n<p>Windows 系统自带</p>\n</li>\n<li>\n<p>Tomcat</p>\n<p>Apache 基金会的项目,在中小型并发量场景下普遍使用</p>\n<blockquote>\n<p>之前有个文章介绍了 <a href=\"https://weidows.gitee.io/post/others/IDEs/#Tomcat\">😁IDE 选用指北.#Tomcat</a></p>\n</blockquote>\n<blockquote>\n<p>另外,推荐一篇文章: <a href=\"https://zhuanlan.zhihu.com/p/54121733\">Tomcat 外传</a></p>\n</blockquote>\n<ul>\n<li>\n<p>Tomcat 项目层级结构</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> webapps ：Tomcat服务器的web目录</span><br><span class=\"line\"><span class=\"bullet\">  -</span> ROOT 网站的根目录</span><br><span class=\"line\"><span class=\"bullet\">  -</span> kuangstudy ：网站的目录名</span><br><span class=\"line\"><span class=\"bullet\">    -</span> WEB-INF</span><br><span class=\"line\"><span class=\"bullet\">      -</span> classes : java程序</span><br><span class=\"line\"><span class=\"bullet\">      -</span> lib : web应用所依赖的jar包</span><br><span class=\"line\"><span class=\"bullet\">      -</span> web.xml : 网站配置文件</span><br><span class=\"line\"><span class=\"bullet\">    -</span> index.html : 默认的首页</span><br><span class=\"line\"><span class=\"bullet\">    -</span> static</span><br><span class=\"line\"><span class=\"bullet\">      -</span> css</span><br><span class=\"line\"><span class=\"bullet\">        -</span> style.css</span><br><span class=\"line\"><span class=\"bullet\">      -</span> js</span><br><span class=\"line\"><span class=\"bullet\">      -</span> img</span><br><span class=\"line\"><span class=\"bullet\">    -</span> .....</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>Tomcat 可以 run 的项目只能是<code>webapp</code>,可以通过 Maven 创建这种项目</p>\n<ul>\n<li>\n<p>tomcat 可以直接跑起来 <code>root/src/main/webapp</code>这个目录, 或者用 maven package 打包后产生的.war 包</p>\n</li>\n<li>\n<p>其他形式的都无法用 tomcat 运行.</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"HTTP\">HTTP</h2>\n<p>(超文本传输协议）是一个简单的请求-响应协议，通常运行在 TCP 之上.</p>\n<h3 id=\"请求行\">请求行</h3>\n<figure class=\"highlight oxygene\"><table><tr><td class=\"code\"><pre><span class=\"line\">Request URL:https:<span class=\"comment\">//www.baidu.com/   请求地址</span></span><br><span class=\"line\">Request <span class=\"keyword\">Method</span>:GET    get方法/post方法</span><br><span class=\"line\">Status Code:<span class=\"number\">200</span> OK    状态码：<span class=\"number\">200</span></span><br><span class=\"line\">Remote Address:<span class=\"number\">14.215</span>.<span class=\"number\">177.39</span>:<span class=\"number\">443</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>请求方式：Get,Post,HEAD,DELETE,PUT,TRACT.…</p>\n<ul>\n<li>\n<p>get：请求能够携带的参数比较少，大小有限制，会在浏览器的 URL 地址栏显示数据内容，不安全，但高效</p>\n</li>\n<li>\n<p>post: 请求能够携带的参数没有限制，大小没有限制，不会在浏览器的 URL 地址栏显示数据内容，安全，但不高效;只有表单才能使用.</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"消息头\">消息头</h3>\n<figure class=\"highlight sqf\"><table><tr><td class=\"code\"><pre><span class=\"line\">Accept:<span class=\"built_in\">text</span>/html  <span class=\"comment\">// 告诉浏览器，它所支持的数据类型</span></span><br><span class=\"line\">Accept-Encoding:gzip, deflate, br  <span class=\"comment\">// 支持哪种编码格式  GBK   UTF-8   GB2312  ISO8859-1</span></span><br><span class=\"line\">Accept-<span class=\"built_in\">Language</span>:zh-CN,zh;q=<span class=\"number\">0.9</span>    <span class=\"comment\">// 告诉浏览器，它的语言环境</span></span><br><span class=\"line\">Cache-Control:<span class=\"built_in\">max</span>-age=<span class=\"number\">0</span> <span class=\"comment\">// 缓存控制</span></span><br><span class=\"line\">Connection:keep-<span class=\"built_in\">alive</span> <span class=\"comment\">// 请求完成是断开还是保持连接</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"响应体\">响应体</h3>\n<figure class=\"highlight node-repl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br><span class=\"line\">跟请求相同</span><br><span class=\"line\"><span class=\"meta prompt_\">...</span></span><br><span class=\"line\">Refresh：告诉客户端，多久刷新一次</span><br><span class=\"line\">Location：让网页重新定位</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"响应状态码\">响应状态码</h3>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVs6RT.png\" alt=\"20210323084728\" />\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Maven-Tomcat\">Maven+Tomcat</h2>\n<blockquote>\n<p><a href=\"../../../../tools/Tomcat\">🐱‍🏍Maven+Tomcat 开发 webapp.</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Servlet\">Servlet</h2>\n<ul>\n<li>\n<p>Servlet 是 sun 公司开发动态 web 的一门技术,开发 Servlet 程序有两个步骤:</p>\n<ol>\n<li>\n<p>编写一个类，实现 Serlet 接口</p>\n</li>\n<li>\n<p>把开发好 java 类部署到 web 服务器中。</p>\n</li>\n</ol>\n</li>\n<li>\n<p>利用 maven 创建一个工程项目(project),在内部创建多个子模块(module)进行学习测试.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"HelloServlet\">HelloServlet</h3>\n<ul>\n<li>\n<p>现在,在 JavaWeb 项目中已经创建好子模块<code>demo-1</code>,我们在这个 demo-1 内练习 HelloServlet,项目结构如下:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsVrS.png\" alt=\"20210324163957\" />\n</li>\n<li>\n<p>新建 <code>JavaWeb/demo-1/src/main/java/com/weidows/HelloServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weidows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> -<span class=\"number\">6617893791621340358L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//get或者post只是请求实现的不同的方式，可以相互调用，业务逻辑都一样</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//ServletOutputStream outputStream = resp.getOutputStream();</span></span><br><span class=\"line\">    <span class=\"type\">PrintWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> resp.getWriter(); <span class=\"comment\">//响应流</span></span><br><span class=\"line\">    writer.print(<span class=\"string\">&quot;Hello,Servlet&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改 <code>JavaWeb/demo-1/src/main/webapp/WEB-INF/web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--注册Servlet,使这个类可以产生动态页面--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--Servlet的请求路径映射,使路径映射对应类--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/weidows<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>连接 Tomcat</p>\n<ul>\n<li>我们用 tomcat 跑起来这个子模块 (注意跑的是子模块不是整个项目)</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsrOD.png\" alt=\"20210324164515\" />\n</li>\n<li>\n<p>跑起来后</p>\n<ul>\n<li>\n<p>我们可以通过<code>http://localhost:8080/demo_1_war/</code> 访问到 <code>index.jsp</code> 这个静态页面</p>\n</li>\n<li>\n<p>也可以通过<code>http://localhost:8080/demo_1_war/weidows</code> 访问到我们用 Servlet 映射的动态页面</p>\n<ul>\n<li>注意末尾不能带’/', <code>http://localhost:8080/demo_1_war/weidows/</code> == <code>http://localhost:8080/demo_1_war/weidows/index.html</code> 因为并没有这个静态页面,会报 404</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>注意,无论是动态页面还是静态页面,都必须<code>指定编码</code>,否则中文会乱码.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"架构原理\">架构原理</h3>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsj6t.png\" alt=\"20210325090037\" />\n<ul>\n<li>\n<p>Tomcat 做的就是接收请求并处理,然后返回响应</p>\n</li>\n<li>\n<p>我们需要做的是实现 Servlet 接口,处理请求和响应信息</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"Mapping\">Mapping</h3>\n<ul>\n<li>\n<p>一个 Servlet 可以映射一个或多个或正则匹配 url 路径</p>\n<ul>\n<li><code>映射固定地址的优先级最高</code></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello2<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>hello<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello3<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<servlet-mapping>\n    <servlet-name>hello</servlet-name>\n    <url-pattern>/hello/*</url-pattern>\n</servlet-mapping>\n<!--可以自定义后缀实现请求映射\n    注意,*前面不能加项目映射的路径\n    hello/xxx.weidows\n    -->\n<servlet-mapping>\n    <servlet-name>hello</servlet-name>\n    <url-pattern>*.weidows</url-pattern>\n</servlet-mapping>\n<figure class=\"highlight scala\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">- 例子: 把 <span class=\"number\">404</span> 页面换为我们自定义的</span><br><span class=\"line\"></span><br><span class=\"line\">  - src/main/java/com/weidows/<span class=\"type\">ErrorServlet</span>.java</span><br><span class=\"line\"></span><br><span class=\"line\">    ```<span class=\"type\">Java</span></span><br><span class=\"line\">    <span class=\"keyword\">import</span> javax.servlet.<span class=\"type\">ServletException</span>;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> javax.servlet.http.<span class=\"type\">HttpServlet</span>;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> javax.servlet.http.<span class=\"type\">HttpServletRequest</span>;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> javax.servlet.http.<span class=\"type\">HttpServletResponse</span>;</span><br><span class=\"line\">    <span class=\"keyword\">import</span> java.io.<span class=\"type\">IOException</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ErrorServlet</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"keyword\">protected</span> void doGet(<span class=\"type\">HttpServletRequest</span> req, <span class=\"type\">HttpServletResponse</span> resp) <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span> &#123;</span><br><span class=\"line\">        resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\">        resp.setCharacterEncoding(<span class=\"string\">&quot;utf8&quot;</span>);</span><br><span class=\"line\">        resp.getWriter().print(<span class=\"string\">&quot;&lt;h1&gt;404&lt;/h1&gt;&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"keyword\">protected</span> void doPost(<span class=\"type\">HttpServletRequest</span> req, <span class=\"type\">HttpServletResponse</span> resp) <span class=\"keyword\">throws</span> <span class=\"type\">ServletException</span>, <span class=\"type\">IOException</span> &#123;</span><br><span class=\"line\">        doGet(req, resp);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 注册并映射 404 页面</span><br><span class=\"line\"></span><br><span class=\"line\">  - (注意上下顺序: ServletA MappingA ServletB MappingB 这样写会报错)</span><br><span class=\"line\"></span><br><span class=\"line\">  ```xml</span><br><span class=\"line\">  <span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">      <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">      <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--注册Servlet--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>ErrorServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.ErrorServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<pre><code>&lt;!--Servlet的请求路径--&gt;\n&lt;servlet-mapping&gt;\n  &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;\n  &lt;url-pattern&gt;/weidows&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n&lt;servlet-mapping&gt;\n  &lt;servlet-name&gt;ErrorServlet&lt;/servlet-name&gt;\n  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n&lt;/servlet-mapping&gt;\n</code></pre>\n  </web-app>\n  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"comment\">### ServletContext</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">HttpServlet</span> <span class=\"string\">对象中常用方法:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">this.getInitParameter()</span> <span class=\"string\">//</span> <span class=\"string\">初始化参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">this.getServletConfig()</span> <span class=\"string\">//</span> <span class=\"string\">Servlet</span> <span class=\"string\">配置</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">this.getServletContext()</span> <span class=\"string\">//</span> <span class=\"string\">Servlet</span> <span class=\"string\">上下文,最常用,这里只介绍这个</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">Web</span> <span class=\"string\">容器启动时,会创建对应的</span> <span class=\"string\">ServletContext</span> <span class=\"string\">对象,代表当前</span> <span class=\"string\">web</span> <span class=\"string\">应用,</span> <span class=\"string\">`不同</span> <span class=\"string\">Servlet</span> <span class=\"string\">之间共享这个</span> <span class=\"string\">ServletContext</span> <span class=\"string\">对象`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">例子:</span> <span class=\"string\">当访问</span> <span class=\"string\">`/helloServlet`</span> <span class=\"string\">时在</span> <span class=\"string\">servletContext</span> <span class=\"string\">对象中设置</span> <span class=\"string\">username</span> <span class=\"string\">属性,然后访问</span> <span class=\"string\">`/getServlet`</span> <span class=\"string\">可以查看设置的</span> <span class=\"string\">username</span> <span class=\"string\">属性值.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">`src/main/java/com/weidows/HelloServlet.java`</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">```Java</span></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">java.io.IOException;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">javax.servlet.ServletContext;</span></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">javax.servlet.ServletException;</span></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">javax.servlet.http.HttpServlet;</span></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">javax.servlet.http.HttpServletRequest;</span></span><br><span class=\"line\">    <span class=\"string\">import</span> <span class=\"string\">javax.servlet.http.HttpServletResponse;</span></span><br></pre></td></tr></table></figure>\n<p>public class HelloServlet extends HttpServlet {<br>\n@Override<br>\nprotected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>\nServletContext context = this.getServletContext();<br>\nString username = “齐下无贰”; //数据<br>\ncontext.setAttribute(“username”, username); //将一个数据保存在了 ServletContext 中，名字为：username 。值 username<br>\nSystem.out.println(“username 属性已设置.”);<br>\n}<br>\n}</p>\n  <figure class=\"highlight asciidoc\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">***</span></span><br><span class=\"line\"><span class=\"bullet\"></span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p><code>src/main/java/com/weidows/GetServlet.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    doGet(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> (String) <span class=\"built_in\">this</span>.getServletContext().getAttribute(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">&quot;text/html&quot;</span>);</span><br><span class=\"line\">    resp.setCharacterEncoding(<span class=\"string\">&quot;utf8&quot;</span>);</span><br><span class=\"line\">    resp.getWriter().print(<span class=\"string\">&quot;名字: &quot;</span> + username);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>getServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.GetServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/helloServlet<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>getServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/getServlet<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"初始化参数-了解\">初始化参数(了解)</h3>\n<ul>\n<li>\n<p>初始化参数在 web.xml 中设置,用 getInitParameter()获取</p>\n</li>\n<li>\n<p><code>web.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">web-app</span> <span class=\"keyword\">PUBLIC</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">    <span class=\"string\">&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Archetype Created Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--配置一些web应用初始化参数--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>url<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/mybatis<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloParameter<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>com.weidows.HelloParameter<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>helloParameter<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/helloParameter<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>src/main/java/com/weidows/HelloParameter.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloParameter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"type\">ServletContext</span> <span class=\"variable\">context</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.getServletContext();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> context.getInitParameter(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">    resp.getWriter().print(url);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "服务器",
                "JavaWeb"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/SQL/5/",
            "url": "https://weidows.github.io/post/lang/Java/SQL/5/",
            "title": "🚀进修MySQL~(伍)",
            "date_published": "2021-03-20T09:31:28.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:22:36\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\SQL\\5.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#preparedstatement\">PreparedStatement</a>\n<ul>\n<li><a href=\"#sql-%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98\">SQL 注入问题</a></li>\n<li><a href=\"#%E5%8C%BA%E5%88%AB%E7%94%A8%E6%B3%95\">区别用法</a></li>\n</ul>\n</li>\n<li><a href=\"#ideasql\">IDEA+SQL</a></li>\n<li><a href=\"#jdbc%E4%BA%8B%E5%8A%A1\">JDBC+事务</a></li>\n<li><a href=\"#%E8%BF%9E%E6%8E%A5%E6%B1%A0\">连接池</a></li>\n<li><a href=\"#%E5%90%84%E5%90%8D%E8%AF%8D%E5%8C%BA%E5%88%AB\">各名词区别</a></li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"PreparedStatement\">PreparedStatement</h2>\n<h3 id=\"SQL-注入问题\">SQL 注入问题</h3>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/rongxiang111/article/details/78228681\">SQL 注入问题及解决</a></p>\n</blockquote>\n<ul>\n<li>\n<p>通过修改 SQL 指令字符串,使 SQL 服务器执行不正规或者恶意的 SQL 命令</p>\n</li>\n<li>\n<p>比如客户端可以通过修改 SQL 字符串,可以使服务器传回原本不能显示的数据,或者修改非指定的数据.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"区别用法\">区别用法</h3>\n<blockquote>\n<p>PreparedStatement 可以防止 SQL 注入,而且效率更高.</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestPreparedStatement</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">PreparedStatement</span> <span class=\"variable\">preparedStatement</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 连接</span></span><br><span class=\"line\">    connection = JDBCUtils.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ! 插入</span></span><br><span class=\"line\">    <span class=\"comment\">// 问号&#x27;?&#x27;为占位符</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">insert</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (?,?,?,?);&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//预编译sql</span></span><br><span class=\"line\">    preparedStatement = connection.prepareStatement(insert);</span><br><span class=\"line\">    <span class=\"comment\">//手动赋值</span></span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;weidows&quot;</span>);</span><br><span class=\"line\">    preparedStatement.setInt(<span class=\"number\">2</span>, <span class=\"number\">123456</span>);</span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">3</span>, <span class=\"string\">&quot;utsuko27@qq.com&quot;</span>);</span><br><span class=\"line\">    preparedStatement.setDate(<span class=\"number\">4</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.Date().getTime()));</span><br><span class=\"line\">    <span class=\"comment\">// 执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preparedStatement.executeUpdate() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;成功.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ! 查询</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">query</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * From jdbcstudy.users where name = ?;&quot;</span>;</span><br><span class=\"line\">    preparedStatement = connection.prepareStatement(query);</span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;weidows&quot;</span>);</span><br><span class=\"line\">    resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (resultSet.next()) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;id = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;id&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;name = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;NAME&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;password = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;PASSWORD&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;email = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;email&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;birthday = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;birthday&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;===============================================================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 断连</span></span><br><span class=\"line\">    JDBCUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"IDEA-SQL\">IDEA+SQL</h2>\n<ul>\n<li>\n<p>图形化的,摸索摸索就差不多会了.</p>\n</li>\n<li>\n<p>在学这个 SQL 课程时,个人开始用的是 sqlyog,后来卸载了,直接用的 idea 内嵌的.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JDBC-事务\">JDBC+事务</h2>\n<ul>\n<li>\n<p>创建表+插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">TABLE</span> jdbcstudy.account</span><br><span class=\"line\">(</span><br><span class=\"line\">  id    <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">  name  <span class=\"type\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  money <span class=\"type\">DECIMAL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> jdbcstudy.account(name, money)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">1000</span>),</span><br><span class=\"line\">      (<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">1000</span>),</span><br><span class=\"line\">      (<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>事务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestTransaction</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">PreparedStatement</span> <span class=\"variable\">preparedStatement</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      connection = JDBCUtils.getConnection();</span><br><span class=\"line\">      <span class=\"comment\">//关闭数据库的自动提交功能,同时开启事务</span></span><br><span class=\"line\">      connection.setAutoCommit(<span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set money = money-500 where id = 1&quot;</span>;</span><br><span class=\"line\">      preparedStatement = connection.prepareStatement(sql);</span><br><span class=\"line\">      preparedStatement.executeUpdate();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">sql2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update account set money = money-500 where id = 2&quot;</span>;</span><br><span class=\"line\">      preparedStatement = connection.prepareStatement(sql2);</span><br><span class=\"line\">      preparedStatement.executeUpdate();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//业务完毕，提交事务</span></span><br><span class=\"line\">      connection.commit();</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;事务操作成功&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//如果失败，默认会回滚,也可以在这里自定义</span></span><br><span class=\"line\">      connection.rollback();</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      JDBCUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"连接池\">连接池</h2>\n<ul>\n<li>\n<p>概念上与线程池相同,因为频繁创建和断开连接耗费大量资源,利用池化技术来<code>减轻资源损耗.</code></p>\n</li>\n<li>\n<p>数据库连接池接口 <code>DataSource</code> ,开源数据源实现类:</p>\n<ul>\n<li>\n<p>DBCP</p>\n</li>\n<li>\n<p>C3P0</p>\n</li>\n<li>\n<p>Druid: 阿里巴巴</p>\n</li>\n</ul>\n<blockquote>\n<p>无论使用什么数据源，本质是不变的，DateSource 接口不会变，方法就不会变</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>用法区别就是 utils 类中,加载驱动,连接 connection 和读取 properties 配置文件不需要我们自己写了</p>\n</li>\n<li>\n<p>db.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DBCP的设置文件,属性名不能错</span></span><br><span class=\"line\"><span class=\"attr\">driverClassName</span>=<span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true</span></span><br><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>utils.DbcpUtils</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.sql.DataSource;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DbcpUtils</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">DataSource</span> <span class=\"variable\">dataSource</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 加载连接信息</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      properties.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;Java/src/main/java/twenty_one/jdbc/demo3/db.properties&quot;</span>));</span><br><span class=\"line\">      dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dataSource.getConnection();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">releaseConnection</span><span class=\"params\">(Connection connection, Statement statement, ResultSet resultSet)</span></span><br><span class=\"line\">      <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resultSet != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      resultSet.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (statement != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      statement.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>TestDataSource</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> twenty_one.jdbc.demo3.utils.DbcpUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestDataSource</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">PreparedStatement</span> <span class=\"variable\">preparedStatement</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 连接</span></span><br><span class=\"line\">    connection = DbcpUtils.getConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ! 插入</span></span><br><span class=\"line\">    <span class=\"comment\">// 问号&#x27;?&#x27;为占位符</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">insert</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (?,?,?,?);&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//预编译sql</span></span><br><span class=\"line\">    preparedStatement = connection.prepareStatement(insert);</span><br><span class=\"line\">    <span class=\"comment\">//手动赋值</span></span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;weidows&quot;</span>);</span><br><span class=\"line\">    preparedStatement.setInt(<span class=\"number\">2</span>, <span class=\"number\">123456</span>);</span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">3</span>, <span class=\"string\">&quot;utsuko27@qq.com&quot;</span>);</span><br><span class=\"line\">    preparedStatement.setDate(<span class=\"number\">4</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.util.Date().getTime()));</span><br><span class=\"line\">    <span class=\"comment\">// 执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (preparedStatement.executeUpdate() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;成功.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ! 查询</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">query</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * From jdbcstudy.users where name = ?;&quot;</span>;</span><br><span class=\"line\">    preparedStatement = connection.prepareStatement(query);</span><br><span class=\"line\">    preparedStatement.setString(<span class=\"number\">1</span>, <span class=\"string\">&quot;weidows&quot;</span>);</span><br><span class=\"line\">    resultSet = preparedStatement.executeQuery();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (resultSet.next()) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;id = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;id&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;name = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;NAME&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;password = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;PASSWORD&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;email = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;email&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;birthday = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;birthday&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;===============================================================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 断连</span></span><br><span class=\"line\">    DbcpUtils.releaseConnection(connection, preparedStatement, resultSet);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"各名词区别\">各名词区别</h2>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/u013541707/article/details/113182157\">简单分析jdbc、datasource数据源、数据库驱动，连接池，jdbcTemplate，mybatis、JPA、Hibernate的区别</a></p>\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "MySQL",
                "JDBC"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/SQL/4/",
            "url": "https://weidows.github.io/post/lang/Java/SQL/4/",
            "title": "🚀进修MySQL~(肆)",
            "date_published": "2021-03-17T06:41:19.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:17:52\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\SQL\\4.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86\">用户/权限管理</a>\n<ul>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\">基本操作</a></li>\n<li><a href=\"#%E6%9D%83%E9%99%90%E8%A7%A3%E9%87%8A\">权限解释</a></li>\n<li><a href=\"#%E8%A1%A8%E7%BB%B4%E6%8A%A4\">表维护</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5\">导出&amp;导入</a></li>\n<li><a href=\"#%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E5%BA%93\">设计数据库</a></li>\n<li><a href=\"#%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F\">三大范式</a>\n<ul>\n<li><a href=\"#%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F\">第一范式</a></li>\n<li><a href=\"#%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F\">第二范式</a></li>\n<li><a href=\"#%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F\">第三范式</a></li>\n<li><a href=\"#%E6%80%A7%E8%83%BD%E8%80%83%E9%87%8F\">性能考量</a></li>\n</ul>\n</li>\n<li><a href=\"#jdbc\">JDBC</a>\n<ul>\n<li><a href=\"#helloworld\">HelloWorld</a></li>\n<li><a href=\"#%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C\">对象操作</a></li>\n<li><a href=\"#%E8%A7%A3%E8%80%A6%E6%A1%88%E4%BE%8B\">解耦案例</a>\n<ul>\n<li><a href=\"#utils\">Utils</a></li>\n<li><a href=\"#crud\">CRUD</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"用户-权限管理\">用户/权限管理</h2>\n<h3 id=\"基本操作\">基本操作</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  用户信息表：mysql.user</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 刷新权限</span></span><br><span class=\"line\">FLUSH PRIVILEGES;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  增加用户</span></span><br><span class=\"line\"><span class=\"comment\">  必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。</span></span><br><span class=\"line\"><span class=\"comment\">  用户名/密码注意加引号，如 &#x27;user_name&#x27;@&#x27;192.168.1.1&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> weidows IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 重命名用户</span></span><br><span class=\"line\">RENAME <span class=\"keyword\">USER</span> weidows <span class=\"keyword\">TO</span> weidows2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除用户</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">USER</span> weidows2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 设置密码</span></span><br><span class=\"line\"><span class=\"comment\">-- 为当前用户设置密码</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> PASSWORD <span class=\"operator\">=</span> PASSWORD (<span class=\"string\">&#x27;密码&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">-- 为指定用户设置密码</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> PASSWORD <span class=\"keyword\">FOR</span> 用户名 <span class=\"operator\">=</span> PASSWORD (<span class=\"string\">&#x27;密码&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">-- 上面两种报错的话</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> root<span class=\"variable\">@localhost</span> IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;密码&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  授予权限</span></span><br><span class=\"line\"><span class=\"comment\">  GRANT 权限列表 ON 表名 TO 用户名 [IDENTIFIED BY [PASSWORD] &#x27;password&#x27;]</span></span><br><span class=\"line\"><span class=\"comment\">    all privileges 表示所有权限</span></span><br><span class=\"line\"><span class=\"comment\">    *.* 表示所有库的所有表</span></span><br><span class=\"line\"><span class=\"comment\">    库名.表名 表示某库下面的某表</span></span><br><span class=\"line\"><span class=\"comment\">  只有root用户拥有grant权限,其他用户无法开启.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">TO</span> weidows IDENTIFIED <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查看权限</span></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> GRANTS <span class=\"keyword\">FOR</span> root<span class=\"variable\">@localhost</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 查看当前用户权限</span></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> GRANTS;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> GRANTS <span class=\"keyword\">FOR</span> <span class=\"built_in\">CURRENT_USER</span>;</span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> GRANTS <span class=\"keyword\">FOR</span> <span class=\"built_in\">CURRENT_USER</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  撤消权限</span></span><br><span class=\"line\"><span class=\"comment\">  REVOKE 权限列表 ON 表名 FROM 用户名</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">REVOKE</span> <span class=\"keyword\">ALL</span> PRIVILEGES <span class=\"keyword\">ON</span> <span class=\"operator\">*</span>.<span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> weidows;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"权限解释\">权限解释</h3>\n<ul>\n<li>(查询用,不用硬记)</li>\n</ul>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALL</span> [<span class=\"keyword\">PRIVILEGES</span>]    <span class=\"comment\">-- 设置除GRANT OPTION之外的所有简单权限</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span>    <span class=\"comment\">-- 允许使用ALTER TABLE</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">ROUTINE</span>    <span class=\"comment\">-- 更改或取消已存储的子程序</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span>    <span class=\"comment\">-- 允许使用CREATE TABLE</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">ROUTINE</span>    <span class=\"comment\">-- 创建已存储的子程序</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TEMPORARY</span> <span class=\"keyword\">TABLES</span>        <span class=\"comment\">-- 允许使用CREATE TEMPORARY TABLE</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span>        <span class=\"comment\">-- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span>        <span class=\"comment\">-- 允许使用CREATE VIEW</span></span><br><span class=\"line\"><span class=\"keyword\">DELETE</span>    <span class=\"comment\">-- 允许使用DELETE</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span>    <span class=\"comment\">-- 允许使用DROP TABLE</span></span><br><span class=\"line\"><span class=\"keyword\">EXECUTE</span>        <span class=\"comment\">-- 允许用户运行已存储的子程序</span></span><br><span class=\"line\">FILE    <span class=\"comment\">-- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILE</span></span><br><span class=\"line\"><span class=\"keyword\">INDEX</span>     <span class=\"comment\">-- 允许使用CREATE INDEX和DROP INDEX</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span>    <span class=\"comment\">-- 允许使用INSERT</span></span><br><span class=\"line\"><span class=\"keyword\">LOCK</span> <span class=\"keyword\">TABLES</span>        <span class=\"comment\">-- 允许对您拥有SELECT权限的表使用LOCK TABLES</span></span><br><span class=\"line\">PROCESS     <span class=\"comment\">-- 允许使用SHOW FULL PROCESSLIST</span></span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span>    <span class=\"comment\">-- 未被实施</span></span><br><span class=\"line\">RELOAD    <span class=\"comment\">-- 允许使用FLUSH</span></span><br><span class=\"line\"><span class=\"keyword\">REPLICATION</span> CLIENT    <span class=\"comment\">-- 允许用户询问从属服务器或主服务器的地址</span></span><br><span class=\"line\"><span class=\"keyword\">REPLICATION</span> SLAVE    <span class=\"comment\">-- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span>    <span class=\"comment\">-- 允许使用SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> DATABASES    <span class=\"comment\">-- 显示所有数据库</span></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> <span class=\"keyword\">VIEW</span>    <span class=\"comment\">-- 允许使用SHOW CREATE VIEW</span></span><br><span class=\"line\">SHUTDOWN    <span class=\"comment\">-- 允许使用mysqladmin shutdown</span></span><br><span class=\"line\">SUPER    <span class=\"comment\">-- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</span></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span>    <span class=\"comment\">-- 允许使用UPDATE</span></span><br><span class=\"line\"><span class=\"keyword\">USAGE</span>    <span class=\"comment\">-- “无权限”的同义词</span></span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>    <span class=\"comment\">-- 允许授予权限</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"表维护\">表维护</h3>\n<ul>\n<li><code>了解</code></li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 分析和存储表的关键字分布</span></span><br><span class=\"line\">ANALYZE [<span class=\"keyword\">LOCAL</span> <span class=\"operator\">|</span> NO_WRITE_TO_BINLOG] <span class=\"keyword\">TABLE</span> 表名 ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 检查一个或多个表是否有错误</span></span><br><span class=\"line\"><span class=\"keyword\">CHECK</span> <span class=\"keyword\">TABLE</span> tbl_name [, tbl_name] ... [option] ...</span><br><span class=\"line\">option <span class=\"operator\">=</span> &#123;QUICK <span class=\"operator\">|</span> FAST <span class=\"operator\">|</span> MEDIUM <span class=\"operator\">|</span> EXTENDED <span class=\"operator\">|</span> CHANGED&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 整理数据文件的碎片</span></span><br><span class=\"line\">OPTIMIZE [<span class=\"keyword\">LOCAL</span> <span class=\"operator\">|</span> NO_WRITE_TO_BINLOG] <span class=\"keyword\">TABLE</span> tbl_name [, tbl_name] ...</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"导出-导入\">导出&amp;导入</h2>\n<ul>\n<li>\n<p>可以用 SQL GUI 程序操作,下面介绍命令行操作</p>\n</li>\n<li>\n<p>导出</p>\n<ul>\n<li>可以加上-w 携带备份条件</li>\n<li>-xxx 后面不加空格,直接带上参数</li>\n</ul>\n<hr>\n<ol>\n<li>导出一张表 mysqldump -u 用户名 -p 密码 库名 表名 &gt; 文件名(D:/a.sql)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -p123456 school student &gt;D:/a.sql</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>导出多张表 mysqldump -u 用户名 -p 密码 库名 表 1 表 2 表 3 &gt; 文件名(D:/a.sql)</li>\n</ol>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -p123456 school student <span class=\"built_in\">result</span> &gt;D:/<span class=\"keyword\">a</span>.sql</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>导出所有表 mysqldump -u 用户名 -p 密码 库名 &gt; 文件名(D:/a.sql)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -p123456 school &gt;D:/a.sql</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>导出一个库 mysqldump -u 用户名 -p 密码 -B 库名 &gt; 文件名(D:/a.sql)</li>\n</ol>\n<figure class=\"highlight armasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">mysqldump</span> -uroot -p123456 -<span class=\"keyword\">B</span> school &gt;D:/a.sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>导入</p>\n<ol>\n<li>在已经登录 mysql,切换到指定数据库的情况下: source 备份文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> D:/a.sql</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在不登录的情况下: mysql -u 用户名 -p 密码 [库名] &lt; 备份文件 (如果导入一个库的话就不加库名)</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p123456 school &lt;D:/a.sql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"设计数据库\">设计数据库</h2>\n<ul>\n<li>\n<p>目的:</p>\n<ol>\n<li>节省数据存储空间</li>\n<li>保证数据的完整性</li>\n<li>方便进行数据库应用系统的开发</li>\n</ol>\n<hr>\n</li>\n<li>\n<p>阶段设计</p>\n<ol>\n<li>\n<p>需求分析: 分析客户的业务和数据处理需求</p>\n</li>\n<li>\n<p>概要设计: 设计数据库的 E-R 模型图 , 确认需求信息的正确和完整.</p>\n</li>\n<li>\n<p>收集信息: 搜集与需求相关的信息需求.</p>\n<ol>\n<li>页面 A</li>\n<li>功能 B</li>\n<li>特殊需求 C</li>\n<li>自定义 D</li>\n<li>…</li>\n</ol>\n</li>\n<li>\n<p>标识实体: 标识数据库所要管理的对象,详细信息(Attribute)以及关系(Relationship)</p>\n<ol>\n<li>写博客 user -&gt; blog</li>\n<li>分类 blog -&gt; category</li>\n<li>评论 user(作者) -&gt; user(评论者) -&gt; blog(博客页面)</li>\n<li>…</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h2 id=\"三大范式\">三大范式</h2>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/scarecrow_fly/article/details/102170042\">数据库设计的三大范式通俗讲解</a></p>\n</blockquote>\n<ul>\n<li>\n<p>三大范式出现为了解决一下四种问题</p>\n<ul>\n<li>\n<p>信息重复</p>\n</li>\n<li>\n<p>更新异常</p>\n</li>\n<li>\n<p>插入异常</p>\n</li>\n<li>\n<p>删除异常</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"第一范式\">第一范式</h3>\n<blockquote>\n<p>确保每列的<code>原子性</code>,每列都是不可再分的最小数据单元</p>\n</blockquote>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsdNA.png\" alt=\"20210317202650\" />\n</blockquote>\n<ul>\n<li>上面家庭信息和学校信息都可以再拆分为两列</li>\n</ul>\n<hr>\n<h3 id=\"第二范式\">第二范式</h3>\n<blockquote>\n<p>必须在满足第一范式的条件下: 每个表只做一件事(<code>每行有唯一标识</code>,其他数据只依赖于此标识列)</p>\n</blockquote>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsvu5.png\" alt=\"20210317203230\" />\n</blockquote>\n<ul>\n<li>\n<p>简单来讲就是标识列和其他列有共同重复数据行,那么<code>标识列</code>和<code>有重复数据的列</code>可以分到另一个表</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsNOm.png\" alt=\"20210317203601\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"第三范式\">第三范式</h3>\n<blockquote>\n<p>在第二范式基础上,其他列数据必须与标识列数据有直接关系</p>\n</blockquote>\n<blockquote>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsQkh.png\" alt=\"20210317204105\" />\n</blockquote>\n<ul>\n<li>\n<p>也就是说不存在标识列与其他列共同重复了,但还是可能存在多个其他列有共同重复(班主任的那三列有共同重复数据)</p>\n</li>\n<li>\n<p>把班主任分出去</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVs7lq.png\" alt=\"20210317204341\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"性能考量\">性能考量</h3>\n<blockquote>\n<p><code>关联查询不能超过三张表</code>.</p>\n</blockquote>\n<ul>\n<li>\n<p>实际应用中需要考虑多表的额外开销</p>\n</li>\n<li>\n<p>如果不规范程度低,而且性能需求高的场景,则需要考虑是否遵循范式.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"JDBC\">JDBC</h2>\n<h3 id=\"HelloWorld\">HelloWorld</h3>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsz1c.png\" alt=\"20210319102812\" />\n<ul>\n<li>\n<p>工具类 (Java 自带)</p>\n<ul>\n<li>java.sql</li>\n<li>javax.sql</li>\n</ul>\n</li>\n<li>\n<p>SQL 驱动需要导入(在 pom.xml 中)</p>\n<ul>\n<li>mysql-connector-java-版本号 jar</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>8.0.23<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>创建数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE jdbcStudy <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">USE jdbcStudy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `users`</span><br><span class=\"line\">(</span><br><span class=\"line\">  id       <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">  NAME     <span class=\"type\">VARCHAR</span>(<span class=\"number\">40</span>),</span><br><span class=\"line\">  PASSWORD <span class=\"type\">VARCHAR</span>(<span class=\"number\">40</span>),</span><br><span class=\"line\">  email    <span class=\"type\">VARCHAR</span>(<span class=\"number\">60</span>),</span><br><span class=\"line\">  birthday <span class=\"type\">DATE</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> `users`(id, NAME, PASSWORD, email, birthday)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> (<span class=\"number\">1</span>, <span class=\"string\">&#x27;zhansan&#x27;</span>, <span class=\"string\">&#x27;123456&#x27;</span>, <span class=\"string\">&#x27;zs@sina.com&#x27;</span>, <span class=\"string\">&#x27;1980-12-04&#x27;</span>),</span><br><span class=\"line\">      (<span class=\"number\">2</span>, <span class=\"string\">&#x27;lisi&#x27;</span>, <span class=\"string\">&#x27;123456&#x27;</span>, <span class=\"string\">&#x27;lisi@sina.com&#x27;</span>, <span class=\"string\">&#x27;1981-12-04&#x27;</span>),</span><br><span class=\"line\">      (<span class=\"number\">3</span>, <span class=\"string\">&#x27;wangwu&#x27;</span>, <span class=\"string\">&#x27;123456&#x27;</span>, <span class=\"string\">&#x27;wangwu@sina.com&#x27;</span>, <span class=\"string\">&#x27;1979-12-04&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>连接,helloworld</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.mysql.cj.jdbc.Driver;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCFirstDemo</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 1.设置用户信息</span></span><br><span class=\"line\"><span class=\"comment\">        useUnicode = true 支持中文编码</span></span><br><span class=\"line\"><span class=\"comment\">        characterEncoding = utf8 设定字符集</span></span><br><span class=\"line\"><span class=\"comment\">        useSSL = true 安全连接</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2.加载驱动(固定写法,二选一)</span></span><br><span class=\"line\">    <span class=\"comment\">// Class.forName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span></span><br><span class=\"line\">    DriverManager.registerDriver(<span class=\"keyword\">new</span> <span class=\"title class_\">Driver</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 3.连接，数据库对象 Connection 代表数据库</span></span><br><span class=\"line\"><span class=\"comment\">        //事务提交</span></span><br><span class=\"line\"><span class=\"comment\">        connection.commit();</span></span><br><span class=\"line\"><span class=\"comment\">        //事务回滚</span></span><br><span class=\"line\"><span class=\"comment\">        connection.rollback();</span></span><br><span class=\"line\"><span class=\"comment\">        //数据库设置自动提交</span></span><br><span class=\"line\"><span class=\"comment\">        connection.setAutoCommit(true);</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, user, password);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4.创建SQL的对象</span></span><br><span class=\"line\">    <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> connection.createStatement();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * FROM users&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5.执行SQL的对象,查看返回结果</span></span><br><span class=\"line\">    <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> statement.executeQuery(sql); <span class=\"comment\">//返回的结果集</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (resultSet.next()) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;id = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;id&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;name = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;NAME&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;password = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;PASSWORD&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;email = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;email&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;birthday = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;birthday&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;===============================================================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//6.释放连接</span></span><br><span class=\"line\">    resultSet.close();</span><br><span class=\"line\">    statement.close();</span><br><span class=\"line\">    connection.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>执行结果</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"code\"><pre><span class=\"line\">id = 1</span><br><span class=\"line\">name = zhansan</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = zs@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1980-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">id = 2</span><br><span class=\"line\">name = lisi</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = lisi@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1981-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">id = 3</span><br><span class=\"line\">name = wangwu</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = wangwu@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1979-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"对象操作\">对象操作</h3>\n<ul>\n<li>\n<p>connection</p>\n<ul>\n<li>connection.rollback();</li>\n<li>connection.commit();</li>\n<li>connection.setAutoCommit();</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>statement</p>\n<ul>\n<li>statement.executeQuery(); 执行查询 SQL</li>\n<li>statement.execute(); 可以执行任何 SQL 指令</li>\n<li>statement.executeUpdate(); 更新，插入，删除，返回受影响的行数</li>\n<li>statement.executeBatch(); 执行一组 SQL</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>ResultSet</p>\n<ul>\n<li>resultSet.getObject(); 在不知道列类型下使用</li>\n<li>resultSet.getString(); 如果知道则指定使用</li>\n<li>resultSet.getInt();</li>\n<li>…</li>\n</ul>\n<hr>\n<ul>\n<li>resultSet.next(); 移动到下一个</li>\n<li>resultSet.previous(); 移动到上一个</li>\n<li>resultSet.beforeFirst(); 移动到最前</li>\n<li>resultSet.afterLast(); 移动到最后</li>\n<li>resultSet.absolute(row); 移动到指定行</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"解耦案例\">解耦案例</h3>\n<ul>\n<li>\n<p>上面的 JDBC 包括加载连接,业务逻辑,状态转化都写到一个类中,导致扩展时很不方便,需要 <code>解耦</code></p>\n</li>\n<li>\n<p>把加载连接分离到 <code>db.properties</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">driver</span>=<span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">url</span>=<span class=\"string\">jdbc:mysql://localhost:3306/jdbcStudy?useUnicode = true &amp; characterEncoding = utf8 &amp; useSSL = true</span></span><br><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">password</span>=<span class=\"string\">123456</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"Utils\">Utils</h4>\n<ul>\n<li>\n<p>把 SQL connect 和 release 分离到 <code>utils.JDBCUtils</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JDBCUtils</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">driver</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 加载连接信息</span></span><br><span class=\"line\">    <span class=\"type\">Properties</span> <span class=\"variable\">properties</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Properties</span>();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      properties.load(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;Java/src/main/java/twenty_one/jdbc/demo2/db.properties&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">      driver = properties.getProperty(<span class=\"string\">&quot;driver&quot;</span>);</span><br><span class=\"line\">      url = properties.getProperty(<span class=\"string\">&quot;url&quot;</span>);</span><br><span class=\"line\">      username = properties.getProperty(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">      password = properties.getProperty(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      Class.forName(driver);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取连接</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title function_\">getConnection</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 释放资源</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">releaseConnection</span><span class=\"params\">(Connection connection,Statement statement,ResultSet resultSet)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resultSet != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      resultSet.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (statement != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      statement.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (connection != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"CRUD\">CRUD</h4>\n<ul>\n<li>\n<p>业务类: 测试增删改查(CRUD)</p>\n<ul>\n<li>增删改用<code>.executeUpdate()</code>, 查用<code>.executeQuery()</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.ResultSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> twenty_one.jdbc.demo2.utils.JDBCUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> SQLException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 连接</span></span><br><span class=\"line\">    connection = JDBCUtils.getConnection();</span><br><span class=\"line\">    statement = connection.createStatement();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 增</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">insert</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;INSERT INTO jdbcstudy.users(NAME, PASSWORD, email, birthday)  VALUES (&#x27;weidows&#x27;, 123456, &#x27;utsuko27@qq.com&#x27;, &#x27;2020-07-28&#x27;);&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (statement.executeUpdate(insert) &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 返回int:受影响的行数</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;插入成功. insert -&gt; weidows&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 改</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">update</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;update jdbcstudy.users set password =654321 where name = &#x27;weidows&#x27;;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (statement.executeUpdate(update) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;修改成功. weidows.password -&gt; 654321&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 查</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">query</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;SELECT * From jdbcstudy.users;&quot;</span>;</span><br><span class=\"line\">    resultSet = statement.executeQuery(query);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (resultSet.next()) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;id = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;id&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;name = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;NAME&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;password = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;PASSWORD&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;email = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;email&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;birthday = &quot;</span> + resultSet.getObject(<span class=\"string\">&quot;birthday&quot;</span>));</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;===============================================================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 删</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">delete</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;delete from jdbcstudy.users where name = &#x27;weidows&#x27;;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (statement.executeUpdate(delete) &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;删除成功.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 断连</span></span><br><span class=\"line\">    JDBCUtils.releaseConnection(connection, statement, resultSet);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>执行结果</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"code\"><pre><span class=\"line\">插入成功. insert -&gt; weidows</span><br><span class=\"line\">修改成功. weidows.password -&gt; 654321</span><br><span class=\"line\">id = 1</span><br><span class=\"line\">name = zhansan</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = zs@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1980-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">id = 2</span><br><span class=\"line\">name = lisi</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = lisi@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1981-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">id = 3</span><br><span class=\"line\">name = wangwu</span><br><span class=\"line\">password = 123456</span><br><span class=\"line\">email = wangwu@sina.com</span><br><span class=\"line\"><span class=\"section\">birthday = 1979-12-04</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">id = 9</span><br><span class=\"line\">name = weidows</span><br><span class=\"line\">password = 654321</span><br><span class=\"line\">email = utsuko27@qq.com</span><br><span class=\"line\"><span class=\"section\">birthday = 2020-07-28</span></span><br><span class=\"line\"><span class=\"section\">===============================================================</span></span><br><span class=\"line\">删除成功.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "MySQL",
                "JDBC"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/SQL/3/",
            "url": "https://weidows.github.io/post/lang/Java/SQL/3/",
            "title": "🚀进修MySQL~(叁)",
            "date_published": "2021-03-15T14:45:58.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:16:57\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\SQL\\3.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%87%BD%E6%95%B0\">函数</a>\n<ul>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%87%BD%E6%95%B0\">数据函数</a>\n<ul>\n<li><a href=\"#%E4%BD%9C%E7%94%A8%E4%BA%8E%E8%AE%B0%E5%BD%95\">作用于记录</a></li>\n<li><a href=\"#%E4%BD%9C%E7%94%A8%E4%BA%8E%E5%AD%97%E6%AE%B5\">作用于字段</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0\">字符串函数</a></li>\n<li><a href=\"#%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0\">时间函数</a></li>\n<li><a href=\"#%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF\">系统信息</a></li>\n<li><a href=\"#%E5%88%86%E7%BB%84\">分组</a></li>\n<li><a href=\"#md5-%E5%8A%A0%E5%AF%86\">MD5 加密</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BA%8B%E5%8A%A1\">事务</a>\n<ul>\n<li><a href=\"#acid-%E5%8E%9F%E5%88%99\">ACID 原则</a></li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">基本语法</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%B4%A2%E5%BC%95\">索引</a>\n<ul>\n<li><a href=\"#%E5%88%86%E7%B1%BB\">分类</a></li>\n<li><a href=\"#%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E7%B4%A2%E5%BC%95\">添加&amp;删除索引</a></li>\n<li><a href=\"#explain\">EXPLAIN</a></li>\n<li><a href=\"#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\">性能分析</a></li>\n<li><a href=\"#%E7%B4%A2%E5%BC%95%E8%A7%84%E7%9F%A9\">索引规矩</a></li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"函数\">函数</h2>\n<h3 id=\"数据函数\">数据函数</h3>\n<h4 id=\"作用于记录\">作用于记录</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 绝对值</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">ABS</span>(<span class=\"number\">-8</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 向上取整</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">CEILING</span>(<span class=\"number\">9.4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 向下取整</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">FLOOR</span>(<span class=\"number\">9.4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 随机数,返回一个0-1之间的随机数</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  RAND();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 符号函数: 负数返回-1,正数返回1,0返回0</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  SIGN(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"作用于字段\">作用于字段</h4>\n<ul>\n<li>也叫 <code>聚合函数</code>(常用)</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  三种COUNT()用法及区别</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  count(1)和count(*)都会对全表进行扫描，统计所有记录的条数，包括那些为null的记录，因此，它们的效率可以说是相差无几;而count(字段)则与前两者不同，它会统计该字段不为null的记录条数。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  1）在表没有主键时，count(1)比count(*)快</span></span><br><span class=\"line\"><span class=\"comment\">  2）有主键时，主键作为计算条件，count(主键)效率最高；</span></span><br><span class=\"line\"><span class=\"comment\">  3）若表格只有一个字段，则count(*)效率较高。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">COUNT</span>(studentname) <span class=\"keyword\">AS</span> `学生人数`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">COUNT</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">AS</span> `学生人数`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">COUNT</span>(<span class=\"number\">1</span>) <span class=\"keyword\">AS</span> `学生人数`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 和</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">SUM</span>(StudentResult) <span class=\"keyword\">AS</span> `总 和`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 平均</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">AVG</span>(StudentResult) <span class=\"keyword\">AS</span> `平 均 分`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 最高</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">MAX</span>(StudentResult) <span class=\"keyword\">AS</span> `最 高 分`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 最低</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">MIN</span>(StudentResult) <span class=\"keyword\">AS</span> `最 低 分`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span>;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"字符串函数\">字符串函数</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 返回字符串包含的字符数</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">CHAR_LENGTH</span>(<span class=\"string\">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 合并字符串,参数可以有多个</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  CONCAT(<span class=\"string\">&#x27;我&#x27;</span>, <span class=\"string\">&#x27;爱&#x27;</span>, <span class=\"string\">&#x27;程序&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 替换字符串,从某个位置开始替换某个长度</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span>(<span class=\"string\">&#x27;我爱编程helloworld&#x27;</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;超级热爱&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- toLowerCase小写</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">LOWER</span>(<span class=\"string\">&#x27;KuangShen&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- toUpperCase大写</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">UPPER</span>(<span class=\"string\">&#x27;KuangShen&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 从左边截取</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">LEFT</span>(<span class=\"string\">&#x27;hello,world&#x27;</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 从右边截取</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">RIGHT</span>(<span class=\"string\">&#x27;hello,world&#x27;</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 替换字符串</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  REPLACE(<span class=\"string\">&#x27;狂神说坚持就能成功&#x27;</span>, <span class=\"string\">&#x27;坚持&#x27;</span>, <span class=\"string\">&#x27;努力&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 截取字符串,开始和长度</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  SUBSTR(<span class=\"string\">&#x27;狂神说坚持就能成功&#x27;</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 反转</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  REVERSE(<span class=\"string\">&#x27;狂神说坚持就能成功&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询姓周的同学,改成邹 (采用子查询)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentname <span class=\"operator\">=</span>(</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">      REPLACE(studentname, <span class=\"string\">&#x27;周&#x27;</span>, <span class=\"string\">&#x27;邹&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span></span><br><span class=\"line\">      studentname <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;周%&#x27;</span></span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"时间函数\">时间函数</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 获取当前日期(两种一样)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">CURRENT_DATE</span>();</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  CRUDATE();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 获取当前日期和时间(三种一样)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  NOW();</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">LOCALTIME</span>();</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  SYSDATE();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 获取年月日,时分秒</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">YEAR</span>(NOW());</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">MONTH</span>(NOW());</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">DAY</span>(NOW());</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">HOUR</span>(NOW());</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">MINUTE</span>(NOW());</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">SECOND</span>(NOW());</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"系统信息\">系统信息</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 版本</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  VERSION();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 用户(MySQL的用户)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"keyword\">USER</span>();</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"built_in\">SYSTEM_USER</span>();</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"分组\">分组</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  查询 不同课程 的平均分,最高分,最低分 (根据不同的课程进行分组)</span></span><br><span class=\"line\"><span class=\"comment\">  分组后面的筛选,使用 `HAVING`</span></span><br><span class=\"line\"><span class=\"comment\">  having是从前面筛选的字段再筛选，而where是从数据表中的字段直接进行的筛选的</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  <span class=\"built_in\">AVG</span>(studentresult) <span class=\"keyword\">AS</span> `平 均 分`,</span><br><span class=\"line\">  <span class=\"built_in\">MAX</span>(StudentResult) <span class=\"keyword\">AS</span> `最 高 分`,</span><br><span class=\"line\">  <span class=\"built_in\">MIN</span>(StudentResult) <span class=\"keyword\">AS</span> `最 低 分`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span> <span class=\"keyword\">AS</span> r</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` <span class=\"keyword\">AS</span> s <span class=\"keyword\">ON</span> r.subjectno <span class=\"operator\">=</span> s.subjectno</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  r.subjectno</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span></span><br><span class=\"line\">  `平 均 分` <span class=\"operator\">&gt;</span> <span class=\"number\">60</span>;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"MD5-加密\">MD5 加密</h3>\n<blockquote>\n<p>Message-Digest Algorithm 5（信息-摘要算法 5），用于确保信息传输完整一致。是计算机广泛使用的杂凑算法（摘要算法、哈希算法）.</p>\n</blockquote>\n<ul>\n<li>\n<p>初始化</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 新建表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `testmd5` (</span><br><span class=\"line\">  `id` <span class=\"type\">INT</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `pwd` <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入数据(明文密码)</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  testmd5</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span></span><br><span class=\"line\">  (<span class=\"number\">1</span>, <span class=\"string\">&#x27;kuangshen&#x27;</span>, <span class=\"string\">&#x27;123456&#x27;</span>),(<span class=\"number\">2</span>, <span class=\"string\">&#x27;qinjiang&#x27;</span>, <span class=\"string\">&#x27;456789&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>加密</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 加密全列</span></span><br><span class=\"line\"><span class=\"keyword\">update</span></span><br><span class=\"line\">  testmd5</span><br><span class=\"line\"><span class=\"keyword\">set</span></span><br><span class=\"line\">  pwd <span class=\"operator\">=</span> md5(pwd);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入时加密</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  testmd5</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"number\">4</span>, <span class=\"string\">&#x27;kuangshen3&#x27;</span>, md5(<span class=\"string\">&#x27;123456&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 检查账号密码是否对应</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  testmd5</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;kuangshen&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> `pwd` <span class=\"operator\">=</span> MD5(<span class=\"string\">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"事务\">事务</h2>\n<ul>\n<li>一组遵循 ACID 原则的 SQL 指令</li>\n</ul>\n<h3 id=\"ACID-原则\">ACID 原则</h3>\n<ul>\n<li>\n<p>原子性(Atomic)</p>\n<ul>\n<li>同一批次的 SQL 指令,要么全通过,要么全取消,不存在中间态</li>\n</ul>\n</li>\n<li>\n<p>一致性(Consist)</p>\n<ul>\n<li>事务前后数据完整性一致</li>\n</ul>\n</li>\n<li>\n<p>隔离性(Isolated)</p>\n<ul>\n<li>\n<p>多个用户并发执行多事务,会使其<code>串行化</code>执行,同一时间只能有一个请求作用于同一数据</p>\n</li>\n<li>\n<p>有可能隔离失败导致一些问题(如下)</p>\n</li>\n</ul>\n<hr>\n<ol>\n<li>\n<p>脏读 : 一个事务读取了另一个没有提交的事务</p>\n</li>\n<li>\n<p>不可重复读 : 在同一个事务内，再次读取表中的数据，表发生了改变</p>\n</li>\n<li>\n<p>幻读(虚读) : 在一个事务内，读取到了别人插入的数据，导致前后读出来的结果不一致</p>\n</li>\n</ol>\n</li>\n<li>\n<p>持久性(Durable)</p>\n<ul>\n<li>事务一旦提交成功,便不会被外界因素影响而导致回滚.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"基本语法\">基本语法</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  MySQL中默认是自动提交,使用事务时应先关闭自动提交</span></span><br><span class=\"line\"><span class=\"comment\">  关闭自动提交模式(0),开启(1)</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 开始一个事务,标记事务的起始点</span></span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 此处写业务代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  COMMIT; -- 提交一个事务给数据库</span></span><br><span class=\"line\"><span class=\"comment\">  ROLLBACK; -- 将事务回滚,数据回到本次事务的初始状态</span></span><br><span class=\"line\"><span class=\"comment\">  保存点(了解,不常用)</span></span><br><span class=\"line\"><span class=\"comment\">    SAVEPOINT `保 存 点 名 称`; -- 设置一个事务保存点</span></span><br><span class=\"line\"><span class=\"comment\">    ROLLBACK TO SAVEPOINT `保 存 点 名 称`; -- 回滚到保存点</span></span><br><span class=\"line\"><span class=\"comment\">    RELEASE SAVEPOINT `保 存 点 名 称`; -- 删除保存点</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 还原MySQL数据库的自动提交</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> autocommit <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>逻辑图</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVs0E0.png\" alt=\"20210316182445\" />\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> DATABASE `shop` <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci;</span><br><span class=\"line\"></span><br><span class=\"line\">USE `shop`;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `account` (</span><br><span class=\"line\">  `id` <span class=\"type\">INT</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `name` <span class=\"type\">VARCHAR</span>(<span class=\"number\">32</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `cash` <span class=\"type\">DECIMAL</span>(<span class=\"number\">9</span>, <span class=\"number\">2</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  account (`name`, `cash`)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">2000.00</span>),(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">10000.00</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 开始</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span></span><br><span class=\"line\">  autocommit <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">START</span> TRANSACTION;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span></span><br><span class=\"line\">  account</span><br><span class=\"line\"><span class=\"keyword\">SET</span></span><br><span class=\"line\">  cash <span class=\"operator\">=</span> cash <span class=\"number\">-500</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span></span><br><span class=\"line\">  account</span><br><span class=\"line\"><span class=\"keyword\">SET</span></span><br><span class=\"line\">  cash <span class=\"operator\">=</span> cash <span class=\"operator\">+</span> <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  `name` <span class=\"operator\">=</span> <span class=\"string\">&#x27;B&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COMMIT</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span></span><br><span class=\"line\">  autocommit <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"索引\">索引</h2>\n<blockquote>\n<p>索引是帮助 MySQL 高校获取数据的数据结构.</p>\n</blockquote>\n<ul>\n<li>提高查询,分组,全文搜索速度</li>\n<li>表间参照&amp;数据唯一性功能.</li>\n</ul>\n<h3 id=\"分类\">分类</h3>\n<ol>\n<li>\n<p>主键索引 (Primary Key)</p>\n<ul>\n<li>最常见,唯一性(一个表只能有一个)</li>\n</ul>\n</li>\n<li>\n<p>唯一索引 (Unique)</p>\n<ul>\n<li>保证某列中记录值唯一,同一表可以有多个唯一索引</li>\n</ul>\n</li>\n<li>\n<p>常规索引 (Key/Index)</p>\n<ul>\n<li>默认的索引类型</li>\n</ul>\n</li>\n<li>\n<p>全文索引 (FullText)</p>\n<ul>\n<li>MyISAM/InnoDB 引擎下才能使用,对字段类型也有要求,适用于大型数据</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"添加-删除索引\">添加&amp;删除索引</h3>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">方法一：创建表时</span><br><span class=\"line\">　<span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> 表名 (</span><br><span class=\"line\">    字段名<span class=\"number\">1</span> 数据类型 [完整性约束条件…],</span><br><span class=\"line\">    字段名<span class=\"number\">2</span> 数据类型 [完整性约束条件…],</span><br><span class=\"line\">    索引类型 [索引名] (字段名[(长度)] [<span class=\"keyword\">ASC</span> |<span class=\"keyword\">DESC</span>])</span><br><span class=\"line\">  );</span><br><span class=\"line\"></span><br><span class=\"line\">方法二：<span class=\"keyword\">CREATE</span>在已存在的表上创建索引</span><br><span class=\"line\">  <span class=\"keyword\">CREATE</span> 索引类型 索引名</span><br><span class=\"line\">  <span class=\"keyword\">ON</span> 表名 (字段名[(长度)] [<span class=\"keyword\">ASC</span> |<span class=\"keyword\">DESC</span>]) ;</span><br><span class=\"line\"></span><br><span class=\"line\">方法三：<span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span>在已存在的表上创建索引</span><br><span class=\"line\">  <span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名</span><br><span class=\"line\">    <span class=\"keyword\">ADD</span> 索引类型 索引名 (字段名[(长度)] [<span class=\"keyword\">ASC</span> |<span class=\"keyword\">DESC</span>]) ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 例子:增加全文索引</span></span><br><span class=\"line\">  <span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> `school`.`student`</span><br><span class=\"line\">    <span class=\"keyword\">ADD</span> FULLTEXT <span class=\"keyword\">INDEX</span> `studentname` (`studentName`);</span><br><span class=\"line\"></span><br><span class=\"line\">#删除索引：<span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> 索引名 <span class=\"keyword\">ON</span> 表名字;</span><br><span class=\"line\">#删除主键索引: <span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">DROP</span> <span class=\"keyword\">PRIMARY KEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#显示索引信息: <span class=\"keyword\">SHOW</span> <span class=\"keyword\">INDEX</span> <span class=\"keyword\">FROM</span> 表名;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"EXPLAIN\">EXPLAIN</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  EXPLAIN : 分析SQL语句执行性能</span></span><br><span class=\"line\"><span class=\"comment\">  常规索引</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">EXPLAIN</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> studentno <span class=\"operator\">=</span> <span class=\"string\">&#x27;1000&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  使用全文索引</span></span><br><span class=\"line\"><span class=\"comment\">  全文搜索通过 MATCH() 函数完成。</span></span><br><span class=\"line\"><span class=\"comment\">  搜索字符串作为 against() 的参数被给定。对于表中的每个记录行，MATCH() 返回一个相关性值。即搜索字符串与记录行在 MATCH() 列表中指定的列的文本之间的相似性尺度。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">EXPLAIN</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">MATCH</span>(studentname) AGAINST(<span class=\"string\">&#x27;刘&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"性能分析\">性能分析</h3>\n<ul>\n<li>\n<p>建表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `app_user`</span><br><span class=\"line\">(</span><br><span class=\"line\">  `id`          <span class=\"type\">bigint</span>(<span class=\"number\">20</span>) unsigned <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `name`        <span class=\"type\">varchar</span>(<span class=\"number\">50</span>)              <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;用户昵称&#x27;</span>,</span><br><span class=\"line\">  `email`       <span class=\"type\">varchar</span>(<span class=\"number\">50</span>)         <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;用户邮箱&#x27;</span>,</span><br><span class=\"line\">  `phone`       <span class=\"type\">varchar</span>(<span class=\"number\">20</span>)              <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;&#x27;</span> COMMENT <span class=\"string\">&#x27;手机号&#x27;</span>,</span><br><span class=\"line\">  `gender`      tinyint(<span class=\"number\">4</span>) unsigned      <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;0&#x27;</span> COMMENT <span class=\"string\">&#x27;性别（0:男；1：女）&#x27;</span>,</span><br><span class=\"line\">  `password`    <span class=\"type\">varchar</span>(<span class=\"number\">100</span>)        <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;密码&#x27;</span>,</span><br><span class=\"line\">  `age`         tinyint(<span class=\"number\">4</span>)               <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;0&#x27;</span> COMMENT <span class=\"string\">&#x27;年龄&#x27;</span>,</span><br><span class=\"line\">  `create_time` datetime                 <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">  `update_time` <span class=\"type\">timestamp</span>           <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB</span><br><span class=\"line\">  <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8mb4 COMMENT <span class=\"operator\">=</span><span class=\"string\">&#x27;app用户表&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>生成随机数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">DELIMITER $$</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">FUNCTION</span> mock_data()</span><br><span class=\"line\">  <span class=\"keyword\">RETURNS</span> <span class=\"type\">INT</span></span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\">  <span class=\"keyword\">DECLARE</span> num <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">1000000</span>;</span><br><span class=\"line\">  <span class=\"keyword\">DECLARE</span> i <span class=\"type\">INT</span> <span class=\"keyword\">DEFAULT</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  WHILE i <span class=\"operator\">&lt;</span> num</span><br><span class=\"line\">    DO</span><br><span class=\"line\">      <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> app_user(`name`, `email`, `phone`, `gender`, `password`, `age`)</span><br><span class=\"line\">      <span class=\"keyword\">VALUES</span> (CONCAT(<span class=\"string\">&#x27;用户&#x27;</span>, i), <span class=\"string\">&#x27;24736743@qq.com&#x27;</span>, CONCAT(<span class=\"string\">&#x27;18&#x27;</span>, <span class=\"built_in\">FLOOR</span>(RAND() <span class=\"operator\">*</span> (<span class=\"number\">999999999</span> <span class=\"operator\">-</span> <span class=\"number\">100000000</span>) <span class=\"operator\">+</span> <span class=\"number\">100000000</span>)),</span><br><span class=\"line\">              <span class=\"built_in\">FLOOR</span>(RAND() <span class=\"operator\">*</span> <span class=\"number\">2</span>), UUID(), <span class=\"built_in\">FLOOR</span>(RAND() <span class=\"operator\">*</span> <span class=\"number\">100</span>));</span><br><span class=\"line\">      <span class=\"keyword\">SET</span> i <span class=\"operator\">=</span> i <span class=\"operator\">+</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">END</span> WHILE;</span><br><span class=\"line\">  <span class=\"keyword\">RETURN</span> i;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> mock_data();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>上面的有可能无效,可以用下面的</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;schema&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;study&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;table&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;app_user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mockStartIndex&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;auto&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mockCount&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">100000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mockValueReference&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;http://mockjs.com/examples.html#DPD&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mock&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bigint&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;$mockIndex&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;varchar&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;email&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;varchar&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;phone&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;varchar&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gender&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tinyint&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@integer(0,1)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;varchar&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@string(&#x27;lower&#x27;,5)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;age&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tinyint&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@integer(0,100)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;create_time&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;datetime&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@now(&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;update_time&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;timestamp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;@now(&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>性能测试</p>\n<ul>\n<li>\n<p>无索引下 select 耗时 &amp; 搜索行数</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">study&gt; <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">        *</span><br><span class=\"line\">      <span class=\"keyword\">FROM</span></span><br><span class=\"line\">        app_user</span><br><span class=\"line\">      <span class=\"keyword\">WHERE</span></span><br><span class=\"line\">          <span class=\"type\">name</span> = <span class=\"string\">&#x27;wkjvo&#x27;</span></span><br><span class=\"line\">[<span class=\"number\">2021</span><span class=\"number\">-03</span><span class=\"number\">-17</span> <span class=\"number\">12</span>:<span class=\"number\">06</span>:<span class=\"number\">29</span>] 在 <span class=\"number\">202</span> ms (execution: <span class=\"number\">72</span> ms, fetching: <span class=\"number\">130</span> ms) 中从 <span class=\"number\">1</span> 开始检索到<span class=\"number\">1</span> 行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">rows</span>: <span class=\"number\">99946</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>添加索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> INDEX idx_app_user_name <span class=\"keyword\">ON</span> app_user(name);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>有索引的 select</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"code\"><pre><span class=\"line\">study&gt; <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">        *</span><br><span class=\"line\">      <span class=\"keyword\">FROM</span></span><br><span class=\"line\">        app_user</span><br><span class=\"line\">      <span class=\"keyword\">WHERE</span></span><br><span class=\"line\">          <span class=\"type\">name</span> = <span class=\"string\">&#x27;wkjvo&#x27;</span></span><br><span class=\"line\">[<span class=\"number\">2021</span><span class=\"number\">-03</span><span class=\"number\">-17</span> <span class=\"number\">12</span>:<span class=\"number\">12</span>:<span class=\"number\">11</span>] 在 <span class=\"number\">100</span> ms (execution: <span class=\"number\">6</span> ms, fetching: <span class=\"number\">94</span> ms) 中从 <span class=\"number\">1</span> 开始检索到<span class=\"number\">1</span> 行</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">rows</span>: <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"索引规矩\">索引规矩</h3>\n<ul>\n<li>\n<p>无索引时是暴力遍历搜索,数据表越大越慢;有索引时是对特定数据结构索引,搜索速度快,但是在增删改时有额外性能开销.</p>\n<ol>\n<li>不要对<code>经常变动</code>的数据加索引</li>\n<li><code>小数据量</code>的表建议不要加索引</li>\n<li>一般只在查找条件的字段索引</li>\n</ol>\n</li>\n<li>\n<p>索引数据结构</p>\n<ol>\n<li>hash 单个索引快,范围索引慢</li>\n<li>Btree</li>\n</ol>\n</li>\n<li>\n<p>不同的数据库引擎所支持的索引类型以及索引数据结构不同</p>\n<ul>\n<li>InnoDB 支持事务，支持行级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li>\n<li>MyISAM 不支持事务，支持表级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li>\n</ul>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "MySQL"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/SQL/2/",
            "url": "https://weidows.github.io/post/lang/Java/SQL/2/",
            "title": "🚀进修MySQL~(贰)",
            "date_published": "2021-03-10T04:14:47.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:16:10\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\SQL\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#dql-%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2\">DQL-数据查询</a>\n<ul>\n<li><a href=\"#%E6%80%BB%E8%A7%88\">总览</a></li>\n<li><a href=\"#select\">SELECT</a></li>\n<li><a href=\"#%E5%8E%BB%E9%87%8D-distinct\">去重 DISTINCT</a></li>\n<li><a href=\"#%E5%AF%B9%E5%88%97%E4%BD%BF%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F\">对列使用表达式</a></li>\n<li><a href=\"#where\">where</a>\n<ul>\n<li><a href=\"#%E9%80%BB%E8%BE%91%E6%93%8D%E4%BD%9C%E7%AC%A6\">逻辑操作符</a></li>\n<li><a href=\"#%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2\">模糊查询</a></li>\n<li><a href=\"#%E9%80%9A%E9%85%8D%E7%AC%A6\">通配符</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%81%94%E8%A1%A8%E6%9F%A5%E8%AF%A2\">联表查询</a></li>\n<li><a href=\"#%E8%87%AA%E8%BF%9E%E6%8E%A5\">自连接</a></li>\n<li><a href=\"#%E6%8E%92%E5%BA%8F\">排序</a></li>\n<li><a href=\"#%E5%88%86%E9%A1%B5\">分页</a></li>\n<li><a href=\"#%E5%AD%90%E6%9F%A5%E8%AF%A2\">子查询</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DQL-数据查询\">DQL-数据查询</h2>\n<h3 id=\"总览\">总览</h3>\n<ul>\n<li>\n<p>语句顺序不能变</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVscAz.png\" alt=\"20210316194554\" />\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> [<span class=\"keyword\">ALL</span> <span class=\"operator\">|</span> <span class=\"keyword\">DISTINCT</span>]</span><br><span class=\"line\">&#123;<span class=\"operator\">*</span> <span class=\"operator\">|</span> table.<span class=\"operator\">*</span> <span class=\"operator\">|</span> [table.field1[<span class=\"keyword\">as</span> alias1][,table.field2[<span class=\"keyword\">as</span> alias2]][,...]]&#125;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name [<span class=\"keyword\">as</span> table_alias]</span><br><span class=\"line\">  [<span class=\"keyword\">left</span> <span class=\"operator\">|</span> <span class=\"keyword\">right</span> <span class=\"operator\">|</span> <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> table_name2]  <span class=\"comment\">-- 联合查询</span></span><br><span class=\"line\">  [<span class=\"keyword\">WHERE</span> ...]  <span class=\"comment\">-- 指定结果需满足的条件</span></span><br><span class=\"line\">  [<span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> ...]  <span class=\"comment\">-- 指定结果按照哪几个字段来分组</span></span><br><span class=\"line\">  [<span class=\"keyword\">HAVING</span>]  <span class=\"comment\">-- 过滤分组的记录必须满足的次要条件</span></span><br><span class=\"line\">  [<span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> ...]  <span class=\"comment\">-- 指定查询记录按一个或多个条件排序</span></span><br><span class=\"line\">  [LIMIT &#123;[<span class=\"keyword\">offset</span>,]row_count <span class=\"operator\">|</span> row_countOFFSET <span class=\"keyword\">offset</span>&#125;]; <span class=\"comment\">-- 指定查询的记录从哪条至哪条</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"SELECT\">SELECT</h3>\n<blockquote>\n<p>SELECT 列名 [AS 显示列名] FROM 表名 [AS 显示表名];</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查询所有学生信息</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询指定列</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentid,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 这里是为列取别名(as关键词可以省略)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentid <span class=\"keyword\">AS</span> `学 号`,</span><br><span class=\"line\">  studentname `姓 名`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- as也可以为表取别名(并不会显示出来)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentid <span class=\"keyword\">AS</span> `学 号`,</span><br><span class=\"line\">  studentname <span class=\"keyword\">AS</span> `姓 名`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student <span class=\"keyword\">AS</span> `表`;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 通过CONCAT()函数拼接字符串</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  CONCAT(<span class=\"string\">&#x27;姓名: &#x27;</span>, studentname) <span class=\"keyword\">AS</span> `拼接后的名字`</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br></pre></td></tr></table></figure>\n<h3 id=\"去重-DISTINCT\">去重 DISTINCT</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> student</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"对列使用表达式\">对列使用表达式</h3>\n<ul>\n<li>数据库中的表达式 : 一般由文本值 , 列值 , NULL , 函数和操作符等组成</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查询自增步长</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  @<span class=\"variable\">@auto_increment_increment</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询版本号</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  VERSION();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 表达式</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  <span class=\"number\">100</span> <span class=\"operator\">*</span> <span class=\"number\">3</span> <span class=\"number\">-1</span> <span class=\"keyword\">AS</span> `结果`;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 学员考试成绩集体提分一分查看</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentid,</span><br><span class=\"line\">  gradeid <span class=\"operator\">+</span> <span class=\"number\">1</span> <span class=\"keyword\">AS</span> <span class=\"string\">&#x27;升级后&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"where\">where</h3>\n<blockquote>\n<p>表达式结果必须是 <code>布尔值</code></p>\n</blockquote>\n<h4 id=\"逻辑操作符\">逻辑操作符</h4>\n<ul>\n<li>AND &amp;&amp;</li>\n<li>OR ||</li>\n<li>NOT !</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 满足条件的查询</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Studentno,StudentResult <span class=\"keyword\">FROM</span> <span class=\"keyword\">result</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询考试成绩在95-100之间的</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Studentno,StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">result</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> StudentResult<span class=\"operator\">&gt;=</span><span class=\"number\">95</span> <span class=\"operator\">&amp;&amp;</span> StudentResult<span class=\"operator\">&lt;=</span><span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 模糊查询</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Studentno,StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">result</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> StudentResult <span class=\"keyword\">BETWEEN</span> <span class=\"number\">95</span> <span class=\"keyword\">AND</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 除了1000号同学,要其他同学的成绩</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> studentno,studentresult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">result</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> studentno<span class=\"operator\">!=</span><span class=\"number\">1000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 使用NOT</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> studentno,studentresult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> <span class=\"keyword\">result</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"operator\">!</span> studentno<span class=\"operator\">=</span><span class=\"number\">1000</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h4 id=\"模糊查询\">模糊查询</h4>\n  <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsS0Y.png\" alt=\"20210312120236\" />\n<ul>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- LIKE like结合使用的通配符:  % (代表0到任意个字符)   _ (一个字符)</span></span><br><span class=\"line\"><span class=\"comment\">-- =============================================</span></span><br><span class=\"line\"><span class=\"comment\">-- 查询姓刘的同学的学号及姓名</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentname <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;刘%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询姓刘的同学,后面只有一个字的</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentname <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;刘_&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询姓刘的同学,后面只有两个字的</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentname <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;刘__&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询姓名中含有 &#x27;嘉&#x27; 字的</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentname <span class=\"keyword\">LIKE</span> <span class=\"string\">&#x27;%嘉%&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 查询姓名中含有特殊字符的需要使用转义符号 &#x27;\\&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">-- 自定义转义符关键字: ESCAPE &#x27;:&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- IN</span></span><br><span class=\"line\"><span class=\"comment\">-- =============================================</span></span><br><span class=\"line\"><span class=\"comment\">-- 查询学号为1000,1001,1002的学生姓名</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  studentno <span class=\"keyword\">IN</span> (<span class=\"number\">1000</span>, <span class=\"number\">1001</span>, <span class=\"number\">1002</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询地址在北京,南京,河南洛阳的学生</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  address</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  address <span class=\"keyword\">IN</span> (<span class=\"string\">&#x27;北京&#x27;</span>, <span class=\"string\">&#x27;南京&#x27;</span>, <span class=\"string\">&#x27;河南洛阳&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 对NULL判断 不能直接写=NULL, 用 is null</span></span><br><span class=\"line\"><span class=\"comment\">-- =============================================</span></span><br><span class=\"line\"><span class=\"comment\">-- 查询出生日期没有填写的同学</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  BornDate <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询出生日期填写的同学</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  BornDate <span class=\"keyword\">IS</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询没有写家庭住址的同学</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  Address <span class=\"operator\">=</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">OR</span> Address <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span>;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h4 id=\"通配符\">通配符</h4>\n<p>比如有个表 user,有一个 <code>name</code> 数据为<code>张三</code>,需要通过’张’字模糊查询出来</p>\n<ul>\n<li>\n<p>这样是查不出来的,这是全字匹配,换为’张三’可以查出来</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> <span class=\"keyword\">user</span></span><br><span class=\"line\"><span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;张&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>需要改成这样: 这样是作为通配符,name 中含有’张’字的都会被匹配出来.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> <span class=\"keyword\">user</span></span><br><span class=\"line\"><span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%张%&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"联表查询\">联表查询</h3>\n<ul>\n<li>\n<p>七种 SQL joins</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVslkM.png\" alt=\"20210313224946\" />\n<ul>\n<li>\n<p>共有四种操作符 <code>inner,full outer,left,right</code></p>\n</li>\n<li>\n<p>ON 后面跟的是 A 表与 B 表数据交叉列,是 join 成立的条件.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- student和result表中都有studentno,如不指定select那个表中的,会报错&quot;不明确&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 右连接</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 等值连接</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s,</span><br><span class=\"line\">  <span class=\"keyword\">result</span> r</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 左连接 (查询了所有同学,不考试的也会查出来)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查一下缺考的同学(左连接应用场景)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  StudentResult <span class=\"keyword\">IS</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询参加了考试的同学信息(学号,学生姓名,科目名,分数)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  `student` s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `<span class=\"keyword\">result</span>` r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> sub.subjectno <span class=\"operator\">=</span> r.subjectno</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"自连接\">自连接</h3>\n<ul>\n<li>\n<p>把一张表视作两张表,然后把<code>同一列</code>的不同数据筛选开<code>作为两列</code>输出</p>\n</li>\n<li>\n<p>初始化数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建一个表</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `category` (</span><br><span class=\"line\">  `categoryid` <span class=\"type\">INT</span>(<span class=\"number\">10</span>) UNSIGNED <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"string\">&#x27;主题id&#x27;</span>,</span><br><span class=\"line\">  `pid` <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;父id&#x27;</span>,</span><br><span class=\"line\">  `categoryName` <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;主题名字&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`categoryid`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">9</span> <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 插入数据</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  `category` (`categoryid`, `pid`, `categoryName`)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;信息技术&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;软件开发&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;数据库&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;美术设计&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;web开发&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;ps技术&#x27;</span>),</span><br><span class=\"line\">  (<span class=\"string\">&#x27;8&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;办公信息&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>select 例子</p>\n<ul>\n<li>把同一张表中 categoryName 这一列 select 出父栏目和子栏目两列数据输出</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  a.categoryName <span class=\"keyword\">AS</span> <span class=\"string\">&#x27;父栏目&#x27;</span>,</span><br><span class=\"line\">  b.categoryName <span class=\"keyword\">AS</span> <span class=\"string\">&#x27;子栏目&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  category <span class=\"keyword\">AS</span> a,</span><br><span class=\"line\">  category <span class=\"keyword\">AS</span> b</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  a.`categoryid` <span class=\"operator\">=</span> b.`pid`;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>输出</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsORR.png\" alt=\"20210315112316\" />\n</li>\n<li>\n<p>其他样例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 思考题:查询参加了考试的同学信息(学号,学生姓名,科目名,分数)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> sub.subjectno <span class=\"operator\">=</span> r.subjectno;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询学员及所属的年级(学号,学生姓名,年级名)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno <span class=\"keyword\">AS</span> 学 号,</span><br><span class=\"line\">  studentname <span class=\"keyword\">AS</span> 学 生 姓 名,</span><br><span class=\"line\">  gradename <span class=\"keyword\">AS</span> 年 级 名 称</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> grade g <span class=\"keyword\">ON</span> s.`GradeId` <span class=\"operator\">=</span> g.`GradeID`;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询科目及所属的年级(科目名称,年级名称)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  subjectname <span class=\"keyword\">AS</span> 科 目 名 称,</span><br><span class=\"line\">  gradename <span class=\"keyword\">AS</span> 年 级 名 称</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  SUBJECT sub</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> grade g <span class=\"keyword\">ON</span> sub.gradeid <span class=\"operator\">=</span> g.gradeid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询 数据库结构-1 的所有考试结果(学号 学生姓名 科目名称 成绩)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> r.subjectno <span class=\"operator\">=</span> sub.subjectno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;数据库结构-1&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"排序\">排序</h3>\n<blockquote>\n<p>ORDER BY 列名 ASC/DESC(升序/降)</p>\n</blockquote>\n<ul>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 按成绩降序排序</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> r.subjectno <span class=\"operator\">=</span> sub.subjectno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;数据库结构-1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  StudentResult <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"分页\">分页</h3>\n<blockquote>\n<p>LIMIT n,m</p>\n</blockquote>\n<ul>\n<li>\n<p>含义</p>\n<ul>\n<li>\n<p>从第 n 条开始显示</p>\n</li>\n<li>\n<p>每页显示 m 条数</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>比如需要每页显示 10 条数据,当前要看第一页</p>\n<ul>\n<li>\n<p><code>LIMIT 0,10</code></p>\n</li>\n<li>\n<p>第 n 页数据就是 <code>LIMIT 10(n-1),10</code></p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 每页显示5条数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> r.subjectno <span class=\"operator\">=</span> sub.subjectno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;数据库结构-1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  StudentResult <span class=\"keyword\">DESC</span>,</span><br><span class=\"line\">  studentno</span><br><span class=\"line\">LIMIT</span><br><span class=\"line\">  <span class=\"number\">0</span>, <span class=\"number\">5</span> ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询 JAVA第一学年 课程成绩前10名并且分数大于80的学生信息(学号,姓名,课程名,分数)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  s.studentno,</span><br><span class=\"line\">  studentname,</span><br><span class=\"line\">  subjectname,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  student s</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> <span class=\"keyword\">result</span> r <span class=\"keyword\">ON</span> r.studentno <span class=\"operator\">=</span> s.studentno</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> r.subjectno <span class=\"operator\">=</span> sub.subjectno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;JAVA第一学年&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  StudentResult <span class=\"keyword\">DESC</span></span><br><span class=\"line\">LIMIT</span><br><span class=\"line\">  <span class=\"number\">0</span>, <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"子查询\">子查询</h3>\n<p>查询语句中 where 中嵌套查询语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 查询 数据库结构-1 的考试结果(学号,科目编号,成绩),并且成绩降序排列</span></span><br><span class=\"line\"><span class=\"comment\">-- 方法一:使用连接查询</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  r.subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span> r</span><br><span class=\"line\">  <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> `subject` sub <span class=\"keyword\">ON</span> r.`SubjectNo` <span class=\"operator\">=</span> sub.`SubjectNo`</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;数据库结构-1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  studentresult <span class=\"keyword\">DESC</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 方法二:使用子查询(执行顺序:由里及外)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  studentno,</span><br><span class=\"line\">  subjectno,</span><br><span class=\"line\">  StudentResult</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  <span class=\"keyword\">result</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  subjectno <span class=\"operator\">=</span>(</span><br><span class=\"line\">    <span class=\"keyword\">SELECT</span></span><br><span class=\"line\">      subjectno</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span></span><br><span class=\"line\">      `subject`</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span></span><br><span class=\"line\">      subjectname <span class=\"operator\">=</span> <span class=\"string\">&#x27;数据库结构-1&#x27;</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">  studentresult <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "MySQL"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/SQL/1/",
            "url": "https://weidows.github.io/post/lang/Java/SQL/1/",
            "title": "🚀进修MySQL~(壹)",
            "date_published": "2021-03-03T15:58:07.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:16:25\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\SQL\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE\">安装&amp;配置</a>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"#%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81\">设置密码</a></li>\n<li><a href=\"#%E9%85%8D%E7%BD%AE\">配置</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%BF%9E%E6%8E%A5-mysql\">连接 MySQL</a>\n<ul>\n<li><a href=\"#vscode\">VScode</a></li>\n<li><a href=\"#sqlyog\">SQLyog</a></li>\n<li><a href=\"#dbeaver\">DBeaver</a></li>\n<li><a href=\"#%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C\">常用操作</a></li>\n</ul>\n</li>\n<li><a href=\"#ddl-%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89\">DDL-数据定义</a>\n<ul>\n<li><a href=\"#%E5%88%97%E7%B1%BB%E5%9E%8B\">列类型</a>\n<ul>\n<li><a href=\"#%E6%95%B0%E5%80%BC\">数值</a></li>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2\">字符串</a></li>\n<li><a href=\"#%E6%97%A5%E6%9C%9F\">日期</a></li>\n<li><a href=\"#null-%E5%80%BC\">NULL 值</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AD%97%E6%AE%B5%E5%B1%9E%E6%80%A7\">字段属性</a>\n<ul>\n<li><a href=\"#%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83\">阿里规范</a></li>\n<li><a href=\"#%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\">命名规范</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E8%A1%A8\">数据表</a>\n<ul>\n<li><a href=\"#%E8%A1%A8%E7%B1%BB%E5%9E%8B\">表类型</a></li>\n<li><a href=\"#%E5%AD%98%E6%94%BE%E4%BD%8D%E7%BD%AE\">存放位置</a></li>\n<li><a href=\"#%E7%BC%96%E7%A0%81\">编码</a></li>\n<li><a href=\"#%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%A1%A8\">操作数据表</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%96%B0%E5%BB%BA%E8%A1%A8-%E4%BE%8B%E5%AD%90\">新建表-例子</a></li>\n</ul>\n</li>\n<li><a href=\"#dml-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\">DML-数据操作</a>\n<ul>\n<li><a href=\"#%E5%A4%96%E9%94%AE\">外键</a></li>\n<li><a href=\"#%E6%B7%BB%E5%8A%A0-insert\">添加 INSERT</a></li>\n<li><a href=\"#%E4%BF%AE%E6%94%B9-update\">修改 UPDATE</a></li>\n<li><a href=\"#%E5%88%A0%E9%99%A4-deletetruncate\">删除 DELETE/TRUNCATE</a></li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<blockquote>\n<p><a href=\"https://csp1999.blog.csdn.net/article/details/109526825?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6.control\">狂神说 MySQL 学习笔记</a></p>\n</blockquote>\n<h2 id=\"简介\">简介</h2>\n<ul>\n<li>\n<p><code>DB</code> 数据库 ( DataBase )</p>\n<ul>\n<li>\n<p>关系型数据库 ( SQL ),比如 MySQL , Oracle , SQL Server , SQLite</p>\n</li>\n<li>\n<p>非关系型数据库 ( NOSQL ),比如 Redis , MongoDB</p>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://hellogithub.com/report/db-engines/\">数据库排行榜</a></p>\n</blockquote>\n</li>\n<li>\n<p><code>DBA</code> 数据库管理员（Database Administrator)</p>\n</li>\n<li>\n<p><code>DBMS</code> 数据库管理系统 ( DataBase Management System )</p>\n</li>\n<li>\n<p>操作分类,对应下文的大标题</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmYDR.png\" alt=\"20210305104453\" />\n</li>\n</ul>\n<hr>\n<h2 id=\"安装-配置\">安装&amp;配置</h2>\n<h3 id=\"安装\">安装</h3>\n<ul>\n<li>\n<p>使用 scoop 安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">scoop install mysql</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>然后注册系统服务</p>\n<ul>\n<li>(这条信息在安装后会提示,需要<code>在管理员模式</code>的命令行下执行)</li>\n</ul>\n<figure class=\"highlight cmake\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysqld --<span class=\"keyword\">install</span> MySQL --defaults-<span class=\"keyword\">file</span>=<span class=\"string\">&quot;D:\\Game\\Scoop\\apps\\mysql\\current\\my.ini&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>然后<code>重启电脑</code>,MySQL 服务会自己跑起来.</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"设置密码\">设置密码</h3>\n<ul>\n<li>\n<p>(也可以不设置密码,跳过.)</p>\n</li>\n<li>\n<p>在 <code>MySQL/bin/</code>下打开终端</p>\n</li>\n<li>\n<p>进入 MySQL 管理</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql –u root –<span class=\"selector-tag\">p</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>更新密码</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> mysql.<span class=\"keyword\">user</span> <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">password</span>(<span class=\"string\">&#x27;2333&#x27;</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">&#x27;root&#x27;</span><span class=\"keyword\">and</span> Host = <span class=\"string\">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>刷新权限</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"code\"><pre><span class=\"line\">flush privileges<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>重启 MySQL 服务</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">net</span> stop mysql</span><br><span class=\"line\"><span class=\"built_in\">net</span> <span class=\"built_in\">start</span> mysql</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"配置\">配置</h3>\n<blockquote>\n<p>找到 <code>MySQL/my.ini</code> ,这是 MySQL 配置文件</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/ray-xujianguo/p/3322455.html\">MySQL 配置文件-my.ini</a></p>\n</blockquote>\n<ul>\n<li>\n<p>我的配置</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#[client]和[mysql]都是客户端,[mysqld]是服务端</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span>=D:/Game/Scoop/persist/mysql/data</span><br><span class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</span><br><span class=\"line\"><span class=\"comment\">#port=3306</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[client]</span></span><br><span class=\"line\"><span class=\"attr\">user</span>=root</span><br><span class=\"line\"><span class=\"comment\">#port=3306</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysql]</span></span><br><span class=\"line\"><span class=\"attr\">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n</blockquote>\n<h2 id=\"连接-MySQL\">连接 MySQL</h2>\n<h3 id=\"VScode\">VScode</h3>\n<ul>\n<li>\n<p>VScode 连接,需要安装 SQL 扩展(随便选一个)</p>\n</li>\n<li>\n<p>安装插件后只需要填写需要的信息,就可以连接上了.</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVm6hX.png\" alt=\"20210304094732\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"SQLyog\">SQLyog</h3>\n<ul>\n<li>\n<p>跟上面一样</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmVHn.png\" alt=\"20210304233850\" />\n</li>\n</ul>\n<hr>\n<h3 id=\"DBeaver\">DBeaver</h3>\n<ul>\n<li>\n<p>个人在后续学习中发现的数据库管理工具,比我用过的(包括 MYSQL workbench,IDEA,VScode,SQLYog) 都要好用,优点:</p>\n<ul>\n<li>\n<p>社区版免费,没广告 (SQLYog 略带广告)</p>\n</li>\n<li>\n<p>中文界面,很友好,操作手感好</p>\n</li>\n<li>\n<p>有方便的 ER 图工具,这个<code>非常非常非常赞!!!</code></p>\n</li>\n<li>\n<p>…不再赘述,建议用这个,如下图:</p>\n</li>\n</ul>\n</li>\n</ul>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVt43h.png\" alt=\"20210405144227\" />\n<hr>\n<h3 id=\"常用操作\">常用操作</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> password<span class=\"operator\">=</span>password(<span class=\"string\">&#x27;123456&#x27;</span>)<span class=\"keyword\">where</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>; <span class=\"comment\">--修改密码</span></span><br><span class=\"line\">flush privileges; <span class=\"comment\">--刷新数据库权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">show</span> databases; <span class=\"comment\">--显示所有数据库</span></span><br><span class=\"line\">use dbname; <span class=\"comment\">--打开某个数据库</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> database [if <span class=\"keyword\">not</span> <span class=\"keyword\">exists</span>] 数据库名; <span class=\"comment\">--创建数据库</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> database [if <span class=\"keyword\">exists</span>] 数据库名; <span class=\"comment\">--删除数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">show</span> tables; <span class=\"comment\">--显示数据库 mysql 中所有的表</span></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">user</span>; <span class=\"comment\">--显示表user 表的信息</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> database name; <span class=\"comment\">--创建数据库</span></span><br><span class=\"line\">use databasename; <span class=\"comment\">--选择数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 单行注释</span></span><br><span class=\"line\"><span class=\"comment\">/* 多行注释 */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>使用 SQLyog</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmj4A.png\" alt=\"20210305111225\" />\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmhCz.png\" alt=\"20210305111244\" />\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"DDL-数据定义\">DDL-数据定义</h2>\n<h3 id=\"列类型\">列类型</h3>\n<ul>\n<li>标红的为常用的.</li>\n</ul>\n<h4 id=\"数值\">数值</h4>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmu05.png\" alt=\"20210305115939\" />\n<h4 id=\"字符串\">字符串</h4>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmyh0.png\" alt=\"20210305115957\" />\n<h4 id=\"日期\">日期</h4>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsoHr.png\" alt=\"20210305120011\" />\n<h4 id=\"NULL-值\">NULL 值</h4>\n<ul>\n<li>不要用 NULL 进行算术运算 , 结果仍为 NULL</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"字段属性\">字段属性</h3>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsGgc.png\" alt=\"20210305155250\" />\n<ul>\n<li>\n<p>UnSigned</p>\n<ul>\n<li>无符号的</li>\n<li>声明该数据列不允许负数 .</li>\n</ul>\n</li>\n<li>\n<p>ZEROFILL</p>\n<ul>\n<li>0 填充的</li>\n<li>不足位数的用 0 来填充 , 如 int(3),5 则为 005</li>\n</ul>\n</li>\n<li>\n<p>Auto_InCrement</p>\n<ul>\n<li>自动增长的 , 每添加一条数据 , 自动在上一个记录数上加 1(默认)</li>\n<li>通常用于设置主键 , 且为整数类型</li>\n<li>可定义起始值和步长,当前表设置步长(AUTO_INCREMENT=100) : 只影响当前表</li>\n<li>SET @@auto_increment_increment=5 ; 影响所有使用自增的表(全局)</li>\n</ul>\n</li>\n<li>\n<p>NOT NULL</p>\n<ul>\n<li>默认为 NULL , 即没有插入该列的数值</li>\n<li>如果设置为 NOT NULL , 则该列必须有值</li>\n</ul>\n</li>\n<li>\n<p>DEFAULT</p>\n<ul>\n<li>默认的,用于设置默认值</li>\n<li>例如,性别字段,默认为&quot;男&quot; , 否则为 “女” ; 若无指定该列的值 , 则默认值为&quot;男&quot;的值</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"阿里规范\">阿里规范</h4>\n<ul>\n<li>\n<p>每个表必须有的五个字段属性</p>\n<ul>\n<li>id 主键</li>\n<li>version 乐观锁</li>\n<li>is_delete 伪删除</li>\n<li>gmt_create 创建时间</li>\n<li>gmt_update 修改时间</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"命名规范\">命名规范</h4>\n<ul>\n<li>\n<p>为什么使用<code>下划线命名法</code>而非<code>驼峰命名法</code>?</p>\n<p>早期的 Oracle 会把所有字段属性名变为大写: lastName -&gt; LASTNAME</p>\n<p>这样就看不出来了,所以用下划线命名法: last_name -&gt; LAST_NAME</p>\n<p>这个惯性一直延续至今,一些数据库/框架也发展处相应的使用规则,就成了一种规范</p>\n</li>\n</ul>\n<hr>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"数据表\">数据表</h3>\n<h4 id=\"表类型\">表类型</h4>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/EasonJim/p/7741164.html\">MySQL 常用的七种表类型（转）</a></p>\n</blockquote>\n<ul>\n<li>\n<p>有十多种类型了,但常用的就两种:<code>MyISAM</code> 与 <code>InnoDB</code>,对比:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th>MyISAM</th>\n<th>InnoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">事务处理</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据行锁定</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">外键约束</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">全文索引</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">空间占用</td>\n<td>较小</td>\n<td>较大(约两倍)</td>\n</tr>\n</tbody>\n</table>\n<hr>\n</li>\n<li>\n<p>适用场景:</p>\n<ul>\n<li>MyISAM : 节约空间及相应速度</li>\n<li>InnoDB : 安全性 , 事务处理及多用户操作数据表</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"存放位置\">存放位置</h4>\n<blockquote>\n<p>Mysql 安装目录/data/对应表名/</p>\n</blockquote>\n<hr>\n<h4 id=\"编码\">编码</h4>\n<ul>\n<li>\n<p>默认是 Latin1 编码,不支持中文</p>\n<ul>\n<li>可以在 MySQL 配置文件中修改默认编码</li>\n</ul>\n</li>\n<li>\n<p>也可以在创建表时指定编码为 <code>utf8</code></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"操作数据表\">操作数据表</h4>\n<ul>\n<li>\n<p>修改表名</p>\n<ul>\n<li>ALTER TABLE 旧表名 RENAME AS 新表名</li>\n</ul>\n</li>\n<li>\n<p>删除数据表</p>\n<ul>\n<li>DROP TABLE [IF EXISTS] 表名</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>添加字段</p>\n<ul>\n<li>ALTER TABLE 表名 ADD 字段名 列属性[属性值]</li>\n</ul>\n</li>\n<li>\n<p>修改字段</p>\n<ul>\n<li>\n<p>ALTER TABLE 表名 MODIFY 字段名 列类型[属性值]</p>\n</li>\n<li>\n<p>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 列属性[属性值]</p>\n</li>\n</ul>\n</li>\n<li>\n<p>删除字段</p>\n<ul>\n<li>ALTER TABLE 表名 DROP 字段名</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"新建表-例子\">新建表-例子</h3>\n<ul>\n<li>\n<p>板栗</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> `student`(</span><br><span class=\"line\">  <span class=\"comment\">-- CREATE TABLE [IF NOT EXISTS] `表名`(</span></span><br><span class=\"line\">  id <span class=\"type\">int</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">primary</span> key AUTO_INCREMENT comment <span class=\"string\">&#x27;primary key&#x27;</span>,</span><br><span class=\"line\">  create_time DATETIME COMMENT <span class=\"string\">&#x27;create time&#x27;</span>,</span><br><span class=\"line\">  update_time DATETIME COMMENT <span class=\"string\">&#x27;update time&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class=\"line\">  <span class=\"comment\">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class=\"line\">  <span class=\"comment\">-- `字段名` 列类型 [字段属性] [索引] [注释],</span></span><br><span class=\"line\">) <span class=\"keyword\">default</span> charset utf8 comment <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">-- ) [表类型] [字符集] [注释];</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>举例</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  创建一个school数据库-&gt;创建学生表(列,字段)</span></span><br><span class=\"line\"><span class=\"comment\">  学号int 登录密码varchar(20) 姓名,性别varchar(2),出生日期(datatime),家庭住址,email</span></span><br><span class=\"line\"><span class=\"comment\">  创建表之前 , 一定要先选择数据库</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">USE `school`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> `stu_data` (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"string\">&#x27;学号&#x27;</span>,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;匿名&#x27;</span> COMMENT <span class=\"string\">&#x27;姓名&#x27;</span>,</span><br><span class=\"line\">  `pwd` <span class=\"type\">varchar</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;123456&#x27;</span> COMMENT <span class=\"string\">&#x27;密码&#x27;</span>,</span><br><span class=\"line\">  `sex` <span class=\"type\">varchar</span>(<span class=\"number\">2</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;男&#x27;</span> COMMENT <span class=\"string\">&#x27;性别&#x27;</span>,</span><br><span class=\"line\">  `birthday` datetime <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;生日&#x27;</span>,</span><br><span class=\"line\">  `address` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;地址&#x27;</span>,</span><br><span class=\"line\">  `email` <span class=\"type\">varchar</span>(<span class=\"number\">50</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"DML-数据操作\">DML-数据操作</h2>\n<h3 id=\"外键\">外键</h3>\n<ul>\n<li>\n<p>一个表内的某<code>列</code>引用另外一个表中的一<code>列</code>,被引用的表是<code>主表</code>,引用的表是<code>从表</code>,从表通过建立列的索引来引用另一个表的索引,这个关系叫做外键.</p>\n<ul>\n<li>\n<p>主表中被引用的列必须有索引(比如 PRIMARY,KEY 类型)<br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsXjo.png\" alt=\"20210307123305\" /></p>\n</li>\n<li>\n<p>在外键存在的情况下,主表无法被删除,主从表的关联索引也无法被删除,但可以修改(类型).<br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVsx9S.png\" alt=\"20210307124315\" /></p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>建立方法</p>\n<ol>\n<li>创建两张表</li>\n<li>主从表各创建一个索引(PRIMARY 或者 KEY 都可以)</li>\n<li>把从表的索引约束到主表的索引上</li>\n<li>外键建立成功!</li>\n</ol>\n<hr>\n</li>\n<li>\n<p>代码形式</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 年级表 (id,年级名称)</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `grade` (</span><br><span class=\"line\">  `gradeid` <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT COMMENT <span class=\"string\">&#x27;年级ID&#x27;</span>,</span><br><span class=\"line\">  `gradename` <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;年级名称&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`gradeid`)</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 学生信息表 (学号,姓名,性别,年级,手机,地址,出生日期,邮箱,身份证号)</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `student` (</span><br><span class=\"line\">  `studentid` <span class=\"type\">INT</span>(<span class=\"number\">4</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;学号&#x27;</span>,</span><br><span class=\"line\">  `studentname` <span class=\"type\">VARCHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;匿名&#x27;</span> COMMENT <span class=\"string\">&#x27;姓名&#x27;</span>,</span><br><span class=\"line\">  `sex` TINYINT(<span class=\"number\">1</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">&#x27;1&#x27;</span> COMMENT <span class=\"string\">&#x27;性别&#x27;</span>,</span><br><span class=\"line\">  `gradeid` <span class=\"type\">INT</span>(<span class=\"number\">10</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;年级&#x27;</span>,</span><br><span class=\"line\">  `phoneNum` <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;手机&#x27;</span>,</span><br><span class=\"line\">  `address` <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;地址&#x27;</span>,</span><br><span class=\"line\">  `borndate` DATETIME <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;生日&#x27;</span>,</span><br><span class=\"line\">  `email` <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;邮箱&#x27;</span>,</span><br><span class=\"line\">  `idCard` <span class=\"type\">VARCHAR</span>(<span class=\"number\">18</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;身份证号&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`studentid`),</span><br><span class=\"line\">  <span class=\"comment\">-- 创 建 外 键 的 方 式 一: 创 建 子 表 同 时 创 建 外 键</span></span><br><span class=\"line\">  KEY `FK_gradeid` (`gradeid`), <span class=\"comment\">-- 创建一个KEY类型的索引</span></span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `FK_gradeid` <span class=\"keyword\">FOREIGN</span> KEY (`gradeid`) <span class=\"keyword\">REFERENCES</span> `grade` (`gradeid`) <span class=\"comment\">-- 把索引约束到主表索引</span></span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> INNODB <span class=\"keyword\">DEFAULT</span> CHARSET <span class=\"operator\">=</span> utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建外键方式二 : 创建子表完毕后,修改子表添加外键</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span></span><br><span class=\"line\">  `student`</span><br><span class=\"line\"><span class=\"keyword\">ADD</span></span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `FK_gradeid` <span class=\"keyword\">FOREIGN</span> KEY (`gradeid`) <span class=\"keyword\">REFERENCES</span> `grade` (`gradeid`);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以上是表的外键,不建议使用数据库级别的外键</p>\n<ul>\n<li>\n<p>以后如需引用多表数据,常用程序实现</p>\n</li>\n<li>\n<p>阿里规范:<code>不能使用外键和级联</code>,在 delete 或 update 时需要考虑外键因素,增加负担</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"添加-INSERT\">添加 INSERT</h3>\n<blockquote>\n<p>语法 : INSERT INTO 表名[(字段 1,字段 2,字段 3,…)] VALUES (‘值 1’,‘值 2’,‘值 3’)</p>\n</blockquote>\n<ul>\n<li>\n<p>字段与值位置对应</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  grade(gradename, gradeid)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span></span><br><span class=\"line\">  (<span class=\"string\">&#x27;大一&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>省略字段的话,值得顺序必须与数据表中的字段顺序一致</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  grade</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span></span><br><span class=\"line\">  (<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;大二&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>一次插入多条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span></span><br><span class=\"line\">  grade(gradename)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span></span><br><span class=\"line\">  (<span class=\"string\">&#x27;大三&#x27;</span>),(<span class=\"string\">&#x27;大四&#x27;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"修改-UPDATE\">修改 UPDATE</h3>\n<blockquote>\n<p>UPDATE <code>表名</code> SET <code>列名 1</code>=value <code>列名 2</code>=value [WHERE 条件];</p>\n</blockquote>\n<ul>\n<li>\n<p>value 为修改后的数据 , 可以为变量 , 具体值 , 表达式或者嵌套的 SELECT 结果</p>\n</li>\n<li>\n<p>不指定 where 的话,会修改表内所有数据</p>\n</li>\n<li>\n<p>注意 value 用单引号’引起来,不是飘`</p>\n</li>\n<li>\n<p>例子(随机生成 20 条数据后多条件筛选)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span></span><br><span class=\"line\">  `grade`</span><br><span class=\"line\"><span class=\"keyword\">SET</span></span><br><span class=\"line\">  `gradename` <span class=\"operator\">=</span> <span class=\"string\">&#x27;大一&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  gradeid <span class=\"operator\">&gt;</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> gradeid <span class=\"operator\">&lt;</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"keyword\">OR</span> gradeid <span class=\"operator\">=</span> <span class=\"number\">15</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果(json)</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;lonrd&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;2&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;3&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;4&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;5&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;6&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;7&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;8&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;9&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;10&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;fmtdq&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;11&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;tvyoh&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;12&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;ovhvu&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;13&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hipnh&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;14&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;kjdxr&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;15&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;大一&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;16&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;xvlbp&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;17&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;bgphq&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;18&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;jcpmc&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;19&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gjuof&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradeid&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;20&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;gradename&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;owxri&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"删除-DELETE-TRUNCATE\">删除 DELETE/TRUNCATE</h3>\n<blockquote>\n<p>DELETE FROM 表名 [WHERE condition];</p>\n</blockquote>\n<ul>\n<li>\n<p>如不指定 where,会删除表中所有数据</p>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span></span><br><span class=\"line\">  grade</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  gradeid <span class=\"operator\">=</span> <span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p>TRUNCATE [TABLE] 表名;</p>\n</blockquote>\n<ul>\n<li>\n<p>清空表,表的结构和索引不变</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> `student`</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>二者都能删除数据,不影响表结构</p>\n<ul>\n<li>DELETE 删除数据后不影响<code>自动增量</code>,会记录日志.</li>\n<li>TRUNCATE 清空表之后会把<code>自动增量</code>归零,不会记录日志.</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>使用 DELETE 清空不同引擎的数据库表数据.重启数据库服务后</p>\n<ul>\n<li>\n<p>InnoDB : 自增列从初始值重新开始 (因为是存储在内存中,断电即失)</p>\n</li>\n<li>\n<p>MyISAM : 自增列依然从上一个自增数据基础上开始 (存在文件中,不会丢失)</p>\n</li>\n</ul>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "MySQL"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/1/",
            "url": "https://weidows.github.io/post/lang/Java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/1/",
            "title": "🎶Java网络编程",
            "date_published": "2021-02-28T09:06:28.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-07 12:48:06\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\网络编程\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E7%AE%80%E4%BB%8B\">简介</a></li>\n<li><a href=\"#ip\">IP</a></li>\n<li><a href=\"#%E7%AB%AF%E5%8F%A3\">端口</a></li>\n<li><a href=\"#%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE\">通信协议</a>\n<ul>\n<li><a href=\"#tcp\">TCP</a></li>\n<li><a href=\"#udp\">UDP</a></li>\n</ul>\n</li>\n<li><a href=\"#tcp-%E8%BF%9E%E6%8E%A5\">TCP 连接</a>\n<ul>\n<li><a href=\"#server-%E7%AB%AF\">Server 端</a></li>\n<li><a href=\"#client-%E7%AB%AF\">Client 端</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93\">文件传输</a>\n<ul>\n<li><a href=\"#server\">Server</a></li>\n<li><a href=\"#client\">Client</a></li>\n</ul>\n</li>\n<li><a href=\"#udp-%E8%BF%9E%E6%8E%A5\">UDP 连接</a>\n<ul>\n<li><a href=\"#server-1\">Server</a></li>\n<li><a href=\"#client-1\">Client</a></li>\n</ul>\n</li>\n<li><a href=\"#udp-%E5%BE%AA%E7%8E%AF%E5%8F%91%E9%80%81\">UDP 循环发送</a>\n<ul>\n<li><a href=\"#server-2\">Server</a></li>\n<li><a href=\"#client-2\">Client</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%8C%E5%90%91%E8%81%8A%E5%A4%A9\">双向聊天</a>\n<ul>\n<li><a href=\"#%E5%8F%91%E9%80%81%E7%BA%BF%E7%A8%8B\">发送线程</a></li>\n<li><a href=\"#%E6%8E%A5%E6%94%B6%E7%BA%BF%E7%A8%8B\">接收线程</a></li>\n<li><a href=\"#%E8%80%81%E5%B8%88\">老师</a></li>\n<li><a href=\"#%E5%AD%A6%E7%94%9F\">学生</a></li>\n</ul>\n</li>\n<li><a href=\"#url\">URL</a></li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"简介\">简介</h2>\n<ul>\n<li>\n<p>架构区分</p>\n<ul>\n<li>网页编程: B/S</li>\n<li>网络编程: C/S</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>通信要素(TCP/IP)</p>\n<ul>\n<li>IP</li>\n<li>端口</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>协议参考</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmdqS.png\" alt=\"20210228232437\" />\n<blockquote>\n<p>更为详细的: <a href=\"http://www.colasoft.com.cn/download/protocols_map.php\">科来网络通讯协议图 2020 版</a></p>\n</blockquote>\n<ul>\n<li>此处针对传输层 TCP/UDP 学习.</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"IP\">IP</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Ip</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// write your code here</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 获取本机内网IP地址</span></span><br><span class=\"line\">      <span class=\"type\">InetAddress</span> <span class=\"variable\">inetAddress1</span> <span class=\"operator\">=</span> InetAddress.getByName(<span class=\"string\">&quot;127.0.0.1&quot;</span>);</span><br><span class=\"line\">      System.out.println(inetAddress1);</span><br><span class=\"line\">      <span class=\"type\">InetAddress</span> <span class=\"variable\">inetAddress2</span> <span class=\"operator\">=</span> InetAddress.getByName(<span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">      System.out.println(inetAddress2);</span><br><span class=\"line\">      <span class=\"type\">InetAddress</span> <span class=\"variable\">inetAddress3</span> <span class=\"operator\">=</span> InetAddress.getLocalHost();</span><br><span class=\"line\">      System.out.println(inetAddress3);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//查询网站ip地址</span></span><br><span class=\"line\">      <span class=\"type\">InetAddress</span> <span class=\"variable\">inetAddress4</span> <span class=\"operator\">=</span> InetAddress.getByName(<span class=\"string\">&quot;www.bilibili.com&quot;</span>);</span><br><span class=\"line\">      System.out.println(inetAddress4);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//常用方法</span></span><br><span class=\"line\">      System.out.println(inetAddress4.getAddress());</span><br><span class=\"line\">      System.out.println(inetAddress4.getCanonicalHostName()); <span class=\"comment\">//规范的名字</span></span><br><span class=\"line\">      System.out.println(inetAddress4.getHostAddress()); <span class=\"comment\">//ip</span></span><br><span class=\"line\">      System.out.println(inetAddress4.getHostName()); <span class=\"comment\">//域名，或者自己电脑的名字</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    /127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\">    localhost/127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\">    DESKTOP-CTDDD3K/192.168.114.1</span></span><br><span class=\"line\"><span class=\"comment\">    www.bilibili.com/121.17.123.130</span></span><br><span class=\"line\"><span class=\"comment\">    [B@2a3046da</span></span><br><span class=\"line\"><span class=\"comment\">    121.17.123.130</span></span><br><span class=\"line\"><span class=\"comment\">    121.17.123.130</span></span><br><span class=\"line\"><span class=\"comment\">    www.bilibili.com</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"端口\">端口</h2>\n<ul>\n<li>\n<p>TCP 与 UDP 各有 65535 个端口</p>\n<ul>\n<li>\n<p>两个协议间不冲突</p>\n</li>\n<li>\n<p>但是一个协议下的一个端口只能同时被一个软件占用.</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>端口分类</p>\n<ul>\n<li>\n<p>公有端口 0 ~ 1023</p>\n<ul>\n<li>\n<p>HTTP：80</p>\n</li>\n<li>\n<p>HTTPS：443</p>\n</li>\n<li>\n<p>FTP：21</p>\n</li>\n<li>\n<p>Telent：23</p>\n</li>\n</ul>\n</li>\n<li>\n<p>程序注册端口：1024 ~ 49151，分配给用户或者程序</p>\n<ul>\n<li>\n<p>Tomcat：8080</p>\n</li>\n<li>\n<p>MySQL：3306</p>\n</li>\n<li>\n<p>Oracle：1512</p>\n</li>\n</ul>\n</li>\n<li>\n<p>动态、私有：49152 ~ 65535</p>\n</li>\n</ul>\n<hr>\n</li>\n<li>\n<p>常用 shell 指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">netstat -ano #查看所有的端口</span><br><span class=\"line\">netstat -ano | finstr &quot;5900&quot; #查看指定的端口</span><br><span class=\"line\">tasklist | findstr &quot;8696&quot; #查看指定端口的进程</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>InetSocketAddress</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetSocketAddress;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Port</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">InetSocketAddress</span> <span class=\"variable\">socketAddress</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InetSocketAddress</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8080</span>);</span><br><span class=\"line\">    System.out.println(socketAddress);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(socketAddress.getAddress());</span><br><span class=\"line\">    System.out.println(socketAddress.getHostName());</span><br><span class=\"line\">    System.out.println(socketAddress.getPort());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    localhost/127.0.0.1:8080</span></span><br><span class=\"line\"><span class=\"comment\">    localhost/127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\">    localhost</span></span><br><span class=\"line\"><span class=\"comment\">    8080</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"通信协议\">通信协议</h2>\n<ul>\n<li>\n<p>通过约定协议来管控通信的速率,码率等问题</p>\n</li>\n<li>\n<p>并通过协议分层来简化复杂度</p>\n<hr>\n</li>\n<li>\n<p>几种协议</p>\n<ul>\n<li>\n<p>TCP:用户传输协议</p>\n</li>\n<li>\n<p>UDP:用户数据报协议</p>\n</li>\n<li>\n<p>IP:网络互连协议</p>\n</li>\n<li>\n<p>TCP/IP 协议簇:是一组协议 (四层概念模型)</p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"TCP\">TCP</h3>\n<ul>\n<li>\n<p>TCP 是客户端&lt;–&gt;服务端双向的信息沟通,可长时间稳定连接</p>\n</li>\n<li>\n<p>稳定连接最小验证<code>三次握手,四次挥手</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">最少需要三次，保证稳定连接！</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>：你瞅啥？</span><br><span class=\"line\"><span class=\"selector-tag\">B</span>：瞅你咋地？</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>：干一场！</span><br><span class=\"line\"></span><br><span class=\"line\">至少四次,双方才能都断开连接</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>：我要走了</span><br><span class=\"line\"><span class=\"selector-tag\">B</span>：你真的要走了吗？</span><br><span class=\"line\"><span class=\"selector-tag\">B</span>：你真的真的要走了吗？</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>：我真的要走了</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"UDP\">UDP</h3>\n<ul>\n<li>\n<p>单向的信息传递</p>\n</li>\n<li>\n<p>没有客户端与服务端界限</p>\n</li>\n<li>\n<p>无论有没有接收方,无论接收方是否接收,发送方只管发送</p>\n</li>\n<li>\n<p>常见的<code>DDOS攻击</code>,让大量垃圾信息污染服务器接收端口,使其瘫痪.</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"TCP-连接\">TCP 连接</h2>\n<ul>\n<li>Server 服务端与 Client 客户端通过 TCP 方式创建数据连接.</li>\n</ul>\n<h3 id=\"Server-端\">Server 端</h3>\n<ul>\n<li>\n<p>建立服务的端口 ServerScoket</p>\n</li>\n<li>\n<p>等待用户的连接 accept</p>\n</li>\n<li>\n<p>接收用户的消息</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1、我得有一个地址</span></span><br><span class=\"line\">    <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; <span class=\"comment\">// 连续接收数据</span></span><br><span class=\"line\">      <span class=\"comment\">//2、等待客户端连接过来</span></span><br><span class=\"line\">      <span class=\"type\">Socket</span> <span class=\"variable\">accept</span> <span class=\"operator\">=</span> serverSocket.accept();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//3、读取客户端的消息</span></span><br><span class=\"line\">      <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> accept.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 通常IO方式,如果是长数据传输,会导致出错</span></span><br><span class=\"line\"><span class=\"comment\">       *</span></span><br><span class=\"line\"><span class=\"comment\">        byte[] buffer = new byte[1024];</span></span><br><span class=\"line\"><span class=\"comment\">        int length;</span></span><br><span class=\"line\"><span class=\"comment\">        while ((length = inputStream.read(buffer)) != -1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        String s = new String(buffer, 0, length);</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println(s);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//4. 管道流接收数据</span></span><br><span class=\"line\">      <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">byteArrayOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>();</span><br><span class=\"line\">      <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">      <span class=\"type\">int</span> length;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> ((length = inputStream.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        byteArrayOutputStream.write(buffer, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (byteArrayOutputStream.toString().matches(<span class=\"string\">&quot;quit&quot;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        System.out.println(byteArrayOutputStream.toString());</span><br><span class=\"line\">        byteArrayOutputStream.close();</span><br><span class=\"line\">        inputStream.close();</span><br><span class=\"line\">        accept.close();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 最后关闭</span></span><br><span class=\"line\">    serverSocket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Client-端\">Client 端</h3>\n<ul>\n<li>\n<p>连接服务器 Socket</p>\n</li>\n<li>\n<p>发送消息</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1、要知道服务器的地址，端口号</span></span><br><span class=\"line\">    <span class=\"type\">InetAddress</span> <span class=\"variable\">address</span> <span class=\"operator\">=</span> InetAddress.getLocalHost();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">port</span> <span class=\"operator\">=</span> <span class=\"number\">9999</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2、创建一个socket连接</span></span><br><span class=\"line\">    <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(address, port);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3、发送消息 IO流</span></span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">outputStream</span> <span class=\"operator\">=</span> socket.getOutputStream();</span><br><span class=\"line\">    outputStream.write(<span class=\"string\">&quot;Weidows connecting here.&quot;</span>.getBytes());</span><br><span class=\"line\">    <span class=\"comment\">// outputStream.write(&quot;quit&quot;.getBytes());</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4.关闭通道</span></span><br><span class=\"line\">    outputStream.close();</span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"文件传输\">文件传输</h2>\n<h3 id=\"Server\">Server</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1、创建服务</span></span><br><span class=\"line\">    <span class=\"type\">ServerSocket</span> <span class=\"variable\">serverSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServerSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2、监听客户端的连接</span></span><br><span class=\"line\">    <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> serverSocket.accept(); <span class=\"comment\">//阻塞式监听，会一直等待客户端连接</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server开始监听.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3、获取输入流</span></span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">is</span> <span class=\"operator\">=</span> socket.getInputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4、文件输出</span></span><br><span class=\"line\">    <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;Java/src/main/java/twenty_one/net/file_upload/receive.png&quot;</span>));</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((len = is.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      fos.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server接收完毕.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通知客户端我接收完毕了</span></span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> socket.getOutputStream();</span><br><span class=\"line\">    os.write(<span class=\"string\">&quot;Server通知:接受完毕，Client可以断开了&quot;</span>.getBytes());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5、关闭资源</span></span><br><span class=\"line\">    fos.close();</span><br><span class=\"line\">    is.close();</span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">    serverSocket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server已发送验证并断开连接.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    Server开始监听.</span></span><br><span class=\"line\"><span class=\"comment\">    Server接收完毕.</span></span><br><span class=\"line\"><span class=\"comment\">    Server已发送验证并断开连接.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Client\">Client</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1、创建一个Socket连接</span></span><br><span class=\"line\">    <span class=\"type\">Socket</span> <span class=\"variable\">socket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Socket</span>(InetAddress.getByName(<span class=\"string\">&quot;localhost&quot;</span>), <span class=\"number\">9999</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2、创建一个输出流</span></span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> socket.getOutputStream();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3、读取文件</span></span><br><span class=\"line\">    <span class=\"type\">FileInputStream</span> <span class=\"variable\">fis</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;Java/src/main/java/twenty_one/net/file_upload/upload.png&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4、写出文件</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((len = fis.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      os.write(buffer, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Client传输完毕.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通知服务器，我已经结束了</span></span><br><span class=\"line\">    socket.shutdownOutput(); <span class=\"comment\">//我已经传输完了！</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//确定服务器接收完毕，才能够断开连接</span></span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> socket.getInputStream();</span><br><span class=\"line\">    <span class=\"comment\">//String byte[]</span></span><br><span class=\"line\">    <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">baos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>();</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer2 = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> len2;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((len2 = inputStream.read(buffer2)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      baos.write(buffer2, <span class=\"number\">0</span>, len2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(baos.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5、关闭资源</span></span><br><span class=\"line\">    baos.close();</span><br><span class=\"line\">    inputStream.close();</span><br><span class=\"line\">    fis.close();</span><br><span class=\"line\">    os.close();</span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Client已接收到验证并断开连接&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    Client传输完毕.</span></span><br><span class=\"line\"><span class=\"comment\">    Server通知:接受完毕，Client可以断开了</span></span><br><span class=\"line\"><span class=\"comment\">    Client已接收到验证并断开连接</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"UDP-连接\">UDP 连接</h2>\n<h3 id=\"Server-2\">Server</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.开放端口</span></span><br><span class=\"line\">    <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;等待数据传入中...&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2.接收数据</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(buffer, buffer.length);</span><br><span class=\"line\">    datagramSocket.receive(datagramPacket); <span class=\"comment\">//阻塞接收</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.输出</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server接收到数据:&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(datagramPacket.getData()));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4.关闭</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Client-2\">Client</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.创建数据包</span></span><br><span class=\"line\">    <span class=\"type\">InetAddress</span> <span class=\"variable\">localHost</span> <span class=\"operator\">=</span> InetAddress.getLocalHost();</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">port</span> <span class=\"operator\">=</span> <span class=\"number\">9999</span>;</span><br><span class=\"line\">    <span class=\"type\">byte</span>[] data = <span class=\"string\">&quot;这是Client发送的数据.&quot;</span>.getBytes();</span><br><span class=\"line\">    <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(data, data.length, localHost, port);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2.创建Socket</span></span><br><span class=\"line\">    <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.发送数据</span></span><br><span class=\"line\">    datagramSocket.send(datagramPacket);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;传输成功.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4.关闭连接</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"UDP-循环发送\">UDP 循环发送</h2>\n<h3 id=\"Server-3\">Server</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Server2</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.准备连接</span></span><br><span class=\"line\">    <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>(<span class=\"number\">9999</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">      <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(bytes, bytes.length);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Server准备接收数据中.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 2.接收数据</span></span><br><span class=\"line\">      datagramSocket.receive(datagramPacket);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">string</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(datagramPacket.getData());</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;接收到数据:\\t&quot;</span> + datagramPacket.getAddress() + <span class=\"string\">&quot;:&quot;</span> + datagramPacket.getPort() + <span class=\"string\">&quot;\\t&quot;</span> + string);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 这里的string=&quot;quitxxxxxxxxxxxxxx&quot;,总长为上面的1024,用.equals()无法判断.</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (string.contains(<span class=\"string\">&quot;quit&quot;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.断开连接</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server已关闭连接.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Client-3\">Client</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetSocketAddress;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Client2</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 0.准备连接</span></span><br><span class=\"line\">    <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in));</span><br><span class=\"line\">    <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1.准备数据</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Client准备读取Terminal数据:&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">String</span> <span class=\"variable\">readLine</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\">      <span class=\"type\">byte</span>[] bytes = readLine.getBytes();</span><br><span class=\"line\">      <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(bytes, bytes.length, <span class=\"keyword\">new</span> <span class=\"title class_\">InetSocketAddress</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">9999</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 2.发送数据</span></span><br><span class=\"line\">      datagramSocket.send(datagramPacket);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Client已经发送数据.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (readLine.equals(<span class=\"string\">&quot;quit&quot;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.断开连接</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Client已关闭连接.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"双向聊天\">双向聊天</h2>\n<ul>\n<li>\n<p>实现<code>发送</code>,<code>接收</code>两个线程类</p>\n</li>\n<li>\n<p>老师和学生各开上面两个线程,实现<code>发,收</code>功能.</p>\n</li>\n</ul>\n<h3 id=\"发送线程\">发送线程</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetSocketAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.SocketException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TalkSend</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">BufferedReader</span> <span class=\"variable\">bufferedReader</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> String targetIP;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> targetPort;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">TalkSend</span><span class=\"params\">(String targetIP, <span class=\"type\">int</span> targetPort)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.targetIP = targetIP;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.targetPort = targetPort;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 0.准备连接</span></span><br><span class=\"line\">      bufferedReader = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(System.in));</span><br><span class=\"line\">      datagramSocket = <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SocketException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1.准备数据</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Client准备读取Terminal数据:&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">readLine</span> <span class=\"operator\">=</span> bufferedReader.readLine();</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = readLine.getBytes();</span><br><span class=\"line\">        <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(bytes, bytes.length,</span><br><span class=\"line\">            <span class=\"keyword\">new</span> <span class=\"title class_\">InetSocketAddress</span>(targetIP, targetPort));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2.发送数据</span></span><br><span class=\"line\">        datagramSocket.send(datagramPacket);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Client已经发送数据.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (readLine.equals(<span class=\"string\">&quot;quit&quot;</span>)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.断开连接</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Client已关闭连接.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"接收线程\">接收线程</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.SocketException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TalkReceive</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">DatagramSocket</span> <span class=\"variable\">datagramSocket</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> localPort;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">TalkReceive</span><span class=\"params\">(<span class=\"type\">int</span> localPort)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.localPort = localPort;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      datagramSocket = <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramSocket</span>(<span class=\"built_in\">this</span>.localPort);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SocketException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.准备连接</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"type\">DatagramPacket</span> <span class=\"variable\">datagramPacket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DatagramPacket</span>(bytes, bytes.length);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Server准备接收数据中.&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2.接收数据</span></span><br><span class=\"line\">        datagramSocket.receive(datagramPacket);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">string</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(datagramPacket.getData());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;接收到数据:\\t&quot;</span> + datagramPacket.getAddress() + <span class=\"string\">&quot;:&quot;</span> + datagramPacket.getPort() + <span class=\"string\">&quot;\\t&quot;</span> + string);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 这里的string=&quot;quitxxxxxxxxxxxxxx&quot;,总长为上面的1024,用.equals()无法判断.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (string.contains(<span class=\"string\">&quot;quit&quot;</span>)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.断开连接</span></span><br><span class=\"line\">    datagramSocket.close();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Server已关闭连接.&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"老师\">老师</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Teacher</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 老师</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">TalkReceive</span>(<span class=\"number\">7777</span>)).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">TalkSend</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">8888</span>)).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    Server准备接收数据中.</span></span><br><span class=\"line\"><span class=\"comment\">    Client准备读取Terminal数据:</span></span><br><span class=\"line\"><span class=\"comment\">    接收到数据:     /127.0.0.1:50277        15465</span></span><br><span class=\"line\"><span class=\"comment\">    Server准备接收数据中.</span></span><br><span class=\"line\"><span class=\"comment\">    123456</span></span><br><span class=\"line\"><span class=\"comment\">    Client已经发送数据.</span></span><br><span class=\"line\"><span class=\"comment\">    Client准备读取Terminal数据:</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"学生\">学生</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 学生</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">TalkReceive</span>(<span class=\"number\">8888</span>)).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">TalkSend</span>(<span class=\"string\">&quot;localhost&quot;</span>, <span class=\"number\">7777</span>)).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    Server准备接收数据中.</span></span><br><span class=\"line\"><span class=\"comment\">    Client准备读取Terminal数据:</span></span><br><span class=\"line\"><span class=\"comment\">    15465</span></span><br><span class=\"line\"><span class=\"comment\">    Client已经发送数据.</span></span><br><span class=\"line\"><span class=\"comment\">    Client准备读取Terminal数据:</span></span><br><span class=\"line\"><span class=\"comment\">    接收到数据:     /127.0.0.1:50279        123456</span></span><br><span class=\"line\"><span class=\"comment\">    Server准备接收数据中.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"URL\">URL</h2>\n<ul>\n<li>文件下载</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetURL</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.设置URL和文件路径</span></span><br><span class=\"line\">    <span class=\"type\">URL</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">URL</span>(<span class=\"string\">&quot;https://pan.weidows.tech/d/local/img/divider.png&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Java/src/main/java/twenty_one/net/&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> url.getPath().substring(url.getPath().lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ! URL类用法</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getProtocol());</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getHost());</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getPort());</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getPath());</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getFile());</span></span><br><span class=\"line\"><span class=\"comment\">      System.out.println(url.getQuery());</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">      https</span></span><br><span class=\"line\"><span class=\"comment\">      cdn.jsdelivr.net</span></span><br><span class=\"line\"><span class=\"comment\">      /gh/Weidows/Images@master/img/divider.png</span></span><br><span class=\"line\"><span class=\"comment\">      /gh/Weidows/Images@master/img/divider.png</span></span><br><span class=\"line\"><span class=\"comment\">      null</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2.输入输出流</span></span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">openStream</span> <span class=\"operator\">=</span> url.openStream();</span><br><span class=\"line\">    <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fileOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(path + fileName));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.传输数据</span></span><br><span class=\"line\">    <span class=\"type\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"title class_\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> length;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((length = openStream.read(bytes)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      fileOutputStream.write(bytes, <span class=\"number\">0</span>, length);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4.关闭连接</span></span><br><span class=\"line\">    fileOutputStream.close();</span><br><span class=\"line\">    openStream.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/2/",
            "url": "https://weidows.github.io/post/lang/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/2/",
            "title": "🔥Java注解与反射复习~(贰)",
            "date_published": "2021-02-27T09:31:03.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:15:52\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\注解与反射\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E6%93%8D%E4%BD%9C-class-%E5%AF%B9%E8%B1%A1\">操作 Class 对象</a></li>\n<li><a href=\"#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90\">性能分析</a></li>\n<li><a href=\"#%E5%8F%8D%E5%B0%84%E6%93%8D%E4%BD%9C%E6%B3%9B%E5%9E%8B\">反射操作泛型</a></li>\n<li><a href=\"#%E5%8F%8D%E5%B0%84%E6%93%8D%E4%BD%9C%E6%B3%A8%E8%A7%A3\">反射操作注解</a></li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"操作-Class-对象\">操作 Class 对象</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo6</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//获得class对象</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> User.class;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建一个对象</span></span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> (User) c1.newInstance();<span class=\"comment\">//本质是调用了类的无参构造器</span></span><br><span class=\"line\">    System.out.println(user);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过构造器创建对象</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Constructor</span> <span class=\"variable\">constructor</span> <span class=\"operator\">=</span> c1.getDeclaredConstructor(String.class, <span class=\"type\">int</span>.class);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user2</span> <span class=\"operator\">=</span> (User) constructor.newInstance(<span class=\"string\">&quot;打爆&quot;</span>, <span class=\"number\">22</span>);</span><br><span class=\"line\">    System.out.println(user2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过反射获取一个方法</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Method</span> <span class=\"variable\">setName</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;setName&quot;</span>, String.class);</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * invoke: 激活</span></span><br><span class=\"line\"><span class=\"comment\">     * invoke(执行方法的对象+原方法的参数1+原方法的参数2+...)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    setName.invoke(user, <span class=\"string\">&quot;Weidows&quot;</span>);</span><br><span class=\"line\">    System.out.println(user.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过反射操作属性</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user3</span> <span class=\"operator\">=</span> (User) c1.newInstance();</span><br><span class=\"line\">    <span class=\"type\">Field</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> c1.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//不能直接操作私有属性，我们需要关闭程序的安全监测，属性或方法的setAccessible(true)</span></span><br><span class=\"line\">    name.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    name.set(user3, <span class=\"string\">&quot;齐下无贰&quot;</span>);</span><br><span class=\"line\">    System.out.println(user3.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">      twenty_one.reflection.User@59f95c5d</span></span><br><span class=\"line\"><span class=\"comment\">      ============================</span></span><br><span class=\"line\"><span class=\"comment\">      twenty_one.reflection.User@5c8da962</span></span><br><span class=\"line\"><span class=\"comment\">      ============================</span></span><br><span class=\"line\"><span class=\"comment\">      Weidows</span></span><br><span class=\"line\"><span class=\"comment\">      ============================</span></span><br><span class=\"line\"><span class=\"comment\">      齐下无贰</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"性能分析\">性能分析</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PerformanceInfluence</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    test1();</span><br><span class=\"line\">    test2();</span><br><span class=\"line\">    test3();</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">      普通方式执行4ms</span></span><br><span class=\"line\"><span class=\"comment\">      反射方式,开启检测执行2794ms</span></span><br><span class=\"line\"><span class=\"comment\">      反射方式,关闭检测执行1771ms</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">start</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000000000</span>; i++) &#123;</span><br><span class=\"line\">      user.getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">end</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;普通方式执行&quot;</span> + (end - start) + <span class=\"string\">&quot;ms&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> user.getClass();</span><br><span class=\"line\">    <span class=\"type\">Method</span> <span class=\"variable\">getName</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;getName&quot;</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">start</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000000000</span>; i++) &#123;</span><br><span class=\"line\">      getName.invoke(user, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">end</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;反射方式,开启检测执行&quot;</span> + (end - start) + <span class=\"string\">&quot;ms&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test3</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> user.getClass();</span><br><span class=\"line\">    <span class=\"type\">Method</span> <span class=\"variable\">getName</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;getName&quot;</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">start</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    getName.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">1000000000</span>; i++) &#123;</span><br><span class=\"line\">      getName.invoke(user, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">end</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;反射方式,关闭检测执行&quot;</span> + (end - start) + <span class=\"string\">&quot;ms&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可见使用<code>反射方式执行效率远远远远低于正常执行</code>,关闭访问权限检测也只能降低部分性能损耗</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"反射操作泛型\">反射操作泛型</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.ParameterizedType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Type;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Generic</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test01</span><span class=\"params\">(Map&lt;String, User&gt; map, List&lt;User&gt; list)</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> Map&lt;String, User&gt; <span class=\"title function_\">test02</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> NoSuchMethodException &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取参数(map,list)的泛型参数(String,User)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">Method</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> Generic.class.getMethod(<span class=\"string\">&quot;test01&quot;</span>, Map.class, List.class);</span><br><span class=\"line\">    Type[] genericParameterTypes = method.getGenericParameterTypes();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Type genericParameterType : genericParameterTypes) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;范型参数&quot;</span> + genericParameterType);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (genericParameterType <span class=\"keyword\">instanceof</span> ParameterizedType) &#123;</span><br><span class=\"line\">        Type[] actualTypeAnguments = ((ParameterizedType) genericParameterType).getActualTypeArguments();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Type actualTypeAngument : actualTypeAnguments) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;  实际参数范型&quot;</span> + actualTypeAngument);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;--------------------------------------------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取返回值的泛型参数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"type\">Method</span> <span class=\"variable\">method1</span> <span class=\"operator\">=</span> Generic.class.getMethod(<span class=\"string\">&quot;test02&quot;</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    <span class=\"type\">Type</span> <span class=\"variable\">getGenericReturnType</span> <span class=\"operator\">=</span> method1.getGenericReturnType();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getGenericReturnType <span class=\"keyword\">instanceof</span> ParameterizedType) &#123;</span><br><span class=\"line\">      Type[] actualTypeArguments = ((ParameterizedType) getGenericReturnType).getActualTypeArguments();</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Type actualTypeArgument : actualTypeArguments) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;返回值范型&quot;</span> + actualTypeArgument);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    范型参数java.util.Map&lt;java.lang.String, twenty_one.reflection.User&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    实际参数范型class java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">    实际参数范型class twenty_one.reflection.User</span></span><br><span class=\"line\"><span class=\"comment\">    范型参数java.util.List&lt;twenty_one.reflection.User&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    实际参数范型class twenty_one.reflection.User</span></span><br><span class=\"line\"><span class=\"comment\">    --------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\">    返回值范型class java.lang.String</span></span><br><span class=\"line\"><span class=\"comment\">    返回值范型class twenty_one.reflection.User</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"反射操作注解\">反射操作注解</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Annotation</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> NoSuchFieldException, SecurityException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// * 通过反射获取注解</span></span><br><span class=\"line\">    java.lang.annotation.Annotation[] annotations = Student1.class.getAnnotations();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (java.lang.annotation.Annotation annotation : annotations) &#123;</span><br><span class=\"line\">      System.out.println(annotation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * 获取注解的value</span></span><br><span class=\"line\">    <span class=\"type\">Table</span> <span class=\"variable\">annotation</span> <span class=\"operator\">=</span> Student1.class.getAnnotation(Table.class); <span class=\"comment\">//获取Student1类上Table类型的注解</span></span><br><span class=\"line\">    System.out.println(annotation.value());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// * 获取指定的value</span></span><br><span class=\"line\">    java.lang.reflect.<span class=\"type\">Field</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> Student1.class.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Field</span> <span class=\"variable\">annotation1</span> <span class=\"operator\">=</span> f.getAnnotation(Field.class);</span><br><span class=\"line\">    System.out.println(annotation1.columnName() + <span class=\"string\">&quot;\\t&quot;</span> + annotation1.type() + <span class=\"string\">&quot;\\t&quot;</span> + annotation1.length());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    <span class=\"doctag\">@twenty</span>_one.reflection.Table(value=&quot;db_student&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">    db_student</span></span><br><span class=\"line\"><span class=\"comment\">    db_name varchar 3</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Table(value = &quot;db_student&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student1</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@Field(columnName = &quot;db_id&quot;, type = &quot;int&quot;, length = 10)</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">  <span class=\"meta\">@Field(columnName = &quot;db_age&quot;, type = &quot;int&quot;, length = 10)</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">  <span class=\"meta\">@Field(columnName = &quot;db_name&quot;, type = &quot;varchar&quot;, length = 3)</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Student1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Student1</span><span class=\"params\">(<span class=\"type\">int</span> id, <span class=\"type\">int</span> age, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Student [age=&quot;</span> + age + <span class=\"string\">&quot;, id=&quot;</span> + id + <span class=\"string\">&quot;, name=&quot;</span> + name + <span class=\"string\">&quot;]&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ! 类名的注解</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.TYPE)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@interface</span> Table &#123;</span><br><span class=\"line\">  String <span class=\"title function_\">value</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ! 属性的注解</span></span><br><span class=\"line\"><span class=\"meta\">@Target(ElementType.FIELD)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@interface</span> Field &#123;</span><br><span class=\"line\">  String <span class=\"title function_\">columnName</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  String <span class=\"title function_\">type</span><span class=\"params\">()</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">length</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "注解",
                "反射"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/1/",
            "url": "https://weidows.github.io/post/lang/Java/%E6%B3%A8%E8%A7%A3%E4%B8%8E%E5%8F%8D%E5%B0%84/1/",
            "title": "🔥Java注解与反射复习~(壹)",
            "date_published": "2021-02-25T03:20:20.000Z",
            "content_html": "<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:15:08\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\注解与反射\\1.md\n * @Description:\n * @!: *********************************************************************\n-->\n<ul>\n<li><a href=\"#%E5%86%85%E7%BD%AE%E6%B3%A8%E8%A7%A3\">内置注解</a></li>\n<li><a href=\"#%E5%85%83%E6%B3%A8%E8%A7%A3\">元注解</a></li>\n<li><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3\">自定义注解</a></li>\n<li><a href=\"#%E5%8F%8D%E5%B0%84\">反射</a>\n<ul>\n<li><a href=\"#class-%E7%B1%BB\">Class 类</a></li>\n<li><a href=\"#%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B\">类的加载过程</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%AE%9E%E4%BE%8B%E5%8C%96%E4%B8%8E-static-%E5%8A%A0%E8%BD%BD\">实例化与 static 加载</a>\n<ul>\n<li><a href=\"#%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E5%8F%91%E7%94%9F%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96\">什么时候会发生类初始化?</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8\">类加载器</a></li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"内置注解\">内置注解</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Anno1</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span> <span class=\"comment\">//重写方法</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.toString();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Deprecated</span> <span class=\"comment\">//表示弃用方法,但仍可使用</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@SuppressWarnings(&quot;all&quot;)</span> <span class=\"comment\">//抑制警告</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test01</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    test();</span><br><span class=\"line\">    test01();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"元注解\">元注解</h2>\n<ul>\n<li>\n<p><code>作用于其他注解的注解</code></p>\n</li>\n<li>\n<p>在 java.lang.annotation 包中可以找到.( @ Target , @Retention，@Documented , @Inherited )</p>\n<ul>\n<li>@Target :用于描述注解的使用范围(即:被描述的注解可以用在什么地方)</li>\n<li>@Retention :表示需要在什么级别保存该注释信息,用于描述注解的生命周期(SOURCE &lt; CLASS &lt; RUNTIME)</li>\n<li>@Document:说明该注解将被包含在 javadoc 中</li>\n<li>@Inherited: 说明子类可以继承父类中的该注解</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@MyAnnotation</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Anno2</span> &#123;</span><br><span class=\"line\">  <span class=\"meta\">@MyAnnotation</span></span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Target 表示我们的注解可以用在哪些地方.</span></span><br><span class=\"line\"><span class=\"meta\">@Target(value = &#123; ElementType.METHOD, ElementType.TYPE &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Retention表示我们的注解在什么地方还有效。runtime&gt;class&gt;sources</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(value = RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Documented表示是否将我们的注解生成在Javadoc中</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Inherited子类可以继承父类的注解</span></span><br><span class=\"line\"><span class=\"meta\">@Inherited</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@interface</span> MyAnnotation &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"自定义注解\">自定义注解</h2>\n<ul>\n<li>使用@interface 自定义注解时,自动继承了 java.lang .annotation.Annotation 接口</li>\n<li>@interface 用来声明一个注解,格式: public @ interface 注解名{定义内容}\n<ol>\n<li>其中的每一个方法实际上是声明了一个配置参数.</li>\n<li>方法的名称就是参数的名称.</li>\n<li>返回值类型就是参数的类型(返回值只能是基本类型,Class , String , enum ).</li>\n<li>可以通过 default 来声明参数的默认值</li>\n<li>如果只有一个参数成员, 一般参数名为 value</li>\n<li>注解元素必须要有值，我们定义注解元素时,经常使用空字符串，0 作为默认值.</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Anno3</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//注解可以显示赋值，如果没有默认值 ，我们就必须给注解赋值</span></span><br><span class=\"line\">  <span class=\"meta\">@MyAnnotation2(name = &#123;&quot;Weidows&quot;, &quot;齐下无贰&quot;&#125;, age = 21)</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@MyAnnotation3(&quot;Weidows&quot;)</span> <span class=\"comment\">//参数只有一个，且参数名为value</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@interface</span> MyAnnotation2 &#123;</span><br><span class=\"line\">  <span class=\"comment\">//注解的参数:参数类型+参数名();</span></span><br><span class=\"line\">  String[] name() <span class=\"keyword\">default</span> &#123;<span class=\"string\">&quot;&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">age</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"title function_\">id</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> -<span class=\"number\">1</span>; <span class=\"comment\">// 如果默认值为-1,代表不存在。</span></span><br><span class=\"line\"></span><br><span class=\"line\">  String <span class=\"title function_\">schools</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;家里蹲大学&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Target</span>(value = &#123; ElementType.TYPE, ElementType.METHOD &#125;)</span></span><br><span class=\"line\"><span class=\"comment\"> * 只有一个参数时可以省略参数名,多个参数时不可省略</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Target(&#123;ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@interface</span> MyAnnotation3 &#123;</span><br><span class=\"line\">  <span class=\"comment\">//只有一个参数时，参数名为value时，使用时不需参数名</span></span><br><span class=\"line\">  String <span class=\"title function_\">value</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>现在,注解定义和使用结束了,下面结合反射来读取注解数据.</p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"反射\">反射</h2>\n<ul>\n<li>可以在运行时实现动态创建对象和编译,有很大的灵活性,但会影响一定性能</li>\n</ul>\n<h3 id=\"Class-类\">Class 类</h3>\n<ul>\n<li>\n<p>Class 类时反射机制的根源,常用方法如下:</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmAfm.png\" alt=\"20210226151038\" />\n</li>\n<li>\n<p>获取 Class 类的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo1</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//方式一：通过对象获取</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>().getClass();</span><br><span class=\"line\">    System.out.println(c1);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//方式二：通过forname获取</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c2</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;twenty_one.reflection.Person&quot;</span>);</span><br><span class=\"line\">    System.out.println(c2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过类名.class获得(最可靠,高效)</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c3</span> <span class=\"operator\">=</span> Student.class;</span><br><span class=\"line\">    System.out.println(c3);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//方式四：基本内置类型的包装类都有一个TYPE属性</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c4</span> <span class=\"operator\">=</span> Integer.TYPE;</span><br><span class=\"line\">    System.out.println(c4);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Person&#123;&quot;</span> + <span class=\"string\">&quot;name=&#x27;&quot;</span> + name + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;Student&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Teacher</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Teacher</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = <span class=\"string\">&quot;Teacher&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>Class 对象类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo2</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> Object.class; <span class=\"comment\">//类</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c2</span> <span class=\"operator\">=</span> Runnable.class; <span class=\"comment\">//接口</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c3</span> <span class=\"operator\">=</span> String[].class; <span class=\"comment\">//- -维数组</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c4</span> <span class=\"operator\">=</span> <span class=\"type\">int</span>[][].class; <span class=\"comment\">//二维数组</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c5</span> <span class=\"operator\">=</span> Override.class; <span class=\"comment\">//注解</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c6</span> <span class=\"operator\">=</span> ElementType.class; <span class=\"comment\">//枚举</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c7</span> <span class=\"operator\">=</span> Integer.class; <span class=\"comment\">//基本数据类型</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c8</span> <span class=\"operator\">=</span> <span class=\"keyword\">void</span>.class; <span class=\"comment\">//void</span></span><br><span class=\"line\">    <span class=\"type\">Class</span> <span class=\"variable\">c9</span> <span class=\"operator\">=</span> Class.class; <span class=\"comment\">//Class</span></span><br><span class=\"line\">    System.out.println(c1);<span class=\"comment\">//class java.lang.Object</span></span><br><span class=\"line\">    System.out.println(c2);<span class=\"comment\">//interface java.lang.Comparable</span></span><br><span class=\"line\">    System.out.println(c3);<span class=\"comment\">//class [Ljava.lang.String;</span></span><br><span class=\"line\">    System.out.println(c4);<span class=\"comment\">//class [[I</span></span><br><span class=\"line\">    System.out.println(c5);<span class=\"comment\">//interface java.lang.Override</span></span><br><span class=\"line\">    System.out.println(c6);<span class=\"comment\">//class java.lang.annotation.ElementType</span></span><br><span class=\"line\">    System.out.println(c7);<span class=\"comment\">//class java.lang.Integer</span></span><br><span class=\"line\">    System.out.println(c8);<span class=\"comment\">//void</span></span><br><span class=\"line\">    System.out.println(c9);<span class=\"comment\">//class java.lang.Class</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"类的加载过程\">类的加载过程</h3>\n<ol>\n<li>\n<p>加载: 首先类加载器读取.class 字节码文件到方法区内存,转换数据结构为运行时,并生成 java.lang.Class 对象.</p>\n<ul>\n<li>在反射中获取 Class 对象并不是创建,而是从内存中获取.</li>\n</ul>\n</li>\n<li>\n<p>链接:将 Java 类的二进制代码合并到 JVM 的运行状态之中的过程。</p>\n<ul>\n<li>验证:确保加载的类信息符合 JVM 规范，没有安全方面的问题</li>\n<li>准备:正式为类变量(static) 分配内存并设置类变量默认初始值的阶段,这些内存都将在方法区中进行分配。</li>\n<li>解析:虚拟机常量池内的符号引用(常量名)替换为直接引用(地址)的过程。</li>\n</ul>\n</li>\n<li>\n<p>初始化:</p>\n<ul>\n<li>执行类构造器&lt; clinit&gt; ()方法的过程。<code>类构造器&lt; clinit&gt; ()方法是由编译期自动收集类中所有类变量的赋值动作和静态代码块中的语句合并产生的。</code>(类构造 器是构造类信息的，不是构造该类对象的构造器)。</li>\n<li>当初始化一个类的时候，如果发现其父类还没有进行初始化，则需要先触发其父类的初始化。</li>\n<li>虚拟机会保证一 个类的 ()方法在多线程环境中被正确加锁和同步。</li>\n</ul>\n<hr>\n</li>\n</ol>\n<ul>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo3</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\">    System.out.println(A.m);<span class=\"comment\">//300</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">      1.加载到内存，产生一个类对应Class对象</span></span><br><span class=\"line\"><span class=\"comment\">      2.链接，链接结束后m=◎</span></span><br><span class=\"line\"><span class=\"comment\">      3.初始化</span></span><br><span class=\"line\"><span class=\"comment\">      &lt;clinit&gt;()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          m=100;</span></span><br><span class=\"line\"><span class=\"comment\">          System.out.println( &quot;A类静态代码块初始化&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">          m = 300;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// * 1.1</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// * 1.2</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;A类静态代码块初始化&quot;</span>);</span><br><span class=\"line\">    m = <span class=\"number\">300</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// * 2</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">A</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;A类的构造初始化&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmSeh.png\" alt=\"20210226172346\" />\n</li>\n</ul>\n<hr>\n<h2 id=\"实例化与-static-加载\">实例化与 static 加载</h2>\n<ul>\n<li>\n<p>尝试下实例化与否对 static 资源调用的影响</p>\n</li>\n<li>\n<p>实例化+调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo3</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\">    System.out.println(A.m);<span class=\"comment\">//300</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>类静态代码块初始化</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>类的构造初始化</span><br><span class=\"line\"><span class=\"number\">300</span></span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>实例化+不调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo3</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">A</span>();</span><br><span class=\"line\">    <span class=\"comment\">// System.out.println(A.m);//300</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>类静态代码块初始化</span><br><span class=\"line\"><span class=\"selector-tag\">A</span>类的构造初始化</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>不实例化+调用</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo3</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// A a = new A();</span></span><br><span class=\"line\">    System.out.println(A.m);<span class=\"comment\">//300</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>类静态代码块初始化</span><br><span class=\"line\"><span class=\"number\">300</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>可以发现在实例化对象之后调用 static 资源,并不会再次执行静态代码块</p>\n<ul>\n<li>如果没实例化的情况下调取 static 资源,类会加载,但不会执行构造器</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"什么时候会发生类初始化\">什么时候会发生类初始化?</h3>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmbFr.png\" alt=\"20210226172913\" />\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo4</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;main类被加载&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.主动引用</span></span><br><span class=\"line\">    <span class=\"comment\">// Son son = new Son();</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * main类被加载</span></span><br><span class=\"line\"><span class=\"comment\">    * 父类被加载</span></span><br><span class=\"line\"><span class=\"comment\">    * 子类被加载</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//反射也会产生主动引用</span></span><br><span class=\"line\">    <span class=\"comment\">// Class.forName(&quot;twenty_one.reflection.Son&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * main类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 父类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 子类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//不会产生类的引用的方法</span></span><br><span class=\"line\">    <span class=\"comment\">// System.out.println(Son.b);</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * main类被加载</span></span><br><span class=\"line\"><span class=\"comment\">    * 父类被加载</span></span><br><span class=\"line\"><span class=\"comment\">    * 2</span></span><br><span class=\"line\"><span class=\"comment\">    * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//只会main类被加载</span></span><br><span class=\"line\">    <span class=\"comment\">// System.out.println(Son.M);</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * main类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 1</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//全加载</span></span><br><span class=\"line\">    System.out.println(Son.m);</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * main类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 父类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 子类被加载</span></span><br><span class=\"line\"><span class=\"comment\">     * 100</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;父类被加载&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Father</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;子类被加载&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">M</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"类加载器\">类加载器</h2>\n<ul>\n<li>\n<p>作用</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmlnT.png\" alt=\"20210227171646\" />\n</li>\n<li>\n<p>分类</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVmM71.png\" alt=\"20210227172006\" />\n<hr>\n</li>\n<li>\n<p>操作类加载器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo5</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//获取系统的类加载器</span></span><br><span class=\"line\">    <span class=\"type\">ClassLoader</span> <span class=\"variable\">systemClassLoader</span> <span class=\"operator\">=</span> ClassLoader.getSystemClassLoader();</span><br><span class=\"line\">    System.out.println(systemClassLoader);<span class=\"comment\">//jdk.internal.loader.ClassLoaders$AppClassLoader@4459eb14</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取系统类加载器的父类加载器--&gt;扩展类加载器</span></span><br><span class=\"line\">    <span class=\"type\">ClassLoader</span> <span class=\"variable\">parent</span> <span class=\"operator\">=</span> systemClassLoader.getParent();</span><br><span class=\"line\">    System.out.println(parent);<span class=\"comment\">//jdk.internal.loader.ClassLoaders$PlatformClassLoader@7960847b</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取扩展类加载器的父类加载器--&gt;根加载器(C/C++)</span></span><br><span class=\"line\">    <span class=\"type\">ClassLoader</span> <span class=\"variable\">grantparent</span> <span class=\"operator\">=</span> parent.getParent();</span><br><span class=\"line\">    System.out.println(grantparent);<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//测试当前类是哪个加载器加载的</span></span><br><span class=\"line\">    <span class=\"type\">ClassLoader</span> <span class=\"variable\">classLoader</span> <span class=\"operator\">=</span> Demo5.class.getClassLoader();</span><br><span class=\"line\">    System.out.println(classLoader);<span class=\"comment\">//jdk.internal.loader.ClassLoaders$AppClassLoader@4459eb14</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//测试JDK内置的类是谁加载的</span></span><br><span class=\"line\">    <span class=\"type\">ClassLoader</span> <span class=\"variable\">classLoader1</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;java.lang.Object&quot;</span>).getClassLoader();</span><br><span class=\"line\">    System.out.println(classLoader1);<span class=\"comment\">//null</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//如何获得系统类加载器可以加载的路径</span></span><br><span class=\"line\">    System.out.println(System.getProperty(<span class=\"string\">&quot;java.class.path&quot;</span>));<span class=\"comment\">//D:\\Game\\Weidows\\Java\\target\\classes;D:\\Game\\Scoop\\persist\\maven\\mvn-repository\\commons-io\\commons-io\\2.8.0\\commons-io-2.8.0.jar</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "注解",
                "反射"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "url": "https://weidows.github.io/post/lang/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/2/",
            "title": "🌭回顾一下多线程-贰",
            "date_published": "2021-02-20T17:06:22.000Z",
            "content_html": "<h1>回顾一下多线程-贰</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2022-04-20 23:41:35\n * @FilePath: \\Blog-private\\source\\_posts\\Java\\多线程\\2.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%9B%9E%E9%A1%BE%E4%B8%80%E4%B8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E8%B4%B0\">回顾一下多线程-贰</a>\n<ul>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5-synchronized\">线程同步-synchronized</a>\n<ul>\n<li><a href=\"#%E4%B9%B0%E7%A5%A8\">买票</a></li>\n<li><a href=\"#%E9%93%B6%E8%A1%8C%E5%8F%96%E6%AC%BE\">银行取款</a></li>\n<li><a href=\"#%E5%85%B3%E4%BA%8E%E8%AF%95%E9%94%99%E6%8A%80%E5%B7%A7\">关于试错技巧</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9B%86%E5%90%88%E4%B8%8E%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8\">集合与线程安全</a>\n<ul>\n<li><a href=\"#%E9%9D%9E%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5\">非线程同步</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5\">线程同步</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E9%9B%86%E5%90%88\">线程安全集合</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%AD%BB%E9%94%81\">死锁</a>\n<ul>\n<li><a href=\"#%E4%BA%A7%E7%94%9F%E6%9D%A1%E4%BB%B6\">产生条件</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">解决方案</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81-reentrantlock\">可重入锁-ReentrantLock</a></li>\n<li><a href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6\">多线程与循环控制</a></li>\n<li><a href=\"#%E5%BB%B6%E8%BF%9F%E5%AF%B9%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BD%B1%E5%93%8D\">延迟对多线程的影响</a>\n<ul>\n<li><a href=\"#%E4%B8%80\">一</a></li>\n<li><a href=\"#%E4%BA%8C\">二</a></li>\n<li><a href=\"#%E4%B8%89\">三</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1-wait-notify\">线程通信-wait-notify</a></li>\n<li><a href=\"#%E7%BA%BF%E7%A8%8B%E6%B1%A0\">线程池</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程同步-synchronized\">线程同步-synchronized</h2>\n<ul>\n<li>\n<p>多个线程操作同一资源时会有问题出现,用 <code>synchronized</code> 同步.</p>\n<p>线程同步的形成条件: <code>队列+锁</code></p>\n<p>实现形式有 同步方法 和 同步代码块</p>\n<hr>\n</li>\n</ul>\n<ol>\n<li>\n<p>同步方法, 锁的是方法所属对象 this</p>\n<p>如下买票例子中 buy 方法锁的是 <code>Ticket ticket</code> 这个对象</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"type\">void</span> <span class=\"title\">buy</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>同步代码块, 锁 obj</p>\n<figure class=\"highlight wren\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">synchronized</span> (<span class=\"variable\">obj</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 操作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"买票\">买票</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Ticket</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; <span class=\"comment\">//票数</span></span><br><span class=\"line\">  <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>; <span class=\"comment\">//外部停止方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (flag) &#123;</span><br><span class=\"line\">      buy();</span><br><span class=\"line\">      <span class=\"comment\">//模拟延时</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title function_\">buy</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断是否有票</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ticketNums &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;得到倒数第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Ticket</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Ticket</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;小明&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;老师&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(ticket, <span class=\"string\">&quot;黄牛&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<p>不加锁: 有错误</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第10票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第9票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第8票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第7票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第6票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第5票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第4票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第2票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第1票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第1票</span></span><br></pre></td></tr></table></figure>\n<p>加锁: 无误</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"code\"><pre><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第10票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第9票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第8票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第7票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第6票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第5票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第4票</span></span><br><span class=\"line\">小明<span class=\"comment\">--&gt;得到倒数第3票</span></span><br><span class=\"line\">老师<span class=\"comment\">--&gt;得到倒数第2票</span></span><br><span class=\"line\">黄牛<span class=\"comment\">--&gt;得到倒数第1票</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"银行取款\">银行取款</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.BigDecimal;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Bank</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">100</span>), <span class=\"string\">&quot;我的账户&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">DrawingChannel</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DrawingChannel</span>(account, <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">50</span>), <span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">DrawingChannel</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DrawingChannel</span>(account, <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">100</span>), <span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    a.start();</span><br><span class=\"line\">    b.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//账户</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Account</span> &#123;</span><br><span class=\"line\">  BigDecimal balance;<span class=\"comment\">//余额</span></span><br><span class=\"line\">  <span class=\"keyword\">final</span> String name; <span class=\"comment\">//卡名</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Account</span><span class=\"params\">(BigDecimal balance, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.balance = balance;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 银行：模拟取款</span></span><br><span class=\"line\"><span class=\"comment\"> * * 这里之所以没用实现Runnable接口的方式是为了调用Thread类中一些方法</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DrawingChannel</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> Account account; <span class=\"comment\">//账户</span></span><br><span class=\"line\">  BigDecimal drawingMoney; <span class=\"comment\">//取了多少钱</span></span><br><span class=\"line\">  BigDecimal nowMoney; <span class=\"comment\">//现在手里有多少钱</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">DrawingChannel</span><span class=\"params\">(Account account, BigDecimal drawingMoney, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(name);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.account = account;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.drawingMoney = drawingMoney;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.nowMoney = <span class=\"keyword\">new</span> <span class=\"title class_\">BigDecimal</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (account) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//判断有没有钱</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (account.balance.compareTo(drawingMoney) &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(account.name + <span class=\"string\">&quot;钱不够&quot;</span> + drawingMoney + <span class=\"string\">&quot;,&quot;</span> + <span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;无法取走&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 放大错误</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      draw();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//卡内余额 = 余额 - 取的钱</span></span><br><span class=\"line\">    account.balance = account.balance.subtract(drawingMoney);</span><br><span class=\"line\">    System.out.println(<span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;取走&quot;</span> + drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//手里的钱</span></span><br><span class=\"line\">    nowMoney = nowMoney.add(drawingMoney);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(account.name + <span class=\"string\">&quot;余额为：&quot;</span> + account.balance);</span><br><span class=\"line\">    System.out.println(<span class=\"built_in\">this</span>.getName() + <span class=\"string\">&quot;手里的钱：&quot;</span> + nowMoney);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>预期结果</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">A</span>取走<span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户钱不够<span class=\"number\">100</span>,<span class=\"selector-tag\">B</span>无法取走</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"关于试错技巧\">关于试错技巧</h3>\n<ul>\n<li>\n<p>熟练使用.sleep()试错</p>\n<ul>\n<li>\n<p>试错前</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">我的账户钱不够<span class=\"number\">100</span>,<span class=\"selector-tag\">B</span>无法取走</span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span>手里的钱：<span class=\"number\">50</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>试错后</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">B</span> 取走 <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 取走 <span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\">我的账户余额为：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">A</span> 手里的钱：<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"selector-tag\">B</span> 手里的钱：<span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"集合与线程安全\">集合与线程安全</h2>\n<p>多个线程同时操作集合对象时可能会存在覆写(线程不安全)</p>\n<h3 id=\"非线程同步\">非线程同步</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestList</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时,为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：9992</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"线程同步\">线程同步</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestList</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (list) &#123;</span><br><span class=\"line\">          list.add(Thread.currentThread().getName());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>); <span class=\"comment\">// 延时,为了等上面执行完毕</span></span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"线程安全集合\">线程安全集合</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JUC</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    List&lt;String&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">CopyOnWriteArrayList</span>&lt;String&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10000</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">        list.add(Thread.currentThread().getName());</span><br><span class=\"line\">      &#125;).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">    System.out.println(list.size());<span class=\"comment\">//输出：10000</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"死锁\">死锁</h2>\n<p>两线程在各自拥有一个对象的锁时都等待对方线程释放对象的锁 ; 也有可能很多线程产生环形/网状死锁.</p>\n<ul>\n<li>\n<p>如下例子就会产生死锁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//死锁：多个线程互相抱着对方需要的资源</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DeadLock</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Makeup</span> <span class=\"variable\">m1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Makeup</span>(<span class=\"number\">0</span>, <span class=\"string\">&quot;小黑&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">Makeup</span> <span class=\"variable\">m2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Makeup</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;小白&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    m1.start();</span><br><span class=\"line\">    m2.start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//口红</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Lipstick</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//镜子</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Mirror</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//化妆</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Makeup</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//需要的资源只有一份，用static来保证只有一份</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Lipstick</span> <span class=\"variable\">lipstick</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Lipstick</span>();</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Mirror</span> <span class=\"variable\">mirror</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Mirror</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">int</span> choice; <span class=\"comment\">//选择</span></span><br><span class=\"line\">  String name; <span class=\"comment\">//使用化妆品的人</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"title function_\">Makeup</span><span class=\"params\">(<span class=\"type\">int</span> choice, String name)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.choice = choice;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//化妆</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      makeup();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//化妆，互相持有对方的锁，就是需要拿到对方的资源</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">//获得口红的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">//一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">//获得镜子的锁</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">//两秒钟后想获得口红的锁</span></span><br><span class=\"line\">          System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"产生条件\">产生条件</h3>\n<ul>\n<li>\n<p>四个必要条件:</p>\n<ol>\n<li>互斥条件：一个资源每次只能被一个进程使用。</li>\n<li>请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li>\n<li>不剥夺条件：进程已获得的资源，在未使用完之前不能强行剥夺。</li>\n<li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h3 id=\"解决方案\">解决方案</h3>\n<ul>\n<li>\n<p>使用完同步对象后立即释放</p>\n<ul>\n<li>比如上面的例子中使用完<code>口红</code>或者<code>镜子</code>后未释放,再去获取另一个对象的锁,就会产生死锁了</li>\n<li>修改: 把 makeup 改为如下</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 一秒钟后想获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (mirror) &#123; <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得镜子的锁&quot;</span>);</span><br><span class=\"line\">      Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">synchronized</span> (lipstick) &#123; <span class=\"comment\">// 两秒钟后想获得口红的锁</span></span><br><span class=\"line\">      System.out.println(<span class=\"built_in\">this</span>.name + <span class=\"string\">&quot;获得口红的锁&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"可重入锁-ReentrantLock\">可重入锁-ReentrantLock</h2>\n<ul>\n<li>\n<p>ReentrantLock (也叫 RT-Lock) 类实现了 java.util.concurrent.locks.Lock 接口</p>\n<p>与 synchronized 区别:</p>\n<ol>\n<li>\n<p>ReentrantLock 是显式加解锁,它只能锁代码块</p>\n</li>\n<li>\n<p>性能比 synchronized 好</p>\n</li>\n</ol>\n</li>\n<li>\n<p>使用优先度: ReentrantLock &gt; 同步代码块(已经进入了方法体，分配了相应资源) &gt; 同步方法(在方法体之外)</p>\n</li>\n<li>\n<p>注意点: 加解锁最好要在 try-finally 里</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  lock.lock();</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ...</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (InterruptedException ignored) &#123;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    lock.unlock();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">          e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>结果</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"多线程与循环控制\">多线程与循环控制</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>上面代码 while 循环会存在判断失误</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">0</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第-<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>ticketNums 在判断之后被多次修改</p>\n<p>上面 10~1 次都是 c 线程执行的,它执行后轮到 b 和 a</p>\n<p>但是 b 与 a 线程实际上是在<code>ticketNums=10</code>时进入的循环,所以会导致<code>-1</code>出现</p>\n<p>所以建议遇到多线程循环控制时,直接<code>while(true)</code>,然后在内部用<code>if</code></p>\n<p>(反过来想: 是因为 lock 不能在循环之外加)</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"延迟对多线程的影响\">延迟对多线程的影响</h2>\n<blockquote>\n<p>下面三个例子数据都没错,关键看并发数量和执行时间</p>\n</blockquote>\n<h3 id=\"一\">一</h3>\n<ul>\n<li>\n<p>瞬间执行完,资源被单一线程全部抢占 (并非不合理,只不过是处理器没分配到 B,C)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestLock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Runnable</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">ticketNums</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">ReentrantLock</span> <span class=\"variable\">lock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ReentrantLock</span>(); <span class=\"comment\">// 定义Lock锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">        <span class=\"comment\">// try &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   Thread.sleep(500);</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125; catch (InterruptedException e) &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   e.printStackTrace();</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">TestLock</span> <span class=\"variable\">testLock</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">TestLock</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(testLock, <span class=\"string\">&quot;c&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"二\">二</h3>\n<ul>\n<li>\n<p>给他加个延迟试试: 三线程并行,资源分配合理</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"三\">三</h3>\n<ul>\n<li>\n<p>再试试延迟之后解开同步锁: 单线执行,资源分配不平衡</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      lock.lock(); <span class=\"comment\">// 加锁</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (ticketNums &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot;--&gt;拿到了第&quot;</span> + ticketNums-- + <span class=\"string\">&quot;票&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      lock.unlock(); <span class=\"comment\">// 解锁</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">10</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">a</span>--&gt;</span>拿到了第<span class=\"number\">9</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">8</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">7</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">6</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">5</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">4</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">3</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">c</span>--&gt;</span>拿到了第<span class=\"number\">2</span>票</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">b</span>--&gt;</span>拿到了第<span class=\"number\">1</span>票</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程通信-wait-notify\">线程通信-wait-notify</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Clerk</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"type\">int</span> productNumber; <span class=\"comment\">// 售货员手中的商品数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ProducterAndCustomer</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Clerk</span> <span class=\"variable\">clerk</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Clerk</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; <span class=\"comment\">//一直生产</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (clerk) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clerk.productNumber == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;产品为0, 开始生产&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (clerk.productNumber &lt; <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;库存: &quot;</span> + clerk.productNumber++);</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              clerk.notifyAll();</span><br><span class=\"line\">              <span class=\"comment\">//商品数不为0时让clerk等待</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// clerk.wait();</span></span><br><span class=\"line\">              clerk.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;生产者&quot;</span>).start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Thread</span>(() -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123; <span class=\"comment\">//一直消费</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (clerk) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (clerk.productNumber == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">&quot;产品为5,开始消费&quot;</span>);</span><br><span class=\"line\">              <span class=\"keyword\">while</span> (clerk.productNumber &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;库存: &quot;</span> + clerk.productNumber--);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                  Thread.sleep(<span class=\"number\">500</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                  e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              clerk.notifyAll();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// clerk.wait();</span></span><br><span class=\"line\">              clerk.wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"string\">&quot;消费者&quot;</span>).start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>结果</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\">产品为0, 开始生产</span><br><span class=\"line\"><span class=\"section\">库存: 0</span></span><br><span class=\"line\"><span class=\"section\">库存: 1</span></span><br><span class=\"line\"><span class=\"section\">库存: 2</span></span><br><span class=\"line\"><span class=\"section\">库存: 3</span></span><br><span class=\"line\"><span class=\"section\">库存: 4</span></span><br><span class=\"line\">产品为5,开始消费</span><br><span class=\"line\"><span class=\"section\">库存: 5</span></span><br><span class=\"line\"><span class=\"section\">库存: 4</span></span><br><span class=\"line\"><span class=\"section\">库存: 3</span></span><br><span class=\"line\"><span class=\"section\">库存: 2</span></span><br><span class=\"line\"><span class=\"section\">库存: 1</span></span><br><span class=\"line\">产品为0, 开始生产</span><br><span class=\"line\"><span class=\"section\">库存: 0</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"线程池\">线程池</h2>\n<ul>\n<li>\n<p>线程池的出现是为了方便大量的线程创建,回收和管理</p>\n</li>\n<li>\n<p>需要了解 <code>ExecutorService</code> 线程池接口;以及 <code>Executors</code> 线程池工具类.</p>\n<ul>\n<li>\n<p>corePoolSize: 核心池的大小</p>\n</li>\n<li>\n<p>maximumPoolSize:最大线程数</p>\n</li>\n<li>\n<p>keepAliveTime: 线程没有任务时最多保持多长时间后会终止</p>\n</li>\n<li>\n<p>void execute(Runnable command) :执行任务/命令,没有返回值，一般用来执 Runnable</p>\n</li>\n<li>\n<p><T> Future<T> submit(Callable<T> task) :执行任务,有返回值，一般用来执行 Callable</p>\n</li>\n</ul>\n</li>\n<li>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestThreadPool</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.创建服务，创建线程池</span></span><br><span class=\"line\">    <span class=\"type\">ExecutorService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> Executors.newFixedThreadPool(<span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"type\">Runnable</span> <span class=\"variable\">runnable</span> <span class=\"operator\">=</span> () -&gt; &#123;</span><br><span class=\"line\">      System.out.println(Thread.currentThread().getName() + <span class=\"string\">&quot; runnable&quot;</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    Callable&lt;String&gt; callable = () -&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> Thread.currentThread().getName() + <span class=\"string\">&quot; callable&quot;</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 执行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">      service.execute(runnable);</span><br><span class=\"line\">      System.out.println(service.submit(callable).get());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3.关闭连接</span></span><br><span class=\"line\">    service.shutdown();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-1 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-2 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-3 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-4 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-5 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-6 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-7 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-8 callable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-9 runnable</span></span><br><span class=\"line\"><span class=\"comment\">  pool-1-thread-10 callable</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "笔记",
                "Java",
                "多线程"
            ]
        }
    ]
}