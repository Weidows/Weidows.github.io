{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"shell\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://weidows.github.io",
    "items": [
        {
            "id": "https://weidows.github.io/post/Web/get-resources/",
            "url": "https://weidows.github.io/post/Web/get-resources/",
            "title": "🌏媒体资源加密-and-解密获取",
            "date_published": "2022-02-22T11:49:20.000Z",
            "content_html": "<h1>媒体资源加密-and-解密获取</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-08-06 15:36:23\n * @FilePath: \\Blog-private\\source\\_posts\\Web\\get-resources.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E5%AA%92%E4%BD%93%E8%B5%84%E6%BA%90%E5%8A%A0%E5%AF%86-and-%E8%A7%A3%E5%AF%86%E8%8E%B7%E5%8F%96\">媒体资源加密-and-解密获取</a>\n<ul>\n<li><a href=\"#token-%E9%98%B2%E7%9B%97%E9%93%BE\">token-防盗链</a></li>\n<li><a href=\"#ffmpeg-hls-aes_128_cbc\">FFmpeg-HLS-AES_128_CBC</a>\n<ul>\n<li><a href=\"#%E5%88%86%E7%89%87\">分片</a></li>\n<li><a href=\"#%E5%88%86%E7%89%87%E4%BD%9C%E7%94%A8-%E5%BC%95%E5%AD%90\">分片作用-引子</a></li>\n<li><a href=\"#%E8%8A%B1%E6%B4%BB\">花活</a></li>\n<li><a href=\"#%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%B5%81%E7%A8%8B%E5%9B%BE\">加解密流程图</a></li>\n<li><a href=\"#openssl-%E6%89%8B%E5%8A%A8%E5%8A%A0%E5%AF%86\">openssl-手动加密</a>\n<ul>\n<li><a href=\"#encrypt-without-iv\">encrypt-without-iv</a></li>\n<li><a href=\"#encrypt-with-iv\">encrypt-with-iv</a></li>\n</ul>\n</li>\n<li><a href=\"#ffmpeg-%E5%88%86%E7%89%87%E5%8A%A0%E5%AF%86%E4%B8%80%E6%9D%A1%E9%BE%99\">FFmpeg-分片加密一条龙</a></li>\n<li><a href=\"#%E8%A7%A3%E5%AF%86-%E5%90%88%E5%B9%B6\">解密-合并</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%8E%B7%E5%8F%96\">获取</a>\n<ul>\n<li><a href=\"#%E8%A7%86%E9%A2%91\">视频</a></li>\n<li><a href=\"#%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87\">网页图片</a></li>\n<li><a href=\"#qq-%E7%BE%A4%E5%9B%BE%E7%89%87\">QQ-群图片</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>各类平台网页中的视频通常会被 <code>加密处理</code> 以防止别人拿走; 防盗技术还是有很多种的:<sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<ol>\n<li>FFmpeg-HLS-AES_128_CBC 加密</li>\n<li>url 中加入 token 验证</li>\n<li>验证用户身份再给链接(session,cookie)</li>\n<li>视频加水印</li>\n<li>限制跨域访问</li>\n<li>…etc</li>\n</ol>\n</li>\n</ul>\n<p>下面只摸一下技术层面的 <code>1.和2.</code></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"token-防盗链\">token-防盗链</h2>\n<p>如 <code>http://xxxxxx.com/m3u8/hunan/desc.m3u8?stream_id=hunan&lt;m=1410595018&amp;lkey=8bc1e0fe35f6321ef560f8ccffb70e5d&amp;path=59.49.42.14,58.59.3.9,58.59.3.51&amp;platid=10&amp;splatid=1015&amp;tag=live&amp;cips=127.0.0.1&amp;ext=m3u8&amp;sign=live_tv</code> <sup id='cite_ref-8'><a href=\"#cite_note-8\">[8]</a></sup></p>\n<p>在 url 加上 时间戳,ip 地址,平台 id,splatid,tag,cips,ext,sign 等参数, 可以让服务器鉴别是否被其他网站/客户端请求, 并作出 403 响应</p>\n<p>同一参数的 url 无法被复用, 但是仍可以通过动态调整参数来绕过服务器的检测</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"FFmpeg-HLS-AES-128-CBC\">FFmpeg-HLS-AES_128_CBC</h2>\n<ul>\n<li>\n<p>这么一坨 💩,什么意思嘛?</p>\n<p>FFmpeg 是最强大的视频编解码器, 可以把输入的视频处理成符合 HLS 规范的流媒体, 同时通过 AES-128-CBC 格式的秘钥加密视频</p>\n<p>浅入深出,别急慢慢吃… 下面结合这个库动动手就明白了:<sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<hr>\n</li>\n</ul>\n<h3 id=\"分片\">分片</h3>\n<ul>\n<li>\n<p>分片的方式比较简单,这里我们准备好一个 <code>demo.mp4</code>, 丢给 FFmpeg 下面的命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list index.m3u8 -segment_time 30 %d.ts</span><br></pre></td></tr></table></figure>\n<p>执行完会出来下面这些东西,这些 ts 文件就是分成片的小段视频,此处没加密可以直接播放</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRd0R.png\" alt=\"\"></p>\n<p>有些播放器支持的话 index.m3u8 也是可以播放的, 其实就是引用的这些 ts</p>\n<hr>\n</li>\n<li>\n<p>上面命令中 <code>index.m3u8</code> 这个文件是分片的索引文件, 指明了 ts 文件的先后顺序,时长,版本和加密等信息</p>\n<blockquote>\n<ul>\n<li>TS: MPEG2-Transport Stream,高清相机拍摄视频的封装格式;特点就是要求从视频流的任一片段开始都是可以独立解码的</li>\n<li>m3u8: HTTP Live Streaming（HLS） 协议格式的基础,Unicode 版本的 M3U，此文件用 UTF-8 编码<sup id='cite_ref-01'><a href=\"#cite_note-01\">[1]</a></sup> <br>\n下图 index 就是 m3u8,作用就是索引 ts<br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRc4n.png\" alt=\"\"></li>\n</ul>\n</blockquote>\n<hr>\n</li>\n<li>\n<p>喏,index.m3u8 文件内容应该能看懂</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#EXTM3U</span><br><span class=\"line\">#EXT-X-VERSION:3</span><br><span class=\"line\">#EXT-X-MEDIA-SEQUENCE:0</span><br><span class=\"line\">#EXT-X-ALLOW-CACHE:YES</span><br><span class=\"line\">#EXT-X-TARGETDURATION:32</span><br><span class=\"line\">#EXTINF:30.720000,</span><br><span class=\"line\">0.ts</span><br><span class=\"line\">#EXTINF:29.280000,</span><br><span class=\"line\">1.ts</span><br><span class=\"line\">#EXTINF:31.880000,</span><br><span class=\"line\">2.ts</span><br><span class=\"line\">#EXTINF:29.040000,</span><br><span class=\"line\">3.ts</span><br><span class=\"line\">#EXTINF:29.320000,</span><br><span class=\"line\">4.ts</span><br><span class=\"line\">#EXTINF:6.280000,</span><br><span class=\"line\">5.ts</span><br><span class=\"line\">#EXT-X-ENDLIST</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h3 id=\"分片作用-引子\">分片作用-引子</h3>\n<ol>\n<li>\n<p>分段加载视频而不是一口气加载到底</p>\n<p>大部分视频用户不会完完整整的看,分段加载减轻服务器压力,也使用户体验好</p>\n<p>(好几 G 的电影,一口气加载到底, 内存/缓存遭不住…)</p>\n</li>\n<li>\n<p>分片可以让用户无法<code>直接通过链接</code>在浏览器获取<code>完整的 mp4 视频</code></p>\n<p>但,可以通过获取所有 ts 文件合并为 mp4</p>\n<p>插件市场的一些插件可以通过 .m3u8 获取并合并.ts 间接获取完整的 .MP4</p>\n</li>\n</ol>\n<p>于是为了反破解出现了 <code>某些花活</code> 和 <code>视频加密</code></p>\n<hr>\n<h3 id=\"花活\">花活</h3>\n<ol>\n<li>\n<p>把 .m3u8 文件伪装成 .mp4, 可以让大部分没有伪装识别能力的爬虫找不着北 (比如 CoCocut)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRSwv.png\" alt=\"\"><br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRTHM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>m3u8 中多层嵌套 m3u8 (套娃), 有些爬虫是支持的, 有的 G 了</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"code\"><pre><span class=\"line\">#EXTM3U</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=1064000</span><br><span class=\"line\">1000kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=564000</span><br><span class=\"line\">500kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=282000</span><br><span class=\"line\">250kbps.m3u8</span><br><span class=\"line\">#EXT-X-STREAM-<span class=\"keyword\">INF</span>:<span class=\"keyword\">PROGRAM</span>-ID=1,BANDWIDTH=2128000</span><br><span class=\"line\">2000kbps.m3u8</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>…etc</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"加解密流程图\">加解密流程图</h3>\n<p>原创哦,转载请标记</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRvhz.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"openssl-手动加密\">openssl-手动加密</h3>\n<h4 id=\"encrypt-without-iv\">encrypt-without-iv</h4>\n<p>此处通过 shell 脚本分析,墙裂建议结合仓库学习:<sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">workPath=&quot;2.encrypted-without-iv&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">清除原先的</span></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">分片</span></span><br><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list $workPath/index.m3u8 -segment_time 30 $workPath/%d.ts</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">获取加密秘钥</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">openssl rand 16</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  随机生成 16B 二进制数据 (16*8=128 位, 对应AES-128-CBC名称)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># tee -a $workPath/enc.key</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  将生成的数据输出到秘钥文件 enc.key, 同时把数据交给 hexdump 处理</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  hexdump -e <span class=\"string\">&#x27;a/b format1 format2&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    a个字节/8位 -&gt; format2 (a可省,默认为1)</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    b个字节/8位 -&gt; format1</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    详见: https://blog.csdn.net/bytxl/article/details/43738103</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\">#   每1字节/8位 -&gt; %02x -&gt; 2位16进制</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    也就是二进制转16进制,每4位合1位, 128/4=32位16进制</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  每16字节的结果为1行, 那去掉这个16可以吗?</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    应该是不行的,结果会出错,例如:</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    4a6afd460c84c498b8a817ad66392ef2 √</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">    46fd6a4a98c4840cad17a8b8f22e3966 ×</span></span><br><span class=\"line\">encryptionKey=`openssl rand 16 | tee -a $workPath/enc.key | hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ts 文件数</span></span><br><span class=\"line\">numberOfTsFiles=`ls $workPath/*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    # without-iv也就是默认iv为32位文件序列号</span><br><span class=\"line\">    #   如 5.ts -&gt; 00000000000000000000000000000005</span><br><span class=\"line\">    initializationVector=`printf &#x27;%032x&#x27; $i`</span><br><span class=\"line\"></span><br><span class=\"line\">    # 对每个分片加密</span><br><span class=\"line\">    openssl aes-128-cbc -e -in $workPath/$i.ts -out $workPath/enc_$i.ts -nosalt -iv $initializationVector -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">寻找并添加加密方法和秘钥URL</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  找 <span class=\"string\">&quot;#EXT-X-TARGETDURATION:&quot;</span> 这一段,并在下一行添加</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  <span class=\"comment\">#EXT-X-KEY:METHOD=AES-128,URI=&quot;enc.key&quot;</span></span></span><br><span class=\"line\">sed &#x27;/#EXT-X-TARGETDURATION:/a #EXT-X-KEY:METHOD=AES-128,URI=&quot;enc.key&quot;&#x27; $workPath/index.m3u8 &gt; $workPath/index_new.m3u8</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">覆盖</span></span><br><span class=\"line\">mv $workPath/index_new.m3u8 $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如图,加密后的 ts 就不能直接播放了</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRzam.png\" alt=\"\"></p>\n</li>\n</ul>\n<hr>\n<h4 id=\"encrypt-with-iv\">encrypt-with-iv</h4>\n<p>这个 iv (initialisation vector,初始化向量) 有点迷, 作用是增强随机性</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">workPath=&quot;3.encrypted-with-iv&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"></span><br><span class=\"line\">ffmpeg -i demo.mp4 -codec copy -f segment -segment_list $workPath/index.m3u8 -segment_time 30 $workPath/%d.ts</span><br><span class=\"line\"></span><br><span class=\"line\">encryptionKey=`openssl rand 16 | tee -a $workPath/enc.key | hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27;`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey 偏移量,32位16进制数据,如: f86b5decdb6359cb1023e308651dccfb</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">不需要另存文件, 只需要写在 m3u8 文件里</span></span><br><span class=\"line\">ivKey=`openssl rand -hex 16`</span><br><span class=\"line\"></span><br><span class=\"line\">numberOfTsFiles=`ls $workPath/*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    openssl aes-128-cbc -e -in $workPath/$i.ts -out $workPath/enc_$i.ts -nosalt -iv $ivKey -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下面 <span class=\"variable\">$&#123;ivKey&#125;</span> 需要获取变量,所以字符串要用<span class=\"string\">&quot;&quot;</span>而不能是<span class=\"string\">&#x27;&#x27;</span></span></span><br><span class=\"line\">sed &quot;/#EXT-X-TARGETDURATION:/a #EXT-X-KEY:METHOD=AES-128,URI=\\&quot;enc.key\\&quot;,IV=0x$&#123;ivKey&#125;&quot; $workPath/index.m3u8 &gt; $workPath/index_new.m3u8</span><br><span class=\"line\"></span><br><span class=\"line\">mv $workPath/index_new.m3u8 $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"FFmpeg-分片加密一条龙\">FFmpeg-分片加密一条龙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">workPath=&quot;4.encrypt-with-FFmpeg&quot;</span><br><span class=\"line\">urlPrefix=&quot;weidows.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $workPath/*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">enc.keyinfo</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  写到 m3u8 里的 keyURL | https://hlsbook.net/enc.key</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  加密用的 key 文件地址  | enc.key</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  IV值 (可选)          | ecd0d06eaf884d8226c33928e87efa33</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">  详见: https://hlsbook.net/how-to-encrypt-hls-video-with-ffmpeg/</span></span><br><span class=\"line\"></span><br><span class=\"line\">openssl rand 16 &gt; $workPath/enc.key</span><br><span class=\"line\"></span><br><span class=\"line\">tmpfile=`mktemp`</span><br><span class=\"line\">echo $urlPrefix/enc.key &gt; $tmpfile</span><br><span class=\"line\">echo $workPath/enc.key &gt;&gt; $tmpfile</span><br><span class=\"line\">echo `openssl rand -hex 16` &gt;&gt; $tmpfile</span><br><span class=\"line\">mv $tmpfile $workPath/enc.keyinfo</span><br><span class=\"line\"></span><br><span class=\"line\">ffmpeg -y -i demo.mp4 -c copy -hls_time 30 -hls_key_info_file $workPath/enc.keyinfo -hls_playlist_type vod -hls_segment_filename $workPath/enc_%d.ts $workPath/index.m3u8</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>index.m3u8</p>\n<p>可见生成的没什么问题,而且可以通过下面的方法正常解密</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#EXTM3U</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-VERSION</span>:<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-TARGETDURATION</span>:<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-MEDIA-SEQUENCE</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-PLAYLIST-TYPE</span>:VOD</span><br><span class=\"line\"><span class=\"selector-id\">#EXT-X-KEY</span>:METHOD=AES-<span class=\"number\">128</span>,URI=<span class=\"string\">&quot;./enc.key&quot;</span>,IV=<span class=\"number\">0</span>x2b5cc8a84648ed8ce5f64e5845d3cb7c</span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">30.720000</span>,</span><br><span class=\"line\">enc_0<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.280000</span>,</span><br><span class=\"line\">enc_1<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">31.880000</span>,</span><br><span class=\"line\">enc_2<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.040000</span>,</span><br><span class=\"line\">enc_3<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">29.320000</span>,</span><br><span class=\"line\">enc_4<span class=\"selector-class\">.ts</span></span><br><span class=\"line\"><span class=\"selector-id\">#EXTINF</span>:<span class=\"number\">6.280000</span>,</span><br><span class=\"line\">enc_5<span class=\"selector-class\">.ts</span></span><br><span class=\"line\">#EXT-X-ENDLIST</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"解密-合并\">解密-合并</h3>\n<p>上面加密会了的话,解密就简单了,完全就是反过来</p>\n<p>合并方法取自: <sup id='cite_ref-6'><a href=\"#cite_note-6\">[6]</a></sup></p>\n<p>这篇文章<sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup>简单介绍了下如何手动解密,其文中把 key 和 iv 位数标错为 16 了,别误解</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">inputPath=<span class=\"string\">&quot;2.encrypted-without-iv&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey=<span class=\"string\">&quot;&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">inputPath=<span class=\"string\">&quot;3.encrypted-with-iv&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ivKey=<span class=\"string\">&quot;0d5cce6d9fbfae9dcc86cb3f12d4eb4b&quot;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加密 enc_*.ts 输入路径</span></span><br><span class=\"line\">inputPath=&quot;4.encrypt-with-FFmpeg&quot;</span><br><span class=\"line\">ivKey=&quot;36bb7a1e43e1d3d88b779243817a67bc&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">解密 dec_*.ts 和合并后 mp4 输出路径</span></span><br><span class=\"line\">outputPath=&quot;5.decrypt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf $outputPath/*</span><br><span class=\"line\"></span><br><span class=\"line\">encryptionKey=$(hexdump -e &#x27;16/1 &quot;%02x&quot;&#x27; $inputPath/enc.key)</span><br><span class=\"line\"></span><br><span class=\"line\">numberOfTsFiles=`ls $inputPath/enc_*.ts | wc -l`</span><br><span class=\"line\"></span><br><span class=\"line\">for ((i=0; i&lt;$numberOfTsFiles; i ++)) do</span><br><span class=\"line\">    if [[ $ivKey == &quot;&quot; ]]; then</span><br><span class=\"line\">        ivKey=$(printf &#x27;%032x&#x27; $i)</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    openssl aes-128-cbc -d -in $inputPath/enc_$i.ts -out $outputPath/dec_$i.ts -nosalt -iv $ivKey -K $encryptionKey</span><br><span class=\"line\">done</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">合并</span></span><br><span class=\"line\">ffmpeg -allowed_extensions ALL -i $inputPath/index.m3u8 -acodec copy -vcodec copy -f mp4 $outputPath/combine.mp4</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>如图 <code>dec_*.ts</code> 为解密后的文件,可以直接播放了</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVR0xA.png\" alt=\"\"></p>\n<p>可以看项目中的 <code>5.</code>, 合并后的 mp4 也没有问题</p>\n<p>但 原视频 != 分片加解密合并后的视频, 大小差不多但是会有差异 (9.87MB vs 9.95MB)</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"获取\">获取</h2>\n<p>下面就是对资源获取方式的 <code>推荐</code> 了</p>\n<h3 id=\"视频\">视频</h3>\n<blockquote>\n<p>CoCocut: 这个插件官方直接说了不支持爬加密视频,但是大部分平台用起来<s>还是很棒的</s>,插件中最棒的<br>\n有个小弊病, 它不开会员的话是超慢的单线程下载… 我常用它获取 m3u8 地址让下面这伙计下载</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://github.com/nilaoda/N_m3u8DL-CLI\">N_m3u8DL-CLI</a>: 这家伙可以通过 m3u8 下载加密视频; 支持多线程,很快 <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVct49.png\" alt=\"\"><br>\n可以手动破解加密视频 <sup id='cite_ref-7'><a href=\"#cite_note-7\">[7]</a></sup></p>\n</blockquote>\n<blockquote>\n<p>QQ 浏览器手机 app, 直接进对应网页就可以爬下来视频,加密的也可以,速度拉满 (小母牛倒立 🐄🍺</p>\n</blockquote>\n<hr>\n<h3 id=\"网页图片\">网页图片</h3>\n<ul>\n<li>\n<p>下面两个差不多,都是把页面现有的图片都扒下来, <code>按域名分类</code>,很容易筛选出来</p>\n<p>这方法并不适用于获取视频.</p>\n<blockquote>\n<p>梦想资源下载器</p>\n</blockquote>\n<blockquote>\n<p>网页右键另存为<br>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRbW9.png\" alt=\"\"></p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Picviewer CE+</p>\n</blockquote>\n<hr>\n<h3 id=\"QQ-群图片\">QQ-群图片</h3>\n<p>经常有老哥在群里发图,苦于一张张保存手抽筋,发现了此方法:</p>\n<ol>\n<li>\n<p>打开电脑版消息管理器,找到那些聊天记录</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRQg0.png\" alt=\"\"></p>\n</li>\n<li>\n<p>选择,复制</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVRN95.png\" alt=\"\"></p>\n</li>\n<li>\n<p>发送给 <code>我的手机</code></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVR7Hh.png\" alt=\"\"></p>\n</li>\n<li>\n<p>然后就无了, 这手段对于保存好几十/上百张图十分便利</p>\n</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-01' href='#cite_ref-01'>[1]</a>: <a href=\"https://www.jianshu.com/p/426425cad08a\">HLS 协议介绍</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://github.com/fftt2017/hls-m3u8-sample\">https://github.com/fftt2017/hls-m3u8-sample</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://zhuanlan.zhihu.com/p/32014463\">在线教育类网站视频加密视频安全的一些方法</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://github.com/Weidows-projects/hls-m3u8-sample\">https://github.com/Weidows-projects/hls-m3u8-sample</a>, 此库是在<sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup>的基础上改进的</p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"https://www.52pojie.cn/thread-971265-1-1.html\">解密 m3u8 文件, ts 文件解密, hls 解密.</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://blog.csdn.net/Yao_2333/article/details/82910560\">ffmpeg-简单 AES 加解密记录</a></p>\n<p><a name='cite_note-7' href='#cite_ref-7'>[7]</a>: <a href=\"https://www.appinn.com/download-video-30482/\">恕我直言，再难下载的视频，手搓大佬终究还是有办法</a></p>\n<p><a name='cite_note-8' href='#cite_ref-8'>[8]</a>: <a href=\"https://www.zhihu.com/question/20697986/answer/128433075\">HLS 如何实现加密 ？</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "推荐",
                "浏览器",
                "扩展",
                "FFmpeg",
                "算法",
                "hexdump",
                "HLS",
                "openssl",
                "shell",
                "密码学",
                "QQ"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/shell/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/",
            "url": "https://weidows.github.io/post/lang/shell/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/",
            "title": "🥱戏耍脚本中~奇技淫巧",
            "date_published": "2021-11-03T08:37:54.000Z",
            "content_html": "<h1>戏耍脚本中~奇技淫巧</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-06-08 11:50:41\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\shell\\奇技淫巧.md\n * @Description:\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E6%88%8F%E8%80%8D%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7\">戏耍脚本中~奇技淫巧</a>\n<ul>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E5%88%A4%E7%A9%BA\">参数判空</a>\n<ul>\n<li><a href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5%E5%88%A4%E5%AE%9A\">字符串拼接判定</a></li>\n<li><a href=\"#%E8%AF%AD%E6%B3%95%E5%88%A4%E5%AE%9A\">语法判定</a></li>\n</ul>\n</li>\n<li><a href=\"#%E7%A8%8B%E5%BA%8F%E5%8D%A0%E7%94%A8-%E5%90%8E%E5%8F%B0%E5%90%AF%E5%8A%A8\">程序占用-后台启动</a>\n<ul>\n<li><a href=\"#aria2\">aria2</a></li>\n<li><a href=\"#%E5%A5%97%E5%A8%83\">套娃</a></li>\n</ul>\n</li>\n<li><a href=\"#echo\">echo</a>\n<ul>\n<li><a href=\"#%E5%85%B6%E4%B8%80\">其一</a></li>\n<li><a href=\"#%E5%85%B6%E4%BA%8C\">其二</a></li>\n</ul>\n</li>\n<li><a href=\"#scoop\">Scoop</a>\n<ul>\n<li><a href=\"#portable\">portable</a></li>\n<li><a href=\"#%E8%A7%A3%E5%89%96-exe\">解剖-exe</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E6%9F%90%E5%AD%97%E7%AC%A6%E4%B8%B2\">判断是否含有某字符串</a></li>\n<li><a href=\"#%E5%85%B3%E4%BA%8E%E7%9B%AE%E5%BD%95\">关于目录</a></li>\n<li><a href=\"#xml-error\">XML-error</a></li>\n<li><a href=\"#%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E4%B8%8B%E4%B8%8B%E6%9F%90%E6%96%87%E4%BB%B6\">删除所有文件下下某文件</a></li>\n<li><a href=\"#latex2word\">latex2word</a></li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"参数判空\">参数判空</h2>\n<h3 id=\"字符串拼接判定\">字符串拼接判定</h3>\n<ul>\n<li>\n<p>有时候我们想判断一个变量是不是空的,会变得有些棘手</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">if [ $&#123;abc&#125; != &quot;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>我们的想法是判断是否存在 abc 这个变量,实际上这样写并不行,没有这个变量的话会变成下面的样子:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">if [  != &quot;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>这样肯定会报错的</p>\n<hr>\n</li>\n<li>\n<p>改一下,比如添加冗余校验字符</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">abc = &quot;abc&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">if [ a$&#123;abc&#125; != a ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p><code>bat 中引号也会视为变量一部分</code>,所以:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> &quot;<span class=\"variable\">%DIRNAME%</span>&quot; == &quot;&quot; <span class=\"built_in\">set</span> DIRNAME=.</span><br></pre></td></tr></table></figure>\n<p>或者:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> abc=&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"variable\">%abc%</span> == &quot;&quot; (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> &quot;abc为空&quot;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>跟 shell 语法差别很大来着, 注意别写错…</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"语法判定\">语法判定</h3>\n<ul>\n<li>\n<p>shell 的语法:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">if [ -n &quot;$&#123;abc&#125;&quot; ]; then</span><br><span class=\"line\">  echo $&#123;abc&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>bat 语法:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span> abc (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> &#x27;abc&#x27; <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span>.</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"程序占用-后台启动\">程序占用-后台启动</h2>\n<h3 id=\"aria2\">aria2</h3>\n<ul>\n<li>\n<p>如果你用过 aria2 的话肯定会遇到一个头疼的事: <code>如何开机后台自动启动它</code></p>\n<ol>\n<li>\n<p>它的程序本身不带有开机启动,需要另外写启动脚本</p>\n</li>\n<li>\n<p>它无法后台启动,必然会占据一个控制台程序的前台</p>\n</li>\n</ol>\n</li>\n<li>\n<p>网上找到了比较好用的方法: <code>vbs 脚本</code></p>\n<p>由于我平时用 bat 管理电脑,单独编写执行一个 vbs 脚本略显多余,所以直接结合进 bat 脚本里,用完就删针刺激:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> CreateObject(&quot;WScript.Shell&quot;).Run &quot;aria2c --conf-<span class=\"built_in\">path</span>=D:\\Game\\Scoop\\persist\\aria2\\conf&quot;,<span class=\"number\">0</span> &gt; aria2.vbs</span><br><span class=\"line\">cscript //Nologo aria2.vbs</span><br><span class=\"line\"><span class=\"built_in\">del</span> aria2.vbs</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>后来又发现一个更好的: <code>用 powershell 后台启动</code> <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">powershell <span class=\"built_in\">Start</span>-Process -WindowStyle hidden aria2c.exe --conf-<span class=\"built_in\">path</span>=D:\\Repos\\Weidows-projects\\Keeper\\Programming-Configuration\\others\\aria2\\aria2.conf</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"套娃\">套娃</h3>\n<p>如上, sharemouse 也存在这问题, 通过套娃解决了:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">start /b cmd /c <span class=\"string\">&quot;C:\\Program Files (x86)\\ShareMouse\\ShareMouse.exe&quot;</span></span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"echo\">echo</h2>\n<h3 id=\"其一\">其一</h3>\n<ul>\n<li>\n<p>看到一个脚本中这么写,乍一看蒙了:</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CLS</span>&amp;<span class=\"built_in\">ECHO</span>.&amp;<span class=\"built_in\">ECHO</span> 完成, 以下选项自选：</span><br><span class=\"line\"><span class=\"built_in\">ECHO</span>.&amp;<span class=\"built_in\">ECHO</span> <span class=\"number\">1</span>、启用视频播放程序(会驻留进程)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>实际上只是把几个命令压缩到了一行</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cls</span>   <span class=\"meta\"># 清屏</span></span><br><span class=\"line\">echo. <span class=\"meta\"># 换行</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"其二\">其二</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;hello world&quot;</span> | xargs <span class=\"built_in\">echo</span></span><br></pre></td></tr></table></figure>\n<p>脱裤子放一个颇有技巧的新活屁</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Scoop\">Scoop</h2>\n<h3 id=\"portable\">portable</h3>\n<p>我们可以通过创建虚拟链接把 C 盘中的 runtime 数据 -&gt; scoop/persist 内</p>\n<ul>\n<li>\n<p>此片段可自动判断 <code>remix-ide / .remix-ipfsnode / .cache_remix_ide</code> 所在目录是 <code>USERPROFILE / APPDATA</code></p>\n<p>并将数据移动到 persist 内,创建虚拟链接</p>\n<p><code>需要注意只能是文件夹,不能是文件!!!</code></p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;foreach (<span class=\"variable\">$folder</span> in @(&#x27;remix-ide&#x27;, &#x27;.remix-ipfsnode&#x27;, &#x27;.cache_remix_ide&#x27;)) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;      <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;      <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    &#125; else &#123;continue&#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  if (Test-Path <span class=\"variable\">$runtimeCachePersist</span>) &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    Remove-Item <span class=\"variable\">$runtimeCache</span> -Force -Recurse -ErrorAction SilentlyContinue&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    New-Item -Type Junction -Path <span class=\"variable\">$runtimeCache</span> -Target <span class=\"variable\">$runtimeCachePersist</span> | Out-Null&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    mkdir <span class=\"variable\">$runtimeCache</span>&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    Move-Item <span class=\"variable\">$runtimeCache</span> <span class=\"variable\">$runtimeCachePersist</span> -Force&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;    New-Item -Type Junction -Path <span class=\"variable\">$runtimeCache</span> -Target <span class=\"variable\">$runtimeCachePersist</span> | Out-Null&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>以及配对的 uninstaller:</p>\n<figure class=\"highlight nsis\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;uninstaller&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;script&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;foreach (<span class=\"variable\">$folder</span> in @(&#x27;remix-ide&#x27;, &#x27;.remix-ipfsnode&#x27;, &#x27;.cache_remix_ide&#x27;)) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\USERPROFILE\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  &#125; else &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    if (Test-Path \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;) &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;      <span class=\"variable\">$runtimeCache</span> = \\&quot;</span><span class=\"variable\">$env</span>:APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;      <span class=\"variable\">$runtimeCachePersist</span> = \\&quot;</span><span class=\"variable\">$persist_dir</span>\\\\APPDATA\\\\<span class=\"variable\">$folder</span>\\<span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    &#125; else &#123;continue&#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  if (!(Test-Path <span class=\"variable\">$runtimeCachePersist</span>)) &#123; Move-Item <span class=\"variable\">$runtimeCache</span> <span class=\"variable\">$runtimeCachePersist</span> -Force -ErrorAction SilentlyContinue &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;  else &#123; Remove-Item <span class=\"variable\">$runtimeCache</span> -Force -Recurse -ErrorAction SilentlyContinue &#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;&quot;</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"解剖-exe\">解剖-exe</h3>\n<ul>\n<li>\n<p>此片段可以把常见的 <code>.exe -&gt; .exe#/dl.7z</code> 中的文件提取出来</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;Expand-7zipArchive <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\\\</span>`$PLUGINSDIR<span class=\"subst\">\\\\</span>app-64.7z<span class=\"subst\">\\&quot;</span> <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\&quot;</span>&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;Remove-Item -Recurse -Force <span class=\"subst\">\\&quot;</span>$dir<span class=\"subst\">\\\\</span>`$PLUGINSDIR<span class=\"subst\">\\&quot;</span>&quot;</span>,</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"判断是否含有某字符串\">判断是否含有某字符串</h2>\n<ul>\n<li>\n<p>如下,可以判断.gitignore 中是否含有 ‘backup’</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat <span class=\"variable\">%BACKUP_DIR%</span>\\.gitignore | <span class=\"built_in\">findstr</span> backup &gt;<span class=\"built_in\">nul</span> || (</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> backup&gt;&gt; <span class=\"variable\">%BACKUP_DIR%</span>\\.gitignore</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"关于目录\">关于目录</h2>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\">pwd</span><br><span class=\"line\"><span class=\"built_in\">echo</span> %<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> %~dp0</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight console\"><table><tr><td class=\"code\"><pre><span class=\"line\">╰─ cmd /c &quot;d:\\Repos\\Weidows-projects\\Keeper\\test.bat&quot;</span><br><span class=\"line\">/d/Repos/Weidows-projects/Keeper</span><br><span class=\"line\">d:\\Repos\\Weidows-projects\\Keeper\\test.bat</span><br><span class=\"line\">d:\\Repos\\Weidows-projects\\Keeper\\</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"XML-error\">XML-error</h2>\n<blockquote>\n<p>error on line 228 at column 35: Input is not proper UTF-8, indicate encoding !</p>\n</blockquote>\n<p>这个报错它的意思是有字符并不是 UTF-8 编码, 虽然它报错指明的文件位置是对的, 但是 line/column 有可能不对</p>\n<p>比如 jupyter-lab 运行的输出有时候会带有 XML 不支持的特殊符号 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup> (即使 echo $LANG 是 UTF-8)</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/Zlkb8Q.png\" alt=\"\"></p>\n<p>解决办法就是通过 UTF-8 编码打开, 把这种符号全删掉保存 (<a href=\"https://github.com/Weidows-projects/public-post/blob/main/notebook/convert.sh#L45\">参见脚本</a>)</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"删除所有文件下下某文件\">删除所有文件下下某文件</h2>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"regexp\">/mnt/</span>test_data<span class=\"regexp\">/Movie/</span><span class=\"number\">1</span>/a.txt</span><br><span class=\"line\"><span class=\"regexp\">/mnt/</span>test_data<span class=\"regexp\">/Movie/</span><span class=\"number\">2</span>/a.txt</span><br><span class=\"line\"><span class=\"regexp\">/mnt/</span>test_data<span class=\"regexp\">/Movie/</span><span class=\"number\">3</span>/a.txt</span><br><span class=\"line\"><span class=\"regexp\">/mnt/</span>test_data<span class=\"regexp\">/Movie/</span><span class=\"number\">4</span>/a.txt</span><br></pre></td></tr></table></figure>\n<p>如上, 想批量删除 1,2,3,4 文件夹下的 a.txt 文件 <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">find</span> <span class=\"regexp\">/mnt/</span>test_data<span class=\"regexp\">/Movie/</span> -maxdepth <span class=\"number\">3</span> -name output_face | xargs rm -rf</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"latex2word\">latex2word</h2>\n<ol>\n<li>pandoc -s <a href=\"http://1.md\">1.md</a> -o 1.docx</li>\n<li>typora 导出</li>\n<li>obsidian 搜索并安装 pandoc 插件, 导出</li>\n</ol>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://blog.huati365.com/c4a41e416d7e30a8\">Input is not proper UTF-8, indicate encoding !错误处理</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://www.ruanyifeng.com/blog/2019/08/xargs-tutorial.html\">xargs 命令教程 - 阮一峰的网络日志</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://blog.csdn.net/qq_27979907/article/details/114280470\">windows 通过 cmd 后台运行进程方法<em>cmd 后端运行</em>吉吉教主的博客-CSDN 博客</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "shell",
                "PowerShell"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/shell/optimize/",
            "url": "https://weidows.github.io/post/lang/shell/optimize/",
            "title": "🉑极致专攻-Shell-Optimize",
            "date_published": "2020-10-13T15:25:31.000Z",
            "content_html": "<h1>极致专攻-Shell-Optimize</h1>\n<!--\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2023-04-20 18:26:49\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\shell\\optimize.md\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E6%9E%81%E8%87%B4%E4%B8%93%E6%94%BB-shell-optimize\">极致专攻-Shell-Optimize</a>\n<ul>\n<li><a href=\"#pwsh\">pwsh</a>\n<ul>\n<li><a href=\"#%E9%A2%84%E8%A7%88\">预览</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"#%E6%8F%92%E4%BB%B6-%E9%85%8D%E7%BD%AE\">插件-配置</a>\n<ul>\n<li><a href=\"#oh-my-posh\">oh-my-posh</a></li>\n<li><a href=\"#poshfuck\">PoshFuck</a></li>\n<li><a href=\"#posh-git\">posh-git</a></li>\n<li><a href=\"#psreadline\">PSReadline</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%90%AF%E7%94%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%A8%A1%E5%BC%8F\">启用管理员模式</a></li>\n<li><a href=\"#%E6%8A%A5%E9%94%99\">报错</a>\n<ul>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E6%95%B0%E9%87%8F%E9%97%AE%E9%A2%98\">参数数量问题</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#zsh\">zsh</a>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85-1\">安装</a></li>\n<li><a href=\"#%E4%B8%BB%E9%A2%98\">主题</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"pwsh\">pwsh</h2>\n<h3 id=\"预览\">预览</h3>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/ZUZaLQ.png\" alt=\"\"></p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GV3nLD.png\" alt=\"siDz8M1QlGIanE3\"></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"安装\">安装</h3>\n<ul>\n<li>\n<p>不同于 Windows 自带的 Windows PowerShell,这个 PowerShell(也叫 posh/pwsh) 需要另行安装</p>\n<p>配置环境变量:Path 里面+ <code>D:\\Game\\Demo\\PowerShell\\</code></p>\n<p>如果用 VScode 的话,实际上不设置环境变量也行,因为在 VScode 内需要指定 powershell 路径</p>\n</li>\n<li>\n<p>Scoop 安装全自动,不需要配置.</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>pwsh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"插件-配置\">插件-配置</h3>\n<blockquote>\n<p><a href=\"https://github.com/Weidows-projects/Programming-Configuration/blob/master/others/PowerShell/Microsoft.PowerShell_profile.ps1\">我的配置文件链接</a></p>\n</blockquote>\n<h4 id=\"oh-my-posh\">oh-my-posh</h4>\n<blockquote>\n<p><a href=\"https://ohmyposh.dev/\">oh-my-posh</a> (增强主题)</p>\n</blockquote>\n  <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVFbWK.png\" alt=\"20211029164044\" />\n<ul>\n<li>\n<p><a href=\"https://ohmyposh.dev/docs/installation/windows\">官方给的安装方式:</a></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>oh-my-posh</span><br></pre></td></tr></table></figure>\n<p>已经废弃的方式</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Install</span><span class=\"operator\">-</span><span class=\"built_in\">Module</span> <span class=\"variable\">oh</span><span class=\"operator\">-</span><span class=\"variable\">my</span><span class=\"operator\">-</span><span class=\"variable\">posh</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><a href=\"https://ohmyposh.dev/docs/themes\">查看主题</a> / 使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">Get-PoshThemes</span><br><span class=\"line\">Get-PoshThemes $env:SCOOP\\persist\\oh-my-posh\\themes</span><br></pre></td></tr></table></figure>\n<p>用法: 在 pwsh 执行如下可以得到 pwsh 配置文件路径</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"><span class=\"keyword\">$profile</span></span></span><br></pre></td></tr></table></figure>\n<p>在配置文件里面填写如下 (对应的 JSON 文件名就是想要启用的主题)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">oh-my-posh init pwsh --config &quot;$env:SCOOP/persist/oh-my-posh/themes/powerlevel10k_classic.omp.json&quot; | Invoke-Expression</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n</ul>\n<h4 id=\"PoshFuck\">PoshFuck</h4>\n<blockquote>\n<p><a href=\"https://github.com/mattparkes/PoShFuck\">PoshFuck</a>, the fuck 的 pwsh 实现</p>\n</blockquote>\n  <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVA1AR.png\" alt=\"20211029164014\" />\n<ul>\n<li>\n<p>安装: 不必在意格式,复制就行</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy RemoteSigned</span><br><span class=\"line\">  iex ((<span class=\"name\">new-object</span> net.webclient).DownloadString(&#x27;https<span class=\"symbol\">://raw</span>.githubusercontent.com/mattparkes/PoShFuck/master/Install-TheFucker.ps1&#x27;))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coq\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Import</span>-<span class=\"keyword\">Module</span> PoShFuck</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>用法: <code>fuck</code> / <code>fuck!</code> / <code>WTF</code> / <code>Get-Fucked</code></p>\n<hr>\n<h4 id=\"posh-git\">posh-git</h4>\n<blockquote>\n<p><code>posh-git</code> (用于扩展 Posh 里的 Git 自动补全)</p>\n</blockquote>\n  <img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVP41Y.png\" alt=\"20211029163651\" />\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>posh-git</span><br><span class=\"line\"><span class=\"comment\"># 或</span></span><br><span class=\"line\"><span class=\"keyword\">Install-Module </span>posh-git</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight coq\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Import</span>-<span class=\"keyword\">Module</span> posh-git</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"PSReadline\">PSReadline</h4>\n<blockquote>\n<p><code>PSReadline</code> (Windows 自带,可以直接使用)</p>\n</blockquote>\n<ul>\n<li>\n<p>预测显示历史命令 / 上下左右高级补全</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVLnS6.png\" alt=\"20210703123813\" />\n<figure class=\"highlight mathematica\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">#</span> <span class=\"variable\">Enable</span> <span class=\"variable\">Prediction</span> <span class=\"variable\">History</span></span><br><span class=\"line\"><span class=\"built_in\">Set</span><span class=\"operator\">-</span><span class=\"variable\">PSReadLineOption</span> <span class=\"operator\">-</span><span class=\"variable\">PredictionSource</span> <span class=\"variable\">History</span></span><br><span class=\"line\"><span class=\"type\">###</span> <span class=\"variable\">Advanced</span> <span class=\"variable\">Autocompletion</span> <span class=\"variable\">for</span> <span class=\"variable\">arrow</span> <span class=\"variable\">keys</span></span><br><span class=\"line\"><span class=\"built_in\">Set</span><span class=\"operator\">-</span><span class=\"variable\">PSReadlineKeyHandler</span> <span class=\"operator\">-</span><span class=\"built_in\">Key</span> <span class=\"built_in\">UpArrow</span> <span class=\"operator\">-</span><span class=\"built_in\">Function</span> <span class=\"variable\">HistorySearchBackward</span></span><br><span class=\"line\"><span class=\"built_in\">Set</span><span class=\"operator\">-</span><span class=\"variable\">PSReadlineKeyHandler</span> <span class=\"operator\">-</span><span class=\"built_in\">Key</span> <span class=\"built_in\">DownArrow</span> <span class=\"operator\">-</span><span class=\"built_in\">Function</span> <span class=\"variable\">HistorySearchForward</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>Posh中类似Linux形式补全</code> (按 Tab 自动补,非常实用)</p>\n<img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/GVLO2m.png\" alt=\"MouseInc 122640\" />\n<figure class=\"highlight mathematica\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set</span><span class=\"operator\">-</span><span class=\"variable\">PSReadlineKeyHandler</span> <span class=\"operator\">-</span><span class=\"built_in\">Key</span> <span class=\"built_in\">Tab</span> <span class=\"operator\">-</span><span class=\"built_in\">Function</span> <span class=\"variable\">MenuComplete</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"启用管理员模式\">启用管理员模式</h3>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"code\"><pre><span class=\"line\">reg <span class=\"keyword\">add</span><span class=\"language-bash\"> <span class=\"string\">&quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Kernel&quot;</span> /v DisableTsx /t REG_DWORD /d 0 /f</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>作用就是让右键文件时出现管理员权限</p>\n<p>实际上没啥用,并不太推荐使用</p>\n<p>这个东西与上面 PowerShell 没啥关系</p>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"报错\">报错</h3>\n<h4 id=\"参数数量问题\">参数数量问题</h4>\n<figure class=\"highlight subunit\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ERROR </span>Cannot process argument transformation on parameter &#x27;ApplicationQuery&#x27;. Cannot convert value to type System.String.</span><br><span class=\"line\"><span class=\"keyword\">ERROR </span>This application failed to install: posh-git</span><br></pre></td></tr></table></figure>\n<p>在写 powershell 脚本时遇到的, 需要把 args 遍历使用, 不然即使实际传进来的只有一个也会报错</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sci</span></span>&#123; scoop install <span class=\"variable\">$args</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sci</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">Foreach</span>(<span class=\"variable\">$argv</span> <span class=\"keyword\">in</span> <span class=\"variable\">$args</span>) &#123;</span><br><span class=\"line\">    scoop install <span class=\"variable\">$argv</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> ========================================================================</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"zsh\">zsh</h2>\n<h3 id=\"安装-2\">安装</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"主题\">主题</h3>\n<p>在 <code>~/.zshrc</code> 里面找到并更改:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">ZSH_THEME</span>=<span class=\"string\">&quot;jonathan&quot;</span></span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p>暂无…</p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "备忘录",
                "shell",
                "PowerShell",
                "zsh"
            ]
        },
        {
            "id": "https://weidows.github.io/post/lang/shell/shell/",
            "url": "https://weidows.github.io/post/lang/shell/shell/",
            "title": "💧Shell-Command-速查表",
            "date_published": "2020-09-03T09:35:04.000Z",
            "content_html": "<h1>一些常用终端命令</h1>\n<!--\n * @Author: Weidows\n * @Date: 2020-09-03 17:35:04\n * @LastEditors: Weidows\n * @LastEditTime: 2024-01-03 20:15:48\n * @FilePath: \\Blog-private\\source\\_posts\\experience\\shell\\shell.md\n-->\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li><a href=\"#%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4\">一些常用终端命令</a>\n<ul>\n<li><a href=\"#%E9%80%9A%E7%94%A8\">通用</a>\n<ul>\n<li><a href=\"#%E6%96%87%E4%BB%B6%E6%9C%AB%E5%B0%BE%E8%BF%BD%E5%8A%A0%E5%91%BD%E4%BB%A4\">文件末尾追加命令</a></li>\n<li><a href=\"#%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91\">输出重定向</a></li>\n<li><a href=\"#%E5%90%AF%E5%8A%A8%E7%A8%8B%E5%BA%8F\">启动程序</a></li>\n<li><a href=\"#%E6%B8%85%E5%9E%83%E5%9C%BE\">清垃圾(?</a></li>\n<li><a href=\"#%E4%B8%8E%E6%88%96-%E7%AE%A1%E9%81%93%E8%BF%90%E7%AE%97%E7%AC%A6\">与或-管道运算符</a></li>\n<li><a href=\"#%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D\">获取文件名</a></li>\n</ul>\n</li>\n<li><a href=\"#linux\">Linux</a>\n<ul>\n<li><a href=\"#%E6%9F%A5%E6%9D%80%E8%BF%9B%E7%A8%8B\">查杀进程</a></li>\n<li><a href=\"#%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86\">设置代理</a></li>\n<li><a href=\"#%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86\">用户管理</a>\n<ul>\n<li><a href=\"#%E5%88%87%E6%8D%A2%E7%94%A8%E6%88%B7\">切换用户</a></li>\n<li><a href=\"#%E8%AE%BE%E7%BD%AE%E4%B8%8E%E8%A7%A3%E9%94%81%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81\">设置与解锁用户密码</a></li>\n<li><a href=\"#%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7\">删除用户</a></li>\n</ul>\n</li>\n<li><a href=\"#supervisor\">supervisor</a></li>\n<li><a href=\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">环境变量</a></li>\n<li><a href=\"#%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF%E5%88%A4%E6%96%AD\">条件分支判断</a></li>\n</ul>\n</li>\n<li><a href=\"#windows\">windows</a>\n<ul>\n<li><a href=\"#powershell\">powershell</a></li>\n</ul>\n</li>\n<li><a href=\"#cli-tools\">cli-tools</a>\n<ul>\n<li><a href=\"#ffmpeg\">FFmpeg</a>\n<ul>\n<li><a href=\"#%E6%89%B9%E9%87%8F%E8%B0%83%E6%95%B4%E9%9F%B3%E9%A2%91%E9%9F%B3%E9%87%8F\">批量调整音频音量</a></li>\n<li><a href=\"#%E6%8A%A5%E9%94%99\">报错</a></li>\n</ul>\n</li>\n<li><a href=\"#git\">Git</a></li>\n<li><a href=\"#docker\">Docker</a></li>\n<li><a href=\"#vim\">Vim</a></li>\n<li><a href=\"#fzf\">fzf</a></li>\n<li><a href=\"#tldr\">tldr</a></li>\n<li><a href=\"#pandoc\">pandoc</a>\n<ul>\n<li><a href=\"#word2markdown\">word2markdown</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98\">各种问题</a>\n<ul>\n<li><a href=\"#%E6%8D%A2%E8%A1%8C%E7%AC%A6%E5%AF%BC%E8%87%B4%E6%8A%A5%E9%94%99\">换行符导致报错</a></li>\n<li><a href=\"#%E4%B8%8D%E5%90%8C%E7%BB%88%E7%AB%AF%E5%B7%AE%E5%BC%82\">不同终端差异</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"通用\">通用</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>cd path</code> / <code>cd ..</code> / <code>cd /</code> / <code>cd ~</code></td>\n<td style=\"text-align:center\">进入 指定 / 上层 / 根 / home 目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl + L</code></td>\n<td style=\"text-align:center\">清屏</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>exit</code></td>\n<td style=\"text-align:center\">退出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ping</code></td>\n<td style=\"text-align:center\">测试网络通断状态</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>Ctrl + C</code></td>\n<td style=\"text-align:center\">停止当前任务</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>exit</code></td>\n<td style=\"text-align:center\">停止任务或终端</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>mkdir</code></td>\n<td style=\"text-align:center\">新建文件夹</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cp(xcopy)/mv/rm</code></td>\n<td style=\"text-align:center\">文件(夹)复制、移动与删除</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>curl + URL</code></td>\n<td style=\"text-align:center\">访问 URL(可加参数,具体百度)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>pwd</code></td>\n<td style=\"text-align:center\">显示当前全路径</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>dir/ls</code></td>\n<td style=\"text-align:center\">列出当前目录(样式不同)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cat</code></td>\n<td style=\"text-align:center\">(按参数格式)输出文件所有内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>clear</code></td>\n<td style=\"text-align:center\">清屏</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>echo</code></td>\n<td style=\"text-align:center\">回显,常用作文本输出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>shutdown -h now</code> / <code>reboot</code></td>\n<td style=\"text-align:center\">关机 / 重启</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ls | grep abc</code></td>\n<td style=\"text-align:center\">过滤 ls 的输出,只显示含&quot;abc&quot;的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ls | tee [-a] t.log</code></td>\n<td style=\"text-align:center\">显示 ls 输出同时[追加]输出到 t.log 里</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>mktemp</code></td>\n<td style=\"text-align:center\">临时创建一个 temp 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>zip &quot;A.zip&quot; &quot;folder_A/**&quot; &quot;folder_B/**&quot;</code></td>\n<td style=\"text-align:center\">压缩多个文件夹或文件到 zip 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>md5sum/sha256sum xxx</code></td>\n<td style=\"text-align:center\">计算文件 hash</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>scp -r -i ~/.ssh/liuwei_rsa 1.txt project-1@1.2.3.4:/home/project-1/</code></td>\n<td style=\"text-align:center\">远程文件复制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>date +%Y%m%d-%H%M%S.%N</code></td>\n<td style=\"text-align:center\">20221022-153014.813488400</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>tar -cf a.tar a.txt b.txt</code> / <code>tar -xf a.tar</code></td>\n<td style=\"text-align:center\">打包 / 解压</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"文件末尾追加命令\">文件末尾追加命令</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>echo 'add content'&gt;/home/data/test.sh</code></td>\n<td style=\"text-align:center\">覆盖原文件内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>echo 'add content'&gt;&gt;/home/data/test.sh</code></td>\n<td style=\"text-align:center\">在末尾追加</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>date +&quot;%Y-%m-%d %H:%M:%S.%N&quot; &gt;&gt; keepchange.txt</code></td>\n<td style=\"text-align:center\">这种写法也可以,就是把前面当成字符串输入文件</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"输出重定向\">输出重定向</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>ls &gt; ls.txt</code></td>\n<td style=\"text-align:center\">把 ls 输出内容输出到 ls.txt</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;/dev/null</code></td>\n<td style=\"text-align:center\">把标准输出重定向到黑洞,相当于(1&gt;/dev/null) 标准输入 0,标准输出 1,标准错误 2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;/dev/null 2&gt;&amp;1</code></td>\n<td style=\"text-align:center\">把标准错误重定向到标准输出,也就是这俩都进了黑洞</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>2&gt;&amp;1 &gt;/dev/null</code></td>\n<td style=\"text-align:center\">把标准错误重定向到标准输出(屏幕),标准输出进黑洞</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/longgeaisisi/article/details/90519690\">2&gt;/dev/null 和&gt;/dev/null 2&gt;&amp;1 和 2&gt;&amp;1&gt;/dev/null 的区别</a></p>\n</blockquote>\n<hr>\n<h3 id=\"启动程序\">启动程序</h3>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/IT-CPC/p/10898871.html\">同步(Synchronous)和异步(Asynchronous)</a> 同步，就是调用某个东西时，调用方得等待这个调用返回结果才能继续往后执行。异步，和同步相反 调用方不会理解得到结果，而是在调用发出后调用者可用继续执行后续操作，被调用者通过状体来通知调用者，或者通过回掉函数来处理这个调用</p>\n<ul>\n<li>start 异步</li>\n<li>call 同步</li>\n</ul>\n</blockquote>\n<hr>\n<h3 id=\"清垃圾\">清垃圾(?</h3>\n<ul>\n<li>\n<p>写脚本时,如果遇到两种情况:</p>\n<ol>\n<li>\n<p>要删除某路径下所有东西</p>\n</li>\n<li>\n<p>路径是变量</p>\n</li>\n</ol>\n<p>那就有可能就变成删库跑路了…</p>\n<hr>\n</li>\n<li>\n<p>比如</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"built_in\">PATH</span>=%<span class=\"number\">1</span></span><br><span class=\"line\">rm -rf <span class=\"variable\">%PATH%</span>/*</span><br></pre></td></tr></table></figure>\n<hr>\n</li>\n<li>\n<p>PATH 靠调用脚本时传入的参数来定义,没传参数的话就 undefined,以至于下一行变成大名鼎鼎的</p>\n<p><code>rm -rf /*</code></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"与或-管道运算符\">与或-管道运算符</h3>\n<p>command1 &amp; command2 &amp; command3: 不论成败都会执行</p>\n<p>command1 &amp;&amp; command2 &amp;&amp; command3: 左边全都执行成功/返回 0 才会执行右边的命令</p>\n<p>command1 || command2 || command2: 左边全都执行失败/返回 1 才会执行右边的命令</p>\n<p>command1 | command2: 把左边的命令的输出结果作为右边的命令的输入,例如 <code>ps | grep win</code></p>\n<hr>\n<h3 id=\"获取文件名\">获取文件名</h3>\n<ul>\n<li>\n<p>可以用 basename, 用法 <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">name=`basename -s .c *.c`</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>比如想获取下面两个文件的名字 (排除后缀)</p>\n<figure class=\"highlight smali\"><table><tr><td class=\"code\"><pre><span class=\"line\">dair_v2x_i_infos_temporal_train.pkl</span><br><span class=\"line\">dair_v2x_i_infos_temporal_val.pkl</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">basename -s .pkl *.pkl</span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n<figure class=\"highlight smali\"><table><tr><td class=\"code\"><pre><span class=\"line\">dair_v2x_i_infos_temporal_train</span><br><span class=\"line\">dair_v2x_i_infos_temporal_val</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"Linux\">Linux</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>su root</code></td>\n<td style=\"text-align:center\">获取最高权限(需要输入 root 密码)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ifconfig</code></td>\n<td style=\"text-align:center\">查看网络配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>dhclient</code></td>\n<td style=\"text-align:center\">DHCP 重新配置 IP</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>./xxx.sh start/restart/xxx</code></td>\n<td style=\"text-align:center\">启动/重启 shell 脚本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>nohup xxx.sh &amp;</code></td>\n<td style=\"text-align:center\">不挂起执行 xxx (退出终端不影响程序运行),需要 ps/kill 杀死进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>tail -n 20 README.md</code></td>\n<td style=\"text-align:center\">输出 READMD 最后 20 行内容(默认是 10 行)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>tail -f README.md</code></td>\n<td style=\"text-align:center\">输出 READMD 追加的更新内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>systemctl start/enable/status xxx.service</code></td>\n<td style=\"text-align:center\">xxx 服务-开启/开机启动/状态</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>touch a.txt</code></td>\n<td style=\"text-align:center\">创建 a.txt 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>TOPIC=1234 ./run</code></td>\n<td style=\"text-align:center\">带着环境变量 TOPIC 执行 run 程序</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>chmod u+x ./run</code></td>\n<td style=\"text-align:center\">给 run 赋予执行权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>/etc/init.d/bt default</code></td>\n<td style=\"text-align:center\">查看宝塔面板入口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ln -s A B</code></td>\n<td style=\"text-align:center\">创建 A 的符号链接,名为 B <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>rm/unlink xxx</code></td>\n<td style=\"text-align:center\">删除虚拟链接 <sup id='cite_ref-4'><a href=\"#cite_note-4\">[4]</a></sup></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"查杀进程\">查杀进程</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>ps -ef/aux</code></td>\n<td style=\"text-align:center\">显示进程(注意多个进程用’,'隔开而非空格)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>kill -9 pid</code></td>\n<td style=\"text-align:center\">杀死进程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>lsof -i:8080 / -i@12:34:56:78</code></td>\n<td style=\"text-align:center\">Linux 中一切皆文件,此命令可以显示指定文件信息</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"设置代理\">设置代理</h3>\n<figure class=\"highlight routeros\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"attribute\">http_proxy</span>=http://192.168.131.1:7890</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"attribute\">https_proxy</span>=http://192.168.131.1:7890</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"用户管理\">用户管理</h3>\n<h4 id=\"切换用户\">切换用户</h4>\n<p>命令是 <code>su xxx</code> <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<ol>\n<li>切换到每个用户的密码不一定一样 (主要看设置的是否一样), 为了防止乱切乱改, 每个账户设置独立密码</li>\n<li>root 用户下无需密码切换到任何用户</li>\n<li>su 与 sudo 所需密码并不是同一个, su 要的是 root 密码, sudo 要的是当前用户密码, sudo 后默认 15 分钟内不需要再次输密码</li>\n</ol>\n<hr>\n<h4 id=\"设置与解锁用户密码\">设置与解锁用户密码</h4>\n<p><code>passwd xxx</code></p>\n<p>设置 root 账户密码: <code>sudo passwd root</code>, 之后 su root 就需要密码验证了</p>\n<blockquote>\n<p>有个误区, 之前我误认为每个用户切到 root 账户的密码是独立的, 所以改了服务器的 root 密码… 差点出幺蛾子</p>\n</blockquote>\n<p>解锁 xxx 用户密码: <code>sudo passwd --unlock xxx</code></p>\n<hr>\n<h4 id=\"删除用户\">删除用户</h4>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">userdel -<span class=\"attribute\">r</span> xxx</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"supervisor\">supervisor</h3>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"code\"><pre><span class=\"line\">apt-<span class=\"built_in\">get</span> install supervisor</span><br><span class=\"line\"></span><br><span class=\"line\">vim /etc/supervisord.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">supervisord -c supervisord.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">supervisorctl status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动/停止服务(组)</span></span><br><span class=\"line\">supervisorctl <span class=\"built_in\">start</span>/<span class=\"built_in\">stop</span>/restart serverName</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动/关闭所有服务(组)</span></span><br><span class=\"line\">supervisorctl <span class=\"built_in\">start</span>/<span class=\"built_in\">stop</span>/restart all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载所有服务，如果有新添加的服务也会直接加进来并启动, 大概需要十秒, 期间 supervisorctl status 会报错</span></span><br><span class=\"line\">supervisorctl reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载已添加服务的configuration配置内容，但是不会重启，也不会自动添加新进程/移除进程，和reload不同</span></span><br><span class=\"line\"><span class=\"comment\"># 新加的.ini结尾的新进程(组) 或者更新的配置文件，update添加进来</span></span><br><span class=\"line\">supervisorctl reread</span><br><span class=\"line\">supervisorctl update xxx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看日志</span></span><br><span class=\"line\">tail -n <span class=\"number\">100</span> /var/<span class=\"built_in\">log</span>/supervisor/supervisord.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>在 supervisorctl status 有时会出现</p>\n<blockquote>\n<p>error: &lt;class ‘xmlrpclib.Fault’&gt;, &lt;Fault 6: ‘SHUTDOWN_STATE’&gt;: file: /usr/lib/python2.7/xmlrpclib.py line: 800</p>\n</blockquote>\n<p>可以执行 <code>/etc/init.d/supervisor stop &amp;&amp; /etc/init.d/supervisor start</code> <sup id='cite_ref-12'><a href=\"#cite_note-12\">[12]</a></sup></p>\n<p>但需要注意, 在 supervisorctl reload 执行开始几秒内程序还没重启完确实会出现这种报错, 并非哪有异常</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"环境变量\">环境变量</h3>\n<p><code>PATH=$GOROOT/bin:$PATH</code></p>\n<p>冒号起分隔路径作用, linux 中一个环境变量可对应多个目录, 如</p>\n<p>export LD_LIBRARY_PATH=/mnt:/usr/local/3rdlib:$LD_LIBRARY_PATH</p>\n<p>意思就是在已有的 LD_LIBRARY_PATH 这个变量基础上再加目录</p>\n<h3 id=\"条件分支判断\">条件分支判断</h3>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/superbfly/article/details/49274889\">linux 下 shell 中 if 的“-e，-d，-f”是什么意思_高晓伟_Steven 的博客-CSDN 博客_linux -d</a></p>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"windows\">windows</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>md</code></td>\n<td style=\"text-align:center\">创建目录,同 mkdir</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>rd</code></td>\n<td style=\"text-align:center\">删除目录,同 rm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>del</code></td>\n<td style=\"text-align:center\">删除文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>cls</code></td>\n<td style=\"text-align:center\">清屏,同 clear</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ipconfig</code></td>\n<td style=\"text-align:center\">查看网络配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>start + exe</code></td>\n<td style=\"text-align:center\">打开应用程序</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>start/explore + URL/HTML文件</code></td>\n<td style=\"text-align:center\">用默认浏览器打开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>microsoft-edge:URL</code></td>\n<td style=\"text-align:center\">用 edge 打开 URL</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>xxx /?</code></td>\n<td style=\"text-align:center\">xxx 的帮助</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>mklink A B</code></td>\n<td style=\"text-align:center\">创建 B 的硬链接(仅限文件), 名为 A</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>mklink /d A B</code></td>\n<td style=\"text-align:center\">创建 B 的符号链接, 名为 A(scoop-current)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>mklink /j A B</code></td>\n<td style=\"text-align:center\">创建 B 的符号链接, 名为 A(快捷方式)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ren a.jpg b.png</code></td>\n<td style=\"text-align:center\">重命名 a -&gt; b</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"powershell\">powershell</h3>\n<blockquote>\n<p>Cannot convert the “xxx” value of type “System.String” to type “System.Security.SecureString”.</p>\n</blockquote>\n<p>需要强制转为 securestring <sup id='cite_ref-14'><a href=\"#cite_note-14\">[14]</a></sup></p>\n<figure class=\"highlight gams\"><table><tr><td class=\"code\"><pre><span class=\"line\"># <span class=\"keyword\">Set</span>-OpenAIKey <span class=\"comment\">&quot;xxx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ss <span class=\"comment\">= convertto-securestring</span> <span class=\"comment\">&quot;xxx&quot;</span> <span class=\"comment\">-asplaintext -force</span></span><br><span class=\"line\"><span class=\"keyword\">Set</span>-OpenAIKey <span class=\"comment\">$ss</span></span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"cli-tools\">cli-tools</h2>\n<h3 id=\"FFmpeg\">FFmpeg</h3>\n<h4 id=\"批量调整音频音量\">批量调整音频音量</h4>\n<p>网上找了下相关软件/web tools, 没有特别符合要求的, 然后突然想到可以用 AI:</p>\n<p>我想通过 FFmpeg 批量降低一些音频文件的音量 (格式包括 mp3 和 wav), 请写一下 shell 程序</p>\n<p><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/blog/oS7qvX.png\" alt=\"oS7qvX.png\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">定义一个函数，接受一个音频文件名和一个音量调整参数（分贝值）</span></span><br><span class=\"line\">adjust_volume() &#123;</span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">使用ffmpeg的volume滤镜来改变音频文件的音量</span></span><br><span class=\"line\">  ffmpeg -i &quot;$1&quot; -filter:a &quot;volume=$2dB&quot; &quot;adjusted/$1&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir adjusted</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">遍历当前目录下的所有mp3和wav文件</span></span><br><span class=\"line\">for file in *.mp3 *.wav; do</span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">调用函数，将音量降低5分贝</span></span><br><span class=\"line\">  adjust_volume &quot;$file&quot; -10</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">输入和输出文件夹的名称</span></span><br><span class=\"line\">input_dir=&quot;audio&quot;</span><br><span class=\"line\">output_dir=&quot;output&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">音量调整的比例</span></span><br><span class=\"line\">volume_ratio=0.5</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建输出文件夹（如果不存在）</span></span><br><span class=\"line\">mkdir -p $output_dir</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">遍历输入文件夹中的所有音频文件</span></span><br><span class=\"line\">for file in $input_dir/*.&#123;mp3,wav&#125;; do</span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">获取文件名（不含扩展名）</span></span><br><span class=\"line\">  filename=$(basename -- &quot;$file&quot;)</span><br><span class=\"line\">  extension=&quot;$&#123;filename##*.&#125;&quot;</span><br><span class=\"line\">  filename=&quot;$&#123;filename%.*&#125;&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">  # </span><span class=\"language-bash\">使用FFmpeg调整音量并保存到输出文件夹中</span></span><br><span class=\"line\">  ffmpeg -i &quot;$file&quot; -af &quot;volume=$volume_ratio&quot; &quot;$output_dir/$filename.$extension&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"报错\">报错</h4>\n<ul>\n<li>\n<p>用的第三方 FFmpeg, 换成官方的就好了</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">nb_samples</span> (<span class=\"number\">47</span>) != frame_size (<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"Git\">Git</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>git remote add origin 你的远程库地址</code></td>\n<td style=\"text-align:center\">添加远程</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>git add .</code></td>\n<td style=\"text-align:center\">加入暂存区</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>git commit -m &quot;提交消息,可添加emoji😝&quot;</code></td>\n<td style=\"text-align:center\">提交</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>git push [origin(远程名字,默认是origin) master(分支名字)]</code></td>\n<td style=\"text-align:center\">推送</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>git checkout --orphan 新分支名</code></td>\n<td style=\"text-align:center\">创建一个新分支</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>git submodule update --init --recursive &amp;&amp; git pull --recurse-submodules</code></td>\n<td style=\"text-align:center\">拉取 submodules</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"Docker\">Docker</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>docker ps [-a]</code></td>\n<td style=\"text-align:center\">列出[所有]容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>docker ps --filter &quot;abcd / status=running</code></td>\n<td style=\"text-align:center\">筛选出含&quot;abcd&quot;/状态为 running 的容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>docker kill xxx</code></td>\n<td style=\"text-align:center\">关闭 xxx 容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>docker list| grep abc</code></td>\n<td style=\"text-align:center\">筛选 docker list 命令中含有 abc 字符串的结果集</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"Vim\">Vim</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>:q!</code></td>\n<td style=\"text-align:center\">如何获得一个随机字符串? &gt;让新手退出 vim</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>:wq</code></td>\n<td style=\"text-align:center\">write &amp; quit</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>dd</code></td>\n<td style=\"text-align:center\">删除行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>dG</code></td>\n<td style=\"text-align:center\">delete Global</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"fzf\">fzf</h3>\n<ul>\n<li>\n<p>与 grep 相似,不同点:</p>\n<ul>\n<li>\n<p>grep 是查找写死的东西,查找范围固定</p>\n</li>\n<li>\n<p>fzf 可动态查找用户输入的内容,并且范围大</p>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>fzf</code></td>\n<td style=\"text-align:center\">模糊查找</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>ls | fzf</code></td>\n<td style=\"text-align:center\">在 ls 的输出内容中查找</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"tldr\">tldr</h3>\n<p>命令帮助文档,优化版的 man,有个类似的工具 <code>cheat.sh</code>,一番角逐之下我还是用的 tldr</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">tldr cd</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">tldr java</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"pandoc\">pandoc</h3>\n<h4 id=\"word2markdown\">word2markdown</h4>\n<figure class=\"highlight apache\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pandoc</span> -f docx -t markdown --extract-media ./images -o <span class=\"number\">1</span>.md <span class=\"number\">1</span>.docx</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"各种问题\">各种问题</h2>\n<h3 id=\"换行符导致报错\">换行符导致报错</h3>\n<blockquote>\n<p>syntax error near unexpected token `xxx</p>\n</blockquote>\n<p>Linux 并不兼容 windows 下的换行符, 可以通过 vscode 右下角转为 LF <sup id='cite_ref-5'><a href=\"#cite_note-5\">[5]</a></sup></p>\n<hr>\n<h3 id=\"不同终端差异\">不同终端差异</h3>\n<p>cmd 不支持<code>/</code>作为路径, PowerShell 支持</p>\n<p>安装 git-all + pwsh 可以使用绝大多数 linux 的命令</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://segmentfault.com/a/1190000022722483\">Linux 技巧：介绍从目录路径获取文件名和目录前缀的方法</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://jingyan.baidu.com/article/a17d5285eb93ea8099c8f24d.html\">Linux 下如何切换用户</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://www.runoob.com/linux/linux-comm-ln.html\">Linux ln 命令</a></p>\n<p><a name='cite_note-4' href='#cite_ref-4'>[4]</a>: <a href=\"https://fantiq.github.io/2017/07/06/%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%88%A0%E9%99%A4%E8%BD%AF%E8%BF%9E%E6%8E%A5/\">如何正确的删除软连接</a></p>\n<p><a name='cite_note-5' href='#cite_ref-5'>[5]</a>: <a href=\"http://t.zoukankan.com/chenjianhong-p-4144905.html\">syntax error near unexpected token `原因及解决办法 - 走看看</a></p>\n<p><a name='cite_note-6' href='#cite_ref-6'>[6]</a>: <a href=\"https://zhuanlan.zhihu.com/p/176277245\">5 款超级好用的命令行工具，提升你的开发效率！</a></p>\n<p><a name='cite_note-7' href='#cite_ref-7'>[7]</a>: <a href=\"https://mp.weixin.qq.com/s?__biz=MzIyMDkwODczNw==&amp;mid=2247500080&amp;idx=2&amp;sn=64d4a8f3e4013ba7a77f25502cf945dd&amp;chksm=97c65c9ea0b1d58881e761a4bd69fa1136b87102e94d301685a085f2c6b09670dac5f5781e6a&amp;mpshare=1&amp;scene=23&amp;srcid=07058VtSWw1T2LusxMXcZtRs&amp;sharer_sharetime=1625473567691&amp;sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd\">推荐 18 个终端命令行工具</a></p>\n<p><a name='cite_note-8' href='#cite_ref-8'>[8]</a>: <a href=\"https://blog.csdn.net/weixin_38756990/article/details/72638084\">ps -ef 和 ps -aux 和 ps aux</a> | <a href=\"https://www.runoob.com/linux/linux-comm-kill.html\">Linux kill 命令</a> | <a href=\"https://www.jianshu.com/p/a3aa6b01b2e1\">Linux 命令神器：lsof</a></p>\n<p><a name='cite_note-9' href='#cite_ref-9'>[9]</a>: <a href=\"https://blog.51cto.com/u_14286115/5114696\">Windows vs linux-查看文件 MD5 值等_51CTO 博客_windows 查看文件 md5 值</a></p>\n<p><a name='cite_note-10' href='#cite_ref-10'>[10]</a>: <a href=\"https://www.runoob.com/linux/linux-comm-nohup.html\">Linux nohup 命令</a> | <a href=\"https://www.runoob.com/linux/linux-comm-tail.html\">Linux tail 命令</a> | <a href=\"https://mp.weixin.qq.com/s?__biz=MzIwMjU3NDI5Ng==&amp;mid=2247483948&amp;idx=1&amp;sn=6eed2f766b1a815c9bcca38cf9ccd3c2&amp;chksm=96ddd29ba1aa5b8d240d2c7cf9902b24f48ab36b196b86f7ea6d0b987c4538108276e6e273e6&amp;mpshare=1&amp;scene=23&amp;srcid=1020CNuclmVRrL4LTW9lyHwq&amp;sharer_sharetime=1634691119252&amp;sharer_shareid=ff6bb8cfd138294e80df076b8b76232d#rd\">基于 VSCode 和 CMake 进行 C/C++开发「第一讲」linux 系统介绍</a></p>\n<p><a name='cite_note-11' href='#cite_ref-11'>[11]</a>: <a href=\"https://www.hxstrive.com/article/804.htm\">批处理定义子程序</a> | <a href=\"https://www.cnblogs.com/qlqwjy/p/8445993.html\">批处理命令之 Start 的详细用法</a> | <a href=\"http://shouce.jb51.net/shell/dosbatch.html\">bat 与 shell 互转 Appendix L. Converting DOS Batch Files to Shell Scripts</a></p>\n<p><a name='cite_note-12' href='#cite_ref-12'>[12]</a>: <a href=\"https://github.com/Supervisor/supervisor/issues/48\">Running <code>supervisorctl restart &amp;lt;name&amp;gt;</code> causes xmlrpclib.Fault · Issue #48 · Supervisor/supervisor</a></p>\n<p><a name='cite_note-13' href='#cite_ref-13'>[13]</a>: <a href=\"https://www.95its.com/pc/101.html\">Win10 mklink 命令怎么用，mklink 命令使用教程</a></p>\n<p><a name='cite_note-14' href='#cite_ref-14'>[14]</a>: <a href=\"https://sharepoint.stackexchange.com/questions/108843/why-cant-powershell-convert-my-password-from-system-string-to-system-security-s\">Why can't powershell convert my password from system.string to system.security.securestring?</a></p>\n<p><a name='cite_note-15' href='#cite_ref-15'>[15]</a>: <a href=\"https://stackoverflow.com/questions/20939562/scp-permission-denied-publickey-on-ec2-only-when-using-r-flag-on-directories\">SCP Permission denied (publickey). on EC2 only when using -r flag on directories</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "备忘录",
                "shell",
                "Linux",
                "操作系统",
                "宝塔面板"
            ]
        }
    ]
}