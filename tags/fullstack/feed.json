{
    "version": "https://jsonfeed.org/version/1",
    "title": "⭐️齐下无贰⭐️ • All posts by \"fullstack\" tag",
    "description": "May all the beauty be bless.✨",
    "home_page_url": "https://blog.weidows.tech",
    "items": [
        {
            "id": "https://blog.weidows.tech/post/lang/ts/nextjs/",
            "url": "https://blog.weidows.tech/post/lang/ts/nextjs/",
            "title": "fullstack-matters-next-全栈框架搭建过程中遇到的问题记录",
            "date_published": "2024-08-21T16:53:57.000Z",
            "content_html": "<h1>fullstack-matters-next-全栈框架搭建过程中遇到的问题记录</h1>\n<!--\n * @?: *********************************************************************\n * @Author: Weidows\n * @LastEditors: Weidows\n * @LastEditTime: 2024-10-22 08:19:23\n * @FilePath: \\Blog-private\\source\\_posts\\lang\\ts\\nextjs.md\n * @Description:\n * @:\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠻⣄\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⣀⡾⠀⠀⣿\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡶⠟⠛⠉⠉⠀⠀⠀⠀⠀⠀⠉⠉⠛⠻⠿⣤⣀⣠⡴⠋\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠂⠀⠀⠀⠀⠀⠀⠀⠀⠙⢶⣀\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠉⠀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠋⠀⠀⠀⠀⠀⠀⢠⠏⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠈⢷⡀\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⣠⠃⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠙⣄\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⣀⣿⢠⠀⠀⠀⠀⠀⠀⠀⠀⣶⠀⣧⠀⠀⠀⠀⠀⠀⠀⠈⣆\n * ⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⣰⠀⠀⠀⠀⣾⢸⣿⣀⣤⣶⡛⠁⣿⠘⡄⠀⠀⠀⠀⢀⠀⠀⣿⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠸\n * ⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⡟⠀⠀⠀⠀⣿⡈⡏⠀⠀⠀⠀⠙⡜⡄⢿⠀⠀⠀⠀⣾⣧⣾⢸⠀⢸⠀⠀⡇⠀⠀⠀⠀⠀⠀⡇\n * ⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⣇⠀⠀⠀⠀⣷⣿⣿⣶⣦⣀⠀⠀⠀⠹⡘⣿⡀⠀⠀⢹⣿⠃⢸⠀⣿⠀⢠⣿⠀⠀⠀⠀⠀⣄⣧\n * ⠀⠀⠀⠀⠀⠀⠀⣼⠀⠀⠀⣿⠀⠀⠀⠀⢿⠉⠉⠉⠻⣿⣷⡀⠀⠀⠈⠁⠙⢦⣀⣸⠋⠈⣸⣼⢻⠀⣾⡿⠀⠀⠀⠀⢸⢸⣿\n * ⠀⠀⠀⠀⠀⠀⠀⣿⠀⣿⠀⠸⡄⣤⠀⠀⠀⣧⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⣿⣿⠇⠀⠀⠀⠀⣾⢸⣿\n * ⠀⠀⠀⠀⠀⠀⢰⡇⠀⣿⠀⠀⠙⠿⣿⠛⠒⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣦⡀⡿⠀⠀⠀⠀⠀⣿⣿⣿\n * ⠀⠀⠀⠀⠀⠀⣿⠀⣴⠋⠙⣦⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⣼⠉⠙⠳⠦⣤⡀⠀⠀⠀⠀⠀⠀⠈⠻⡿⠀⠀⠀⠀⠀⠀⣿⣿⣿\n * ⠀⠀⠀⠀⠀⠀⣿⢤⠇⣀⡀⣼⠀⠀⠀⢹⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⢠⣯⣿⣿\n * ⠀⠀⠀⠀⣠⠋⣠⠟⠁⠀⠈⠛⣄⠀⠀⠀⣇⠀⠀⠀⠀⢹⠀⠀⠀⠀⢀⠟⠀⠀⠀⠀⠀⠀⢾⣁⠀⠀⠀⠀⢀⣾⣤⡏⠉⠉⣿\n * ⠀⠀⢀⣞⠤⣴⠁⠀⠀⠀⠀⠀⠀⣧⠀⠀⢿⠉⠳⣤⡀⠀⠁⠀⠠⠶⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠧⣴⣾⣿⣿⠟⡇⠀⠀⢸\n * ⣠⠚⠁⢀⠏⣿⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠈⡏⠛⠶⣤⡉⠛⠶⢤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⣀⡴⣿⣿⠟⠁⠀⠀⡇⠀⠀⢸\n * ⠀⠀⠀⢸⠀⠘⡄⠀⠀⠀⠀⠀⢹⠀⡿⡄⠀⣿⠀⠀⠀⠀⠙⠲⣤⡀⠙⢦⠉⠉⠉⠉⠉⠉⠁⠀⠀⣿⠀⠀⠀⠀⠀⡇⠀⠀⢸\n * ⠀⠀⠀⠘⡄⠀⣿⠀⠀⠀⠀⠀⣸⠛⡄⢻⠀⠸⡀⠀⠀⠀⠀⠀⠀⠈⠛⢦⡉⢦⡀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⢰⠇⠀⠀⢸\n * ⠀⠀⠀⠀⢿⠀⠈⠙⢦⣄⣠⠴⠃⢠⠃⠀⡇⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢾⣦⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⣼⠀⠀⠀⠀⡇\n * ⠀⠀⠀⠀⠀⠙⢤⠀⠀⠀⠀⠀⡴⠋⠀⠀⡇⠀⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⡿⠀⠀⠀⠀⡿⠀⠀⠀⠀⡇\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠘⣿⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠀⠀⡇⠀⠀⠀⢰⠁⠀⠀⠀⠀⡇\n * ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠀⠀⠀⣿⣿⣿⣿⣷⣶⣶⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⡿⠀⠀⠀⠀⠀⣷\n *\n * @!: *********************************************************************\n-->\n<blockquote class=\"pullquote mindmap mindmap-sm\"><ul>\n<li><a href=\"#fullstack-matters-next-%E5%85%A8%E6%A0%88%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95\">fullstack-matters-next-全栈框架搭建过程中遇到的问题记录</a>\n<ul>\n<li><a href=\"#config\">config</a>\n<ul>\n<li><a href=\"#image\">Image</a></li>\n<li><a href=\"#next-auth\">next-auth</a>\n<ul>\n<li><a href=\"#google-timeout\">google-timeout</a></li>\n<li><a href=\"#secret-missing\">secret-missing</a></li>\n</ul>\n</li>\n<li><a href=\"#prisma\">prisma</a>\n<ul>\n<li><a href=\"#client-deps-error\">client-deps-error</a></li>\n<li><a href=\"#table-does-not-exist\">table-does-not-exist</a></li>\n<li><a href=\"#nextauth-mysql\">nextauth-mysql</a></li>\n<li><a href=\"#too-lang\">too-lang</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#usage\">usage</a>\n<ul>\n<li><a href=\"#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-file-image\">文件上传-upload-file-image</a>\n<ul>\n<li><a href=\"#form-data-parse\">form-data-parse</a></li>\n<li><a href=\"#image-to-buffer2string\">image-to-Buffer2string</a></li>\n</ul>\n</li>\n<li><a href=\"#next-router-%E5%A4%9A%E9%A1%B5%E9%9D%A2%E8%B7%AF%E7%94%B1\">next-router-多页面路由</a></li>\n<li><a href=\"#payment-stripe\">payment-stripe</a></li>\n</ul>\n</li>\n<li><a href=\"#deployments\">deployments</a>\n<ul>\n<li><a href=\"#vercel-file-read-write\">vercel-file-read-write</a>\n<ul>\n<li><a href=\"#jimp-watermark-%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0\">Jimp-watermark-添加水印</a></li>\n<li><a href=\"#vercel-rewrites\">vercel-rewrites</a></li>\n</ul>\n</li>\n<li><a href=\"#aliyun-%E7%99%BE%E7%82%BC%E6%8D%A2%E8%A3%85\">aliyun-百炼换装</a></li>\n<li><a href=\"#centos7-%E5%AE%9D%E5%A1%94-docker-cicd\">centos7-宝塔-docker-CICD</a>\n<ul>\n<li><a href=\"#%E5%AE%9E%E8%B7%B5-cicd-nextjs-docker-dotenv\">实践-CICD-nextjs-docker-dotenv</a></li>\n<li><a href=\"#%E5%8F%8C%E5%BC%95%E5%8F%B7%E9%97%AE%E9%A2%98\">双引号问题</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E5%80%9F%E7%89%A9%E8%A1%A8\">借物表</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"config\">config</h2>\n<h3 id=\"Image\">Image</h3>\n<blockquote>\n<p>⚠ The “images.domains” configuration is deprecated. Please use “images.remotePatterns” configuration instead.</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">const config = <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  webpack<span class=\"punctuation\">:</span> (config<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span> isServer <span class=\"punctuation\">&#125;</span>) =&gt; <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// https://nextjs.org/docs/messages/next-image-unconfigured-host</span></span><br><span class=\"line\">  <span class=\"comment\">// https://stackoverflow.com/questions/71235874/how-to-allow-all-domains-for-image-nextjs-config</span></span><br><span class=\"line\">  images<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    remotePatterns<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span> protocol<span class=\"punctuation\">:</span> <span class=\"string\">&quot;https&quot;</span><span class=\"punctuation\">,</span> hostname<span class=\"punctuation\">:</span> <span class=\"string\">&quot;**&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span> protocol<span class=\"punctuation\">:</span> <span class=\"string\">&quot;https&quot;</span><span class=\"punctuation\">,</span> hostname<span class=\"punctuation\">:</span> <span class=\"string\">&quot;xxx.com&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// deprecated</span></span><br><span class=\"line\">    <span class=\"comment\">// domains: [&quot;&quot;],</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span>;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"next-auth\">next-auth</h3>\n<h4 id=\"google-timeout\">google-timeout</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">GoogleProvider</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">clientId</span>: env.<span class=\"property\">GOOGLE_ID</span>,</span><br><span class=\"line\">  <span class=\"attr\">clientSecret</span>: env.<span class=\"property\">GOOGLE_SECRET</span>,</span><br><span class=\"line\">  <span class=\"attr\">httpOptions</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">40000</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;),</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight console\"><table><tr><td class=\"code\"><pre><span class=\"line\">[next-auth][error][SIGNIN_OAUTH_ERROR]</span><br><span class=\"line\">https://next-auth.js.org/errors#signin_oauth_error outgoing request timed out after 3500ms &#123;</span><br><span class=\"line\">  error: &#123;</span><br><span class=\"line\">    message: &#x27;outgoing request timed out after 3500ms&#x27;,</span><br><span class=\"line\">    stack: &#x27;RPError: outgoing request timed out after 3500ms\\n&#x27; +</span><br><span class=\"line\">      &#x27;    at eval (webpack-internal:///(rsc)/./node_modules/.pnpm/openid-client@5.6.5/node_modules/openid-client/lib/helpers/request.js:140:13)\\n&#x27; +</span><br><span class=\"line\">      ...</span><br><span class=\"line\">      &#x27;    at async Server.requestListener (D:\\\\Repos\\\\AI-MOBI\\\\Dress\\\\ChatUp-AI-Dress-fullstack\\\\node_modules\\\\.pnpm\\\\next@14.2.5_react-dom@18.3.1_react@18.3.1__react@18.3.1\\\\node_modules\\\\next\\\\dist\\\\server\\\\lib\\\\start-server.js:141:13)&#x27;,</span><br><span class=\"line\">    name: &#x27;RPError&#x27;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  providerId: &#x27;google&#x27;,</span><br><span class=\"line\">  message: &#x27;outgoing request timed out after 3500ms&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">https://next-auth.js.org/errors#signin_oauth_error  &#123;</span><br><span class=\"line\">  error: &#123;</span><br><span class=\"line\">    message: &#x27;&#x27;,</span><br><span class=\"line\">    stack: &#x27;AggregateError\\n&#x27; +</span><br><span class=\"line\">      &#x27;    at internalConnectMultiple (node:net:1114:18)\\n&#x27; +</span><br><span class=\"line\">      &#x27;    at afterConnectMultiple (node:net:1667:5)\\n&#x27; +</span><br><span class=\"line\">      &#x27;    at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17)&#x27;,</span><br><span class=\"line\">    name: &#x27;AggregateError&#x27;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  providerId: &#x27;google&#x27;,</span><br><span class=\"line\">  message: &#x27;&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是因为 auth 走的是后端而不是前端浏览器, next dev 跑的服务没走网络代理, 打开 tun 模式就行了</p>\n<hr>\n<h4 id=\"secret-missing\">secret-missing</h4>\n<blockquote>\n<p>Please define a <code>secret</code> in production</p>\n</blockquote>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">providers</span>: [</span><br><span class=\"line\">  <span class=\"title class_\">GoogleProvider</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">clientId</span>: env.<span class=\"property\">GOOGLE_ID</span>,</span><br><span class=\"line\">    <span class=\"attr\">clientSecret</span>: env.<span class=\"property\">GOOGLE_SECRET</span>,</span><br><span class=\"line\">    <span class=\"attr\">httpOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">timeout</span>: <span class=\"number\">40000</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"comment\">// add this</span></span><br><span class=\"line\"><span class=\"attr\">secret</span>: env.<span class=\"property\">NEXTAUTH_SECRET</span>,</span><br></pre></td></tr></table></figure>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h3 id=\"prisma\">prisma</h3>\n<h4 id=\"client-deps-error\">client-deps-error</h4>\n<blockquote>\n<p>Prisma Client was generated for “linux-musl-openssl-3.0.x”, but the actual deployment required “debian-openssl-3.0.x”</p>\n</blockquote>\n<p>如下加上 <sup id='cite_ref-3'><a href=\"#cite_note-3\">[3]</a></sup></p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"code\"><pre><span class=\"line\">generator <span class=\"keyword\">client</span> &#123;</span><br><span class=\"line\">    provider = <span class=\"string\">&quot;prisma-client-js&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">// for dockerfile doploy</span></span><br><span class=\"line\">    binaryTargets = [<span class=\"string\">&quot;native&quot;</span>, <span class=\"string\">&quot;debian-openssl-3.0.x&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"table-does-not-exist\">table-does-not-exist</h4>\n<blockquote>\n<p>The table <code>main.account</code> does not exist in the current database.</p>\n</blockquote>\n<p>类似的问题先直接试一下 <code>prisma db push</code> 更新下数据库结构</p>\n<hr>\n<h4 id=\"nextauth-mysql\">nextauth-mysql</h4>\n<blockquote>\n<p>Try signing in with a different account. <br>\nnext auth google login failed | prisma | mysql</p>\n</blockquote>\n<p>非常坑的问题, 说是无法登录, 实际是无法在 db 中插入数据, 务必删库重新建一个试试!!</p>\n<h4 id=\"too-lang\">too-lang</h4>\n<blockquote>\n<p>NextAuth With Prisma for mysql specified key is too long</p>\n</blockquote>\n<p>字段加上 <code>@db.Text</code></p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"usage\">usage</h2>\n<h3 id=\"文件上传-upload-file-image\">文件上传-upload-file-image</h3>\n<p>如何实现图片/文件上传操作</p>\n<p>使用 t3app 创建的项目, 其中用到了 tRPC, 但很难受的是它对文件传输不支持</p>\n<p>只能用 next 原生 API router 去写 RESTFUL <sup id='cite_ref-1'><a href=\"#cite_note-1\">[1]</a></sup></p>\n<h4 id=\"form-data-parse\">form-data-parse</h4>\n<p>next 后端如何解析 form 格式带文件的请求</p>\n<p>一开始是想用 form 直接上传图片文件, 但是解析过程中有问题 (用到的是 formidable )</p>\n<p>不知道哪里的问题, 解析出来的文件会在 fields 里 (string 形式, 很奇怪), files 为空</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">  <span class=\"attr\">api</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 需要禁用默认的</span></span><br><span class=\"line\">    <span class=\"attr\">bodyParser</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将 form.parse 封装在一个 Promise 中</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">parseForm</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  <span class=\"attr\">req</span>: <span class=\"title class_\">NextApiRequest</span></span></span><br><span class=\"line\"><span class=\"params\"></span>): <span class=\"title class_\">Promise</span>&lt;&#123; <span class=\"attr\">fields</span>: <span class=\"title class_\">Fields</span>; <span class=\"attr\">files</span>: <span class=\"title class_\">Files</span> &#125;&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> form = <span class=\"keyword\">new</span> <span class=\"title class_\">IncomingForm</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">allowEmptyFiles</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">multiples</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">maxFileSize</span>: <span class=\"number\">50</span> * <span class=\"number\">1024</span> * <span class=\"number\">1024</span>, <span class=\"comment\">// 增加文件大小限制, 单位为字节</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    form.<span class=\"title function_\">parse</span>(req, <span class=\"function\">(<span class=\"params\">err, fields, files</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(err); <span class=\"comment\">// 如果解析出错，reject 这个 promise</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(&#123; fields, files &#125;); <span class=\"comment\">// 如果成功，resolve 这个 promise，返回解析后的数据</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"image-to-Buffer2string\">image-to-Buffer2string</h4>\n<p>转为使用 string 去传递图片</p>\n<p>前端, 先从事件拿到 File 对象, 转为 ArrayBuffer, 再转为 binary 格式的 Buffer</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleImageChange</span> = (<span class=\"params\"><span class=\"attr\">event</span>: <span class=\"title class_\">React</span>.<span class=\"title class_\">ChangeEvent</span>&lt;<span class=\"title class_\">HTMLInputElement</span>&gt;</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> file = event.<span class=\"property\">target</span>.<span class=\"property\">files</span>?.[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!file) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  file</span><br><span class=\"line\">    .<span class=\"title function_\">arrayBuffer</span>()</span><br><span class=\"line\">    .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> textData = <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(data).<span class=\"title function_\">toString</span>(<span class=\"string\">&quot;binary&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>后端:</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">ResData</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">file</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// API路由处理程序</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">handler</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">  <span class=\"attr\">req</span>: <span class=\"title class_\">NextApiRequest</span>,</span></span><br><span class=\"line\"><span class=\"params\">  <span class=\"attr\">res</span>: <span class=\"title class_\">NextApiResponse</span></span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (req.<span class=\"property\">method</span> !== <span class=\"string\">&quot;POST&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">405</span>).<span class=\"title function_\">json</span>(&#123; <span class=\"attr\">error</span>: <span class=\"string\">&quot;Method not allowed&quot;</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(req.<span class=\"property\">body</span> <span class=\"keyword\">as</span> <span class=\"built_in\">string</span>) <span class=\"keyword\">as</span> <span class=\"title class_\">ResData</span>;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(data);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 将接收到的字符串转为 Buffer</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> buffer = <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(data.<span class=\"property\">file</span>, <span class=\"string\">&quot;binary&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> 保存或者处理 Buffer</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">json</span>(&#123; <span class=\"attr\">status</span>: <span class=\"string\">&quot;ok&quot;</span> &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 捕获解析过程中可能发生的错误</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">500</span>).<span class=\"title function_\">json</span>(&#123; <span class=\"attr\">error</span>: <span class=\"string\">&quot;Error parsing form data&quot;</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"next-router-多页面路由\">next-router-多页面路由</h3>\n<p>使用 t3app 创建的项目一般会带有 layout.tsx 和 page.tsx, 作用是这样:</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><span class=\"line\">- app</span><br><span class=\"line\">  - layout.tsx  <span class=\"regexp\">//</span> 控制网站根节点页面布局</span><br><span class=\"line\">  - page.tsx    <span class=\"regexp\">//</span> 控制 <span class=\"string\">&#x27;/&#x27;</span> 页面路由</span><br><span class=\"line\">  - login       <span class=\"regexp\">//</span> 新建 <span class=\"string\">&#x27;/login&#x27;</span> 页面</span><br><span class=\"line\">    - layout.tsx<span class=\"regexp\">//</span> 同理, 根节点必须有, 子页面没有也行</span><br><span class=\"line\">    - page.tsx  <span class=\"regexp\">//</span> 同理, 子页面必须</span><br><span class=\"line\">  - about       <span class=\"regexp\">//</span> 新建 <span class=\"string\">&#x27;/about&#x27;</span> 页面</span><br><span class=\"line\">    - page.tsx</span><br></pre></td></tr></table></figure>\n<p>可以新建这个文件, 然后访问 <code>/login</code> 试一试</p>\n<figure class=\"highlight tsx\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// `app/login/page.tsx` is the UI for the `/login` URL</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Page</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, login page!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"payment-stripe\">payment-stripe</h3>\n<blockquote>\n<p>No such price: ‘price_1PyqB006uMozVQ0qomnghCIo’; a similar object exists in live mode, but a test mode key was used to make this request.</p>\n</blockquote>\n<p>priceId 与 stripe secret 不匹配导致, 正式与测试 key 不通用</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"deployments\">deployments</h2>\n<h3 id=\"vercel-file-read-write\">vercel-file-read-write</h3>\n<p>用了之后才深刻知道 vercel 是个 serverless 平台, 也就是代码里不能用 “fs”</p>\n<p>当然也不是完全不能用, 是只读状态 (申请写入会报错: <code>EROFS: read-only file system</code>)</p>\n<p>文件引入也比较苛刻 (通过 <code>../</code> 这种导入很容易出现 file not found) <sup id='cite_ref-2'><a href=\"#cite_note-2\">[2]</a></sup></p>\n<p><a href=\"https://vercel.com/guides/how-can-i-use-files-in-serverless-functions\">按官方建议</a> 是这种:</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\">path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&quot;/public/img/xxx.png&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>如果真遇到需要 <code>临时</code> 写入的情况, 可以用 <code>/tmp</code> 这个路径</p>\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/70924414/vercel-read-only-file-system-chmod\">vercel read-only file system, chmod</a></p>\n</blockquote>\n<p>另外更建议的做法是用 Buffer 传递, 一般主流第三方库的输入输入都适配了 (比如我用到了 Jimp)</p>\n<h4 id=\"Jimp-watermark-添加水印\">Jimp-watermark-添加水印</h4>\n<figure class=\"highlight ts\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> srcImg = <span class=\"keyword\">await</span> <span class=\"title class_\">Jimp</span>.<span class=\"title function_\">read</span>(</span><br><span class=\"line\">  <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">from</span>(<span class=\"title function_\">await</span>(<span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(data.<span class=\"property\">output</span>.<span class=\"property\">image_url</span> ?? <span class=\"string\">&quot;&quot;</span>)).<span class=\"title function_\">arrayBuffer</span>())</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// 水印加到左下角</span></span><br><span class=\"line\">srcImg.<span class=\"title function_\">composite</span>(</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title class_\">Jimp</span>.<span class=\"title function_\">read</span>(path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&quot;/public/img/watermark.png&quot;</span>)),</span><br><span class=\"line\">  <span class=\"number\">10</span>,</span><br><span class=\"line\">  srcImg.<span class=\"title function_\">getHeight</span>() - <span class=\"number\">100</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">mode</span>: <span class=\"title class_\">Jimp</span>.<span class=\"property\">BLEND_SOURCE_OVER</span>,</span><br><span class=\"line\">    <span class=\"attr\">opacitySource</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">opacityDest</span>: <span class=\"number\">0.8</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> resultBuffer = <span class=\"keyword\">await</span> srcImg.<span class=\"title function_\">getBufferAsync</span>(<span class=\"title class_\">Jimp</span>.<span class=\"property\">MIME_JPEG</span>);</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"vercel-rewrites\">vercel-rewrites</h4>\n<blockquote>\n<p><a href=\"https://vercel.com/docs/edge-network/rewrites\">https://vercel.com/docs/edge-network/rewrites</a></p>\n</blockquote>\n<p>vercel 在部署一些 app 时, 会存在 404 的问题</p>\n<p>因为 Vercel 中 <code>/xxx/</code> 实际解析地址为 <code>xxx/index.html</code></p>\n<p>而不是 <code>/xxx.html</code>, 导致解析错误, 可以参考文档修复:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;rewrites&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;source&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/tags/:path(.*(?!/))&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;destination&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/tags/:path.html&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"aliyun-百炼换装\">aliyun-百炼换装</h3>\n<blockquote>\n<p>Download the media resource timed out during the data inspection process.</p>\n</blockquote>\n<p>这问题是由于资源链接离上海有点远/太大, 获取超时了, 把文件服务换到 ap-shanghai</p>\n<hr>\n<h3 id=\"centos7-宝塔-docker-CICD\">centos7-宝塔-docker-CICD</h3>\n<p>首先面临的问题是 centos 7 在不升级系统的情况下无法直接安装 nodejs 18 (nextjs 最低要求)</p>\n<p>所以选择用 docker 部署, t3app 自带了 Dockerfile</p>\n<h4 id=\"实践-CICD-nextjs-docker-dotenv\">实践-CICD-nextjs-docker-dotenv</h4>\n<p>一般情况下前端项目的环境变量不太会在 build 时使用, 如果在代码里写环境变量切换 (JS/TS), 会在 build 时被编译为静态的, 无法在 run 的时候动态变化</p>\n<p>所以用 docker 编译 nextjs 项目时, dockerfile 不用考虑 .env, 也不建议将 .env 打包在 docker image 中</p>\n<p>build 为一个 docker image, 把 .env 复制到不同环境再运行</p>\n<hr>\n<h4 id=\"双引号问题\">双引号问题</h4>\n<p>.env 中正常设置了: <code>NEXTAUTH_URL=&quot;http://localhost:3000&quot;</code>, 但运行时报错了</p>\n<p>❌ Invalid environment variables: { NEXTAUTH_URL: [ ‘Invalid url’ ] }</p>\n<p>实际 .env 的解析也跟部署环境有联系, 我用的是 docker run --env-file .env 的形式插入环境变量, docker 中实际是这样解析的</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;25&quot;</span> : <span class=\"string\">&quot;NEXTAUTH_URL=&quot;</span>http:<span class=\"regexp\">//</span>localhost:<span class=\"number\">3000</span><span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;26&quot;</span> : <span class=\"string\">&quot;NEXT_PUBLIC_NEXTAUTH_URL=&quot;</span>http:<span class=\"regexp\">//</span>localhost:<span class=\"number\">3000</span><span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;27&quot;</span> : <span class=\"string\">&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;28&quot;</span> : <span class=\"string\">&quot;SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;29&quot;</span> : <span class=\"string\">&quot;NEXT_SHARP_PATH=/app/node_modules/sharp&quot;</span></span><br></pre></td></tr></table></figure>\n<p>但可见的问题是引号被提前截止, 所以导致程序无法引到变量</p>\n<p><a><img src= \"https://pan.weidows.tech/d/local/img/loading.svg\" data-lazy-src=\"https://pan.weidows.tech/d/local/img/divider.png\" alt=\"分割线\"></a></p>\n<h2 id=\"借物表\">借物表</h2>\n<p><a name='cite_note-1' href='#cite_ref-1'>[1]</a>: <a href=\"https://stackoverflow.com/questions/76105855/send-blob-image-from-frontend-to-backend-with-nextjs-and-trpc-t3-stack\">https://stackoverflow.com/questions/76105855/send-blob-image-from-frontend-to-backend-with-nextjs-and-trpc-t3-stack</a></p>\n<p><a name='cite_note-2' href='#cite_ref-2'>[2]</a>: <a href=\"https://medium.com/@nksCodingLearnings/how-to-read-and-write-files-in-next-js-on-a-vercel-deployed-website-c1e9ea606cb6\">How to Read and Write Files in Next.js on a Vercel Deployed Website</a></p>\n<p><a name='cite_note-3' href='#cite_ref-3'>[3]</a>: <a href=\"https://stackoverflow.com/questions/71600978/missingsecret-missingsecreterror-please-define-a-secret-in-production\">MissingSecret [MissingSecretError]: Please define a <code>secret</code> in production</a></p>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">",
            "tags": [
                "nextjs",
                "fullstack",
                "vercel",
                "阿里云",
                "jimp",
                "typescript"
            ]
        }
    ]
}